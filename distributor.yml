openapi: 3.1.0
x-stoplight:
  id: kq1wml8i2a3nd
tags:
  - name: Accounting
  - name: Accounts
  - name: Autocomplete
  - name: Cards
  - name: Configuration
  - name: Distributor
  - name: Document Configuration
  - name: Documents
  - name: Events
  - name: Identities
  - name: Jobs
  - name: KYC
  - name: MeansOfPayment
  - name: OAuth2
  - name: Products
  - name: Recipients
  - name: Relations
  - name: Transactions
  - name: U2F
  - name: Users
  - name: WebAuth
servers:
  - url: 'https://sandbox.skaleet.com/api/distributor/v1'
    description: Skaleet sandbox environment.
info:
  title: Distributor API
  version: v1.7.6
  description: |-
    Distributor API |  | 
    ---------|----------|
     User | **Distributor (B2B2X / BAAS)** |
     Use cases Examples| **Users Management**<br>- Configure user profiles<br>- Create users<br>- Manage users lifecycle<br>- Manage users relations<br>- Manage users access<br>**Accounts Management**<br>- Create accounts<br>- Manage accounts lifecycle<br>**Cards Management**<br>- Create cards<br>- Manage cards lifecycle<br>**Operations**<br>- External transfer<br>- External Direct Debit<br>- Internal transfer<br>- Access to transactions reports|

    For more information about this API, refer to [Distributor API Description](docs/distributor/description.md)
  contact:
    name: Skaleet
    url: 'https://skaleet.com/en/contact/'
    email: api@skaleet.com
  license:
    name: Proprietary
    url: 'https://www.skaleet.com/'
paths:
  /webauth-authentications:
    post:
      security:
        - OAuth2: []
      tags:
        - WebAuth
      summary: Generate web authentication challenge
      operationId: GenerateWebAuthChallenge
      description: Generates a Web Authentication Challenge to proceed to a new authentication.
      responses:
        '201':
          description: Web Authentication challenge options.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAuthOptions'
        default:
          description: 'An error occurred, no challenge were created.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: mvdo4q6r8h57z
  '/webauth-authentications/{authenticationId}/authenticate':
    parameters:
      - name: authenticationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WebAuthenticationId'
    patch:
      security:
        - OAuth2: []
      tags:
        - WebAuth
      summary: Authenticate
      operationId: WebAuthAuthenticate
      requestBody:
        required: true
        description: |
          Web Authentication data
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: Base64 string
                rawId:
                  type: string
                  description: Base64 string
                response:
                  type: object
                  properties:
                    authenticatorData:
                      type: string
                      description: Base64 string
                    signature:
                      type: string
                      description: Base64 string
                    userHandle:
                      type: string
                      description: User identifier
                    clientDataJSON:
                      type: string
                      description: Base64 string
                type:
                  type: string
                  enum:
                    - public-key
      responses:
        '201':
          description: Authentication
          content:
            application/json:
              schema:
                type: object
        default:
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: w6hrk5psql0rc
  /webauth-associations:
    post:
      security:
        - OAuth2: []
      tags:
        - WebAuth
      summary: Generate web authentication association challenge
      operationId: GenerateWebAuthAssociationChallenge
      responses:
        '201':
          description: Association
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAuthAssociationsOptions'
        default:
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: oi9dh2sdg55o1
  '/webauth-associations/{associationId}/associate':
    parameters:
      - name: associationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WebAuthenticationAssociationId'
    patch:
      security:
        - OAuth2: []
      tags:
        - WebAuth
      summary: Associate new device
      operationId: WebAuthAssociate
      requestBody:
        required: true
        description: |
          Web Authentication data
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: Base64 string
                rawId:
                  type: string
                  description: Base64 string
                response:
                  type: object
                  properties:
                    authenticatorData:
                      type: string
                      description: Base64 string
                    signature:
                      type: string
                      description: Base64 string
                    userHandle:
                      type: string
                      description: User identifier
                    clientDataJSON:
                      type: string
                      description: Base64 string
                type:
                  type: string
                  enum:
                    - public-key
      responses:
        '201':
          description: Authentication
          content:
            application/json:
              schema:
                type: object
        default:
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 9r2boa95q3gfe
  /oauth2/public-keys/latest:
    get:
      security: []
      summary: Get latest public key
      operationId: getLatestPublicKey
      tags:
        - OAuth2
      responses:
        '200':
          description: the latest public key in X.509 format
          content:
            application/x-pem-file:
              schema:
                type: string
                example: |
                  -----BEGIN PUBLIC KEY-----
                  MIICIjANBgkqhkiG9[...]Cb0CAwEAAQ==
                  -----END PUBLIC KEY-----
        '404':
          description: No public key available
      x-stoplight:
        id: gmcfsgfyt7khe
  /oauth2/authorize:
    get:
      security: []
      tags:
        - OAuth2
      summary: (AuthCode) Initiate an OAuth2 authorization request
      operationId: InitiateAuthorizationRequest
      parameters:
        - in: query
          required: true
          name: response_type
          schema:
            type: string
            description: OAuth2 authorization request response type. Must be `code`.
        - in: query
          required: true
          name: client_id
          schema:
            $ref: '#/components/schemas/ApiClientId'
        - in: query
          required: true
          name: redirect_uri
          schema:
            $ref: '#/components/schemas/RedirectUri'
        - in: query
          required: true
          name: scope
          schema:
            $ref: '#/components/schemas/Scope'
        - in: query
          required: true
          name: state
          schema:
            $ref: '#/components/schemas/AuthCodeState'
        - in: query
          name: code_challenge
          schema:
            type: string
            description: 'A PKCE code challenge, consisting of hashing a random value with the specified method below.'
            example: cfG0F8j-xP12yjVUJfizBHGZsgKI6ryHHBcF5jo034k
        - in: query
          name: code_challenge_method
          schema:
            type: string
            description: |
              `plain` method should be used only if API client does not support `S256`.

              `S256` means using SHA-256 hashing algorithm.
            enum:
              - S256
              - plain
      responses:
        '302':
          $ref: '#/components/responses/OAuth2AuthRequestResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: vw37o7ujx8uta
  /oauth2/token:
    post:
      security: []
      tags:
        - OAuth2
      summary: Request for a new OAuth2 access token
      operationId: RequestAccessToken
      requestBody:
        required: true
        description: |
          The necessary credentials to request a new Access Token.

          **Note:** Pay attention to which grant flow can be used on this API (see the Authentication section above).
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OAuth2AccessTokenRequest'
      responses:
        '200':
          $ref: '#/components/responses/OAuth2AccessTokenResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: uhj0sm06du1fg
  /oauth2/refresh:
    post:
      security: []
      tags:
        - OAuth2
      summary: Refreshing an OAuth2 access token
      operationId: RefreshAccessToken
      requestBody:
        required: true
        description: the necessary credentials to refresh the new Access Token
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OAuth2RefreshAccessTokenRequest'
      responses:
        '200':
          $ref: '#/components/responses/OAuth2AccessTokenResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: f4bcfir39ni3l
  /configuration:
    get:
      security:
        - OAuth2: []
      tags:
        - Distributor
      summary: Get configuration
      operationId: DistributorConfiguration
      description: "A **Distributor** has various configuration parameters defined via the bank's portal.\r\n\r\nThese parameters include, for example, the platform's default language, the primary color, supported currencies, and a Boolean indicating whether a U2F key is required for connection, among others.\r\n\r\nThis endpoint retrieves all the parameters configured for the distributor, corresponding to the credentials used to obtain the authentication token. Distributor parameters cannot be modified by the distributor; only the `GET` method is available."
      responses:
        '200':
          description: Distributor configuration response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorConfiguration'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 75iukon6zhal6
  '/configuration/{distributorSlug}':
    parameters:
      - name: distributorSlug
        in: path
        required: true
        description: Distributor URL slug
        schema:
          type: string
    get:
      security:
        - OAuth2: []
      tags:
        - Distributor
      summary: Get configuration customized for distributor
      operationId: DistributorConfigurationCustomized
      description: Get distributor's customized configuration
      responses:
        '200':
          description: Distributor configuration response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorConfiguration'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: w0i79mb9elwpl
  /front-configuration:
    get:
      security:
        - OAuth2: []
      tags:
        - Configuration
      summary: Get front configuration
      operationId: GetFrontConfiguration
      description: Get generic front-end configuration
      responses:
        '200':
          description: Distributor configuration response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrontConfiguration'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 1ckagoo8b560f
  '/front-configuration/{distributorSlug}':
    parameters:
      - name: distributorSlug
        in: path
        required: true
        description: Distributor URL slug
        schema:
          type: string
    get:
      security:
        - OAuth2: []
      tags:
        - Configuration
      summary: Get customized front configuration
      operationId: GetCustomizedFrontConfiguration
      description: Get distributor's customized front configuration
      responses:
        '200':
          description: Distributor configuration response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrontConfiguration'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: kznubpdl4b61f
  /password:
    put:
      security:
        - OAuth2:
            - password_update
      tags:
        - Distributor
      summary: Password update
      operationId: PasswordUpdate
      description: Update distributor password when required by configuration
      requestBody:
        required: true
        description: |
          Password update request
        content:
          application/json:
            schema:
              type: object
              required:
                - currentPassword
                - newPassword
              properties:
                currentPassword:
                  type: string
                  description: Current distributor password
                newPassword:
                  type: string
                  description: New distributor password
      responses:
        '200':
          description: Password update response
          content:
            application/json:
              schema:
                type: object
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: criixl0brlzhi
  /u2f/register:
    get:
      security:
        - OAuth2: []
      tags:
        - U2F
      summary: Request U2F Registration
      operationId: U2FRegisterRequest
      description: Ask for an U2F registration
      responses:
        '200':
          description: U2F Registration request response
          content:
            application/json:
              schema:
                type: object
                required:
                  - registerRequest
                properties:
                  registerRequest:
                    $ref: '#/components/schemas/RegisterRequest'
                  signRequests:
                    type: array
                    items:
                      $ref: '#/components/schemas/SignRequest'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 6tiok8jkj2b2d
    post:
      security:
        - OAuth2: []
      tags:
        - U2F
      summary: U2F Register
      operationId: U2FRegister
      description: Register an U2F Device Key
      requestBody:
        required: true
        description: |
          Registration data
        content:
          application/json:
            schema:
              type: object
              required:
                - alias
                - challengeResponse
              properties:
                alias:
                  type: string
                  description: U2F Key alias
                challengeResponse:
                  $ref: '#/components/schemas/RegisterChallengeResponse'
      responses:
        '200':
          description: U2F Register response
          content:
            application/json:
              schema:
                type: object
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: zkk928e3uf89r
  /u2f/authenticate:
    get:
      security:
        - OAuth2: []
      tags:
        - U2F
      summary: Request U2F Authentication
      operationId: U2FAuthenticationRequest
      description: Ask for an U2F authentication
      responses:
        '200':
          description: U2F Authentication request response
          content:
            application/json:
              schema:
                type: object
                required:
                  - signRequests
                properties:
                  signRequests:
                    type: array
                    items:
                      $ref: '#/components/schemas/SignRequest'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: ou4lzpgdww6r9
    post:
      security:
        - OAuth2: []
      tags:
        - U2F
      summary: U2F Authenticate
      operationId: U2FAuthenticate
      description: Authenticate an U2F Device Key
      requestBody:
        required: true
        description: |
          Authentication data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateChallengeResponse'
      responses:
        '200':
          description: U2F Authentication response
          content:
            application/json:
              schema:
                type: object
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 8lrai4bjg0f3x
  /users:
    get:
      security:
        - OAuth2:
            - user_view
      tags:
        - Users
      summary: List all users
      operationId: SearchUser
      description: |
        A “user” represents a natural person or a legal entity who has contracted with the bank, and owns one or several accounts in the system.

        A user is defined by an identifier called `id` for the identifier generated by System or `externalId` for the identifier generated by the Distributor and stored in the database.

        A "role" is assigned to each user.
        The role defines how an user may be implied in the financial services managed by the platform.
      parameters:
        - name: firstName
          in: query
          schema:
            type: string
        - name: lastName
          in: query
          schema:
            type: string
        - name: legalName
          in: query
          schema:
            type: string
        - name: birthDate
          in: query
          schema:
            type: string
            format: date
        - name: email
          in: query
          schema:
            type: string
            format: email
        - name: ownerId
          in: query
          schema:
            type: string
            description: Client Identity
            example: '1'
        - name: profileId
          in: query
          schema:
            $ref: '#/components/schemas/UserProfileId'
        - name: externalId
          in: query
          schema:
            $ref: '#/components/schemas/UserExternalId'
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/UserStatus'
        - name: role
          in: query
          schema:
            $ref: '#/components/schemas/Role'
        - name: legalType
          in: query
          schema:
            $ref: '#/components/schemas/LegalType'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - firstName
              - lastName
              - legalName
              - birthDate
              - email
              - profileId
              - externalId
              - status
              - role
              - legalType
      responses:
        '200':
          description: Users found for this search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCollection'
      x-stoplight:
        id: e9raik8vatb33
    post:
      security:
        - OAuth2:
            - user_creation
      tags:
        - Users
      summary: Create a user
      operationId: CreateUser
      requestBody:
        required: true
        description: user to add to the system
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/NaturalPersonCreation'
                - $ref: '#/components/schemas/LegalEntityWithBoardMember'
                - $ref: '#/components/schemas/LegalEntityWithExistingBoardMember'
                  x-stoplight:
                    id: xvaeagolm6lnf
              discriminator:
                propertyName: legalType
                mapping:
                  NATURAL_PERSON: '#/components/schemas/NaturalPersonCreation'
                  LEGAL_ENTITY: '#/components/schemas/LegalEntityWithBoardMember'
      responses:
        '201':
          description: User creation response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: l2xmu5ub1r7ct
  '/users/{userId}':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      security:
        - OAuth2:
            - user_view
      tags:
        - Users
      summary: Retrieve a user
      operationId: GetUser
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Requested user was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: hnlbwbykmpgu4
    put:
      security:
        - OAuth2:
            - user_update
      tags:
        - Users
      summary: Update a user
      description: Update user information.
      operationId: UpdateUser
      requestBody:
        description: Update a user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User modification response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: qlhca490n4hw5
    patch:
      security:
        - OAuth2:
            - user_update
      tags:
        - Users
      summary: Patch a user
      description: Patch user information.
      operationId: PatchUser
      requestBody:
        description: Patch a user
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    userPin:
                      type: string
                      example: '1337'
                      description: |
                        If specified, allow user to be patched with this specific pin code.
                        Users will have to change their pin on next usage
                - $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User modification response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: n0bcfc2vfahmm
    delete:
      security:
        - OAuth2:
            - user_deactivate
      tags:
        - Users
      summary: Deactivate a user
      operationId: DeleteUser
      responses:
        '200':
          description: User desactivation response.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: b45bpezxaiuvs
  '/users/{userId}/board-member':
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
    get:
      security:
        - OAuth2:
            - user_view
      tags:
        - Users
      summary: Retrieve a legal entity board member
      operationId: GetBoardMember
      responses:
        '200':
          description: Board member information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NaturalPerson'
        '404':
          description: cannot found any board member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: hk8wa79y26tn5
  '/users/{userId}/actions/reset-password':
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
    post:
      security:
        - OAuth2:
            - password_reset
      tags:
        - Users
      summary: Reset delegate user's password
      operationId: ResetPassword
      responses:
        '200':
          description: Empty json response if operation succeded
        '404':
          description: Requested user was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: lu2v6nr88ch9a
  '/users/{userId}/actions/required-action':
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
    get:
      security:
        - OAuth2:
            - required_action
      tags:
        - Users
      summary: Get user's required action
      operationId: GetRequiredAction
      responses:
        '200':
          description: Actual required action and possible values
          content:
            application/json:
              schema:
                type: object
                properties:
                  requiredAction:
                    $ref: '#/components/schemas/UserRequiredAction'
                  reason:
                    type: string
                    example: Please update documents
                  values:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserRequiredAction'
        '404':
          description: Requested user was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: qtv2cqmx86ppc
    put:
      security:
        - OAuth2:
            - required_action
      tags:
        - Users
      summary: Update a user's required action
      operationId: UpdateRequiredAction
      requestBody:
        description: Required action
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequiredAction'
      responses:
        '200':
          description: Updated required action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequiredAction'
        '400':
          description: Required action value incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested user was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: q6pnzc2v060m7
  '/autocomplete/{inputId}':
    parameters:
      - name: inputId
        in: path
        required: true
        description: KYC field identifier
        schema:
          $ref: '#/components/schemas/InputId'
    get:
      security:
        - OAuth2: []
      tags:
        - Autocomplete
      summary: KYC field auto-complete
      operationId: Autocomplete
      parameters:
        - name: userInput
          in: query
          required: true
          description: 'Current user input, to be completed'
          schema:
            type: string
      responses:
        '200':
          description: list of possible values found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PossibleValueCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: lr1al1ztgi18u
  '/users/{userId}/recipients':
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
    get:
      security:
        - OAuth2:
            - recipient_management
      tags:
        - Recipients
      summary: List user recipients
      operationId: SearchUserRecipient
      parameters:
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - name
              - iban
      responses:
        '200':
          description: Recipients found for this search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientCollection'
      x-stoplight:
        id: gsi8ujz0j42nu
    post:
      security:
        - OAuth2:
            - recipient_management
      tags:
        - Recipients
      summary: Create a recipient
      operationId: CreateUserRecipient
      requestBody:
        required: true
        description: |
          Recipient information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalRecipient'
      responses:
        '201':
          description: User's Recipient creation response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalRecipient'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 4ge9lhu13cxmg
  '/users/{userId}/recipients/{recipientId}':
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
      - name: recipientId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RecipientId'
    delete:
      security:
        - OAuth2:
            - recipient_management
      tags:
        - Recipients
      summary: Delete a recipient
      operationId: RemoveRecipient
      responses:
        '200':
          description: Recipient sucessfully removed
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Requested recipient was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: wiykaz60xkmzr
  '/users/{userId}/relations':
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
    get:
      security:
        - OAuth2:
            - relation_management
      tags:
        - Relations
      summary: List user relations
      operationId: SearchUserRelation
      parameters:
        - name: nature
          in: query
          schema:
            $ref: '#/components/schemas/RelationNature'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - nature
      responses:
        '200':
          description: Relations found for this search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationCollection'
      x-stoplight:
        id: jdwt6n0amjfuw
    post:
      security:
        - OAuth2:
            - relation_management
      tags:
        - Relations
      summary: Create a relation
      operationId: CreateUserRelation
      requestBody:
        required: true
        description: |
          Relation information
        content:
          application/json:
            schema:
              type: object
              properties:
                nature:
                  $ref: '#/components/schemas/RelationNature'
                targetId:
                  type: string
                  description: Id of the user to associate
                  example: USR42
      responses:
        '201':
          description: User's relation creation response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    description: Id of the origin of the relation
                    example: USR41
                  nature:
                    $ref: '#/components/schemas/RelationNature'
                  targetId:
                    type: string
                    description: Id of the target of the relation
                    example: USR42
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: fdy5d2yzr6d0e
  '/users/relations/{relationId}':
    parameters:
      - name: relationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RelationId'
    delete:
      security:
        - OAuth2:
            - relation_management
      tags:
        - Relations
      summary: Delete a user relation
      operationId: RemoveUserRelation
      responses:
        '200':
          description: User relation successfully removed
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Requested relation was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: l5z5b8g1damwy
  /relation-natures:
    get:
      security:
        - OAuth2:
            - relation_management
      tags:
        - Relations
      summary: List relation natures
      operationId: SearchRelationNatures
      parameters:
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
      responses:
        '200':
          description: Relation natures found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationNatureCollection'
      x-stoplight:
        id: f0rn9hdji4eqs
  /products:
    get:
      security:
        - OAuth2:
            - account_view
      tags:
        - Products
      summary: List all products
      operationId: SearchProduct
      parameters:
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/ProductId'
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/ProductType'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - type
      responses:
        '200':
          description: Products found for this search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCollection'
      x-stoplight:
        id: 92q1wj4vnjif1
  /accounts:
    get:
      security:
        - OAuth2:
            - account_view
      tags:
        - Accounts
      summary: List all accounts
      operationId: SearchAccount
      parameters:
        - name: ids
          in: query
          description: Set of Account identifiers
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AccountId'
            example:
              - ACC123
              - ACC456
          explode: false
        - name: id
          in: query
          description: |
            **Take priority over the `ids` attribute**
          schema:
            $ref: '#/components/schemas/AccountId'
          deprecated: true
        - name: userId
          in: query
          schema:
            $ref: '#/components/schemas/UserId'
        - name: externalId
          in: query
          schema:
            $ref: ./ExternalId.yaml
        - name: productId
          in: query
          schema:
            $ref: '#/components/schemas/ProductId'
        - name: status
          in: query
          schema:
            $ref: ./AccountStatus.yaml
        - name: currency
          in: query
          schema:
            $ref: '#/components/schemas/Currency'
        - name: minAccountBalance
          in: query
          schema:
            description: Amount without separator and symbol
            type: integer
            example: 1337
        - name: maxAccountBalance
          in: query
          schema:
            description: Amount without separator and symbol
            type: integer
            example: 1337
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - userId
              - externalId
              - productId
              - status
      responses:
        '200':
          description: Example response (Status 200)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCollection'
      x-stoplight:
        id: 8lt7dkdby32dv
  '/accounts/{accountId}':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
    get:
      security:
        - OAuth2:
            - account_view
      tags:
        - Accounts
      summary: Retrieve an account
      operationId: GetAccount
      responses:
        '200':
          description: Account information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          description: Requested account was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: tu2ytj2lux0pm
    delete:
      security:
        - OAuth2:
            - account_close
      tags:
        - Accounts
      summary: Close an account
      operationId: CloseAccount
      responses:
        '200':
          description: Account successfully closed
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Account could not be closed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested account was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: xvfsi9qr9sks8
  '/accounts/{accountId}/block':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
    patch:
      security:
        - OAuth2:
            - account_block
      tags:
        - Accounts
      summary: Block an account
      operationId: BlockAccount
      requestBody:
        required: false
        description: Account block status
        content:
          application/json:
            schema:
              type: object
              properties:
                newStatus:
                  $ref: '#/components/schemas/AccountBlock'
      responses:
        '200':
          description: Account successfully blocked
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Account could not be blocked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested account was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 0qwycka3drwet
  '/accounts/{accountId}/unblock':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
    patch:
      security:
        - OAuth2:
            - account_unblock
      tags:
        - Accounts
      summary: Unblock an account
      operationId: UnblockAccount
      responses:
        '200':
          description: Account successfully unblocked
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Account could not be unblocked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested account was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: jy91cu4j2t5uj
  '/accounts/{accountId}/external-references':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
    get:
      security:
        - OAuth2:
            - external_references_view
      tags:
        - Accounts
      summary: List an account external references
      operationId: FetchAccountExternalReferences
      responses:
        '200':
          description: External references collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountExternalReferencesCollection'
        '404':
          description: Requested account was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: iwnrznum5530w
    post:
      summary: Create external reference for an account
      tags:
        - Accounts
      responses:
        '200':
          description: External reference
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  reference:
                    type: string
                x-examples:
                  Example 1:
                    type: string
                    reference: string
        '401':
          description: Unauthorized
        '404':
          description: Requested account was not found
      operationId: CreateAccountExternalReference
      x-stoplight:
        id: bstgizo7160f2
      security:
        - OAuth2:
            - external_references_create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                reference:
                  type: string
              x-examples:
                Example 1:
                  type: string
                  reference: string
    put:
      summary: Replace all external references for an account
      tags:
        - Accounts
      responses:
        '200':
          description: External references collection
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    reference:
                      type: string
                x-examples:
                  Example 1:
                    - type: string
                      reference: string
        '401':
          description: Unauthorized
        '404':
          description: Requested account was not found
      operationId: ReplaceAccountExternalReference
      x-stoplight:
        id: y6jwz9hqb0gb3
      security:
        - OAuth2:
            - external_references_update
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  reference:
                    type: string
              x-examples:
                Example 1:
                  - type: string
                    reference: string
    delete:
      summary: Delete an external reference for an account
      tags:
        - Accounts
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Requested account was not found
      operationId: DeleteAccountExternalReference
      x-stoplight:
        id: fy8tfma4u9jkt
      security:
        - OAuth2:
            - external_references_delete
  '/accounts/{accountId}/externalId':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
    patch:
      security:
        - OAuth2:
            - externalid_update
      tags:
        - Accounts
      summary: Update externalId
      operationId: UpdateExternalid
      requestBody:
        required: true
        description: Account external ID
        content:
          application/json:
            schema:
              type: object
              required:
                - externalId
              properties:
                externalId:
                  $ref: ./ExternalId.yaml
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Account could not be updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested account was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: j2ox7xwyn3c2z
  '/accounts/{accountId}/iban':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
    patch:
      security:
        - OAuth2:
            - iban_modification
      tags:
        - Accounts
      summary: Update account IBAN
      operationId: UpdateIban
      requestBody:
        required: true
        description: New IBAN
        content:
          application/json:
            schema:
              type: object
              required:
                - iban
              properties:
                iban:
                  $ref: '#/components/schemas/AccountIban'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Account IBAN could not be updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested account was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 5mvmtwvgi1657
  '/users/{userId}/accounts':
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
    post:
      security:
        - OAuth2:
            - account_creation
      tags:
        - Accounts
      summary: Create an account
      operationId: CreateUserAccount
      requestBody:
        required: true
        description: |
          Account information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '201':
          description: Account creation response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 1qoodoog3dq0y
  '/accounts/{accountId}/actions/download-rib':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
    get:
      security:
        - OAuth2:
            - account_view
      tags:
        - Accounts
      summary: Download RIB
      operationId: DownloadRIB
      responses:
        '200':
          description: The document content
          content:
            application/pdf:
              schema: {}
        '404':
          description: Requested account was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 9vbj0fb9b231b
  /transactions:
    get:
      security:
        - OAuth2:
            - transaction_view
      tags:
        - Transactions
      summary: List all transactions
      operationId: SearchTransaction
      parameters:
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/TransactionId'
        - name: externalId
          in: query
          schema:
            $ref: '#/components/schemas/TransactionExternalId'
        - name: userId
          in: query
          schema:
            $ref: '#/components/schemas/UserId'
        - name: type
          in: query
          description: Transaction type
          schema:
            $ref: '#/components/schemas/TransactionType'
        - name: startDate
          in: query
          description: Transaction date range start (date range is limited to 3 months)
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Transaction date range end (date range is limited to 3 months)
          schema:
            type: string
            format: date-time
        - name: amount
          in: query
          description: Transaction amount (in cents)
          schema:
            type: integer
        - name: currency
          in: query
          description: Transaction currency
          schema:
            $ref: '#/components/schemas/Currency'
        - name: media
          in: query
          description: Transaction currency
          schema:
            allOf:
              - default: ALL
              - $ref: '#/components/schemas/Media'
        - name: accountingCode
          in: query
          schema:
            type: string
            description: Accounting code from the point of view of the calling system
        - name: byActiveCard
          in: query
          schema:
            type: boolean
            description: 'If true, get transactions made by an active card'
        - name: justified
          in: query
          schema:
            type: boolean
            example: true
            description: Whether the transaction has at least one attachment to justify it. Is only returned if the user has the right to access transaction attachments
        - name: qualified
          in: query
          schema:
            type: boolean
            example: true
            description: Whether the transaction's amount is fully qualified or not. Is only returned if the user has the right to access spendings
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - externalId
              - type
              - date
              - currency
              - media
              - amount
              - accountingCode
      responses:
        '200':
          description: Transactions found for this search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCollection'
      x-stoplight:
        id: p1zvfl328qiz6
      description: "This endpoint allows a Distributor to get all the transactions managed by the platform between two dates (by default, the last three months). You can filter the transactions you want to see.\r\nA transaction in Skaleet platform can be various operations managedr by the platform such as money transfer between two individuals, a card payement, a fund reservation and many others. A transaction can include two or more accounting entries, or even not.\r\nThe transactions you can get with this enpoint are those you can see using the Skaleet Web portal [on this page](https://[myplatformcode].tagpay.fr/admin/transaction)."
  /transactions/export:
    get:
      security:
        - OAuth2:
            - transaction_export
      tags:
        - Transactions
      summary: Export all transactions
      operationId: ExportTransaction
      parameters:
        - name: Skaleet-Column-ExternalData
          in: header
          description: Add Transaction external data in the exported CSV file
          schema:
            type: integer
            example: 1
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/TransactionId'
        - name: externalId
          in: query
          schema:
            $ref: '#/components/schemas/TransactionExternalId'
        - name: userId
          in: query
          schema:
            $ref: '#/components/schemas/UserId'
        - name: type
          in: query
          description: Transaction type
          schema:
            $ref: '#/components/schemas/TransactionType'
        - name: startDate
          in: query
          description: Transaction date range start
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Transaction date range end
          schema:
            type: string
            format: date-time
        - name: amount
          in: query
          description: Transaction amount (in cents)
          schema:
            type: integer
        - name: currency
          in: query
          description: Transaction currency
          schema:
            $ref: '#/components/schemas/Currency'
        - name: media
          in: query
          description: Transaction media
          schema:
            allOf:
              - default: ALL
              - $ref: '#/components/schemas/Media'
        - name: accountingCode
          in: query
          schema:
            type: string
            description: Accounting code from the point of view of the calling system
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - externalId
              - type
              - date
              - currency
              - media
              - amount
              - accountingCode
      responses:
        '200':
          description: A CSV file with the requested export
          content:
            text/csv:
              schema:
                type: string
      x-stoplight:
        id: vzwjdak0o9bzg
  '/transactions/{transactionId}':
    parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
    get:
      security:
        - OAuth2:
            - transaction_view
      tags:
        - Transactions
      summary: Retrieve a transaction
      operationId: GetTransaction
      responses:
        '200':
          description: Transaction information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetails'
        '404':
          description: Requested transaction was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: zs5esdls4rm0c
  '/transactions/{transactionId}/lock-spendings':
    parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
    post:
      security:
        - OAuth2:
            - dist_transaction_spendings_lock
      tags:
        - Transactions
      summary: Lock a transaction
      operationId: LockTransaction
      responses:
        '204':
          description: Transaction locked
        '403':
          description: Action unauthorized for connected user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Transaction already locked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: noa5hjsuzg2c9
  /transactions/payout:
    post:
      security:
        - OAuth2:
            - payout
      tags:
        - Transactions
      summary: External transfer (Payout)
      description: |
        Transfer from a System account to an external account.

        When external transfer uses SEPA, it is a SCT (SEPA Credit Transfer).
      operationId: Payout
      requestBody:
        required: true
        description: |
          Payout information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayoutRequest'
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PayoutTransactionDetails'
                  - type: object
                    properties:
                      instructionId:
                        type: string
                        description: Instruction id
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: jvn2taeqeqyw2
  /transactions/payin:
    post:
      security:
        - OAuth2:
            - payin
      tags:
        - Transactions
      summary: External Direct Debit (Payin)
      description: |
        Transfer to an external account from a System account.

        When external Direct Debit uses SEPA, it is a SDD (SEPA Direct Debit).
      operationId: Payin
      requestBody:
        required: true
        description: |
          Payin information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayinRequest'
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TransactionDetails'
                  - type: object
                    properties:
                      instructionId:
                        type: string
                        description: Instruction id
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 16z4s6rxfc1nb
  /transactions/distributorPosting:
    post:
      security:
        - OAuth2:
            - posting
      tags:
        - Transactions
      summary: Internal transfer (Posting)
      description: Internal transfer between System accounts
      operationId: DistributorPosting
      requestBody:
        required: true
        description: |
          Transaction information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorPostingRequest'
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetails'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: c6p55hadnr56s
  /users/profiles:
    get:
      parameters:
        - name: role
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/UserProfileRole'
        - name: ownerId
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/UserId'
      security:
        - OAuth2:
            - profile_view
      tags:
        - Users
      summary: List all profiles
      operationId: SearchUserProfile
      responses:
        '200':
          description: User profiles found for this search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileCollection'
      x-stoplight:
        id: 05kmvikn5dhcx
    post:
      tags:
        - Users
      security:
        - OAuth2:
            - sda_create_user_profiles
      operationId: CreateUserProfile
      summary: Create a new User Profile.
      description: Only the `DELEGATE_USER` profile role is allowed to be created by this API's users.
      requestBody:
        $ref: '#/components/requestBodies/CreateUserProfileRequest'
      responses:
        '201':
          $ref: '#/components/responses/UserProfileCreatedResponse'
        '401':
          $ref: '#/components/responses/WrappedUnauthorizedResponse'
        '403':
          $ref: '#/components/responses/WrappedForbiddenResponse'
      x-stoplight:
        id: ki76c792wf2q5
  /users/kyc:
    get:
      parameters:
        - name: legalType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/LegalType'
        - name: profileId
          in: query
          schema:
            $ref: '#/components/schemas/UserProfileId'
      security:
        - OAuth2:
            - kyc_view
      tags:
        - Users
      summary: Retrieve KYC requirements
      operationId: GetSegmentationKYC
      responses:
        '200':
          description: Segment KYC inputs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSegmentationKycResponse'
      x-stoplight:
        id: lej964tw7obuh
  '/documents/{documentId}':
    parameters:
      - name: documentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DocumentId'
    get:
      security:
        - OAuth2:
            - document_management
      tags:
        - Documents
      summary: Retrieve a document
      operationId: GetDocument
      responses:
        '200':
          description: Example response (Status 200)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentWithContent'
      x-stoplight:
        id: x6ktlbcdpj943
  '/documents/{documentId}/content':
    parameters:
      - name: documentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DocumentId'
    get:
      security:
        - OAuth2:
            - document_management
      tags:
        - Documents
      summary: Retrieve a document's content
      operationId: GetDocumentContent
      responses:
        '200':
          description: The document content
      x-stoplight:
        id: 4x739x1dm2z60
  '/documents/{documentId}/preview':
    parameters:
      - name: documentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DocumentId'
    get:
      security:
        - OAuth2:
            - document_management
      tags:
        - Documents
      summary: Document's preview content
      description: 'Retrieve a document''s preview content, with a max width of 200 pixels.'
      operationId: GetDocumentPreview
      responses:
        '200':
          description: The document's preview content
      x-stoplight:
        id: zebtqxhqbo7ej
  '/users/{userId}/documents':
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
    get:
      security:
        - OAuth2:
            - document_management
      tags:
        - Documents
      summary: List user's documents
      operationId: SearchDocument
      responses:
        '200':
          description: Example response (Status 200)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCollection'
      x-stoplight:
        id: goeibgnny5t6g
    post:
      security:
        - OAuth2:
            - document_management
      tags:
        - Documents
      summary: Send a document
      operationId: CreateDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentWithContent'
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: x75727ddq225i
  /accounting:
    get:
      security:
        - OAuth2:
            - accounting_view
      tags:
        - Accounting
      summary: List accounting entries
      operationId: SearchAccounting
      parameters:
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/AccountingEntryId'
        - name: accountId
          in: query
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/EntryType'
        - name: startDate
          in: query
          description: Start date (date range is limited to 3 months)
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: End date (date range is limited to 3 months)
          schema:
            type: string
            format: date-time
        - name: withTransaction
          in: query
          description: 'If the value is "1", "true", "on" or "yes", the returned accountings contain transaction information'
          schema:
            type: string
            format: string
            default: '0'
            example: '1'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - accountId
              - type
              - date
      responses:
        '200':
          description: Example response (Status 200)
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AccountingEntryWithTransactionCollection'
                  - $ref: '#/components/schemas/AccountingEntryCollection'
      x-stoplight:
        id: hb5w8o3tdimx2
      description: "Skaleet manages a double part real-time book keeping. That means that for any accounts receiving a credit, a counterpart account has been debited. \r\nIn the response of the `DistributorPosting` request, you will get all the elementary entries recorded in the book keeping of Skaleet. They are all coming in couple, one as a debit and one as a credit. \r\n`accounting` endpoint accepts the following parameters : id, accountId, type, startDate, endDate, offset, limit and sort. \r\n\r\n>Nota : StartDate and endDate are mandatory and the time between endDate and startDate **must be less than 3 months**. These parameters are mandatory from 2020 Mars release of Skaleet. Date format is 2020-03-01T00:00:00Z.\r\n"
  /accounting/export-requests:
    get:
      security:
        - OAuth2:
            - accounting_export
      tags:
        - Accounting
      summary: List accounting export requests
      operationId: AccountingExportRequestList
      parameters:
        - name: exportDate
          in: query
          schema:
            type: string
            format: string
            example: '20221028100830'
            description: 'Optional, export date-based identifier to filter on'
        - name: createdAfter
          in: query
          schema:
            type: string
            format: date-time
            description: 'Optional, search for exports created after this date'
            example: '2022-07-01T00:00:00Z'
        - name: createdBefore
          in: query
          schema:
            type: string
            format: date-time
            description: 'Optional, search for exports created before this date'
            example: '2022-07-31T23:59:59Z'
      responses:
        '200':
          description: List of available exports matching criterias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingExportCollection'
      x-stoplight:
        id: s2ftfuagihd6r
    post:
      security:
        - OAuth2:
            - accounting_export
      tags:
        - Accounting
      summary: Request to generate an accounting entries export
      operationId: RequestExportAccounting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountingExportRequest'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingExportRequestSuccess'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: lz1j1gcbct8fb
  '/accounting/export-requests/{exportDate}/export':
    parameters:
      - name: exportDate
        in: path
        required: true
        schema:
          type: string
          format: string
          description: Export date-based identifier to download
          example: '20221028100830'
    get:
      security:
        - OAuth2:
            - accounting_export
      tags:
        - Accounting
      summary: Download requested accounting export
      operationId: AccountingExportRequestDownload
      responses:
        '200':
          description: A CSV file with the requested export
          content:
            text/csv:
              schema:
                type: string
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested export was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 250hbejlxvkfx
  /accounting/export:
    get:
      security:
        - OAuth2:
            - accounting_export
      tags:
        - Accounting
      summary: Export accounting entries
      operationId: ExportAccounting
      parameters:
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/AccountingEntryId'
        - name: accountId
          in: query
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/EntryType'
        - name: startDate
          in: query
          description: Start date
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: End date
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: A CSV file with the requested export
          content:
            text/csv:
              schema:
                type: string
      x-stoplight:
        id: 8zpe2gp6i28bg
  /hooks:
    get:
      security:
        - OAuth2:
            - event_management
      tags:
        - Events
      summary: Subscriptions to events
      description: Search your subscriptions to Events
      operationId: SearchHook
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HookCollection'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: ase4stuqdhf26
    post:
      security:
        - OAuth2:
            - event_management
      tags:
        - Events
      summary: Subscribe to events
      description: |-
        You can subscribe to events webhook. When a configured event occurs, Skaleet generates an anemic payload request to the URL given when subscribing to the event.
        You need then to use the API to get the detailed information related to this hook.

        Provide your third-party endpoint where to receive events, and what events types to receive.

        >webhook are POST request and most of them are anemic payload format and you get only the id of the entity that has generated the event, and the type of event that occured.

        Here is an example of a typical webhook:

        //Client 359 status is now opened

        POST:
        ```json
        {

          "id":"359",

          "type":"client",

          "event":"client.status.opened"

        }
        ```

        OR

        //Document 66 created

        POST:
        ```json
        {

          "id":"66",

          "type":"document",

          "event":"identity.document.new"

        }

        ```
      operationId: SubscribeEvents
      requestBody:
        required: true
        description: Event information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hook'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 4qc73sfwljilk
  '/hooks/{hookId}':
    parameters:
      - name: hookId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HookId'
    delete:
      security:
        - OAuth2:
            - event_management
      tags:
        - Events
      summary: Unsubscribe to events
      operationId: unsubscribeEvent
      responses:
        '200':
          description: Subscription sucessfully removed
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Subscription was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: sez420yr4um4q
  /cards:
    get:
      security:
        - OAuth2:
            - card_view
      tags:
        - Cards
      summary: List all cards
      operationId: SearchCard
      parameters:
        - name: id
          in: query
          description: Card reference id
          schema:
            type: string
        - name: embossedName
          in: query
          description: Card embossed name
          schema:
            type: string
        - name: embossedReference
          in: query
          description: Card embossed reference
          schema:
            type: string
        - name: number
          in: query
          description: Card support number
          schema:
            type: string
        - name: truncatedPan
          in: query
          description: Card truncated PAN
          schema:
            type: string
        - name: startConfirmationDate
          in: query
          description: Confirmation date range start
          schema:
            type: string
            format: date-time
        - name: endConfirmationDate
          in: query
          description: Confirmation date range end
          schema:
            type: string
            format: date-time
        - name: startExpirtationDate
          in: query
          description: Expiration date range start
          schema:
            type: string
            format: date-time
        - name: endExpirationDate
          in: query
          description: Expiration date range end
          schema:
            type: string
            format: date-time
        - name: anonymous
          in: query
          description: Get anonymous cards
          schema:
            type: boolean
        - name: startActivationDate
          in: query
          description: Activation date range start
          schema:
            type: string
            format: date-time
        - name: endActivationDate
          in: query
          description: Activation date range end
          schema:
            type: string
            format: date-time
        - name: startAssociationDate
          in: query
          description: Association date range start
          schema:
            type: string
            format: date-time
        - name: endAssociationDate
          in: query
          description: Association date range end
          schema:
            type: string
            format: date-time
        - name: startCreationDate
          in: query
          description: Creation date range start
          schema:
            type: string
            format: date-time
        - name: endCreationDate
          in: query
          description: Creation date range end
          schema:
            type: string
            format: date-time
        - name: externalStatus
          in: query
          description: Card external status
          schema:
            type: string
        - name: hasOperationInError
          in: query
          description: Will be removed by July 2023. Use `hasLastOperationInError` instead.
          deprecated: true
          schema:
            type: boolean
        - name: hasLastOperationInError
          in: query
          description: Get cards with an operation in error
          schema:
            type: boolean
        - name: hasOperationBlocked
          in: query
          description: Get cards with last operation in pending block request
          schema:
            type: boolean
        - name: hasOperationUnblocked
          in: query
          description: Get cards with last operation in pending unblock request
          schema:
            type: boolean
        - name: hasPendingOpposition
          in: query
          description: Get cards with last operation in pending opposition request
          schema:
            type: boolean
        - name: productId
          in: query
          schema:
            $ref: '#/components/schemas/ProductId'
        - name: status
          in: query
          description: Card status
          schema:
            type: string
            enum:
              - ACTIVE
              - BLOCKED
              - EXPIRED
              - NEW
              - OPPOSED
              - PENDING
              - REMOVED
        - name: startStatusChangeDate
          in: query
          description: Status change date range start
          schema:
            type: string
            format: date-time
        - name: endStatusChangeDate
          in: query
          description: Status change date rand end
          schema:
            type: string
            format: date-time
        - name: userId
          in: query
          schema:
            $ref: '#/components/schemas/UserId'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: creationDate
            enum:
              - id
              - embossedName
              - embossedReference
              - externalStatusConfirmationDate
              - activationDate
              - associationDate
              - panDisplay
              - number
              - expirationDate
              - creationDate
              - productId
              - status
              - statusChangeDate
              - userId
        - name: buildLinks
          in: query
          description: either build card management operations links or not
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Example response (Status 200)
          content:
            application/json:
              schema:
                description: Sorted and paginated list of cards
                allOf:
                  - type: object
                    properties:
                      items:
                        type: array
                        description: collection of cards
                        items:
                          $ref: '#/components/schemas/Card'
                  - type: object
                    properties:
                      sort:
                        type: string
                        description: Default Order By Creation Date Desc
                        default: '-creationDate'
                  - $ref: '#/components/schemas/Collection'
      x-stoplight:
        id: 5xbvctfc5ors4
  '/cards/{cardId}':
    parameters:
      - $ref: '#/components/parameters/cardId'
    get:
      security:
        - OAuth2:
            - card_view
      tags:
        - Cards
      summary: Retrieve a card
      operationId: GetCard
      responses:
        '200':
          description: Card information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '404':
          description: Requested card was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: h8uae0y4c267j
    patch:
      security:
        - OAuth2:
            - card_update
      tags:
        - Cards
      summary: Update a card
      operationId: UpdateCard
      requestBody:
        required: true
        description: Card update request
        content:
          application/json:
            schema:
              type: object
              properties:
                embossedName:
                  type: string
                  description: 'Can be modified while status is NEW, default is account''s holder name. Can only contain "A-Z", "0-9", "''", "-", " ", and ".".'
                  example: JOHN DOE
      responses:
        '200':
          description: Card successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '400':
          description: Card could not be updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested card was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: ks4jnsvrrzluv
    delete:
      security:
        - OAuth2:
            - card_deactivate
      tags:
        - Cards
      summary: Deactivate a card
      operationId: DeleteCard
      responses:
        '200':
          description: Card successfully deactivated
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Card could not be deactivated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested card was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 8gbgfwocez0po
  '/cards/{cardId}/features':
    parameters:
      - $ref: '#/components/parameters/cardId'
    patch:
      security:
        - OAuth2:
            - card_option
      tags:
        - Cards
      summary: Change card feature
      description: Enable or disable a card feature
      operationId: changeCardFeature
      requestBody:
        required: true
        description: Card feature change request. Features availables depends on product configuration
        content:
          application/json:
            schema:
              type: object
              required:
                - feature
                - enabled
              properties:
                feature:
                  type: string
                  enum:
                    - NFC
                    - CASH_OPERATION
                    - EUR_WITHDRAWAL
                    - FOREIGN_WITHDRAWAL
                    - PAYMENT_AUTHORIZED
                    - EUR_PAYMENT
                    - FOREIGN_PAYMENT
                    - FOREIGN_ALL
                    - ONLINE_PAYMENT
                    - FOREIGN_ONLINE_PAYMENT
                enabled:
                  type: boolean
      responses:
        '200':
          description: Card feature change successfully requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '400':
          description: Card feature could not be changed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested card was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: j2osfo3g8tvgq
  '/cards/{cardId}/limits':
    parameters:
      - $ref: '#/components/parameters/cardId'
    patch:
      security:
        - OAuth2:
            - card_limits
      tags:
        - Cards
      summary: Change card limit
      description: Change card limit
      operationId: ChangeCardLimit
      requestBody:
        required: true
        description: Card limits change request.
        content:
          application/json:
            schema:
              $ref: ./CardLimits.yaml
      responses:
        '200':
          description: Card feature change successfully requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '400':
          description: Card feature could not be changed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested card was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: i6rgztm4fuhf9
  '/cards/{cardId}/block':
    parameters:
      - $ref: '#/components/parameters/cardId'
    patch:
      security:
        - OAuth2:
            - card_block
      tags:
        - Cards
      summary: Block a card
      operationId: BlockCard
      responses:
        '200':
          description: Card successfully blocked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '400':
          description: Card could not be blocked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested card was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: gr06oshoi59cn
  '/cards/{cardId}/unblock':
    parameters:
      - $ref: '#/components/parameters/cardId'
    patch:
      security:
        - OAuth2:
            - card_unblock
      tags:
        - Cards
      summary: Unblock a card
      operationId: UnblockCard
      responses:
        '200':
          description: Card successfully unblocked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '400':
          description: Card could not be unblocked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested card was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 85sv5gebepxh7
  '/cards/{cardId}/oppose':
    parameters:
      - $ref: '#/components/parameters/cardId'
    patch:
      security:
        - OAuth2:
            - card_oppose
      tags:
        - Cards
      summary: Oppose a card
      operationId: OpposeCard
      requestBody:
        required: true
        description: Card opposition request
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  enum:
                    - ABUSE
                    - LOST
                    - STOLEN
                    - NOT_DISTRIBUTED
                    - COUNTERFEIT
      responses:
        '200':
          description: Card successfully opposed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '400':
          description: Card could not be opposed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested card was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: zd6s1i1r6rfh0
  '/cards/{cardId}/activate':
    parameters:
      - $ref: '#/components/parameters/cardId'
    patch:
      security:
        - OAuth2:
            - card_activate
      tags:
        - Cards
      summary: Activate a card
      operationId: ActivateCard
      requestBody:
        required: true
        description: Card activation options
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateCardRequest'
      responses:
        '200':
          description: Activation was requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '400':
          description: Card could not be activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested card was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: l4mlev1sjzi1h
  '/accounts/{accountId}/cards':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
          description: account id
          example: ACC123
    post:
      security:
        - OAuth2:
            - card_creation
      tags:
        - Cards
      summary: Create a card
      operationId: CreateUserCard
      requestBody:
        required: true
        description: card to add to the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCardRequest'
      responses:
        '201':
          description: Card creation response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '400':
          description: An error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 9q0dv1a18exw3
  '/cards/{cardId}/outstandings':
    parameters:
      - $ref: '#/components/parameters/cardId'
    get:
      security:
        - OAuth2:
            - card_view
      tags:
        - Cards
      summary: Get card outstandings
      operationId: GetCardOutstandings
      responses:
        '200':
          description: Card outstanding list
          content:
            application/json:
              schema:
                type: object
                required:
                  - outstandings
                properties:
                  outstandings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Outstanding'
        '400':
          description: Could not get card outsandings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested card was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: m4oggq69pnzid
  '/cards/{cardId}/refabricate':
    parameters:
      - $ref: '#/components/parameters/cardId'
    patch:
      security:
        - OAuth2:
            - card_refabrication
      tags:
        - Cards
      summary: Refabricate a card
      operationId: RefabricateCard
      responses:
        '200':
          description: Refabrication was requested
          content:
            application/json:
              schema:
                type: object
                required:
                  - operationId
                properties:
                  operationId:
                    type: string
                    description: Refabrication operation id
                    example: '1234'
        '400':
          description: Card could not be refabricated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested card was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stoplight:
        id: 8j87jurha0oxt
  '/cards/{cardId}/operations':
    parameters:
      - $ref: '#/components/parameters/cardId'
    get:
      security:
        - OAuth2:
            - card_view
      tags:
        - Cards
      summary: List all card management operations
      operationId: searchOperations
      parameters:
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/CardManagementOperationId'
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/CardManagementOperationType'
        - name: state
          in: query
          schema:
            $ref: '#/components/schemas/CardManagementOperationState'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - type
              - state
              - creation_date
      responses:
        '200':
          description: Example response (Status 200)
          content:
            application/json:
              schema:
                description: Sorted and paginated list of operations
                allOf:
                  - $ref: '#/components/schemas/Collection'
                  - type: object
                    properties:
                      items:
                        type: array
                        description: collection of operations
                        items:
                          $ref: '#/components/schemas/CardManagementOperation'
      x-stoplight:
        id: 6q0oqec1jnoe4
  '/cards/{cardId}/image':
    parameters:
      - $ref: '#/components/parameters/cardId'
    get:
      security:
        - OAuth2:
            - card_view
      tags:
        - Cards
      operationId: GetCardImage
      summary: Get a card's image
      responses:
        '200':
          description: The card's image as PNG
          content:
            image/png:
              schema: {}
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: xkpklopomw9ii
  '/identities/{identityId}/available-statuses':
    parameters:
      - in: path
        name: identityId
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
    get:
      security:
        - OAuth2:
            - identity_status_change
      tags:
        - Identities
      summary: List available statuses
      description: |
        Returns the possible statuses to which the Identity can be switched to
      operationId: GetIdentityAvailableStatuses
      responses:
        '200':
          description: List of available statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityStatusArray'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: hq6cch9gcygwp
  '/identities/{identityId}/actions/change-status':
    parameters:
      - in: path
        name: identityId
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
    put:
      security:
        - OAuth2:
            - identity_status_change
      tags:
        - Identities
      summary: Change Identity status
      operationId: ChangeIdentityStatus
      parameters:
        - in: header
          name: Skaleet-Resource-Version
          required: false
          description: 'Indicate the version of the modified entity. If it does not correspond to the current version, an error is returned'
          schema:
            type: string
            example: '1'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeIdentityStatusActionRequest'
      responses:
        '204':
          description: Identity status was successfully changed
        '409':
          $ref: '#/components/responses/VersionConflictResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: dwangelbptpt8
  '/identities/{identityId}/actions/open':
    parameters:
      - in: path
        name: identityId
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
    post:
      security:
        - OAuth2:
            - open_identity
      tags:
        - Identities
      summary: Open an Identity
      operationId: OpenIdentity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  description: the reason of the opening
                  example: my reason
      responses:
        '204':
          description: Identity was successfully opened
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: nfvwhdv7sz5lw
  '/hooks/{hookId}/identities/{identityId}':
    parameters:
      - name: hookId
        in: path
        required: true
        description: id of hook
        schema:
          type: string
          example: '42'
      - name: identityId
        in: path
        required: true
        description: id of target identity
        schema:
          type: string
          example: '1337'
    post:
      security:
        - OAuth2:
            - event_management
      tags:
        - Events
      summary: Association between a hook and an identity
      operationId: AssociateHookToIdentity
      responses:
        '201':
          description: hook was associated to identity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ruoicutjatft7
    delete:
      security:
        - OAuth2:
            - event_management
      tags:
        - Events
      summary: Dissociates a hook and an identity
      operationId: DissociateHookFromIdentity
      responses:
        '200':
          description: hook was disassociated from identity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: qfk9jx53pyhdp
  /kyc/documents:
    get:
      security:
        - OAuth2:
            - kyc_view
      tags:
        - KYC
      summary: Get KYC documents requirements
      operationId: GetKycDocumentRequirements
      parameters:
        - in: query
          name: legalType
          schema:
            $ref: '#/components/schemas/LegalType'
          required: true
        - in: query
          name: profileId
          schema:
            $ref: '#/components/schemas/ProfileId'
          required: true
      responses:
        '200':
          description: List of document requirements for KYC
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentRequirementCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: oo32bdjqiqf4t
  /document-types:
    get:
      security:
        - OAuth2:
            - document_setup_view
      tags:
        - Document Configuration
      summary: Search configured document types
      operationId: SearchDocumentType
      parameters:
        - name: code
          in: query
          schema:
            type: string
            example: CODE
        - name: legalType
          in: query
          schema:
            type: string
            enum:
              - NATURAL_PERSON
              - LEGAL_ENTITY
            example: NATURAL_PERSON
        - name: originType
          in: query
          schema:
            type: string
            enum:
              - PREDEFINED
              - CUSTOM
            example: CUSTOM
        - name: isReceived
          in: query
          schema:
            type: boolean
            example: false
        - name: isGenerated
          in: query
          schema:
            type: boolean
            example: false
        - name: offset
          in: query
          description: Pagination start (from 0)
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
            minimum: 0
            default: 20
        - name: sort
          in: query
          description: Field to define sort order
          schema:
            type: string
            default: code
      responses:
        '200':
          description: Document types search result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 2ijekv6508iwr
  '/means-of-payment/{network}/credit-transfers/{id}':
    parameters:
      - name: network
        in: path
        required: true
        description: Interbanking network
        schema:
          type: string
          enum:
            - sepa
      - name: id
        in: path
        required: true
        description: Id of the instruction to be retrieved
        schema:
          $ref: '#/components/schemas/Instruction/properties/reference'
    get:
      security:
        - OAuth2:
            - means_of_payment_view
      tags:
        - MeansOfPayment
      summary: SEPA | Retrieve a credit-transfers instruction
      operationId: getCreditTransfers
      responses:
        '200':
          description: instruction response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditTransferInstruction'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: leykzh1ibnxtz
  '/means-of-payment/{network}/direct-debits/{id}':
    parameters:
      - name: network
        in: path
        required: true
        description: Interbanking network
        schema:
          type: string
          enum:
            - sepa
      - name: id
        in: path
        required: true
        description: Id of the instruction to be retrieved
        schema:
          $ref: '#/components/schemas/Instruction/properties/reference'
    get:
      security:
        - OAuth2:
            - means_of_payment_view
      tags:
        - MeansOfPayment
      summary: SEPA | Retrieve a direct-debit instruction
      operationId: getDirectDebit
      responses:
        '200':
          description: instruction response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instruction'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: etr9lgn3cr7ny
  '/means-of-payment/{network}':
    parameters:
      - name: network
        in: path
        required: true
        description: Interbanking network
        schema:
          type: string
          enum:
            - sepa
    get:
      security:
        - OAuth2:
            - means_of_payment_view
      tags:
        - MeansOfPayment
      summary: SEPA | Retrieve all instructions
      operationId: fetchAllInstructions
      parameters:
        - name: minCreationDate
          in: query
          description: Instruction's creation date range start (date range is limited to 3 months)
          schema:
            type: string
            format: date-time
            example: '2018-06-01T00:00:00Z'
            description: date in ATOM format
        - name: maxCreationDate
          in: query
          description: Instruction's creation date range end (date range is limited to 3 months)
          schema:
            type: string
            format: date-time
            example: '2018-06-01T00:00:00Z'
            description: date in ATOM format
        - name: minSettlementDate
          in: query
          description: Instruction's settlement date range start (date range is limited to 3 months)
          schema:
            type: string
            format: date-time
            example: '2018-06-01T00:00:00Z'
            description: date in ATOM format
        - name: maxSettlementDate
          in: query
          description: Instruction's settlement date range end (date range is limited to 3 months)
          schema:
            type: string
            format: date-time
            example: '2018-06-01T00:00:00Z'
            description: date in ATOM format
        - $ref: '#/components/parameters/instructionType'
        - $ref: '#/components/parameters/outwardState'
        - name: amount
          in: query
          description: Transaction amount (in cents)
          schema:
            type: integer
        - name: clientId
          in: query
          description: Client ID
          schema:
            type: integer
        - name: distributorId
          in: query
          description: Distributor ID
          schema:
            type: integer
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - creationDate
              - settlementDate
              - type
              - status
              - amount
              - clientId
              - distributorId
      responses:
        '200':
          description: Instruction Collection Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterbankingInstructionCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: pkm219ihnu8dm
  '/means-of-payment/{network}/direct-debits-cancellations/{id}':
    parameters:
      - name: network
        in: path
        required: true
        description: Interbanking network
        schema:
          type: string
          enum:
            - sepa
      - name: id
        in: path
        required: true
        description: Id of the instruction to be retrieved
        schema:
          $ref: '#/components/schemas/Instruction/properties/reference'
    get:
      security:
        - OAuth2:
            - means_of_payment_view
      tags:
        - MeansOfPayment
      summary: SEPA | Retrieve a direct-debit cancellation instruction
      operationId: getDirectDebitCancellation
      responses:
        '200':
          description: instruction response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancellationInstruction'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: bf7qalin2lyih
  '/means-of-payment/{network}/credit-transfers-cancellations/{id}':
    parameters:
      - name: network
        in: path
        required: true
        description: Interbanking network
        schema:
          type: string
          enum:
            - sepa
      - name: id
        in: path
        required: true
        description: Id of the instruction to be retrieved
        schema:
          $ref: '#/components/schemas/Instruction/properties/reference'
    get:
      security:
        - OAuth2:
            - means_of_payment_view
      tags:
        - MeansOfPayment
      summary: SEPA | Retrieve a Credit Transfer Cancellation instruction
      operationId: getCreditTransfersCancellation
      responses:
        '200':
          description: instruction response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutwardCreditTransfersCancellationInstruction'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 7gr0hh3pexy9m
  '/means-of-payment/{network}/modification/{modificationId}':
    parameters:
      - name: network
        in: path
        required: true
        description: Interbanking network
        schema:
          type: string
          enum:
            - sepa
      - name: modificationId
        in: path
        required: true
        description: The modification ID for the information modification advice issued
        schema:
          type: string
          example: ZZTOYJY1NG6HBBH19
    get:
      security:
        - OAuth2:
            - information_modification_advice_view
      tags:
        - MeansOfPayment
      summary: SEPA | Retrieve an information modification advice
      operationId: getInformationModificationAdvice
      responses:
        '200':
          description: information modification advice response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformationModificationAdvice'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 04ihir5lxkh4o
  '/transactions/{transactionId}/spendings':
    parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
    get:
      security:
        - OAuth2:
            - transaction_spendings_view
      tags:
        - Transactions
      summary: Retrieve spendings associated to a transaction
      operationId: GetTransactionSpendings
      responses:
        '200':
          $ref: '#/components/responses/GetTransactionSpendingsResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 7q1tgw1uuuvnx
  '/transactions/{transactionId}/attachments':
    parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
    get:
      security:
        - OAuth2:
            - transaction_attachments_view
      tags:
        - Transactions
      summary: Retrieve transaction attachments
      operationId: GetTransactionAttachments
      responses:
        '200':
          $ref: '#/components/responses/GetTransactionAttachmentsResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: erm30r3xntkb6
  '/transactions/{transactionId}/attachments/{attachmentId}/content':
    parameters:
      - in: path
        name: transactionId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      - in: path
        name: attachmentId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionAttachmentId'
    get:
      security:
        - OAuth2:
            - transaction_spendings_view
      tags:
        - Transactions
      operationId: GetTransactionAttachmentContent
      summary: Get attachments content
      responses:
        '200':
          $ref: '#/components/responses/TransactionAttachmentContentResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: uzp079qhfskeo
  '/transactions/{transactionId}/attachments/{attachmentId}/preview':
    parameters:
      - in: path
        name: transactionId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      - in: path
        name: attachmentId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionAttachmentId'
    get:
      security:
        - OAuth2:
            - transaction_spendings_view
      tags:
        - Transactions
      operationId: GetTransactionAttachmentThumbnail
      summary: Get attachments content thumbnail
      responses:
        '200':
          $ref: '#/components/responses/TransactionAttachmentPreviewResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: wk0k58j3yib28
  '/cards/{cardId}/pinCodeReissuing':
    parameters:
      - schema:
          type: string
        name: cardId
        in: path
        required: true
    patch:
      summary: Re-issue pincode for given card
      tags:
        - Cards
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        default:
          description: Default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: patch-cards-cardId-pinCodeReissuing
      x-stoplight:
        id: sa601lq8vjq4f
      security:
        - OAuth2:
            - card_reissue_pincode
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                requestorId:
                  type: string
                  x-stoplight:
                    id: a9ujniql5q961
                  description: Identity ID of the entity requesting this pincode reissue. Will default to connected distributor if not provided.
                channel:
                  x-stoplight:
                    id: z01ioigbxlqza
                  enum:
                    - MAIL
                    - SMS
                    - APP
                  description: 'If permitted by the card partner, defines how will be sent the new pincode to the card owner'
                newPin:
                  type: string
                  x-stoplight:
                    id: qnjmxnwgk49pf
                  description: 'If permitted by the card partner, defines the new pincode of the card'
  '/accounts/{accountId}/external-references/{type}/{reference}':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
      - name: type
        in: path
        required: true
        schema:
          type: string
      - name: reference
        in: path
        required: true
        schema:
          type: string
    patch:
      summary: Update an external reference for an account
      tags:
        - Accounts
      responses:
        '200':
          description: External reference
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  reference:
                    type: string
                x-examples:
                  Example 1:
                    type: string
                    reference: string
        '401':
          description: Unauthorized
        '404':
          description: Requested account was not found
      operationId: UpdateAccountExternalReference
      x-stoplight:
        id: vqjlwsrsnz0y4
      security:
        - OAuth2:
            - external_references_update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                reference:
                  type: string
              x-examples:
                Example 1:
                  type: string
                  reference: string
  '/jobs/{name}/executions':
    parameters:
      - schema:
          type: string
          example: MyJob
        name: name
        in: path
        required: true
        description: Job name
      - schema:
          type: string
          example: '20220322151220'
        in: query
        name: executionId
        description: id of the execution we want to retrieve
      - schema:
          type: string
          format: date-time
          example: '1970-01-01T15:12:20+0100'
        in: query
        name: from
        description: date from which we want to recover the executions
    get:
      security:
        - OAuth2:
            - job_view
      summary: Job Executions List
      tags:
        - Jobs
      responses:
        '200':
          description: Returns list of executions of a job
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        output:
                          type: array
                          items:
                            type: string
                x-examples:
                  Example 1:
                    items:
                      - id: '20220315143826'
                        output:
                          - log
              examples:
                Response Example:
                  value:
                    items:
                      - id: string
                        output:
                          - string
      operationId: get-jobs-name-executions
      x-stoplight:
        id: dq4j2cfy7ccsj
  '/jobs/{name}/executions/{executionId}/outputs/{outputName}':
    parameters:
      - schema:
          type: string
          example: MyJob
        name: name
        in: path
        required: true
        description: Job name
      - schema:
          type: string
          example: '19890101151052'
        name: executionId
        in: path
        required: true
        description: Id of execution
      - schema:
          type: string
          example: MyOutput
        name: outputName
        in: path
        required: true
        description: Name of output or log
    get:
      security:
        - OAuth2:
            - job_view
      summary: Job Execution Output download
      tags:
        - Jobs
      responses:
        '200':
          description: A file with the requested output / log fil
          content:
            text/plain:
              schema:
                type: string
      operationId: get-jobs-name-executions-executionId-outputs-outputName
      x-stoplight:
        id: rlo63c1t5v7lr
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://sandbox.skaleet.com/api/distributor/v1/oauth2/token'
          scopes:
            user_view: Can list and retrieve users
            user_creation: Can create a user
            user_update: Can update a user
            user_deactivate: Can deactivate a user
            recipient_management: 'Can create, delete and list user''s recipients'
            relation_management: 'Can list, create and delete user''s relations'
            profile_view: Can list the profiles available to the distributor
            sda_create_user_profiles: Create new user profiles
            kyc_view: Can access kyc requirements
            document_management: Can view and add documents to users
            account_view: Can list and retrieve users’ accounts
            account_creation: Can create accounts for users
            externalid_update: Can update external Id fields
            account_close: Can close users' accounts
            account_block: Can block users' accounts
            account_unblock: Can unblock users' accounts
            transaction_view: Can list and retrieve transactions
            transaction_export: Can export all transactions or part of them using filters
            payout: Can initiate an External Transfer (Distributor Payout)
            posting: Can initiate an External Direct Debit (Distributor Payin)
            payin: Can initiate an Internal Transfer (Distributor Posting)
            card_view: Can list and retrieve cards
            card_creation: Can create a card for an account
            card_update: Can update a card
            card_activate: Can activate a card for an account
            card_deactivate: Can deactivate a card for an account
            card_block: Can block a card for an account
            card_unblock: Can unblock a card for an account
            card_oppose: Can oppose a card for an account
            card_option: Can manage options for a card
            card_reissue_pincode: Can reissue the pincode of a card
            card_refabrication: Can refabricate a card
            card_limits: Can update card limits
            accounting_view: Can list and retrieve accounting entries
            accounting_export: Can export all accounting entries or part of them using filters
            password_update: Change distributor password
            required_action: Can update a user's required action
            iban_modification: Can modify an account's IBAN
            means_of_payment_view: Can visualize interbanking operations
            dist_transaction_spendings_lock: Can lock operations spendings
            external_references_view: Can list an account external references
            identity_status_change: Allow the API client to change the status of an Identity
            event_management: Can manage hooks
            document_setup_view: Document setup view
            external_references_create: Can create an account external reference
            external_references_update: Can update an account external references
            external_references_delete: Can delete an account external reference
            job_view: Can list jobs
            information_modification_advice_view: Can access to modification advices
            open_identity: Can execute a customer validation
            password_reset: Can execute a customer's password reset procedure
            transaction_attachments_view: Can view a transaction's attached documents
            transaction_spendings_view: Can access to a transaction spending categorization
          refreshUrl: ''
  requestBodies:
    CreateUserProfileRequest:
      description: Request to create a new user profile
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserProfile'
  responses:
    OAuth2AuthRequestResponse:
      description: Authorization request initiated successfully. Redirection must be followed.
      headers:
        Location:
          schema:
            type: string
            description: the URI to redirect the client to.
    InvalidRequestResponse:
      description: Request is not valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidRequestError'
    ForbiddenResponse:
      description: Request client was not allowed to make this action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    OAuth2AccessTokenResponse:
      description: Access Token issued successfully
      content:
        application/json:
          schema:
            type: object
            required:
              - token_type
              - expires_in
              - access_token
              - refresh_token
            properties:
              token_type:
                type: string
                description: the Access Token type. Always "Bearer".
                example: Bearer
              expires_in:
                type: integer
                description: the duration in seconds of Access Token validity
              access_token:
                type: string
                description: the Access Token that is a base64 encoded JWT
                example: |
                  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
              refresh_token:
                $ref: '#/components/schemas/RefreshToken'
    RestfulErrorResponse:
      description: Request could not be processed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ErrorResponse:
      description: Request could not be processed
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/Response'
              - type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                example:
                  success: false
                  error:
                    code: 1337
                    message: An error occurred
    UserProfileCreatedResponse:
      description: Successfully created a new user profile
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserProfile'
    WrappedUnauthorizedResponse:
      description: Request client is not authorized to access this endpoint
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WrappedUnauthorizedError'
    WrappedForbiddenResponse:
      description: Request client was not allowed to make this action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WrappedForbiddenError'
    VersionConflictResponse:
      description: The request could not be processed because the current version does not match the specified version
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    GetTransactionSpendingsResponse:
      description: List of the transaction spendings
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpendingDetailsList'
    NotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    GetTransactionAttachmentsResponse:
      description: List of the transaction attachments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAttachmentsList'
    TransactionAttachmentContentResponse:
      description: Document content (check `Content-Type` header value to know the exact MIME type of content)
      content:
        image/jpeg:
          schema: {}
        image/gif:
          schema: {}
        image/png:
          schema: {}
        application/pdf:
          schema: {}
    UnauthorizedResponse:
      description: Request client is not authorized to access this endpoint
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    TransactionAttachmentPreviewResponse:
      description: Document content (check `Content-Type` header value to know the exact MIME type of content)
      content:
        image/png:
          schema: {}
  schemas:
    WebAuthOptions:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/WebAuthenticationId'
        publicKey:
          type: object
          description: Web authentication public key data
          properties:
            challenge:
              type: string
              description: Base64 encoded string
            rpId:
              type: string
              description: Relying party ID
            userVerification:
              type: string
              enum:
                - discouraged
            allowCredentials:
              type: array
              description: An array of allowed credentials for the current user
              items:
                type: string
            timeout:
              type: integer
              description: 'Time, in milliseconds, that the user has to respond to a prompt for registration'
            expirationTime:
              type: integer
              description: 'Session TTL, in seconds'
        links:
          type: object
          properties:
            authenticate:
              type: object
              description: Use this URL to authenticate
              properties:
                href:
                  type: string
                  example: 'https://sandbox.skaleet.com/api/distributor/v1/webauth-authentications/{authenticationId}/authenticate'
      x-stoplight:
        id: dd2wjwgkgm9qh
    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          $ref: '#/components/schemas/Error'
      x-stoplight:
        id: sm8n4femld4oj
    WebAuthenticationId:
      type: string
      description: Web Authentication identifier.
      example: 38cac1e9-e591-4077-b1f3-64d88485db72
      x-stoplight:
        id: jejzdrxv3bp60
    WebAuthAssociationsOptions:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/WebAuthenticationId'
        publicKey:
          type: object
          description: Web authentication public key data
          properties:
            rp:
              type: object
              description: Relying party
              properties:
                name:
                  type: string
                  description: Relying party name
                id:
                  type: string
                  description: Relying party ID
            pubKeyCredParams:
              type: array
              description: Contains public key credentials parameters
              items:
                type: string
            challenge:
              type: string
              description: Base64 encoded string
            attestation:
              type: string
              description: Always `none`
            user:
              type: object
              properties:
                name:
                  type: string
                  description: Username
                id:
                  type: string
                  description: User ID
                displayName:
                  type: string
                  description: User display name
            authenticatorSelection:
              type: object
              properties:
                requireResidentKey:
                  type: boolean
                  description: Always `false`
                userVerification:
                  type: string
                  description: Always `discouraged`
            timeout:
              type: integer
              description: Public key options validity
            expirationTime:
              type: integer
              description: Session TTL
        links:
          type: object
          properties:
            associate:
              type: object
              description: Use this URL to associate a new device
              properties:
                href:
                  type: string
                  example: 'https://sandbox.skaleet.com/api/distributor/v1/webauth-associations/{associationId}/associate'
      x-stoplight:
        id: 08bjrxsrq7q4f
    WebAuthenticationAssociationId:
      type: string
      description: Association id
      example: 38cac1e9-e591-4077-b1f3-64d88485db72
      x-stoplight:
        id: x2nu40xj2u804
    ApiClientId:
      type: string
      description: API client identifier
      example: 78ee4408bb9b0f8ca87d08c8574de47f
      x-stoplight:
        id: mnezeqjv1tbhz
    RedirectUri:
      type: string
      description: |
        The URI the Authorization Server should use to redirect the authorized user or communicate the authorization failure.

        On final user redirection, if authorization were successful, the authorization server will add `code` and `state` parameters.

        `state` must be the same value as the one transmitted in the initiation.

        `code` contains the Authorization Code to exchange for an Access Token.
      format: uri
      example: 'https://client.example.org/oauth-redirect'
      x-stoplight:
        id: 41a6d1pv8mrdk
    Scope:
      type: string
      description: |
        The wished scopes list, each scope must be separated by one blank space

        **In case of token refresh**, it is impossible to request scopes that were not requested during the initial Access Token request.

        The list may contain a subset of the initially requested scopes.
      x-stoplight:
        id: n1ckv0vnktlby
    AuthCodeState:
      type: string
      description: A CSRF token. This parameter is optional but highly recommended. You should store the value of the CSRF token in the user’s session to be validated when they return.
      example: OWY4NmQwODE4ODRjN2Q2NTlhMmZlYWEwYzU1YWQwMTVhM2JmNGYxYjJiMGI4MjJjZDE1ZDZMGYwMGEwOA==
      x-stoplight:
        id: 0j0graleh8x1t
    OAuth2AccessTokenRequest:
      oneOf:
        - $ref: '#/components/schemas/OAuth2PasswordAccessTokenRequest'
        - $ref: '#/components/schemas/OAuth2AuthCodeAccessTokenRequest'
        - $ref: '#/components/schemas/OAuth2ClientCredentialsAccessTokenRequest'
      discriminator:
        propertyName: grant_type
        mapping:
          password: '#/components/schemas/OAuth2PasswordAccessTokenRequest'
          authorization_code: '#/components/schemas/OAuth2AuthCodeAccessTokenRequest'
          client_credentials: '#/components/schemas/OAuth2ClientCredentialsAccessTokenRequest'
      x-stoplight:
        id: ltb9m01tkusph
    OAuth2RefreshAccessTokenRequest:
      type: object
      description: Credentials for Access Token refresh
      required:
        - grant_type
        - refresh_token
      properties:
        grant_type:
          type: string
          description: Always "refresh_token"
          example: refresh_token
        refresh_token:
          $ref: '#/components/schemas/RefreshToken'
        scope:
          $ref: '#/components/schemas/Scope'
      x-stoplight:
        id: zjuiyorsxcg86
    DistributorConfiguration:
      type: object
      x-stoplight:
        id: wspgzdcsxn4cr
      required:
        - defaultLanguage
        - defaultColor
        - u2fRequired
        - hasU2fDevice
        - mustChangePassword
        - currencies
        - links
      properties:
        defaultLanguage:
          type: string
          description: Platform default langage
          example: en_US
        defaultColor:
          type: string
          description: 'Platform default color, using  RGB (red, green, blue) format.'
          example: '#286A38'
        u2fRequired:
          type: boolean
          description: Tell if u2f authentication is required for the distributor
        hasU2fDevice:
          type: boolean
          description: Tell if distributor has a paired u2f device
        mustChangePassword:
          type: boolean
          description: Tell if user has to change his password
          example: false
        currencies:
          type: array
          description: 'Plaform currencies available. Refer to https://api.skaleet.com/docs/api/j5e4mk4stmtr7-data-types-representations to get the details'
          items:
            type: object
            required:
              - name
              - iso_numeric
              - iso_alpha
              - decimal_number
              - symbol
              - symbol_first
            properties:
              name:
                type: string
                example: Euro or Pound sterling
              iso_numeric:
                type: string
                example: '978'
              iso_alpha:
                type: string
                example: EUR
              decimal_number:
                type: integer
                example: 2
              symbol:
                type: string
                example: €
              symbol_first:
                type: boolean
                example: false
        links:
          type: array
          description: "Platform images url. Three images can be configured:\r\nLogo, cornerLogo and Background"
          items:
            type: object
            required:
              - rel
              - href
            properties:
              rel:
                type: string
                enum:
                  - logo
                  - cornerLogo
                  - background
                description: The name of the image
              href:
                type: string
                description: URL to the image
                example: /api/Common/v1/configuration/logo
    FrontConfiguration:
      type: object
      x-stoplight:
        id: ul21p0j5qxvix
      properties:
        defaultLanguage:
          type: string
          description: Platform default language
          example: en_US
        defaultColor:
          type: string
          description: Platform default color
          example: '#286A38'
        currencies:
          type: array
          description: Platform currencies
          items:
            type: object
            properties:
              name:
                type: string
                example: Euro
              iso_numeric:
                type: string
                example: '978'
              iso_alpha:
                type: string
                example: EUR
              decimal_number:
                type: integer
                example: 2
              symbol:
                type: string
                example: €
              symbol_first:
                type: boolean
                example: false
        links:
          type: array
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `logo` [GET] Get logo
              * `cornerLogo` [GET] Get corner logo
              * `background` [GET] Get background
          example:
            - rel: logo
              href: 'https://sandbox.skaleet.com/api/distributor/v1/api/common/v1/configuration/distributor/logo'
            - rel: cornerLogo
              href: 'https://sandbox.skaleet.com/api/distributor/v1/api/common/v1/configuration/corner-logo'
            - rel: background
              href: 'https://sandbox.skaleet.com/api/distributor/v1/api/common/v1/configuration/distributor/background'
          items:
            $ref: ./Link.yaml
          readOnly: true
    RegisterRequest:
      type: object
      required:
        - version
        - challenge
        - appId
      properties:
        version:
          type: string
        challenge:
          type: string
        appId:
          type: string
      x-stoplight:
        id: 6a5txdz85mlrv
    SignRequest:
      type: object
      required:
        - version
        - challenge
        - keyHandle
        - appId
      properties:
        version:
          type: string
        challenge:
          type: string
        keyHandle:
          type: string
        appId:
          type: string
      x-stoplight:
        id: fke8tvmpss4y0
    RegisterChallengeResponse:
      type: object
      required:
        - registrationData
        - clientData
      properties:
        errorCode:
          type: integer
        registrationData:
          type: string
        clientData:
          type: string
      x-stoplight:
        id: j74jaoph73ft3
    AuthenticateChallengeResponse:
      type: object
      required:
        - keyHandle
        - signatureData
        - clientData
      properties:
        errorCode:
          type: integer
        keyHandle:
          type: string
        signatureData:
          type: string
        clientData:
          type: string
      x-stoplight:
        id: 600dw955lhv8g
    UserProfileId:
      type: string
      example: '1'
      description: Id for a profile. List all profiles at GET /users/profiles
      x-stoplight:
        id: f2krqmpki3muu
    UserExternalId:
      type: string
      description: Client custom data for UserId
      example: EXT123456789
      x-stoplight:
        id: 1i26hmdzhszbw
    UserStatus:
      type: string
      enum:
        - INITIATED
        - PENDING
        - OPENED
        - BLOCKED
        - CLOSED
        - INIBLOCKED
      x-stoplight:
        id: ubdpgnjoe8uzk
    Role:
      type: string
      description: 'A user can be a CLIENT, a COMPANY, a MERCHANT, an AGENT, a DISTRIBUTOR, a DELEGATE_USER or a NON_CUSTOMER'
      enum:
        - CLIENT
        - COMPANY
        - MERCHANT
        - AGENT
        - NON_CUSTOMER
        - DISTRIBUTOR
        - DELEGATE_USER
      x-stoplight:
        id: 8cs83s3kpocsf
    LegalType:
      type: string
      description: |
        The user can be a natural person (physical person with firstname and lastname) or a legal entity (company or non-profit with legalName)

        **This property is required when creating a user**
      enum:
        - NATURAL_PERSON
        - LEGAL_ENTITY
      x-stoplight:
        id: jth5f3ugfdykd
    UserCollection:
      description: Sorted and paginated list of users
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of users
              items:
                $ref: '#/components/schemas/User'
      x-stoplight:
        id: icbbiez5yichw
    NaturalPersonCreation:
      allOf:
        - type: object
          properties:
            mainMobile:
              type: string
              example: '33612345678'
              writeOnly: true
              description: |
                (For client usage only) Allow to create a client with it's main mobile phone
        - $ref: '#/components/schemas/NaturalPerson'
      x-stoplight:
        id: m8cvx21eg7eqc
      title: Natural Person
    LegalEntityWithBoardMember:
      allOf:
        - $ref: '#/components/schemas/LegalEntity'
        - type: object
          required:
            - boardMember
            - legalName
          properties:
            boardMember:
              $ref: '#/components/schemas/NaturalPerson'
      x-stoplight:
        id: wms8fiz3azmk1
      title: Legal Entity with a new Board Member
      description: ''
    User:
      oneOf:
        - $ref: '#/components/schemas/NaturalPerson'
        - $ref: '#/components/schemas/LegalEntity'
      discriminator:
        propertyName: legalType
        mapping:
          NATURAL_PERSON: '#/components/schemas/NaturalPerson'
          LEGAL_ENTITY: '#/components/schemas/LegalEntity'
      x-stoplight:
        id: ormyj718llrli
    UserId:
      type: string
      description: System user id
      example: USR42
      x-stoplight:
        id: hnn6js12mo2xo
    NaturalPerson:
      allOf:
        - $ref: '#/components/schemas/BaseUser'
        - type: object
          properties:
            gender:
              $ref: '#/components/schemas/Gender'
            personTitle:
              $ref: '#/components/schemas/Title'
            firstName:
              type: string
              example: John
            lastName:
              type: string
              example: Doe
            postName:
              type: string
              example: Junior
            maidenName:
              type: string
              example: Dupont
            alias:
              type: string
              example: JD
            birthDate:
              type: string
              format: date
            birthCountry:
              $ref: '#/components/schemas/Country'
            birthPlace:
              type: string
              example: Paris
            deathDate:
              type: string
              format: date
            jobTitle:
              type: string
              example: Account manager
            incomeRange:
              type: string
              example: 30 000 €
            averageSalary:
              type: string
              example: 4000 €
            cumulativeSalary:
              type: string
              example: 45 000 €
            socioProfessionalCategory:
              type: string
              example: Employee
            u2fRequired:
              type: boolean
              example: false
              description: |
                (Only available for delegate users) U2F authentication flag
            expirationDate:
              type: string
              format: date
              description: |
                (Only available for delegate users) User's expiration date
            legalCategory:
              type: string
            registrationNumber:
              type: string
            businessDirectory:
              type: string
            spouseFirstName:
              type: string
            marriedName:
              type: string
            familyName:
              type: string
            givenName:
              type: string
            notTaxResident:
              type: boolean
            birthDepartment:
              type: string
            birthCounty:
              type: string
            additionalAttributes:
              type: object
              properties:
                category:
                  type: integer
                categoryName:
                  type: string
                subcategoryId:
                  type: integer
                subcategoryName:
                  type: string
      x-stoplight:
        id: n0j6m87gvd7h1
    UserRequiredAction:
      type: object
      properties:
        id:
          type: string
          example: ADMIN_ACTION_REQUIRED
        label:
          type: string
          example: Required action for admin
      x-stoplight:
        id: miyo175khp9wq
    RequiredAction:
      type: object
      required:
        - requiredAction
      properties:
        requiredAction:
          type: string
          example: ADMIN_ACTION_REQUIRED
        reason:
          type: string
          example: Please update documents
      x-stoplight:
        id: is1qxdc063fd8
    InputId:
      type: string
      description: KYC field identifier
      example: FIELD123
      x-stoplight:
        id: hbyslj7pn67pz
    PossibleValueCollection:
      type: object
      properties:
        inputId:
          $ref: '#/components/schemas/InputId'
        userInput:
          type: string
          description: 'Current user input, to be completed'
        possibleValues:
          type: array
          description: List of values found for auto-completion
          items:
            $ref: '#/components/schemas/PossibleValue'
      x-stoplight:
        id: go78181e8jeao
    RecipientCollection:
      description: Sorted and paginated list of recipients
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of recipents
              items:
                $ref: '#/components/schemas/Recipient'
      x-stoplight:
        id: ija5tcmw8wz7c
    ExternalRecipient:
      type: object
      required:
        - id
        - name
        - iban
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/RecipientId'
            - readOnly: true
        name:
          type: string
          description: Name to visualize recipient
          example: Paul DOE
        iban:
          $ref: ./IBAN.yaml
        bic:
          $ref: ./BIC.yaml
        userId:
          allOf:
            - $ref: '#/components/schemas/UserId'
            - readOnly: true
        externalData:
          allOf:
            - $ref: '#/components/schemas/ExternalData'
            - type: object
              description: Additional information on recipient
              example:
                firstname: Paul
                lastname: Joe
                countryCode: FR
        counterparty:
          type: boolean
          description: Indicate if the Recipient is an External Counterparty for the owner
        links:
          type: array
          description: Links related to the recipient
          items:
            type: object
            properties:
              rel:
                type: string
                enum:
                  - bicLogo
              href:
                type: string
                description: URL to the content
                example: /api/Common/v1/logo/bic/SOGEFR
      x-stoplight:
        id: b3o4d5s20cs8m
    RecipientId:
      type: string
      description: Recipient System ID
      example: REC2
      x-stoplight:
        id: 9nuxtqpj0lbia
    RelationNature:
      type: string
      description: Nature of the relation
      example: BOARD_MEMBER
      x-stoplight:
        id: eyhxi1h2tvmzn
    RelationCollection:
      description: Sorted and paginated list of relations
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of relations
              items:
                $ref: '#/components/schemas/Relation'
      x-stoplight:
        id: 7dn8bh37n5f61
    RelationId:
      type: string
      description: Relation ID
      example: REL42
      x-stoplight:
        id: ntl3qteiqmp52
    RelationNatureCollection:
      description: Sorted and paginated list of relation natures
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of relation natures
              items:
                $ref: '#/components/schemas/RelationNatureItem'
      x-stoplight:
        id: ez7qbefx26ux2
    ProductId:
      type: string
      description: System Product Id.
      example: PRO123
      x-stoplight:
        id: c7qtgq6nlt21r
    ProductType:
      type: string
      description: Product type
      example: CURRENT
      enum:
        - CURRENT
        - SAVINGS
        - COMMISSIONS
        - DEDICATED
        - MONEYPOT
        - DEBIT_CARD
        - GUARANTEE_ACCOUNT
        - TECHNICAL
      x-stoplight:
        id: sa8mao3jbjk90
    ProductCollection:
      description: Sorted and paginated list of products
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of products
              items:
                $ref: '#/components/schemas/Product'
              example:
                - id: PRO123
                  name: Current Account
                  type: CURRENT
                  currency: EUR
                  profiles:
                    - 1
                - id: PRO456
                  name: Saving Account
                  type: SAVINGS
                  currency: USD
                  profiles:
                    - 1
                    - 2
                    - 4
                - id: PRO789
                  name: Moneypot
                  type: MONEYPOT
                  currency: EUR
                  profiles:
                    - 5
                    - 7
                    - 12
                - id: PRO987
                  name: Standard Card
                  type: DEBIT_CARD
                  currency: USD
                  profiles:
                    - 1
                - id: PRO512
                  name: Technical Account
                  type: TECHNICAL
                  currency: USD
                  profiles:
                    - 1
                    - 2
                    - 4
      x-stoplight:
        id: q6wb8g5gl97v7
    AccountId:
      type: string
      description: Id for an account.
      example: ACC123
      x-stoplight:
        id: f3ojrwbf1q3q1
    Currency:
      description: 'Three-letter ISO currency code, in uppercase. Read more at https://fr.wikipedia.org/wiki/ISO_4217.'
      type: string
      format: iso-4217
      example: EUR
      x-stoplight:
        id: bhf90hvt0nvo6
    AccountCollection:
      type: object
      description: Sorted and paginated list of accounts
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of accounts
              items:
                $ref: '#/components/schemas/Account'
      x-stoplight:
        id: cvf508hzzy6os
    Account:
      type: object
      x-stoplight:
        id: odu9azoub9yj9
      required:
        - id
        - userId
        - productId
        - balance
        - availableBalance
        - status
        - label
        - createdAt
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - readOnly: true
        userId:
          allOf:
            - $ref: '#/components/schemas/UserId'
            - readOnly: true
        productId:
          $ref: '#/components/schemas/ProductId'
        balance:
          allOf:
            - $ref: ./Amount.yaml
            - readOnly: true
        availableBalance:
          allOf:
            - $ref: ./Amount.yaml
            - readOnly: true
        status:
          $ref: ./AccountStatus.yaml
        label:
          type: string
          description: The account label
          example: 'Current account #123546'
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        externalId:
          $ref: ./AccountExternalId.yaml
        iban:
          $ref: ./IBAN.yaml
        bic:
          allOf:
            - $ref: ./BIC.yaml
            - readOnly: true
        externalData:
          allOf:
            - $ref: '#/components/schemas/ExternalData'
            - readOnly: true
        lastUsedAt:
          type: string
          format: date-time
          readOnly: true
        deletedAt:
          type: string
          format: date-time
          readOnly: true
    AccountBlock:
      type: string
      description: The account block status
      enum:
        - BLOCKED
        - DEBIT_BLOCKED
        - CREDIT_BLOCKED
      x-stoplight:
        id: ioldaenddnevv
    AccountExternalReferencesCollection:
      description: Collection of account external references
      properties:
        items:
          type: array
          description: collection of external references
          items:
            $ref: '#/components/schemas/AccountExternalReference'
        count:
          type: integer
          description: the total count of objects in collection
          minimum: 0
      x-stoplight:
        id: jl6qkvulnn2x0
    AccountIban:
      type: string
      description: IBAN
      example: FR1420041010050500013M02606
      x-stoplight:
        id: oj2jocqt5s0j1
    TransactionId:
      type: string
      description: System transaction id
      example: TRX123
      x-stoplight:
        id: d4v7fzrol4uv3
    TransactionExternalId:
      type: string
      description: Client custom data (external) for TransactionId
      example: EXT123456789
      x-stoplight:
        id: wsb4m46zpo7lr
    TransactionType:
      type: string
      description: Transaction type
      enum:
        - ACCOUNT_FROM_EXTERNAL
        - ACCOUNT_TO_ACCOUNT
        - ON_US_DIRECT_DEBIT
        - ACCOUNT_TO_DEDICATED
        - ACCOUNT_TO_EXTERNAL
        - ACCOUNT_TO_EXTERNAL_TRF
        - ACCOUNT_TO_TRANSIT
        - ADJUSTMENT
        - AGENT_BALANCE
        - AGENT_HISTORY
        - AGIOS_PAYMENT
        - AID_PAYMENT
        - BANK_TO_WALLET
        - BLOCK_ACCOUNT
        - BUY_DEPOSIT
        - CASHIN
        - CASHIN_TO_TRANSIT
        - CASHOUT
        - CASHOUT_FROM_EXTERNAL_TRF
        - CASHOUT_FROM_TRANSIT
        - CASHOUT_FUNDS_RESERVATION
        - CASH_TO_EXTERNAL_TRF
        - CLIENT_BALANCE
        - CLIENT_ENROLLMENT
        - CLIENT_HISTORY
        - CLIENT_VALIDATION
        - CLOSE_ACCOUNT
        - CREDIT_BLOCK_ACCOUNT
        - CREDIT_TRANSFER_IN
        - CREDIT_TRANSFER_OUT
        - DEBIT_BLOCK_ACCOUNT
        - DIRECT_DEBIT_IN
        - DIRECT_DEBIT_OUT
        - DISTRIBUTOR_POSTING
        - EXTERNAL
        - EXTERNAL_FROM_ACCOUNT
        - EXTERNAL_FROM_MONEYPOT
        - EXTERNAL_TO_ACCOUNT
        - ETM_SCREENING
        - ETM_SCREENING_SUCCESS
        - ETM_SCREENING_FAIL
        - ETM_SCREENING_FAIL_TO_SUCCESS
        - EXTERNAL_TRF_TO_ACCOUNT
        - EXTERNAL_TRF_WITHDRAW
        - FOREX
        - FUNDS_ISOLATION
        - FUNDS_RELEASE
        - MAINTENANCE_PAYMENT
        - MARK
        - ONLINE_PAYMENT
        - OPEN_ACCOUNT
        - PAYBILL_ACCOUNT
        - PAYBILL_CASH
        - PAYMENT
        - PAYMENT_FUNDS_RESERVATION
        - POSTING
        - REVERSAL
        - SALARY_DISBURSEMENT
        - SALARY_TO_ACCOUNT
        - SALARY_TO_CASH
        - SELL_DEPOSIT
        - SETTLEMENT_TO_ACCOUNT
        - SETTLEMENT_TO_BANK
        - SETTLEMENT_TO_CASH
        - STANDING_ORDER_PAYMENT
        - TRANSFER_DEPOSIT
        - TRANSIT_TO_ACCOUNT
        - UNBLOCK_ACCOUNT
        - USER_CREATION
        - WALLET_TO_BANK
        - WALLET_TO_BANK_ARCHIVE
      x-stoplight:
        id: wjltdcs3kex19
    Media:
      type: string
      default: API
      enum:
        - SMS
        - USSD
        - POS
        - WEB
        - BANK
        - IVR
        - API
        - APP
        - ONLINE
        - ALL
        - UNKNOWN
      x-stoplight:
        id: au3k0p2hou1n1
    TransactionCollection:
      description: Sorted and paginated list of transactions
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of transactions
              items:
                $ref: '#/components/schemas/Transaction'
      x-stoplight:
        id: 7cgjtp4kiem3a
    TransactionDetails:
      allOf:
        - type: object
          required:
            - accountingEntries
            - contributions
          properties:
            accountingEntries:
              type: array
              items:
                $ref: '#/components/schemas/AccountingEntry'
            contributions:
              type: array
              items:
                $ref: '#/components/schemas/Contribution'
        - $ref: '#/components/schemas/Transaction'
      x-stoplight:
        id: 98db4ghs8t3bp
    PayoutRequest:
      allOf:
        - type: object
          required:
            - amount
            - srcAccountId
            - recipientId
          properties:
            amount:
              $ref: ./Amount.yaml
            srcAccountId:
              $ref: '#/components/schemas/AccountId'
            recipientId:
              $ref: '#/components/schemas/RecipientId'
            purpose:
              type: string
              description: Purpose of external transfer (max 140 characters)
            userReference:
              type: string
              description: User reference
        - $ref: '#/components/schemas/TransactionRequest'
      x-stoplight:
        id: saxdwqw3bwg98
    PayoutTransactionDetails:
      allOf:
        - type: object
          required:
            - accountingEntries
            - contributions
          properties:
            accountingEntries:
              type: array
              items:
                $ref: '#/components/schemas/AccountingEntry'
            contributions:
              type: array
              items:
                $ref: '#/components/schemas/Contribution'
        - $ref: '#/components/schemas/PayoutTransaction'
      x-stoplight:
        id: 1kiinrsvuopir
    PayinRequest:
      allOf:
        - type: object
          required:
            - amount
            - dstAccountId
            - debtor
            - mandate
          properties:
            amount:
              $ref: ./Amount.yaml
            dstAccountId:
              $ref: '#/components/schemas/AccountId'
            debtor:
              $ref: '#/components/schemas/Debtor'
            mandate:
              $ref: '#/components/schemas/Mandate'
            purpose:
              type: string
              description: reason of distributor payin
            userReference:
              type: string
              description: user reference
            dueDate:
              type: string
              format: date-time
              description: due date of direct debit (mandatory when using SEPA)
        - $ref: '#/components/schemas/TransactionRequest'
      x-stoplight:
        id: xgyq3inm3cgvt
    DistributorPostingRequest:
      allOf:
        - type: object
          required:
            - accounting
          properties:
            accounting:
              type: array
              description: transaction accounting
              items:
                $ref: '#/components/schemas/AccountingRequest'
            operation:
              type: string
              description: Type of the operation
        - $ref: '#/components/schemas/TransactionRequest'
      x-stoplight:
        id: j3lfspuimuwgy
    UserProfileRole:
      type: string
      enum:
        - Client
        - Agent
        - Merchant
        - Company
        - DelegateUser
        - NonCustomer
      x-stoplight:
        id: 7ylutdxer86d2
    UserProfileCollection:
      description: Sorted and paginated list of profiles
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of profiles
              items:
                $ref: '#/components/schemas/dist_UserProfile'
              example:
                - id: '1'
                  name: Anonymous
                  description: Anonymous profile description
                  role: Client
                - id: '2'
                  name: French resident
                  description: French resident profile description
                  role: Client
                - id: '3'
                  name: French resident minor
                  description: French resident minor profile description
                  role: Client
      x-stoplight:
        id: gmje64l7e23sa
    GetSegmentationKycResponse:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Input'
          example:
            - id: firstName
              type: TEXT
              label: First name
              description: Enter your first name.
              required: true
              value: John
            - id: lastName
              type: TEXT
              label: Last name
              description: Enter your last name.
              required: true
              value: Doe
            - id: companyName
              type: TEXT
              label: Company name
              description: Enter your company legal name.
              required: true
              value: Acme
      x-stoplight:
        id: jezp7fkcvznuh
    DocumentId:
      type: string
      example: DOC123
      description: System document id
      x-stoplight:
        id: s58vqepafejg6
    DocumentWithContent:
      allOf:
        - $ref: '#/components/schemas/Document'
        - type: object
          required:
            - content
          properties:
            content:
              description: 'Document file content, encoded in base64 format'
              type: string
              example: R0lGODlhAQABAIAAAAUEBAAAACwAAAAAAQABAAACAkQBADs=
            contentVerso:
              description: 'Document verso, encoded in base64 format. Only usable with PROOF_OF_IDENTITY documents'
              type: string
              example: R0lGODlhAQABAIAAAAUEBAAAACwAAAAAAQABAAACAkQBADs=
      x-stoplight:
        id: r752w68ebaxuk
    DocumentCollection:
      description: Sorted and paginated list of documents
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of documents
              items:
                $ref: '#/components/schemas/Document'
      x-stoplight:
        id: cqj97wbs5ljvq
    Document:
      type: object
      required:
        - id
        - ownerId
        - status
        - type
        - links
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/DocumentId'
            - readOnly: true
        ownerId:
          allOf:
            - $ref: '#/components/schemas/UserId'
            - readOnly: true
        status:
          $ref: '#/components/schemas/DocumentStatus'
        type:
          $ref: '#/components/schemas/DocumentType'
        description:
          type: string
          description: Custom description
          example: 'Government ID user #XXX'
        uploadDate:
          type: string
          format: date-time
          readOnly: true
        lastUpdateDate:
          type: string
          format: date-time
          readOnly: true
        metadata:
          readOnly: true
          oneOf:
            - $ref: '#/components/schemas/IncorporationCertificateMetadata'
            - $ref: '#/components/schemas/PortraitMetadata'
            - $ref: '#/components/schemas/ProofOfActivityMetadata'
            - $ref: '#/components/schemas/ProofOfBankDomiciliationMetadata'
            - $ref: '#/components/schemas/ProofOfIdentityMetadata'
            - $ref: '#/components/schemas/ProofOfResidenceMetadata'
            - $ref: '#/components/schemas/ProofOfResourcesMetadata'
            - $ref: '#/components/schemas/ProofOfTaxationMetadata'
            - $ref: '#/components/schemas/SignatureMetadata'
            - $ref: '#/components/schemas/OtherMetadata'
          discriminator:
            propertyName: type
            mapping:
              PORTRAIT: '#/components/schemas/PortraitMetadata'
              INCORPORATION_CERTIFICATE: '#/components/schemas/IncorporationCertificateMetadata'
              PROOF_OF_ACTIVITY: '#/components/schemas/ProofOfActivityMetadata'
              PROOF_OF_BANK_DOMICILIATION: '#/components/schemas/ProofOfBankDomiciliationMetadata'
              PROOF_OF_IDENTITY: '#/components/schemas/ProofOfIdentityMetadata'
              PROOF_OF_RESIDENCE: '#/components/schemas/ProofOfResidenceMetadata'
              PROOF_OF_RESOURCES: '#/components/schemas/ProofOfResourcesMetadata'
              PROOF_OF_TAXATION: '#/components/schemas/ProofOfTaxationMetadata'
              SIGNATURE: '#/components/schemas/SignatureMetadata'
              OTHER_DOCUMENTS_LEGAL_ENTITY: '#/components/schemas/OtherMetadata'
              OTHER_DOCUMENTS: '#/components/schemas/OtherMetadata'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        links:
          type: array
          description: Document's content and preview urls
          items:
            type: object
            properties:
              rel:
                type: string
                enum:
                  - content
                  - preview
              href:
                type: string
                example: '/documents/{documentId}/content'
      x-stoplight:
        id: gqjnrlhrsvb2f
    AccountingEntryId:
      type: string
      description: System accounting entry id
      example: ACO4
      x-stoplight:
        id: uasksb4iudgaa
    EntryType:
      type: string
      enum:
        - TRANSFER
        - FEE
        - COMMISSION
        - TAX
        - DISCOUNT
        - INTEREST
      x-stoplight:
        id: 7r8yt616k6jb5
    AccountingEntryWithTransactionCollection:
      description: Sorted and paginated list of accounting entries
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: 'Array of accounting entries (srcAccount, dstAccount, amount)'
              items:
                $ref: '#/components/schemas/AccountingEntryWithTransaction'
      x-stoplight:
        id: 7rraz3y9sdqf2
    AccountingEntryCollection:
      description: Sorted and paginated list of accounting entries
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: 'Array of accounting entries (srcAccount, dstAccount, amount)'
              items:
                $ref: '#/components/schemas/AccountingEntry'
      x-stoplight:
        id: jy91yko1kdxjr
    AccountingExportCollection:
      type: object
      description: List of accounting exports
      properties:
        count:
          type: integer
          description: the number of elements returned in `items` array
          minimum: 0
        items:
          type: array
          description: collection of accounting exports
          items:
            $ref: '#/components/schemas/AccountingExport'
      x-stoplight:
        id: ynw1rdjxpla28
    AccountingExportRequest:
      type: object
      required:
        - startDate
        - endDate
      properties:
        accountId:
          $ref: '#/components/schemas/AccountId'
        currencyId:
          $ref: '#/components/schemas/CurrencyId'
        type:
          $ref: '#/components/schemas/EntryType'
        startDate:
          type: string
          format: date-time
          description: Start date
        endDate:
          type: string
          format: date-time
          description: End date
      x-stoplight:
        id: 4crj3llxovk9c
    AccountingExportRequestSuccess:
      type: object
      x-stoplight:
        id: 0b04dwodznw34
      properties:
        exportDate:
          type: string
          description: Export date-based identifier
          example: '20221028100830'
          readOnly: true
        links:
          type: array
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getDownloadExport` [GET] Use this URL to download export.
          example:
            - rel: getDownloadExport
              href: 'https://sandbox.skaleet.com/api/distributor/v1/accounting/export-requests/20221028100830/export'
          items:
            $ref: ./Link.yaml
          readOnly: true
    HookCollection:
      description: Sorted and paginated list of hooks
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of hooks
              items:
                $ref: '#/components/schemas/Hook'
      x-stoplight:
        id: g5rc7bbeyxhs9
    Hook:
      type: object
      required:
        - id
        - name
        - url
        - events
        - createdAt
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/HookId'
            - readOnly: true
        name:
          type: string
          description: Something used to identify hook in a list
        url:
          type: string
          example: 'https://your.domain.com/webhooks/endpoint'
          description: This url will be called (HTTP POST request) when a subscribed event occurs
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventType'
      x-stoplight:
        id: ldwsrt6gicrti
    HookId:
      type: string
      description: System hook id
      example: HOK123
      x-stoplight:
        id: e618mtvx5tlyf
    Card:
      type: object
      x-stoplight:
        id: 8ww86uw1i6jqq
      required:
        - id
        - productId
      properties:
        id:
          $ref: ./CardId.yaml
        productId:
          $ref: '#/components/schemas/ProductId'
        accountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - readOnly: true
        externalId:
          $ref: '#/components/schemas/ExternalId'
        userId:
          allOf:
            - $ref: '#/components/schemas/UserId'
            - readOnly: true
        contractId:
          type: string
          description: Card contract associated with the card. Leave empty to create a card in a new contract.
        currency:
          type: string
          description: Card and account currency
          example: EUR
          readOnly: true
        productCode:
          type: string
          description: Product Code
          example: PRD1
          readOnly: true
        productType:
          type: string
          description: Product Type
          example: DEBIT_CARD
          readOnly: true
        profileId:
          allOf:
            - $ref: '#/components/schemas/UserProfileId'
            - readOnly: true
        embossedName:
          type: string
          description: 'The card holder name, default is account''s holder name. Can be modified while status is NEW. Can only contain "A-Z", "0-9", "''", "-", " ", and ".".'
          example: JOHN DOE
        embossedReference:
          type: string
          description: 'Mandatory for anonymous cards, reference at the back of the card to link anonymous card with an account'
        pincode:
          type: string
          description: Card's pincode. Must be 4 digits if defined
          example: '1234'
          writeOnly: true
        panDisplay:
          type: string
          example: 5119 77XX XXXX 4431
          readOnly: true
        expirationDate:
          type: string
          description: Card expiration date (YYYY-MM)
          example: 2022-12
          readOnly: true
        status:
          type: string
          enum:
            - NEW
            - PENDING
            - ACTIVE
            - EXPIRED
            - REMOVED
            - BLOCKED
            - OPPOSED
          readOnly: true
        externalStatus:
          type: object
          description: 'Block, Unblock, Lost, Stolen, ...'
          properties:
            value:
              type: string
              description: 'Block, Unblock, Lost, Stolen, ...'
            creationDate:
              type: string
              format: date-time
            confirmationDate:
              type: string
              format: date-time
          readOnly: true
        limits:
          $ref: ./CardLimits.yaml
        anonymous:
          type: boolean
          description: Is the card anonymous
          readOnly: true
        features:
          $ref: '#/components/schemas/CardFeatures'
        lastUsageDate:
          type: string
          format: date-time
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        pendingManagementOperation:
          allOf:
            - $ref: ./PendingManagementOperation.yaml
            - readOnly: true
        links:
          $ref: ./CardLinksCollection.yaml
    CreateCardRequest:
      type: object
      x-stoplight:
        id: nr20ff7balk0c
      required:
        - productId
      properties:
        accountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - readOnly: true
        productId:
          $ref: '#/components/schemas/ProductId'
        externalId:
          $ref: '#/components/schemas/ExternalId'
        contractId:
          type: string
          description: Card contract associated with the card. Leave empty to create a card in a new contract.
        currency:
          type: string
          description: Card and account currency
          example: EUR
          readOnly: true
        productCode:
          type: string
          description: Product Code
          example: PRD1
          readOnly: true
        productType:
          type: string
          description: Product Type
          example: DEBIT_CARD
          readOnly: true
        profileId:
          allOf:
            - $ref: '#/components/schemas/UserProfileId'
            - readOnly: true
        embossedName:
          type: string
          description: 'The card holder name, default is account''s holder name. Can be modified while status is NEW. Can only contain "A-Z", "0-9", "''", "-", " ", and ".".'
          example: JOHN DOE
        embossedReference:
          type: string
          description: 'Mandatory for anonymous cards, reference at the back of the card to link anonymous card with an account'
        pincode:
          type: string
          description: Card's pincode. Must be 4 digits if defined
          example: '1234'
          writeOnly: true
        panDisplay:
          type: string
          example: 5119 77XX XXXX 4431
          readOnly: true
        expirationDate:
          type: string
          description: Card expiration date (YYYY-MM)
          example: 2022-12
          readOnly: true
        status:
          type: string
          enum:
            - NEW
            - PENDING
            - ACTIVE
            - EXPIRED
            - REMOVED
            - BLOCKED
            - OPPOSED
          readOnly: true
        externalStatus:
          type: object
          description: 'Block, Unblock, Lost, Stolen, ...'
          properties:
            value:
              type: string
              description: 'Block, Unblock, Lost, Stolen, ...'
            creationDate:
              type: string
              format: date-time
            confirmationDate:
              type: string
              format: date-time
          readOnly: true
        limits:
          $ref: ./CardLimits.yaml
        anonymous:
          type: boolean
          description: Is the card anonymous
          readOnly: true
        features:
          $ref: '#/components/schemas/CardFeatures'
        lastUsageDate:
          type: string
          format: date-time
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        pendingManagementOperation:
          allOf:
            - $ref: ./PendingManagementOperation.yaml
            - readOnly: true
        links:
          $ref: ./CardLinksCollection.yaml
    Collection:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
        count:
          type: integer
          description: the total count of objects in collection
          minimum: 0
        offset:
          type: integer
          description: Pagination start (from 0)
          minimum: 0
          default: 0
        limit:
          type: integer
          description: Number of results to display (default 20)
          minimum: 0
          maximum: 100
          default: 20
        sort:
          type: string
          description: Field to define sort order
          default: id
      x-stoplight:
        id: ykk7fvdj4no93
    ActivateCardRequest:
      type: object
      properties:
        code:
          type: string
          description: Optional activation code
          example: 123ABC
        reason:
          type: string
          description: Optional activation reason
          example: Customer activated card in ATM
      x-stoplight:
        id: lyp1ot8vyqttj
    Outstanding:
      type: object
      x-stoplight:
        id: r63e7qw943brp
      required:
        - id
        - maximumAmount
        - currentAmount
        - duration
      properties:
        id:
          type: string
          example: OUT1
        maximumAmount:
          $ref: '#/components/schemas/Amount'
        currentAmount:
          $ref: '#/components/schemas/Amount'
        duration:
          $ref: ./Duration.yaml
        termDay:
          type: integer
          minimum: 1
          maximum: 31
        period:
          type: object
          required:
            - startDate
            - endDate
          properties:
            startDate:
              type: string
              format: date-time
            endDate:
              type: string
              format: date-time
    CardManagementOperationId:
      type: string
      description: System Operation Id.
      example: '123'
      x-stoplight:
        id: fljffw6kh08e2
    CardManagementOperationType:
      type: string
      description: Operation type
      example: REFABRICATION
      enum:
        - REFABRICATION
        - CARD_CODE_REISSUING
        - CARD_OPPOSITION
      x-stoplight:
        id: fijhhzq93m4bm
    CardManagementOperationState:
      type: string
      description: Operation state
      example: ACCEPTED
      enum:
        - INITIATED
        - CTRL_PASSED
        - CTRL_FAILED
        - ACCEPTED
        - EXECUTED
        - SETTLED
        - EXT_ACCEPTED
        - ERR_EXECUTED
        - EXT_PENDING
        - EXT_REFUSED
        - ERR_EXT
        - CANCELED
        - IS_VALID
        - IS_NOT_VALID
        - REFUSED
        - ERR_FEES_RESERVATION
        - ERR_SETTLED
      x-stoplight:
        id: au2y22vo2lrfb
    CardManagementOperation:
      type: object
      x-stoplight:
        id: oq2n3aygbhde6
      required:
        - cardId
        - operationId
        - operationType
        - operationState
        - createdAt
        - updatedAt
      properties:
        cardId:
          $ref: ./CardId.yaml
        operationId:
          $ref: '#/components/schemas/CardManagementOperationId'
        operationType:
          $ref: '#/components/schemas/CardManagementOperationType'
        operationState:
          $ref: '#/components/schemas/CardManagementOperationState'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    IdentityId:
      type: string
      example: '1'
      description: Identity unique identifier
      x-stoplight:
        id: odw765vdhraza
    IdentityStatusArray:
      type: array
      description: List of Credential status
      items:
        $ref: '#/components/schemas/IdentityStatus'
      x-stoplight:
        id: ctyw6ibnsxmj1
    ChangeIdentityStatusActionRequest:
      type: object
      required:
        - status
        - reason
      properties:
        status:
          $ref: '#/components/schemas/IdentityStatusEnum'
        reason:
          type: string
          description: the reason of the change
      x-stoplight:
        id: 9cktftgchzgoj
    Response:
      type: object
      properties:
        success:
          type: boolean
      x-stoplight:
        id: o7p2oxgx24tt7
    ProfileId:
      type: integer
      example: 1
      description: ID of a Profile.
      x-stoplight:
        id: 72f5hexgqo57t
    DocumentRequirementCollection:
      description: Sorted list of document requirements
      type: object
      properties:
        count:
          type: integer
          description: the total count of objects in collection
          minimum: 0
        items:
          type: array
          description: collection of document requirements
          items:
            $ref: '#/components/schemas/DocumentRequirement'
      x-stoplight:
        id: 347jed4bg295j
    DocumentTypeCollection:
      description: Sorted and paginated list of Document type
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: Collection of Document type
              items:
                $ref: '#/components/schemas/DocumentType'
      x-stoplight:
        id: bnd5jm6l38o2j
    CreditTransferInstruction:
      type: object
      description: An instruction.
      required:
        - reference
        - scheme
        - status
        - type
        - amount
        - debtor
        - creditor
        - creationDate
      properties:
        reference:
          type: integer
          description: Unique identifier representing the instruction
          example: 12345
        scheme:
          type: string
          enum:
            - SCT
        type:
          type: string
          description: The type of the instruction
          enum:
            - OUTWARD_CREDIT_TRANSFER
            - INWARD_CREDIT_TRANSFER
        status:
          $ref: '#/components/schemas/OutwardState'
        amount:
          $ref: '#/components/schemas/InstructionAmount'
        debtor:
          $ref: '#/components/schemas/CreditInterbankingUser'
        creditor:
          $ref: '#/components/schemas/CreditInterbankingUser'
        creationDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        strongCustomerAuthentication:
          type: string
          default: 'NO'
        acquisitionChannel:
          $ref: '#/components/schemas/AcquisitionChannel'
        paymentService:
          $ref: '#/components/schemas/PaymentService'
        initiatingParty:
          description: |
            ⚠️ <strong>Initiating party</strong>
            When the initiating party's role is :
            <ul>
              <li><code>ADMINISTRATOR</code> : response is an array of initiating party with the maker and checker administrators</li>
              <li><code>CLIENT|DISTRIBUTOR</code> : response is an initiating party object</li>
            </ul>
          type: object
          discriminator:
            propertyName: role
            mapping:
              ADMIN: '#/components/schemas/makerCheckerInitiatingParty'
              CLIENT: '#/components/schemas/standardInitiatingParty'
              DISTRIBUTOR: '#/components/schemas/standardInitiatingParty'
          oneOf:
            - $ref: '#/components/schemas/standardInitiatingParty'
            - $ref: '#/components/schemas/makerCheckerInitiatingParty'
        settlementDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        exchangeFile:
          type: string
          description: exchange file name
          example: HCCTG9YY.HC_20210914152053
        clearingSystem:
          type: string
          description: clearing system name
          example: STP2
        refusalInformation:
          $ref: '#/components/schemas/RefusalInformation'
        relatedTransactions:
          type: array
          items:
            $ref: '#/components/schemas/RelatedTransaction'
        additionalReferences:
          $ref: '#/components/schemas/AdditionalReferences'
        distributorId:
          type: integer
        exchangeDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        operationCode:
          type: string
          example: SCT
        postingSense:
          type: string
          enum:
            - CT
            - DT
        flowSense:
          type: string
          enum:
            - E
            - R
      x-stoplight:
        id: xc3qukn2jrelz
    Instruction:
      type: object
      description: An instruction.
      required:
        - reference
        - scheme
        - mandateRelatedInformation
        - status
        - amount
        - debtor
        - creditor
        - creationDate
        - requestedCollectionDate
      properties:
        reference:
          type: integer
          description: Unique identifier representing the instruction
          example: 12345
        scheme:
          type: string
          enum:
            - CORE
            - B2B
        type:
          type: string
          description: The type of the instruction
          enum:
            - OUTWARD_DEBIT_TRANSFER
            - INWARD_DEBIT_TRANSFER
        mandateRelatedInformation:
          $ref: '#/components/schemas/Mandate'
        status:
          $ref: '#/components/schemas/OutwardState'
        amount:
          $ref: '#/components/schemas/InstructionAmount'
        debtor:
          $ref: '#/components/schemas/InterbankingUser'
        creditor:
          $ref: '#/components/schemas/InterbankingUser'
        creationDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        strongCustomerAuthentication:
          type: string
          default: 'NO'
        acquisitionChannel:
          $ref: '#/components/schemas/AcquisitionChannel'
        paymentService:
          $ref: '#/components/schemas/PaymentService'
        initiatingParty:
          description: |
            ⚠️ <strong>Initiating party</strong>
            When the initiating party's role is :
            <ul>
              <li><code>ADMINISTRATOR</code> : response is an array of initiating party with the maker and checker administrators</li>
              <li><code>CLIENT|DISTRIBUTOR</code> : response is an initiating party object</li>
            </ul>
          type: object
          discriminator:
            propertyName: role
            mapping:
              ADMIN: '#/components/schemas/makerCheckerInitiatingParty'
              CLIENT: '#/components/schemas/standardInitiatingParty'
              DISTRIBUTOR: '#/components/schemas/standardInitiatingParty'
          oneOf:
            - $ref: '#/components/schemas/standardInitiatingParty'
            - $ref: '#/components/schemas/makerCheckerInitiatingParty'
        requestedCollectionDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        settlementDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        exchangeFile:
          type: string
          description: exchange file name
          example: HCCTG9YY.HC_20210914152053
        clearingSystem:
          type: string
          description: clearing system name
          example: STP2
        refusalInformation:
          $ref: '#/components/schemas/RefusalInformation'
        relatedTransactions:
          type: array
          items:
            $ref: '#/components/schemas/RelatedTransaction'
        additionalReferences:
          $ref: '#/components/schemas/AdditionalReferences'
        distributorId:
          type: integer
      x-stoplight:
        id: w2y5b8gp5bq35
    CancellationInstruction:
      type: object
      description: A cancellation instruction.
      required:
        - reference
        - status
        - creationDate
        - refusalInformation
        - originalDirectDebitInformation
      properties:
        reference:
          type: integer
          description: Unique identifier representing the instruction
          example: 12345
        status:
          $ref: '#/components/schemas/OutwardCancellationState'
        type:
          type: string
          description: The type of the instruction
          enum:
            - OUTWARD_DEBIT_TRANSFER_CANCELLATION
        creationDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        settlementDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        refusalInformation:
          $ref: '#/components/schemas/RefusalInformation'
        relatedTransactions:
          type: array
          items:
            $ref: '#/components/schemas/RelatedTransaction'
        originalDirectDebitInformation:
          $ref: '#/components/schemas/OriginalDirectDebitInformation'
        additionalReferences:
          $ref: '#/components/schemas/AdditionalReferencesWithOriginal'
        distributorId:
          type: integer
      x-stoplight:
        id: 4011zkhat3ppg
    InstructionType:
      type: string
      description: The type of the instruction
      enum:
        - INWARD_DEBIT_TRANSFER
        - INWARD_CREDIT_TRANSFER
        - INWARD_CREDIT_CANCELLATION
        - OUTWARD_DEBIT_TRANSFER
        - OUTWARD_CREDIT_TRANSFER
        - OUTWARD_DEBIT_TRANSFER_CANCELLATION
        - OUTWARD_CREDIT_TRANSFER_CANCELLATION
      x-stoplight:
        id: aiba0ixy1eg6i
    OutwardState:
      type: string
      description: The status of the instruction
      enum:
        - INI_TO_REVIEW
        - INI_CANCELLED
        - INI_REFUSED
        - INITIATED
        - PENDING
        - INT_CHECKING
        - INT_CHECKED
        - ERR_INT_CHECK
        - POSTED
        - INT_POSTED
        - ERR_POSTING
        - ERR_INT_POSTING
        - EXT_CHECKED
        - ERR_EXT_CHECK
        - READY_TO_SEND
        - SENT
        - RECEIVED
        - SETTLED
        - INT_SETTLED
        - EXT_REFUSED
        - REFUSED
        - ERR_REFUSED
        - ERR_SETTLEMENT
        - ERR_REVERSAL
        - ERR_RECEIVED
        - ERR_SENT
        - ORIG_INTERRUPT
        - CANCELLED
        - ERR_CANCELLED
        - CONFIRMED
        - CONTROL_FAILED
        - CONTROL_PASSED
        - ERROR_HOLD
        - DEBIT_HOLD
        - ACCEPTED
        - EXT_PENDING
        - EXT_ACCEPTED
        - ERR_EXECUTED
        - EXECUTED
        - CLEARED
        - EXT_ERROR
        - FREEZED
        - ERR_FREEZED
        - ERR_EXT_PENDING
      x-stoplight:
        id: uaz8wro41fcnw
    InterbankingInstructionCollection:
      description: Sorted and paginated list of recipients
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/InterbankingInstruction'
      x-stoplight:
        id: 3mnlc70zgqrfp
    OutwardCreditTransfersCancellationInstruction:
      type: object
      description: A outward credit transfers cancellation instruction.
      required:
        - reference
        - status
        - creationDate
        - refusalInformation
        - originalCreditTransferInformation
      properties:
        reference:
          type: integer
          description: Unique identifier representing the instruction
          example: 12345
        status:
          $ref: '#/components/schemas/OutwardCancellationState'
        type:
          type: string
          description: The type of the instruction
          enum:
            - OUTWARD_CREDIT_TRANSFER_CANCELLATION
            - INWARD_CREDIT_CANCELLATION
        creationDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        settlementDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        refusalInformation:
          $ref: '#/components/schemas/RefusalInformationWithoutRefusalDate'
        relatedTransactions:
          type: array
          items:
            $ref: '#/components/schemas/RelatedTransaction'
        originalCreditTransferInformation:
          $ref: '#/components/schemas/OriginalCreditTransferInformation'
        additionalReferences:
          $ref: '#/components/schemas/AdditionalReferencesWithCancellationId'
        distributorId:
          type: integer
      x-stoplight:
        id: zj5ikj0iq6vbh
    InformationModificationAdvice:
      type: object
      properties:
        modificationId:
          type: string
          example: ZZTOYJY1NG6HBBH19
        creationDate:
          type: string
          example: '2012-11-17T04:47:11+01:00'
        instructingParty:
          type: string
          example: BANQFRPPXXX
        instructedParty:
          type: string
          example: FR7612345000010009513574632
        originalIBAN:
          type: string
          example: FR7630000123450001234567890
        originalBIC:
          type: string
          example: BQUEFRPPXXX
        updatedIBAN:
          type: string
          example: FR7630000987650000987654321
        updatedBIC:
          type: string
          example: BANKFRPPXXX
        id:
          type: string
          example: '95'
      x-stoplight:
        id: pbel0mcstqmvl
    TransactionAttachmentId:
      type: string
      description: Transaction attachment unique identifier
      readOnly: true
      example: TRXATT123
      x-stoplight:
        id: 7h1xoqvwi3joc
    UserProfile:
      description: User habilitation profile
      type: object
      required:
        - id
        - name
        - description
        - role
      properties:
        id:
          $ref: '#/components/schemas/ReadOnlyUserProfileId'
        name:
          type: string
          description: The user Profile name
          example: User Profile 42
        description:
          type: string
          description: The user Profile description
          example: User Profile 42 description
        role:
          $ref: '#/components/schemas/IdentityRole'
        ownerId:
          $ref: '#/components/schemas/WriteOnlyIdentityId'
        owner:
          $ref: '#/components/schemas/UserProfileOwner'
      x-stoplight:
        id: pyqlyiuirobp1
    InvalidRequestError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 0
            message: Invalid value for parameter "parameter_name"
      x-stoplight:
        id: 2vd21jo9p0cxw
    ForbiddenError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 12345
            message: Client is not allowed to make this action
      x-stoplight:
        id: ywwpr63a15blo
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: The error numeric code
        message:
          type: string
          description: The error's localized message
        hint:
          type: string
          description: 'On certain types of error, a localized message will be sent to indicate a way to solve the error'
      example:
        code: 1337
        message: Something went wrong because requirement X was not met.
        hint: Field X does not match the field requirements
      x-stoplight:
        id: 7hw44ujsdwgfs
    RefreshToken:
      type: string
      description: Refresh token that can be used to refresh this Access Token
      example: |
        def50200d8b0199b7c7362bade48fb6d2e52fed4ef6d4270bbb9260365c17392ad009c1d1e1a8c7bf760281df2e1eeb176ad83332bc00eba386bb67fb6a47b6fb225251f23e8be728727d075288b84c2f54823d6c526b7746d1089918f8fbbada4e14d18df9a9f58c0386aa09bff54803218777e337570699e7b07859096897658d90f9b646029b0c4e054f007766716f25744b2195c05552ed299733a2444fd4461c7d74f88f6dae3842977f3880670f9847beba5d96045b4f21e9d642248b87a213ef3eb5bfb62a743ae457fb8c6e711a733e9f06680f9448e1d57c0ba7fb72dc92f83c815ca79fc0ff9fccd9d8a4bb5bbbd557f0af1643fcaa5564794efa2e9804d2e068ffdfcfe9a03573103a1e3b8ffe51fdaf161d53e677488a9a254f22a5a5ca54099697b83fcf1769130d408094a104740cea7942f7b39ea3a85de1accdb36ac2f0ae0c765ee98f5e5eff28e181a30ee1be198a08723d82c1b9823b71018baae1fb4cfa16589b986cef219e88367eb565a38131a02b2b91cef8c4b57e90412d212c532e4a900797b0ebca5dba43bb40a8bb5ea0d5c909c113b730cbfbc50138699c546a379a62a84fdfba297b84c1c30191c20f9378e7d3b27f9697094a314db2205c2809a74b5c18144f58ec9be66a1c8bd7ca9eb06f338d119538582f29aef67ecc17e8d7e08ea5da39975c3628446283d1f3d5a9fba86c98a8466394065db64aff2e6caaf3ce39dd5d50a6fc75fcb123f09fe42121097f2f72e67d8faaf27b714f712e358fdb8da306615c70a1fbbc73a8df96978785acce47bf76256d338e5bf0078c83f4d81b991e050bc1c65a501cf2fefb793fdffeb18580147170c7894e559ef422d8782344e866c909fd578539588707509b6431773ae227a506d9bee11a7fb50b061fc1534c9e345e6eee5d25b00452f147c5b7f308b412100eae597114966f3aa68837ca24e85168655dddcd3313f5cd7b563429e15a5bd9e383acd7ae22515ffb2d87d6f7a03e08590a4937f6cae3510d39debdd16096215f9241bf5ff7745a6afbb959cb82ec3615962c36c
      x-stoplight:
        id: deukeyzl4k4ot
    WrappedUnauthorizedError:
      type: object
      required:
        - error
      properties:
        error:
          $ref: '#/components/schemas/UnauthorizedError'
      x-stoplight:
        id: 87426vy5y0kiz
    WrappedForbiddenError:
      type: object
      required:
        - error
      properties:
        error:
          $ref: '#/components/schemas/ForbiddenError'
      x-stoplight:
        id: tyr96ue3hi2em
    ConflictError:
      oneOf:
        - $ref: '#/components/schemas/Error'
        - $ref: '#/components/schemas/EmbeddedError'
      x-stoplight:
        id: 2uuqgolnh2sla
    SpendingDetailsList:
      type: array
      description: List of spending details
      items:
        $ref: '#/components/schemas/SpendingDetail'
      x-stoplight:
        id: dtizn664bv5bu
    NotFoundError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 0
            message: Resource has not been found
      x-stoplight:
        id: 7nofocw3zf7fy
    TransactionAttachmentsList:
      type: array
      description: List of transaction's attached documents
      items:
        $ref: '#/components/schemas/TransactionAttachment'
      x-stoplight:
        id: 5orn7u841bzoe
    UnauthorizedError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 9
            message: You don't have access to this ressource
      x-stoplight:
        id: 8z5n1ueet6p8b
    OAuth2PasswordAccessTokenRequest:
      allOf:
        - $ref: '#/components/schemas/OAuth2AccessTokenRequestWithScope'
        - type: object
          required:
            - client_secret
            - username
            - password
          properties:
            username:
              type: string
              description: the ressource owner login or username
            password:
              type: string
              description: the ressource owner password associated to the username
      x-stoplight:
        id: dn9ccr50kqit7
    OAuth2AuthCodeAccessTokenRequest:
      allOf:
        - $ref: '#/components/schemas/BaseOAuth2AccessTokenRequest'
        - type: object
          required:
            - code
            - redirect_uri
          properties:
            redirect_uri:
              type: string
              format: uri
              description: one registered redirect URI for the used client_id
              example: 'https://mywebsite.com/oauth-redirect'
            code:
              type: string
              description: the Authorization Code
            code_verifier:
              type: string
              description: The code verifier matching the challenge transmitted on authorization initiation
      x-stoplight:
        id: 01swmoephbtls
    OAuth2ClientCredentialsAccessTokenRequest:
      allOf:
        - $ref: '#/components/schemas/OAuth2AccessTokenRequestWithScope'
        - type: object
          required:
            - client_id
            - client_secret
      x-stoplight:
        id: q0vkxf3r87plf
    Link:
      type: object
      readOnly: true
      required:
        - rel
        - href
      properties:
        rel:
          type: string
          description: Link relation
        href:
          type: string
          format: uri
          description: Location URI
      x-stoplight:
        id: 3nhymp38vm3r4
    LegalEntity:
      allOf:
        - $ref: '#/components/schemas/BaseUser'
        - type: object
          properties:
            brandName:
              type: string
              example: My Business
            legalForm:
              type: string
              example: Inc
            legalName:
              type: string
              example: My Business Inc
            closureDate:
              type: string
              format: date
            webSite:
              type: string
              example: www.my-business.com
            shareCapital:
              type: string
              example: 10 000 €
            annualTurnover:
              type: string
              example: 100 000 €
            netIncomeRange:
              type: string
              example: 10 000 €
            registrationDate:
              type: string
              format: date
            registrationPlace:
              type: string
              example: Paris
            registrationNumber:
              type: string
              example: RCS123546
            registrationCountry:
              $ref: '#/components/schemas/Country'
            numberOfEmployees:
              type: string
              example: '50'
            legalCategory:
              type: string
            businessDirectory:
              type: string
      x-stoplight:
        id: jmam7mj1je1v1
    BaseUser:
      type: object
      properties:
        legalType:
          $ref: '#/components/schemas/LegalType'
        profileId:
          $ref: '#/components/schemas/UserProfileId'
        id:
          allOf:
            - $ref: '#/components/schemas/UserId'
            - readOnly: true
        externalId:
          $ref: '#/components/schemas/UserExternalId'
        role:
          allOf:
            - $ref: '#/components/schemas/Role'
            - readOnly: true
        userPin:
          type: string
          example: '1337'
          writeOnly: true
          description: |
            If specified, allow user to be created with this specific pin code.
            Agent and merchant will have to change their pin on first usage
        status:
          allOf:
            - $ref: '#/components/schemas/UserStatus'
            - readOnly: true
        distributorId:
          type: string
          description: Distributor Id
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        login:
          type: string
          example: myLogin
          readOnly: true
        email:
          type: string
          format: email
          example: my.email@example.com
        lang:
          $ref: '#/components/schemas/Lang'
        address:
          $ref: '#/components/schemas/UserAddress'
        taxAddress:
          $ref: '#/components/schemas/UserAddress'
        idNumber:
          type: string
          example: AZE123456789
        nationality:
          type: string
          example: French
        otherNationality:
          type: string
          example: German
        contactPhone:
          $ref: '#/components/schemas/Phone'
        activitySectorCode:
          type: string
          example: ACTIVITY12345
        specialAttributes:
          type: object
          description: |
            An object containing values submitted / modified by the user. List available fields and format at GET /users/kyc
          example:
            icsCode: ICS123456
            building: D2
            mainBusiness: Car seller
      x-stoplight:
        id: i5xteid8yrz0s
    Gender:
      type: string
      enum:
        - MALE
        - FEMALE
        - NONE
      x-stoplight:
        id: yc9rxb87vawfe
    Title:
      type: string
      enum:
        - MR
        - MS
        - MRS
      x-stoplight:
        id: qxf7r44sueuy7
    Country:
      description: Two letter iso code of associated country (2 letters code)
      type: string
      minLength: 2
      maxLength: 2
      example: FR
      x-stoplight:
        id: 3l80r9tiy51bo
    PossibleValue:
      type: object
      required:
        - value
        - label
      properties:
        value:
          type: string
          description: The possible value
          example: Value123
        label:
          type: string
          description: The value translation
      x-stoplight:
        id: secg6i73wu3x6
    Recipient:
      type: object
      required:
        - id
        - name
        - iban
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/RecipientId'
            - readOnly: true
        name:
          type: string
          description: Name to visualize recipient
          example: Paul DOE
        iban:
          $ref: ./IBAN.yaml
        bic:
          $ref: ./BIC.yaml
        userId:
          allOf:
            - $ref: '#/components/schemas/UserId'
            - readOnly: true
        phone:
          $ref: '#/components/schemas/Phone'
        externalData:
          allOf:
            - $ref: '#/components/schemas/ExternalData'
            - type: object
              description: Additional information on recipient
              example:
                firstname: Paul
                lastname: Joe
                countryCode: FR
        counterparty:
          type: boolean
          description: Indicate if the Recipient is an External Counterparty for the owner
        links:
          type: array
          description: Links related to the recipient
          items:
            type: object
            properties:
              rel:
                type: string
                enum:
                  - bicLogo
              href:
                type: string
                description: URL to the content
                example: /api/Common/v1/logo/bic/SOGEFR
      x-stoplight:
        id: yrc44or1aj50i
    ExternalData:
      type: object
      description: Set of key-value pairs that you can attach to an object. This can be useful for storing your additional information about the object in a structured format.
      x-stoplight:
        id: rqumkbgu43aen
    Relation:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RelationId'
        nature:
          $ref: '#/components/schemas/RelationNature'
        associatedUser:
          type: object
          properties:
            id:
              type: string
              description: Id of the associated user
              example: string
            legalType:
              $ref: '#/components/schemas/LegalType'
            name:
              type: string
              description: Name of the user in relation
              example: Jane Doe
      x-stoplight:
        id: 8d77s3xwz1z7i
    RelationNatureItem:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RelationNature'
        label:
          type: string
          description: Relation nature's label
          example: Board Member
        relationLabel:
          type: string
          description: Relation nature's target label
          example: is board member of
      x-stoplight:
        id: yn1c8nd7fr62s
    Product:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/ProductId'
        name:
          type: string
          example: Standard current account
        type:
          allOf:
            - $ref: '#/components/schemas/ProductType'
            - readOnly: true
        currency:
          type: string
          readOnly: true
          description: Product currency
          example: EUR
        profiles:
          description: List of profile ID
          type: array
          items:
            type: integer
          example:
            - 1
            - 2
            - 5
      x-stoplight:
        id: pmw7kxiik3rql
    Amount:
      type: object
      required:
        - value
        - currency
      properties:
        value:
          description: Amount without separator and symbol
          type: integer
          example: 1337
        currency:
          $ref: '#/components/schemas/Currency'
      x-stoplight:
        id: 0xr9796k8hh9v
    AccountExternalReference:
      description: An account external reference
      properties:
        type:
          type: string
          description: External reference type
        reference:
          type: string
          description: External reference value
      x-stoplight:
        id: rlcwtg2ckbkq6
    Transaction:
      type: object
      x-stoplight:
        id: v97z43salv73t
      required:
        - id
        - amount
        - type
        - description
        - media
        - createdAt
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/TransactionId'
            - readOnly: true
        amount:
          $ref: ./Amount.yaml
        type:
          deprecated: true
          allOf:
            - $ref: '#/components/schemas/TransactionType'
            - readOnly: true
        localizedType:
          type: object
          properties:
            value:
              allOf:
                - $ref: '#/components/schemas/TransactionType'
                - readOnly: true
            label:
              type: string
              description: Transaction type label translated
          readOnly: true
        description:
          type: string
          description: Human readable text about the transaction
          readOnly: true
        media:
          allOf:
            - $ref: '#/components/schemas/Media'
            - readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        externalData:
          $ref: '#/components/schemas/ExternalData'
        paymentService:
          type: string
          enum:
            - SINGLE
            - BULK
        systemReference:
          type: string
          description: Reference of the system initiating the transaction
        accountingCode:
          type: string
          description: Accounting code from the point of view of the calling system
        cancelledTransactionId:
          allOf:
            - $ref: '#/components/schemas/TransactionId'
            - type: string
              readOnly: true
              description: Original transaction ID related to this Transaction refund
        externalId:
          $ref: '#/components/schemas/TransactionExternalId'
        processId:
          $ref: '#/components/schemas/TransactionBusinessProcessId'
        qualified:
          type: boolean
          example: false
          description: Whether the transaction's amount is fully qualified or not. Is only returned if the user has the right to access spendings
        locked:
          type: boolean
          description: 'If true, spendings details of this transaction can no longer be updated'
        justified:
          type: boolean
          example: false
          description: Whether the transaction has at least one attachment to justify it. Is only returned if the user has the right to access transaction attachments
        links:
          type: array
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getSpendings` [GET] Get existing spendings of this transaction. (Only present if at least one spending detail has been created)
          example:
            - rel: getSpendings
              href: 'https://sandbox.skaleet.com/api/distributor/v1/transactions/42/spendings'
          items:
            $ref: ./Link.yaml
          readOnly: true
        businessProcessId:
          description: Id of the business process associated with the transaction
          example: 1234
          type: integer
    AccountingEntry:
      type: object
      x-stoplight:
        id: i4rmh07u5x7g9
      required:
        - id
        - accountId
        - transactionId
        - description
        - amount
        - balance
        - type
      properties:
        id:
          $ref: '#/components/schemas/AccountingEntryId'
        accountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - readOnly: true
        transactionId:
          allOf:
            - $ref: '#/components/schemas/TransactionId'
            - readOnly: true
        description:
          type: string
          example: Transfer of 13.37 € from John Doe to Jane Dae
        amount:
          $ref: ./Amount.yaml
        balance:
          allOf:
            - $ref: ./Amount.yaml
            - readOnly: true
        availableBalance:
          allOf:
            - $ref: ./Amount.yaml
            - readOnly: true
        type:
          $ref: '#/components/schemas/EntryType'
        externalId:
          $ref: '#/components/schemas/TransactionExternalId'
        createdAt:
          type: string
          format: date-time
          readOnly: true
        accountOwner:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/UserId'
            name:
              $ref: '#/components/schemas/UserName'
            externalId:
              $ref: '#/components/schemas/UserExternalId'
            userRole:
              $ref: '#/components/schemas/Role'
    Contribution:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/ContributionId'
        role:
          type: string
          enum:
            - INITIATOR
            - RECIPIENT
            - INTERMEDIARY
            - ACCOUNT_OWNER
        device:
          type: string
          example: '12345'
        contributor:
          $ref: '#/components/schemas/UserId'
        name:
          $ref: '#/components/schemas/UserName'
        externalId:
          $ref: '#/components/schemas/UserExternalId'
        userRole:
          $ref: '#/components/schemas/Role'
        employee:
          type: string
          example: '12345'
      x-stoplight:
        id: 1t06n6jyi8s70
    TransactionRequest:
      type: object
      required:
        - mode
      properties:
        mode:
          $ref: '#/components/schemas/TransactionMode'
        externalId:
          $ref: '#/components/schemas/TransactionExternalId'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        paymentService:
          type: string
          enum:
            - SINGLE
            - BULK
        systemReference:
          type: string
          description: Reference of the system initiating the transaction
        accountingCode:
          type: string
          description: Accounting code from the point of view of the calling system
      x-stoplight:
        id: geoiiogwrho6c
    PayoutTransaction:
      type: object
      x-stoplight:
        id: mzl8t0mhp95lr
      required:
        - amount
        - type
        - description
        - media
        - createdAt
      properties:
        id:
          type: string
          example: TRX123
          description: System transaction id
          readOnly: true
        amount:
          $ref: ./Amount.yaml
        type:
          deprecated: true
          allOf:
            - $ref: '#/components/schemas/TransactionType'
            - readOnly: true
        localizedType:
          type: object
          properties:
            value:
              allOf:
                - $ref: '#/components/schemas/TransactionType'
                - readOnly: true
            label:
              type: string
              description: Transaction type label translated
          readOnly: true
        description:
          type: string
          description: Human readable text about the transaction
          readOnly: true
        media:
          allOf:
            - $ref: '#/components/schemas/Media'
            - readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        externalData:
          $ref: '#/components/schemas/ExternalData'
        paymentService:
          type: string
          enum:
            - SINGLE
            - BULK
        systemReference:
          type: string
          description: Reference of the system initiating the transaction
        accountingCode:
          type: string
          description: Accounting code from the point of view of the calling system
        cancelledTransactionId:
          type: string
          example: TRX123
          description: Original transaction ID related to this Transaction refund
          readOnly: true
        externalId:
          $ref: '#/components/schemas/TransactionExternalId'
        processId:
          $ref: '#/components/schemas/TransactionBusinessProcessId'
    Debtor:
      type: object
      required:
        - iban
        - name
      properties:
        iban:
          $ref: ./IBAN.yaml
        bic:
          $ref: ./BIC.yaml
        name:
          type: string
          description: Debtor's name
          example: John Doe
        country:
          $ref: ./Country.yaml
        address:
          type: string
          description: Debtor's address
          example: 88 rue du dôme
          deprecated: true
        zipCode:
          type: string
          description: Debtor's ZIP code
          example: '92100'
          deprecated: true
        postalAddress:
          type: object
          oneOf:
            - properties:
                addressLines:
                  type: string
                country:
                  type: string
            - properties:
                structuredAddress:
                  type: object
                  properties:
                    streetNumber:
                      type: string
                    streetName:
                      type: string
                    buildingName:
                      type: string
                    postalCode:
                      type: string
                    townName:
                      type: string
                country:
                  type: string
      x-stoplight:
        id: 9u3ac149933eq
    Mandate:
      type: object
      x-stoplight:
        id: mpj1r8j2m5r6p
      required:
        - reference
        - creditorRef
        - signatureDate
        - type
        - recurrent
      properties:
        reference:
          type: string
        creditorRef:
          type: string
        signatureDate:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - CORE
            - B2B
          description: When using SEPA this is the SDD Scheme field
        recurrent:
          type: boolean
          example: false
        originalMandate:
          type: object
          description: To be used if mandate information have been updated since last direct debit (mandatory when using SEPA)
          properties:
            reference:
              type: string
            creditorRef:
              type: string
            type:
              type: string
            debtorIban:
              $ref: ./IBAN.yaml
            debtorBic:
              $ref: ./BIC.yaml
            debtorName:
              type: string
            debtorCountry:
              $ref: ./Country.yaml
            debtorAddress:
              type: string
              description: Debtor's address
              example: 88 rue du dôme
            debtorZipCode:
              type: string
              description: Debtor's ZIP code
              example: '92100'
    AccountingRequest:
      type: object
      x-stoplight:
        id: smr2wlthdy94y
      required:
        - srcAccount
        - dstAccount
        - amount
      properties:
        srcAccount:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: source Account ID to be debited
        dstAccount:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: destination Account ID to be credited
        amount:
          $ref: ./Amount.yaml
        type:
          $ref: '#/components/schemas/EntryType'
    dist_UserProfile:
      type: object
      x-stoplight:
        id: 8rqyzx7zsg20e
      properties:
        id:
          $ref: '#/components/schemas/UserProfileId'
        name:
          type: string
          description: The user Profile name
          example: Standard Client
        description:
          type: string
          description: The user Profile description
          example: Standard Client description
        role:
          $ref: '#/components/schemas/UserProfileRole'
        owner:
          $ref: ./UserProfileOwner.yaml
    DocumentStatus:
      type: string
      readOnly: true
      enum:
        - NEW
        - PENDING
        - VALIDATED
        - REFUSED
        - UNKNOWN
      x-stoplight:
        id: s7cmthn3l0aor
    DocumentType:
      type: string
      enum:
        - PORTRAIT
        - SUBSCRIPTION_FORM
        - SIGNATURE
        - PROOF_OF_RESIDENCE
        - PROOF_OF_BANK_DOMICILIATION
        - PROOF_OF_TAXATION
        - PROOF_OF_ACTIVITY
        - PROOF_OF_RESOURCES
        - PROOF_OF_STATUS
        - PHOTO
        - PROOF_OF_IDENTITY
        - OTHER_DOCUMENTS
        - INCORPORATION_CERTIFICATE
        - OTHER_DOCUMENTS_LEGAL_ENTITY
      x-stoplight:
        id: tygr9u3f0s2tn
    IncorporationCertificateMetadata:
      type: object
      description: Document metadatas for INCORPORATION_CERTIFICATE documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        country:
          type: string
        deliveryDate:
          type: string
          format: date
        denomination:
          type: string
        legalForm:
          type: string
        numberOfEmployees:
          type: string
        registrationDate:
          type: string
          format: date
        registrationNumber:
          type: string
        registrationPlace:
          type: string
        shareCapital:
          type: string
        zipcode:
          type: string
      x-stoplight:
        id: cawk4ud04853p
    PortraitMetadata:
      type: object
      description: Document metadatas for PORTRAIT documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        identityPhotoMatch:
          type: string
      x-stoplight:
        id: otseyasa52gid
    ProofOfActivityMetadata:
      type: object
      description: Document metadatas for PROOF_OF_ACTIVITY documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        grossSalary:
          type: string
        lastName:
          type: string
        netSalary:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
      x-stoplight:
        id: cuk86xy53zodw
    ProofOfBankDomiciliationMetadata:
      type: object
      description: Document metadatas for PROOF_OF_BANK_DOMICILIATION documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        bic:
          type: string
        firstName:
          type: string
        iban:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
      x-stoplight:
        id: kbez332ck211x
    ProofOfIdentityMetadata:
      type: object
      description: Document metadatas for PROOF_OF_IDENTITY documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        addressLine1:
          type: string
        addressLine2:
          type: string
        birthDate:
          type: string
          format: date
        birthPlace:
          type: string
        city:
          type: string
        country:
          type: string
        deliveryDate:
          type: string
          format: date
        expirationDate:
          type: string
          format: date
        firstName:
          type: string
        idNumber:
          type: string
        issuingAuthority:
          type: string
        issuingCountry:
          type: string
        lastName:
          type: string
        mrz:
          type: string
        nationality:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        zipcode:
          type: string
      x-stoplight:
        id: 5wjtv85jtpd5y
    ProofOfResidenceMetadata:
      type: object
      description: Document metadatas for PROOF_OF_RESIDENCE documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        contractNumber:
          type: string
        contractType:
          type: string
        country:
          type: string
        emissionDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        zipcode:
          type: string
      x-stoplight:
        id: pv3w1gmu9jbns
    ProofOfResourcesMetadata:
      type: object
      description: Document metadatas for PROOF_OF_RESOURCES documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        resourceAmount:
          type: string
      x-stoplight:
        id: m44svcsro7rp9
    ProofOfTaxationMetadata:
      type: object
      description: Document metadatas for PROOF_OF_TAXATION documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        taxAmount:
          type: string
        taxNumber:
          type: string
      x-stoplight:
        id: dob5lw8c0vxc2
    SignatureMetadata:
      type: object
      description: Document metadatas for SIGNATURE documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        identitySignatureMatch:
          type: string
      x-stoplight:
        id: auntqjw5xivye
    OtherMetadata:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
      x-stoplight:
        id: dl63ivolx02df
    AccountingEntryWithTransaction:
      allOf:
        - type: object
          required:
            - transaction
          properties:
            transaction:
              $ref: '#/components/schemas/Transaction'
        - $ref: '#/components/schemas/AccountingEntry'
      x-stoplight:
        id: 5bl8ogfhmeehn
    AccountingExport:
      type: object
      required:
        - exportDate
        - status
        - createdAt
      properties:
        exportDate:
          type: string
          description: Export date-based identifier
          example: '20221028100830'
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
          example: '2022-10-28T10:08:30Z'
        status:
          allOf:
            - $ref: '#/components/schemas/AccountingExportStatus'
      x-stoplight:
        id: 70xd0sju8gw0g
    CurrencyId:
      type: string
      description: Id for a currency
      example: '978'
      x-stoplight:
        id: srphbvwe764ng
    EventType:
      type: string
      enum:
        - card.new
        - card.new.in_progress
        - card.deactivation.asked
        - card.external_status.error
        - card.feature.change_requested
        - card.features.to.update
        - card.limits.to.update
        - card.management_operation.accepted
        - card.management_operation.err_settled
        - card.management_operation.refused
        - card.management_operation.settled
        - card_refabricate.abuse
        - card_refabricate.damaged
        - card_refabricate
        - card_refabricate.expired
        - card_refabricate.lost
        - card_refabricate.opposed
        - card_refabricate.stolen
        - card.status.activated
        - card.status.activation_requested
        - card.status.blocked
        - card.status.expired
        - card.status.opposed
        - card.status.pending
        - card.status.removed
        - card.status.unblocked
        - account.balance.became_negative
        - account.credited
        - account.debited
        - account.status.blocked
        - account.status.closed
        - account.status.creditBlocked
        - account.status.debitBlocked
        - account.status.opened
        - account.status.unblocked
        - client.status.blocked
        - client.status.closed
        - client.status.opened
        - client.status.pending
        - client.update
        - identity.document.new
        - identity.document.rotated
        - identity.document.status_updated
        - identity.document.verification_requested
        - identity.kyc.updated
        - transaction.new
        - transaction.paybill.new
        - identity.blocked
        - identity.closed
        - identity.created
        - identity.information_update.required
        - identity.opened
        - identity.unblocked
        - identity.onboarding.submitted
      x-stoplight:
        id: cgt3dk9hnmav5
    ExternalId:
      type: string
      description: External id (from the calling system)
      example: EXT123456789
      x-stoplight:
        id: qu7h4vj6xwf9i
    CardFeatures:
      type: object
      properties:
        anonymous:
          type: boolean
          default: false
          readOnly: true
          deprecated: true
          description: Is the card anonymous
        cash:
          type: boolean
          example: true
          description: Are cash operation available ?
        foreign:
          type: boolean
          example: false
          description: Is foreign payment available ?
        online:
          type: boolean
          example: true
          description: Is online payment available ?
        nfc:
          type: boolean
          example: false
          description: Is NFC payment allowed ?
        paymentAuthorized:
          type: boolean
          example: false
          description: Is payment authorized ?
        foreignWithdrawal:
          type: boolean
          example: true
          description: Is foreign withdrawal allowed ?
        foreignOnlinePayment:
          type: boolean
          example: true
          description: Is foreign online payment allowed ?
        foreignAll:
          type: boolean
          example: true
          description: Are foreign payment and withdrawal allowed ?
          readOnly: true
        eurWithdrawal:
          type: boolean
          example: true
          description: Is withdrawal allowed in the European zone ?
          readOnly: true
        eurPayment:
          type: boolean
          example: true
          description: Is payment allowed in the European zone ?
          readOnly: true
      x-stoplight:
        id: a3sc1bu4a5sd1
    Duration:
      type: object
      properties:
        value:
          type: integer
          example: 42
        unit:
          $ref: '#/components/schemas/Periodicity'
      x-stoplight:
        id: iqn0gpg7mpidv
    IdentityStatus:
      type: object
      description: Identity's operational status
      required:
        - id
        - label
      properties:
        id:
          $ref: '#/components/schemas/IdentityStatusEnum'
        label:
          type: string
          description: |
            a displayable label translated in the platform default language or the first available language in `Accept-Language` HTTP header
      x-stoplight:
        id: fjokt72nz5waq
    IdentityStatusEnum:
      type: string
      enum:
        - INITIATED
        - PENDING
        - OPENED
        - BLOCKED
        - CLOSED
        - INIBLOCKED
      x-stoplight:
        id: bge5ev52wuc4f
    DocumentRequirement:
      type: object
      description: A document KYC requirements
      required:
        - type
        - required
        - label
        - minimumRequiredStatus
      properties:
        id:
          type: integer
          description: 'Document requirement identifier. Can be null in case document is not required, but type will still be provided.'
        type:
          $ref: '#/components/schemas/DocumentType'
        required:
          type: boolean
          description: Is this document required for KYC or not
        label:
          type: string
          description: Document description
        minimumRequiredStatus:
          $ref: '#/components/schemas/DocumentStatus'
      x-stoplight:
        id: 60ymirabuafz5
    InstructionAmount:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/AmountValue'
        currency:
          $ref: '#/components/schemas/Currency'
      x-stoplight:
        id: y7w2fhdvo7n0p
    CreditInterbankingUser:
      allOf:
        - $ref: '#/components/schemas/InterbankingUser'
      x-stoplight:
        id: wzgcll0lr12tg
    AcquisitionChannel:
      type: string
      description: Channel of acquisition
      enum:
        - API
        - JOB
        - WEBADMIN
      x-stoplight:
        id: oxaw4d9v2epj7
    PaymentService:
      type: string
      description: Payment service
      enum:
        - BULK
        - SINGLE
      x-stoplight:
        id: 2ibyoalotqac6
    makerCheckerInitiatingParty:
      type: object
      properties:
        type:
          type: string
          enum:
            - Maker
            - Checker
      allOf:
        - $ref: '#/components/schemas/standardInitiatingParty'
      x-stoplight:
        id: afvm306hbyz55
    standardInitiatingParty:
      type: object
      description: Initiating party
      properties:
        role:
          type: string
          enum:
            - CLIENT
            - DISTRIBUTOR
            - ADMINISTRATOR
        id:
          type: string
          example: '42'
          description: Initiating party's user id
        name:
          type: string
          example: John Doe
          description: Name of the initiating party
      example:
        id: '1'
        name: Doe1
        role: ADMINISTRATOR
      x-stoplight:
        id: k9bgy54tyogze
    RefusalInformation:
      type: object
      properties:
        reason:
          type: object
          properties:
            code:
              type: string
              example: AC01
            message:
              type: string
              example: Blocked account
        refusalDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        originator:
          type: object
          properties:
            type:
              type: string
              enum:
                - SYSTEM
                - ADMIN
                - CUSTOMER
            value:
              type: string
              example: BNPAFRPPXXX
      x-stoplight:
        id: 0m95wm4ggx647
    RelatedTransaction:
      type: object
      properties:
        reference:
          type: string
          example: '3451'
        type:
          type: string
          example: OUTWARD_DIRECT_DEBIT
        date:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
      x-stoplight:
        id: yogz2zd6ctxc2
    AdditionalReferences:
      type: object
      properties:
        instructionId:
          type: string
          example: RefXX12
        endToEndId:
          type: string
          example: Pre1656
        remittanceInfo:
          type: string
          example: Prélèvement mensuel Free
        purpose:
          type: string
          example: SALA
      x-stoplight:
        id: 38mh3yhwkw3z2
    InterbankingUser:
      type: object
      required:
        - iban
        - bic
        - name
      properties:
        clientId:
          type: string
          example: '42'
        iban:
          type: string
          example: FR761001100656789078936743
        bic:
          type: string
          example: CMCICFRPXXX
        name:
          type: string
          example: John Doe
        address:
          $ref: '#/components/schemas/Address'
      x-stoplight:
        id: dg7ucglgx26bz
    OutwardCancellationState:
      type: string
      enum:
        - INITIATED
        - PENDING
        - INT_CHECKED
        - EXT_CHECKED
        - READY_TO_SEND
        - SENT
        - RECEIVED
        - ORIG_INTERRUPT
        - SETTLED
        - INI_TO_REVIEW
        - INI_CANCELLED
        - INI_REFUSED
        - ERR_EXT_CHECK
        - ERR_INT_CHECK
        - ERR_RECEIVED
        - ERR_SENT
        - ERR_POSTING
        - ERR_REVERSAL
      x-stoplight:
        id: quumy41io9j5d
    OriginalDirectDebitInformation:
      type: object
      description: An instruction.
      required:
        - reference
        - scheme
        - mandateRelatedInformation
        - amount
        - debtor
        - creditor
      properties:
        reference:
          type: integer
          description: Unique identifier representing the instruction
          example: 12345
        scheme:
          type: string
          enum:
            - CORE
            - B2B
        mandateRelatedInformation:
          $ref: '#/components/schemas/Mandate'
        amount:
          $ref: '#/components/schemas/InstructionAmount'
        debtor:
          $ref: '#/components/schemas/InterbankingUser'
        creditor:
          $ref: '#/components/schemas/InterbankingUser'
        settlementDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
      x-stoplight:
        id: 04eqzd9pywxot
    AdditionalReferencesWithOriginal:
      type: object
      properties:
        cancellationId:
          type: string
          example: RefXX12
        originalReferences:
          $ref: '#/components/schemas/AdditionalReferences'
      x-stoplight:
        id: bgf3gahd7pcnz
    InterbankingInstruction:
      oneOf:
        - $ref: '#/components/schemas/CreditTransferInstruction'
        - $ref: '#/components/schemas/Instruction'
        - $ref: '#/components/schemas/OutwardCreditTransfersCancellationInstruction'
        - $ref: '#/components/schemas/CancellationInstruction'
      discriminator:
        propertyName: type
        mapping:
          INWARD_CREDIT_TRANSFER: '#/components/schemas/CreditTransferInstruction'
          OUTWARD_CREDIT_TRANSFER: '#/components/schemas/CreditTransferInstruction'
          INWARD_DEBIT_TRANSFER: '#/components/schemas/Instruction'
          OUTWARD_DEBIT_TRANSFER: '#/components/schemas/Instruction'
          OUTWARD_DEBIT_TRANSFER_CANCELLATION: '#/components/schemas/OutwardCreditTransfersCancellationInstruction'
          OUTWARD_CREDIT_TRANSFER_CANCELLATION: '#/components/schemas/CancellationInstruction'
      x-stoplight:
        id: jd7addudxn2oy
    RefusalInformationWithoutRefusalDate:
      type: object
      properties:
        reason:
          type: object
          properties:
            code:
              type: string
              example: AC01
            message:
              type: string
              example: Blocked account
        originator:
          type: object
          properties:
            type:
              type: string
              enum:
                - SYSTEM
                - ADMIN
                - CUSTOMER
            value:
              type: string
              example: BNPAFRPPXXX
      x-stoplight:
        id: ydchy9kfgrx9u
    OriginalCreditTransferInformation:
      type: object
      description: An original credit transfer instruction.
      required:
        - reference
        - scheme
        - amount
        - debtor
        - creditor
        - requestedCollectionDate
      properties:
        reference:
          type: integer
          description: Unique identifier representing the instruction
          example: 12345
        scheme:
          type: string
          enum:
            - SCT
        amount:
          $ref: '#/components/schemas/InstructionAmount'
        debtor:
          $ref: '#/components/schemas/InterbankingUser'
        creditor:
          $ref: '#/components/schemas/InterbankingUser'
        requestedCollectionDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        settlementDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
      x-stoplight:
        id: 1wbc9e6pym4aw
    AdditionalReferencesWithCancellationId:
      type: object
      properties:
        cancellationId:
          type: string
          example: RefXX12
        endToEndId:
          type: string
          example: Pre1656
        remittanceInfo:
          type: string
          example: Prélèvement mensuel Free
      x-stoplight:
        id: xk21e39q9eyme
    ReadOnlyUserProfileId:
      allOf:
        - $ref: '#/components/schemas/UserProfileId'
        - readOnly: true
      x-stoplight:
        id: swdmfgiaqcubb
    IdentityRole:
      type: string
      description: 'An Identity can be of type CLIENT, COMPANY, MERCHANT, AGENT, DISTRIBUTOR, DELEGATE_USER or NON_CUSTOMER'
      enum:
        - CLIENT
        - COMPANY
        - MERCHANT
        - AGENT
        - NON_CUSTOMER
        - DISTRIBUTOR
        - DELEGATE_USER
      x-stoplight:
        id: ekow9jbivi03x
    WriteOnlyIdentityId:
      allOf:
        - $ref: '#/components/schemas/IdentityId'
        - writeOnly: true
          example: '42'
      x-stoplight:
        id: goswb9b05ymea
    UserProfileOwner:
      type: object
      readOnly: true
      description: Identity owner of the profile
      required:
        - id
        - role
      properties:
        id:
          $ref: '#/components/schemas/ReadOnlyIdentityId'
        role:
          $ref: '#/components/schemas/IdentityRole'
      x-stoplight:
        id: c9rhfsc6qdbkx
    EmbeddedError:
      type: object
      required:
        - success
        - error
      properties:
        success:
          type: boolean
          description: Always false
        error:
          $ref: '#/components/schemas/Error'
      example:
        success: false
        error:
          code: 76000
          message: The request could not be processed because the current version does not match the specified version
      x-stoplight:
        id: 7zh6e4nup4wla
    SpendingDetail:
      type: object
      description: Spending detail
      properties:
        id:
          $ref: '#/components/schemas/SpendingDetailId'
        amount:
          $ref: '#/components/schemas/Amount'
        category:
          $ref: '#/components/schemas/BaseSpendingCategory'
        subcategory:
          $ref: '#/components/schemas/BaseSpendingCategory'
        label:
          type: string
          description: Description of the spending detail
        additionalData:
          type: array
          items:
            type: object
            properties:
              key:
                $ref: '#/components/schemas/SpendingsAdditionalDataKey'
              label:
                type: string
                description: locale of additional-key in platform config
              value:
                type: string
      x-stoplight:
        id: g38pi2xas0nu5
    TransactionAttachment:
      type: object
      required:
        - id
        - content
        - importDate
        - links
      properties:
        id:
          $ref: '#/components/schemas/TransactionAttachmentId'
        content:
          type: string
          format: byte
          writeOnly: true
          description: 'Document content, base64 encoded'
        description:
          type: string
          description: Description of the document type and content
        importDate:
          type: string
          format: date-time
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getContent` [GET] Get document content
              * `getPreview` [GET] Get document content thumbnail
              * `deleteAttachment` [DELETE] Delete this attachment
              * `addAttachmentOnSameTransaction` [POST] Add another attachment on the same transaction
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: getContent
              href: 'https://sandbox.skaleet.com/api/distributor/v1/transactions/42/attachments/43/content'
            - rel: getPreview
              href: 'https://sandbox.skaleet.com/api/distributor/v1/transactions/42/attachments/43/preview'
            - rel: deleteAttachment
              href: 'https://sandbox.skaleet.com/api/distributor/v1/transaction/42/attachments/43'
            - rel: addAttachmentOnSameTransaction
              href: 'https://sandbox.skaleet.com/api/distributor/v1/transaction/42/attachments'
      x-stoplight:
        id: 9hbkumge89ted
    OAuth2AccessTokenRequestWithScope:
      allOf:
        - $ref: '#/components/schemas/BaseOAuth2AccessTokenRequest'
        - type: object
          properties:
            scope:
              $ref: '#/components/schemas/Scope'
      x-stoplight:
        id: zb8vtd515t53u
    BaseOAuth2AccessTokenRequest:
      type: object
      required:
        - grant_type
        - client_id
      properties:
        grant_type:
          $ref: '#/components/schemas/OAuth2GrantType'
        client_id:
          $ref: '#/components/schemas/ApiClientId'
        client_secret:
          $ref: '#/components/schemas/ApiClientSecret'
      x-stoplight:
        id: 0p69hnh7ytypj
    Lang:
      type: string
      description: Locale identificator
      example: fr_FR
      enum:
        - en_UK
        - es_ES
        - fr_FR
        - pt_PT
      x-stoplight:
        id: mb6hcnea68ugk
    UserAddress:
      type: object
      properties:
        line1:
          type: string
        line2:
          type: string
        zipcode:
          type: string
        district:
          type: string
        province:
          type: string
        region:
          type: string
        city:
          type: string
        country:
          $ref: '#/components/schemas/Country'
      example:
        line1: 88 rue du dôme
        line2: Apt 3
        zipcode: '92100'
        province: Ile-de-france
        city: Boulogne-Billancourt
        country: FR
      x-stoplight:
        id: lt9r77lm6ueff
    Phone:
      type: string
      description: Phone number in international format (e.g. 33612354678)
      example: '33612354678'
      x-stoplight:
        id: z9i8w1fx64i6y
    TransactionBusinessProcessId:
      type: string
      description: Transaction Process Reference Id
      example: '153646'
      x-stoplight:
        id: rixn1op72v3h5
    UserName:
      type: string
      description: User's firstname and lastname or legal name
      example: John Doe
      x-stoplight:
        id: mnhmgdxauekdd
    ContributionId:
      type: string
      description: System contribution id
      example: CON4
      x-stoplight:
        id: 540vaa7de99a1
    TransactionMode:
      type: string
      enum:
        - PREAUTH
        - TRANSACTION
      x-stoplight:
        id: zahvh1tl2ye7p
    Input:
      oneOf:
        - $ref: '#/components/schemas/TextInput'
        - $ref: '#/components/schemas/AmountInput'
        - $ref: '#/components/schemas/BoolInput'
        - $ref: '#/components/schemas/DateInput'
        - $ref: '#/components/schemas/DateTimeInput'
        - $ref: '#/components/schemas/DurationInput'
        - $ref: '#/components/schemas/EmailInput'
        - $ref: '#/components/schemas/FileInput'
        - $ref: '#/components/schemas/ImageInput'
        - $ref: '#/components/schemas/FileContentInput'
        - $ref: '#/components/schemas/InputCollection'
        - $ref: '#/components/schemas/IntInput'
        - $ref: '#/components/schemas/IpInput'
        - $ref: '#/components/schemas/SelectInput'
        - $ref: '#/components/schemas/MultiSelectInput'
        - $ref: '#/components/schemas/NumberInput'
        - $ref: '#/components/schemas/PercentInput'
        - $ref: '#/components/schemas/PasswordInput'
        - $ref: '#/components/schemas/PhoneInput'
        - $ref: '#/components/schemas/RateInput'
        - $ref: '#/components/schemas/SelectWithAmountInput'
      discriminator:
        propertyName: type
        mapping:
          TEXT: '#/components/schemas/TextInput'
          COLLECTION: '#/components/schemas/InputCollection'
          AMOUNT: '#/components/schemas/AmountInput'
          BOOL: '#/components/schemas/BoolInput'
          DATE: '#/components/schemas/DateInput'
          DATE_TIME: '#/components/schemas/DateTimeInput'
          DURATION: '#/components/schemas/DurationInput'
          EMAIL: '#/components/schemas/EmailInput'
          FILE: '#/components/schemas/FileInput'
          FILE_CONTENT: '#/components/schemas/FileContentInput'
          IMAGE: '#/components/schemas/ImageInput'
          INT: '#/components/schemas/IntInput'
          IP: '#/components/schemas/IpInput'
          MULTI_SELECT: '#/components/schemas/MultiSelectInput'
          NUMBER: '#/components/schemas/NumberInput'
          PASSWORD: '#/components/schemas/PasswordInput'
          PERCENT: '#/components/schemas/PercentInput'
          PHONE: '#/components/schemas/PhoneInput'
          RATE: '#/components/schemas/RateInput'
          SELECT: '#/components/schemas/SelectInput'
          SELECT_WITH_AMOUNT: '#/components/schemas/SelectWithAmountInput'
          COMPLIANCE: '#/components/schemas/SelectInput'
      x-stoplight:
        id: xir0gt6mc4kn2
    AbstractInput:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          description: the identification key of the Input. Use that ID as object key in form submission.
          example: lastName
        type:
          $ref: '#/components/schemas/InputType'
        label:
          type: string
          description: Displayable Input label
          example: Last Name
        description:
          type: string
          description: A potentially long description of the input content
          example: Enter your last name
        required:
          type: boolean
          description: 'If true, an input value must be provided on form submission'
        validators:
          type: array
          items:
            $ref: '#/components/schemas/Validator'
        disabled:
          type: boolean
          default: false
          description: 'If true, this input cannot be change'
      x-stoplight:
        id: 3yphskqbvwij7
    AbstractFileInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            maxSize:
              type: integer
              description: 'Maximum allowed file size, in bytes'
            acceptedTypes:
              type: array
              description: Accepted file types list as MIME types
              items:
                type: string
              example:
                - text/plain
                - text/csv
                - application/vnd.ms-excel
                - image/png
            minimumPageCount:
              type: integer
              description: Expected minimum page count
            maximumPageCount:
              type: integer
              description: Expected maximum page count
      x-stoplight:
        id: 9ow650u78mmdg
    TextInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
      x-stoplight:
        id: ppjq12b5gbveo
    AmountInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/Amount'
            currencies:
              type: array
              items:
                $ref: '#/components/schemas/Currency'
      x-stoplight:
        id: zqyg9lzcgmxfm
    BoolInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: boolean
      x-stoplight:
        id: yna695ppipkms
    DateInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: '20180717'
            format:
              type: string
              description: 'Possible formats are the ones accepted by the [date function (php)](https://php.net/manual/en/function.date.php)'
              example: Ymd
      x-stoplight:
        id: fhns5usm2ktef
    DateTimeInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: '20180717162042'
            format:
              type: string
              description: 'Possible formats are the ones accepted by the [date function (php)](https://php.net/manual/en/function.date.php)'
              example: YmdHis
      x-stoplight:
        id: cfm0cr1rwi1wz
    DurationInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/Duration'
            periodicities:
              type: array
              items:
                $ref: '#/components/schemas/Periodicity'
      x-stoplight:
        id: wiu0jtey73utc
    EmailInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
              format: email
      x-stoplight:
        id: mb3unts96lv0d
    FileInput:
      allOf:
        - $ref: '#/components/schemas/AbstractFileInput'
        - type: object
          properties:
            value:
              type: object
              readOnly: true
              properties:
                content:
                  type: string
                  description: 'File content, Base64 encoded'
                  format: byte
                name:
                  type: string
                  description: Original file name and extension
                  example: fileName.txt
                type:
                  type: string
                  description: File MIME type
                  example: text/plain
                size:
                  type: integer
                  description: 'File size, in bytes'
      x-stoplight:
        id: c44skcijv5e96
    ImageInput:
      allOf:
        - $ref: '#/components/schemas/AbstractFileInput'
        - type: object
          properties:
            value:
              type: string
              description: Image content base64 encoded
      x-stoplight:
        id: 52kcsvavoq63p
    FileContentInput:
      allOf:
        - $ref: '#/components/schemas/AbstractFileInput'
        - type: object
          properties:
            value:
              oneOf:
                - type: object
                  properties:
                    documentId:
                      $ref: '#/components/schemas/ReadOnlyDocumentId'
                - type: string
                  description: File content as Base64 encoded string
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getDocument` [GET] Load the document details linked to this input
                  * `getDocumentContent` [GET] Load the document content
                  * `getDocumentPreview` [GET] Get a small sized preview of the document content
              items:
                $ref: '#/components/schemas/Link'
              example:
                - rel: getDocument
                  href: 'https://sandbox.skaleet.com/api/distributor/v1/documents/42'
                - rel: getDocumentContent
                  href: 'https://sandbox.skaleet.com/api/distributor/v1/documents/42/content'
                - rel: getDocumentPreview
                  href: 'https://sandbox.skaleet.com/api/distributor/v1/documents/42/preview'
      x-stoplight:
        id: cdmey62ip4j1d
    InputCollection:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            inputs:
              type: array
              items:
                $ref: '#/components/schemas/Input'
      x-stoplight:
        id: cpyl9nwz341zo
    IntInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: integer
      x-stoplight:
        id: gl04bgzsk1nbv
    IpInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
      x-stoplight:
        id: 6wfw9xy5ik4nz
    SelectInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: someValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/Option'
      x-stoplight:
        id: 7knf51kvnw5fj
    MultiSelectInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: array
              items:
                type: string
              example:
                - someValue
                - anotherValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/Option'
      x-stoplight:
        id: 9zo1j7b67aue2
    NumberInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: number
              format: float
      x-stoplight:
        id: uo770nvf25ql7
    PercentInput:
      allOf:
        - $ref: '#/components/schemas/NumberInput'
      x-stoplight:
        id: 1jdd6ecr11pll
    PasswordInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
      x-stoplight:
        id: p2orl0gpnvwzl
    PhoneInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
              example: '33612345678'
              description: Phone number in international format (MSISDN)
      x-stoplight:
        id: 5rp5hkvt09iib
    RateInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            inputs:
              type: object
              required:
                - value
                - periodicity
              properties:
                value:
                  $ref: '#/components/schemas/NumberInput'
                periodicity:
                  $ref: '#/components/schemas/SelectInput'
      x-stoplight:
        id: ekeflwranpmpc
    SelectWithAmountInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: someValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/OptionWithAmount'
      x-stoplight:
        id: s3u9uui8reyhx
    AccountingExportStatus:
      type: string
      description: Export status
      readOnly: true
      enum:
        - ONGOING
        - PROCESSED
        - ERROR
      x-stoplight:
        id: x6oaflyxnjnsb
    Periodicity:
      description: Available periodicities
      type: string
      enum:
        - HOUR
        - WEEK
        - DAY
        - MONTH
        - YEAR
      example: DAY
      x-stoplight:
        id: 80t7lmjeqiwgv
    AmountValue:
      description: Amount without separator and symbol
      type: integer
      example: 1337
      x-stoplight:
        id: h11aojdf6n5bx
    Address:
      type: object
      properties:
        addressLine:
          type: string
          example: 98 rue Clément
        country:
          type: string
          example: FR
        city:
          type: string
          example: Paris
        zipcode:
          type: string
          example: '75018'
        region:
          type: string
        district:
          type: string
        province:
          type: string
      x-stoplight:
        id: cox8fj0g5xqd2
    ReadOnlyIdentityId:
      allOf:
        - $ref: '#/components/schemas/IdentityId'
        - readOnly: true
          example: '42'
      x-stoplight:
        id: 7csz3uqz516x1
    SpendingDetailId:
      type: string
      description: Spending detail unique identifier
      readOnly: true
      example: SPD123
      x-stoplight:
        id: uj85ip9t1smwj
    BaseSpendingCategory:
      type: object
      readOnly: true
      required:
        - id
        - label
      properties:
        id:
          $ref: '#/components/schemas/ReadOnlySpendingCategoryId'
        label:
          type: string
          readOnly: true
      x-stoplight:
        id: lhhcx5gub6roq
    SpendingsAdditionalDataKey:
      type: string
      description: Additional data key
      x-stoplight:
        id: qgv4csrsb75jx
    OAuth2GrantType:
      type: string
      description: OAuth2 authorization grant type
      enum:
        - authorization_code
        - password
        - client_credentials
      x-stoplight:
        id: k52p4k3u87r60
    ApiClientSecret:
      type: string
      description: API client secret
      example: 8349dd16bcd6d192a18b885e11bc8d28503a0abbef698e40540f54d3b30ae49e
      x-stoplight:
        id: vtjbtxhmtal2u
    ReadOnlyDocumentId:
      allOf:
        - $ref: '#/components/schemas/DocumentId'
        - readOnly: true
      x-stoplight:
        id: pj00c0rhshsgk
    Option:
      type: object
      required:
        - id
        - label
      properties:
        id:
          type: string
          example: someValue
        label:
          type: string
          example: Label for someValue
      x-stoplight:
        id: hrxp4emrtbptn
    OptionWithAmount:
      allOf:
        - $ref: '#/components/schemas/Option'
        - type: object
          required:
            - amount
          properties:
            amount:
              $ref: '#/components/schemas/Amount'
      x-stoplight:
        id: hc9sr2axurxzp
    ReadOnlySpendingCategoryId:
      allOf:
        - $ref: '#/components/schemas/SpendingCategoryId'
        - readOnly: true
      x-stoplight:
        id: bwqzoy09868og
    InputType:
      type: string
      enum:
        - TEXT
        - COLLECTION
        - AMOUNT
        - BOOL
        - DATE
        - DATE_TIME
        - DURATION
        - EMAIL
        - FILE
        - FILE_CONTENT
        - IMAGE
        - INT
        - IP
        - MULTI_SELECT
        - NUMBER
        - PASSWORD
        - PERCENT
        - PHONE
        - PINCODE
        - RATE
        - SELECT
        - SELECT_WITH_AMOUNT
      x-stoplight:
        id: w3t3xnelb8wmp
    Validator:
      oneOf:
        - $ref: '#/components/schemas/AmountValidator'
        - $ref: '#/components/schemas/MinValidator'
        - $ref: '#/components/schemas/MaxValidator'
        - $ref: '#/components/schemas/BetweenValidator'
        - $ref: '#/components/schemas/BlacklistValidator'
        - $ref: '#/components/schemas/WhitelistValidator'
        - $ref: '#/components/schemas/LengthValidator'
        - $ref: '#/components/schemas/MaxLengthValidator'
        - $ref: '#/components/schemas/MinLengthValidator'
        - $ref: '#/components/schemas/PasswordValidator'
        - $ref: '#/components/schemas/RegexValidator'
      discriminator:
        propertyName: type
        mapping:
          AMOUNT: '#/components/schemas/AmountValidator'
          MIN: '#/components/schemas/MinValidator'
          MAX: '#/components/schemas/MaxValidator'
          BETWEEN: '#/components/schemas/BetweenValidator'
          BLACKLIST: '#/components/schemas/BlacklistValidator'
          WHITELIST: '#/components/schemas/WhitelistValidator'
          LENGTH: '#/components/schemas/LengthValidator'
          MAX_LENGTH: '#/components/schemas/MaxLengthValidator'
          MIN_LENGTH: '#/components/schemas/MinLengthValidator'
          PASSWORD: '#/components/schemas/PasswordValidator'
          REGEX: '#/components/schemas/RegexValidator'
      x-stoplight:
        id: esr9teaur8l42
    SpendingCategoryId:
      type: string
      description: Spending category identifier
      example: FOOD
      x-stoplight:
        id: ewjg16kq3samb
    AmountValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - currencies
          properties:
            currencies:
              type: array
              items:
                $ref: '#/components/schemas/Currency'
      x-stoplight:
        id: yc1fuqrbmj1ep
    MinValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - min
          properties:
            min:
              type: number
      x-stoplight:
        id: v6rw2vvhgvbh6
    MaxValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - max
          properties:
            max:
              type: number
      x-stoplight:
        id: 6ry0w6e3bpj0s
    BetweenValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - min
            - max
          properties:
            min:
              type: number
            max:
              type: number
      x-stoplight:
        id: qydtbut629zmt
    BlacklistValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - blacklist
          properties:
            blacklist:
              type: array
              items:
                type: string
      x-stoplight:
        id: fdvfixrozd77i
    WhitelistValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - whitelist
          properties:
            whitelist:
              type: array
              items:
                type: string
      x-stoplight:
        id: qil5r9r1f0c30
    LengthValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - length
          properties:
            length:
              type: integer
      x-stoplight:
        id: hv03ls2prxj5o
    MaxLengthValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - maxLength
          properties:
            maxLength:
              type: integer
      x-stoplight:
        id: 5mixwzex9g9at
    MinLengthValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - minLength
          properties:
            minLength:
              type: integer
      x-stoplight:
        id: z5htf2q7mu5uf
    PasswordValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          properties:
            minLength:
              type: integer
            regexp:
              type: string
              description: regexp in PCRE format. Password must match this regexp
            forbidRegex:
              type: string
              description: regexp in PCRE format. Password must not match this regexp
            forbidDates:
              type: boolean
              description: 'if true, you cannot choose a date as a password'
            blacklist:
              type: array
              description: list of forbidden passwords
              example:
                - azerty
                - qwerty
                - '123456'
                - password
              items:
                type: string
      x-stoplight:
        id: qz3kymamnzy9c
    RegexValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - regex
          properties:
            regex:
              type: string
              description: Regular expression in PCRE format. Value must match this regular expression.
      x-stoplight:
        id: 47yepdia0jmz5
    AbstractValidator:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
      x-stoplight:
        id: y80jqpla8uwt8
    ValidatorType:
      type: string
      enum:
        - AMOUNT
        - MIN
        - MAX
        - BETWEEN
        - BLACKLIST
        - LENGTH
        - MAX_LENGTH
        - MIN_LENGTH
        - PASSWORD
        - REGEX
        - WHITELIST
      x-stoplight:
        id: oj8qqp2021e42
    LegalEntityWithExistingBoardMember:
      title: Legal Entity with an already existing Board Member
      x-stoplight:
        id: 9wss3e5utmvlc
      allOf:
        - type: object
          x-stoplight:
            id: ojbe8qzu1aifl
          required:
            - boardMember
          properties:
            boardMember:
              type: object
              x-stoplight:
                id: 8eaabxcyix6ee
              properties:
                userId:
                  type: string
                  x-stoplight:
                    id: cdq47o7b8aoqa
                  description: Id of the already existing Board Member
        - $ref: '#/components/schemas/LegalEntity'
          x-stoplight:
            id: q84f9n2n3akt7
  parameters:
    userId:
      name: userId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/UserId'
    cardId:
      name: cardId
      in: path
      required: true
      schema:
        $ref: ./CardId.yaml
    instructionType:
      name: type
      in: query
      explode: false
      description: Set of instruction types
      schema:
        type: array
        items:
          $ref: '#/components/schemas/InstructionType'
    outwardState:
      name: status
      in: query
      explode: false
      description: Set of instruction statuses
      schema:
        type: array
        items:
          $ref: '#/components/schemas/OutwardState'
