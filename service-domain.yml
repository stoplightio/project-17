openapi: 3.1.0
x-stoplight:
  id: ea69kbbn7q2hb
servers:
  - url: 'https://sandbox.skaleet.com/api/service-domain/v1'
info:
  title: Service Domain API
  version: 0.0.3
  description: |
    Service Domain API| |
     ----|----|
     Uses Cases Examples| **Account Management**<br>- Create accounts<br>- Manage accounts lifecycle<br>- Manage accounts information<br>**Identities Management**<br>- Create identities<br>- Manage identities lifecycle<br>- Manage identities information<br>**Cards Management**<br>- Create cards<br>- Manage cards lifecycle<br>- Manage cards features<br>**Customer Billing**<br>- Configre pricing<br>- Configure subscriptions<br>- Configure Discount<br>- Apply manual fee<br>**Document Management**<br>- Configure document type<br>- Configure document packages<br> Order document packages<br>- Manage association between document types and packages<br> **Payment**<br>- Manage customer instructions<br>- Manage payment instructions<br>- Manage payment transactions|

    This API aggregates most of the services that can be used by third party to use services provided by Skaleet.

    You can use the Service Domain API in these cases :
    1. A back-office created a Service Domain API key through its web portal
    2. A back-office created an User API key and you have authentified with it. In this case you can have access to specific endpoints.
  contact:
    name: Skaleet
    url: 'https://www.skaleet.com/en/'
    email: api@skaleet.com
  license:
    name: Proprietary
    url: 'https://www.skaleet.com/'
  summary: ''
tags:
  - name: Accounting
  - name: Accounts
  - name: Additional Data
  - name: Audit
  - name: Authentications
  - name: Camt Statement
  - name: Card Authorization holds
  - name: Cards
  - name: Cheques
  - name: Currencies
  - name: Customer access
  - name: Customer Actions
  - name: Customer Billing
  - name: Customers
  - name: Discounts
  - name: Document Configuration
  - name: Documents Management
  - name: DocuSign
  - name: Employers
  - name: Entities
  - name: Events
  - name: Exchange rates
  - name: External System Configuration
  - name: External System Monitoring
  - name: Fees
  - name: Fees statements
  - name: Form configuration
  - name: Funds Isolation
  - name: General Accounts
  - name: Iban
  - name: Identities
  - name: Job
  - name: Mandates
  - name: Messages
  - name: Migration
  - name: OAuth2
  - name: Objects to screen
  - name: Onboarding
  - name: Operations
  - name: Operations Awaiting Decision
  - name: Payment - Customer instructions
  - name: Payment - Inward payment instructions
  - name: Payment - Network
  - name: Payment - Outward payment instructions
  - name: Payment - Payment instructions consultation
  - name: Payment - Payment R transactions
  - name: Payment - Payment transaction
  - name: Payment - Service
  - name: Payment - Service contract
  - name: Populations
  - name: Posting
  - name: Product
  - name: Profiles
  - name: Required Action Types
  - name: Scoring
  - name: Settings
  - name: Spending Categorization
  - name: Standard Credit Transfer
  - name: TaxProfile
  - name: Templating
  - name: Transaction - External Data
  - name: Transaction Attachments
  - name: Transactions
  - name: Velocities
paths:
  /oauth2/public-keys/latest:
    get:
      security: []
      summary: Get latest public key
      operationId: getLatestPublicKey
      tags:
        - OAuth2
      responses:
        '200':
          description: the latest public key in X.509 format
          content:
            application/x-pem-file:
              schema:
                type: string
                example: |
                  -----BEGIN PUBLIC KEY-----
                  MIICIjANBgkqhkiG9[...]Cb0CAwEAAQ==
                  -----END PUBLIC KEY-----
        '404':
          description: No public key available
      x-stoplight:
        id: 0rpwh4lmvnpgx
  /oauth2/authorize:
    get:
      security: []
      tags:
        - OAuth2
      summary: (AuthCode) Initiate an OAuth2 authorization request
      operationId: InitiateAuthorizationRequest
      parameters:
        - in: query
          required: true
          name: response_type
          schema:
            type: string
            description: OAuth2 authorization request response type. Must be `code`.
        - in: query
          required: true
          name: client_id
          schema:
            $ref: '#/components/schemas/ApiClientId'
        - in: query
          required: true
          name: redirect_uri
          schema:
            $ref: '#/components/schemas/RedirectUri'
        - in: query
          required: true
          name: scope
          schema:
            $ref: '#/components/schemas/Scope'
        - in: query
          required: true
          name: state
          schema:
            $ref: '#/components/schemas/AuthCodeState'
        - in: query
          name: code_challenge
          schema:
            type: string
            description: 'A PKCE code challenge, consisting of hashing a random value with the specified method below.'
            example: cfG0F8j-xP12yjVUJfizBHGZsgKI6ryHHBcF5jo034k
        - in: query
          name: code_challenge_method
          schema:
            type: string
            description: |
              `plain` method should be used only if API client does not support `S256`.

              `S256` means using SHA-256 hashing algorithm.
            enum:
              - S256
              - plain
      responses:
        '302':
          $ref: '#/components/responses/OAuth2AuthRequestResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: 2ruyxex4ij7qr
  /oauth2/token:
    post:
      security: []
      tags:
        - OAuth2
      summary: Request for a new OAuth2 access token
      operationId: RequestAccessToken
      requestBody:
        required: true
        description: |
          The necessary credentials to request a new Access Token.

          **Note:** Pay attention to which grant flow can be used on this API (see the Authentication section above).
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OAuth2AccessTokenRequest'
      responses:
        '200':
          $ref: '#/components/responses/OAuth2AccessTokenResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: hxpafxgvolbtv
  '/heartbeat/{externalSystemId}':
    parameters:
      - in: path
        required: true
        name: externalSystemId
        schema:
          type: string
          example: my-external-service
        description: 'Configured external system id, that should be associated with current Api Key'
    post:
      security:
        - OAuth2: []
      tags:
        - External System Monitoring
      summary: Heartbeat
      description: To send notifications on the status of a tier service
      operationId: HeartbeatExternalService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  default: ALIVE
                  enum:
                    - ALIVE
                    - WARNING
                    - ALERT
                value:
                  type: integer
                  description: custom metric value
                  example: 124
      responses:
        '201':
          description: OK
        '400':
          description: Request body invalid
        '403':
          description: 'System {externalServiceId} is not found or current Api Key is not authorized'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: pwfzn10ekzhwv
  /card-authorization-holds:
    get:
      security:
        - OAuth2:
            - sda_card_authorization_holds_view
      tags:
        - Card Authorization holds
      summary: List all authorization holds for a card
      operationId: SearchCardAuthorizationHolds
      parameters:
        - name: cardId
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/CardId'
        - name: amount
          in: query
          description: Filter for given amount (integer value)
          schema:
            $ref: '#/components/schemas/AmountValue'
        - name: currency
          in: query
          description: Filter for given currency
          schema:
            $ref: '#/components/schemas/Currency'
        - name: accountId
          in: query
          description: Filter for given account
          schema:
            $ref: '#/components/schemas/AccountNumber'
        - name: id
          in: query
          description: Reference card authorization hold id
          schema:
            $ref: '#/components/schemas/CardAuthorizationHoldId'
        - name: startDate
          in: query
          description: Card Authorization holds date range start (date range is limited to 3 months)
          schema:
            type: string
            format: date-time
            description: |
              Default value: endDate - 3 months
        - name: endDate
          in: query
          description: Card Authorization holds date range end (date range is limited to 3 months)
          schema:
            type: string
            format: date-time
            description: Default value is the current day.
        - name: startCreationDate
          in: query
          description: Creation date range start
          schema:
            $ref: ./DateTime.yaml
        - name: endCreationDate
          in: query
          description: Creation date range end
          schema:
            $ref: ./DateTime.yaml
        - name: startExpirationDate
          in: query
          description: Expiration date range start
          schema:
            $ref: ./DateTime.yaml
        - name: endExpirationDate
          in: query
          description: Expiration date range end
          schema:
            $ref: ./DateTime.yaml
        - name: startConsumptionDate
          in: query
          description: Consumption date range start
          schema:
            $ref: ./DateTime.yaml
        - name: endConsumptionDate
          in: query
          description: Consumption date range end
          schema:
            $ref: ./DateTime.yaml
        - name: externalId
          in: query
          description: External id (from the calling system)
          schema:
            type: string
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
        - name: state
          in: query
          description: state of card authorization hold
          schema:
            $ref: '#/components/schemas/CardAuthorizationHoldState'
      responses:
        '200':
          description: Card's authorization holds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAuthorizationHoldCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 2x1df455a77f7
  '/card-authorization-holds/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CardAuthorizationHoldId'
    delete:
      security:
        - OAuth2:
            - sda_card_authorization_holds_update
      tags:
        - Card Authorization holds
      summary: Cancel a specific authorization hold for a card
      operationId: CancelCardAuthorizationHolds
      parameters:
        - name: comment
          in: query
          description: Optional comment
          schema:
            type: string
      responses:
        '204':
          description: Card's authorization hold cancelled
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: sxnfuodsaw0wb
  '/jobs/{name}/progress':
    parameters:
      - name: name
        in: path
        required: true
        description: Job name
        schema:
          type: string
          example: MyJob
    get:
      security:
        - OAuth2:
            - job_view
      tags:
        - Job
      summary: Progression of job
      operationId: ProgressJob
      responses:
        '200':
          description: Get information of job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobProgress'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ujvccu6ptlv5d
  '/jobs/{name}/run':
    parameters:
      - name: name
        in: path
        required: true
        description: Job name
        schema:
          type: string
          example: MyJob
    post:
      security:
        - OAuth2:
            - job_update
      tags:
        - Job
      summary: Run job
      operationId: RunJob
      requestBody:
        required: false
        description: Overloads the default job parameters for this run only.
        content:
          application/json:
            schema:
              type: object
              example:
                parameter: overloaded value
              description: map of parameters
      responses:
        '202':
          description: Launch a existing job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRun'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: tj3ltgqf78ooi
  '/jobs/{name}/executions':
    parameters:
      - name: name
        in: path
        required: true
        description: Job name
        schema:
          type: string
          example: MyJob
    get:
      security:
        - OAuth2:
            - job_view
      tags:
        - Job
      summary: Job execution list
      operationId: ExecutionsJob
      parameters:
        - name: executionId
          in: query
          required: false
          schema:
            type: string
            example: '20220322151220'
            description: id of the execution we want to retrieve
        - name: from
          in: query
          required: false
          schema:
            type: string
            format: date-time
            example: '1970-01-01T15:12:20+0100'
            description: date from which we want to recover the executions
      responses:
        '200':
          description: Return list of executions of a job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionJobCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: y0r2fsosnrkw1
  '/jobs/{name}/executions/{executionId}/outputs/{outputName}':
    parameters:
      - name: name
        in: path
        required: true
        description: Job name
        schema:
          type: string
          example: MyJob
      - name: executionId
        in: path
        required: true
        description: Id of execution
        schema:
          type: string
          example: '19890101151052'
      - name: outputName
        in: path
        required: true
        description: name of output or log
        schema:
          type: string
          example: MyOutput
    get:
      security:
        - OAuth2:
            - job_view
      tags:
        - Job
      summary: Job execution output download
      operationId: DownloadOutput
      responses:
        '200':
          description: A file with the requested output/log file
          content:
            text/plain:
              schema:
                type: string
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ah7ieh9kfglvj
  '/delegated-accesses/{delegateIdentityId}/reset':
    parameters:
      - in: path
        name: delegateIdentityId
        description: Identity unique identifier of the delegate user
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
    post:
      tags:
        - Customer access
      summary: Reset delegate user password
      description: Allows to reset the password of any delegate user.
      operationId: DelegatedAccessResetPassword
      security:
        - OAuth2:
            - sda_delegated-accesses_reset
      responses:
        '204':
          description: Password has been successfully reset.
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 9qc9cr9mdw5q8
  '/delegated-accesses/{delegateAccessId}/deactivate':
    parameters:
      - in: path
        name: delegateAccessId
        description: Identity unique identifier of the delegate user
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
    post:
      tags:
        - Customer access
      summary: Deactivate delegate user
      description: Allows to deactivate the delegate access of any delegate user.
      operationId: DelegatedAccessDeactivate
      security:
        - OAuth2:
            - sda_delegated-accesses_deactivation
      responses:
        '204':
          description: The delegated user has been successfully deactivated.
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: f11u5th14q1w8
  /products:
    post:
      security:
        - OAuth2:
            - product_management
      tags:
        - Product
      summary: Create a product
      operationId: CreateProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        '201':
          description: Everything was fine.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 5u6yq81a080ru
    get:
      security:
        - OAuth2:
            - product_management
      summary: Search products
      tags:
        - Product
      responses:
        '200':
          description: Returns a partner collection matching filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCollection'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      operationId: SearchProducts
      x-stoplight:
        id: byf5k9twwvkm4
      parameters:
        - schema:
            type: integer
          in: query
          name: id
        - schema:
            type: string
          in: query
          name: name
        - schema:
            type: string
            enum:
              - COMMISSIONS
              - CREDIT
              - CREDIT_TRANSFER_EMISSION
              - CREDIT_TRANSFER_RECEPTION
              - CURRENT
              - DEBIT_CARD
              - DEDICATED
              - DIRECT_DEBIT_EMISSION
              - DIRECT_DEBIT_RECEPTION
              - GUARANTEE_ACCOUNT
              - MONEYPOT
              - SUB_ACCOUNT
              - TECHNICAL
          in: query
          name: productType
          description: Specific product type
          example: COMMISSIONS
        - schema:
            type: string
            enum:
              - AUTONOMOUS
              - DEPENDENT
          in: query
          name: dependency
          description: Specific dependency type
          example: AUTONOMOUS
        - schema:
            type: string
            enum:
              - DISTRIBUTED
              - MANAGED
              - MANAGED_WITH_PARTNER
          in: query
          name: management
          description: Specific management type
          example: MANAGED
        - schema:
            type: string
            enum:
              - ACCOUNT
              - CARD
              - CHEQUE
              - CREDIT
              - PAYMENT_SERVICES
              - QR_CODE
          in: query
          name: supportType
          description: Specific product type
          example: ACCOUNT
        - schema:
            type: integer
          in: query
          name: offset
          description: Starting item position number
        - schema:
            type: integer
          in: query
          name: limit
          description: The number of items per page
        - schema:
            type: string
          in: query
          name: sort
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
  '/products/{productId}':
    parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: string
          description: Product id
          example: '1234'
    put:
      security:
        - OAuth2:
            - product_management
      tags:
        - Product
      summary: Update a product
      operationId: UpdateProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
      responses:
        '201':
          description: Everything was fine.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalProduct'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ducr9svvsiq94
    delete:
      security:
        - OAuth2:
            - product_management
      tags:
        - Product
      summary: Delete a product
      description: Delete a product or close it if it has at least one association
      operationId: DeleteProduct
      responses:
        '200':
          description: Action accepted
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ea95l6m3ij2zc
  '/products/credit-transfer-emission/{productId}':
    parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: string
          description: Product id
          example: '1234'
    patch:
      security:
        - OAuth2:
            - product_management
      tags:
        - Product
      summary: Update a credit transfer emission product
      operationId: UpdateCreditTransferEmissionProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmissionProductRequest'
      responses:
        '201':
          description: Everything was fine.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditEmissionProduct'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: k7cp0tfuqbc4r
  '/products/credit-transfer-reception/{productId}':
    parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: string
          description: Product id
          example: '1234'
    patch:
      security:
        - OAuth2:
            - product_management
      tags:
        - Product
      summary: Update a credit transfer reception product
      operationId: UpdateCreditTransferReceptionProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReceptionProductRequest'
      responses:
        '201':
          description: Everything was fine.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditReceptionProduct'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 0cqgaa0unjwnm
  '/products/direct-debit-emission/{productId}':
    parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: string
          description: Product id
          example: '1234'
    patch:
      security:
        - OAuth2:
            - product_management
      tags:
        - Product
      summary: Update a direct debit emission product
      operationId: UpdateDirectDebitEmissionProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmissionProductRequest'
      responses:
        '201':
          description: Everything was fine.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectEmissionProduct'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: zj02jazvdy3kf
  '/products/direct-debit-reception/{productId}':
    parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: string
          description: Product id
          example: '1234'
    patch:
      security:
        - OAuth2:
            - product_management
      tags:
        - Product
      summary: Update a direct debit reception product
      operationId: UpdateDirectDebitReceptionProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReceptionProductRequest'
      responses:
        '201':
          description: Everything was fine.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectReceptionProduct'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 5wzrbc2aqwv4v
  /product-partners:
    post:
      security:
        - OAuth2:
            - sda_product_partner_management
      tags:
        - Product
      summary: Create a card partner
      description: Create a partner for debit card product type
      operationId: CreateCardPartner
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductPartnerRequest'
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPartnerConfiguration'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ib5xub6eal0bg
    get:
      security:
        - OAuth2:
            - sda_product_partner_management
      tags:
        - Product
      summary: List all card partners
      operationId: SearchCardPartner
      parameters:
        - name: name
          in: query
          schema:
            $ref: '#/components/schemas/ProductPartnerName'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: name
            enum:
              - name
      responses:
        '200':
          description: Returns a partner collection matching filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPartnerConfigurationCollection'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ksmjnimcnjaco
  '/product-partners/{partnerName}':
    parameters:
      - name: partnerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProductPartnerName'
    patch:
      security:
        - OAuth2:
            - sda_product_partner_management
      tags:
        - Product
      summary: Edit a card partner
      description: Edit a card partner
      operationId: EditCardPartner
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditProductPartnerRequest'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPartnerConfiguration'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: xltzdxzzjjnf2
  /audits:
    post:
      security:
        - OAuth2:
            - audit
      tags:
        - Audit
      summary: Add an audit trail
      operationId: AddAudit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAuditRequest'
      responses:
        '201':
          description: Everything was fine.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audit'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: yp4iv00v90syu
    get:
      security:
        - OAuth2:
            - sda_audits_view
      tags:
        - Audit
      operationId: SearchAuditTrails
      summary: Search audit trails
      description: Search audit trails matching the expected request criteria
      parameters:
        - in: query
          name: id
          schema:
            $ref: '#/components/schemas/AuditId'
        - in: query
          name: isAfter
          description: 'Audit trail entry date has to be after this date (Example 2000-01-20T12:00:00Z)'
          schema:
            $ref: ./DateTime.yaml
        - in: query
          name: isBefore
          description: 'Audit trail entry date has to be before this date (Example 2000-01-20T12:00:00Z)'
          schema:
            $ref: ./DateTime.yaml
        - in: query
          name: targetIdentityId
          schema:
            $ref: '#/components/schemas/IdentityId'
        - in: query
          name: makerIdentityRole
          description: Audit entry maker role has to match exactly
          schema:
            $ref: '#/components/schemas/AuditRole'
        - in: query
          name: makerLogin
          description: Audit entry maker login has to match exactly
          schema:
            $ref: '#/components/schemas/Login'
        - in: query
          name: type
          description: Audit entry event name has to match exactly
          schema:
            $ref: '#/components/schemas/AuditEventName'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - makerLogin
              - targetIdentityId
      responses:
        '200':
          $ref: '#/components/responses/SearchAuditTrailsResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
      x-stoplight:
        id: qbnf5523nyf60
  /objects-to-screen:
    get:
      security:
        - OAuth2:
            - sda_objects_to_screen
      tags:
        - Objects to screen
      summary: Fetch objects to screen
      operationId: FetchAllObjectsToScreen
      parameters:
        - name: targetType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ObjectToScreenTargets'
        - name: status
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ObjectToScreenStates'
        - name: targetId
          in: query
          required: false
          schema:
            type: string
            description: Filter by target's id
            example: '1234'
      responses:
        '200':
          description: Fetched objects to screen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchAllObjectsToScreen'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 9yi0lltjnlhfs
    post:
      security:
        - OAuth2:
            - sda_objects_to_screen
      tags:
        - Objects to screen
      summary: Create one object to screen
      operationId: CreateObjectsToScreen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetId:
                  type: string
                  description: Target's ID
                  example: '1234'
                targetType:
                  $ref: '#/components/schemas/ObjectToScreenTargets'
      responses:
        '201':
          description: The created object to screen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateObjectsToScreen'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: boxai3yhybw1q
  '/objects-to-screen/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          description: Retrieve one object to screen
    get:
      security:
        - OAuth2:
            - sda_objects_to_screen
      tags:
        - Objects to screen
      summary: Retrieve one object to screen
      operationId: FetchOneObjectsToScreen
      responses:
        '200':
          description: The fetched object to screen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchOneObjectsToScreen'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 4ngh7ty318ahi
    patch:
      security:
        - OAuth2:
            - sda_objects_to_screen
      tags:
        - Objects to screen
      summary: Transition an object to screen
      operationId: TransitionObjectToScreen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/ObjectToScreenStates'
      responses:
        '200':
          description: Updated object to screen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchOneObjectsToScreen'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: x070jqzqzo858
  '/objects-to-screen/{id}/history':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          description: Retrieve one object to screen history
    get:
      security:
        - OAuth2:
            - sda_objects_to_screen
      tags:
        - Objects to screen
      summary: Retrieve one object to screen's history
      operationId: FetchOneObjectsToScreenHistory
      responses:
        '200':
          description: The history of the given object to screen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchOneObjectsToScreenHistory'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 4t1gnsx0jsukz
      parameters:
        - schema:
            type: string
            example: '1'
          in: query
          description: Identity unique identifier. Only retrieve history of requester
          name: requester
  /objects-to-screen/screening-types:
    get:
      security:
        - OAuth2:
            - sda_objects_to_screen
      tags:
        - Objects to screen
      summary: Fetch objects to screen screening types
      operationId: FetchObjectsToScreenScreeningTypes
      responses:
        '200':
          description: Fetched objects to screen screening types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchObjectsToScreenScreeningTypes'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: cij6umyi6pkng
  '/object-to-screen/{objectId}/screening-requests/{requestId}/screening-responses':
    parameters:
      - name: objectId
        in: path
        required: true
        schema:
          type: string
          description: Object to screen Id
          example: '1234'
      - name: requestId
        in: path
        required: true
        schema:
          type: string
          description: Screening request Id
          example: '1234'
    post:
      security:
        - OAuth2:
            - object_to_screen
      tags:
        - Objects to screen
      summary: Create a screening response
      operationId: CreateObjectToScreenScreeningResponse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateObjectToScreenScreeningResponse'
      responses:
        '201':
          description: Everything was fine.
          content:
            application/json:
              schema:
                type: object
                properties:
                  screeningResponseId:
                    type: string
                    description: Created creening response id
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: h9iu32tgparc5
  '/objects-to-screen/{otsId}/screening-request':
    parameters:
      - in: path
        name: otsId
        description: object to screen unique identifier
        required: true
        schema:
          $ref: '#/components/schemas/ObjectToScreenId'
    post:
      tags:
        - Objects to screen
      summary: Add Screening Request
      description: Add an external screening request to an existing object to screen
      operationId: AddExternalScreeningRequest
      security:
        - OAuth2:
            - sda_screening-requests_creation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                externalReference:
                  type: string
                  description: 'Id of the party in the external screening system (alpha numeric max. 128 characters, ''-'' and ''_'' allowed)'
                requestType:
                  type: string
                  description: Type of the external screening request
                requestBody:
                  type: object
                  description: Content of the external screening request
              required:
                - requestType
      responses:
        '201':
          $ref: '#/components/responses/CreateExternalPartyScreeningRequest'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 30qm5mtu800xf
  '/objects-to-screen/{otsId}/screening-request/{srId}':
    parameters:
      - $ref: '#/components/parameters/ObjectToScreenId'
      - in: path
        name: srId
        description: screening request unique identifier
        required: true
        schema:
          $ref: '#/components/schemas/ScreeningRequestId'
    post:
      tags:
        - Objects to screen
      summary: Update Screening Request
      description: Update an already existing external screening request with a request body or an external reference
      operationId: UpdateExternalScreeningRequest
      security:
        - OAuth2:
            - sda_screening-request_preparation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                externalReference:
                  type: string
                  description: 'Id of the party in the external screening system (alpha numeric max. 128 characters, ''-'' and ''_'' allowed)'
                requestBody:
                  type: object
                  description: Content of the external screening request
              required:
                - requestBody
      responses:
        '200':
          description: Successfully updated
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: s9ey88tj9uy2c
  '/objects-to-screen/{otsId}/screening-request/{srId}/is-pending-decision':
    parameters:
      - $ref: '#/components/parameters/ObjectToScreenId'
      - $ref: '#/components/parameters/ScreeningRequestId'
    post:
      tags:
        - Objects to screen
      summary: Transition Screening Request to pending decision
      description: Transition an already existing external screening request with a request body or an external reference to pending decision
      operationId: TransitionExternalScreeningRequest_PendingDecision
      security:
        - OAuth2:
            - sda_screening-request_write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: Optional remarks
                responseBody:
                  type: object
                  description: Content of the external screening reponse
                responseType:
                  type: string
                  description: Type of the external screening response
      responses:
        '200':
          description: Successfully transitioned
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 5pzev2co41m3g
  '/objects-to-screen/{otsId}/screening-request/{srId}/is-ok':
    parameters:
      - $ref: '#/components/parameters/ObjectToScreenId'
      - $ref: '#/components/parameters/ScreeningRequestId'
    post:
      tags:
        - Objects to screen
      summary: Transition Screening Request to compliant
      description: Transition an already existing external screening request with a request body or an external reference to compliant
      operationId: TransitionExternalScreeningRequest_OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: Optional remarks
                responseBody:
                  type: object
                  description: Content of the external screening reponse
                responseType:
                  type: string
                  description: Type of the external screening response
      responses:
        '200':
          description: Successfully transitioned
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: mg7srcmzxanbq
      security:
        - OAuth2:
            - sda_screening-request_write
  '/objects-to-screen/{otsId}/screening-request/{srId}/is-not-ok':
    parameters:
      - $ref: '#/components/parameters/ObjectToScreenId'
      - $ref: '#/components/parameters/ScreeningRequestId'
    post:
      tags:
        - Objects to screen
      summary: Transition Screening Request to non-compliant
      description: Transition an already existing external screening request with a request body or an external reference to non-compliant
      operationId: TransitionExternalScreeningRequest_NOK
      security:
        - OAuth2:
            - sda_screening-request_write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: Optional remarks
                responseBody:
                  type: object
                  description: Content of the external screening reponse
                responseType:
                  type: string
                  description: Type of the external screening response
      responses:
        '200':
          description: Successfully transitioned
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: ssitje11gzpfn
  '/objects-to-screen/{otsId}/screening-request/{srId}/is-in-error':
    parameters:
      - $ref: '#/components/parameters/ObjectToScreenId'
      - $ref: '#/components/parameters/ScreeningRequestId'
    post:
      tags:
        - Objects to screen
      summary: Transition Screening Request to error
      description: Transition an already existing external screening request with a request body or an external reference to error state
      operationId: TransitionExternalScreeningRequest_Error
      security:
        - OAuth2:
            - sda_screening-request_write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: Optional remarks
                responseBody:
                  type: object
                  description: Content of the external screening reponse
                responseType:
                  type: string
                  description: Type of the external screening response
      responses:
        '200':
          description: Successfully transitioned
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: qug8yuaxo6l6c
  /screening-requests:
    get:
      security:
        - OAuth2:
            - sda_screening-requests_view
      tags:
        - Objects to screen
      summary: Fetch screening requests
      operationId: FetchAllScreeningRequests
      parameters:
        - name: screeningType
          in: query
          description: ScreeningType code of the screening request
          schema:
            type: string
            example: SCREENING_DEFAULT_PARTY
        - name: objectToScreenId
          in: query
          description: Reference Id of the related object to screen
          schema:
            $ref: '#/components/schemas/ObjectToScreenId'
        - name: screeningRequestId
          in: query
          description: Internal Id of the screening request
          schema:
            type: integer
            example: 1234
        - name: externalReference
          in: query
          description: 'Id of the party in the external screening system (alpha numeric max. 128 characters, ''-'' and ''_'' allowed)'
          schema:
            type: string
            example: ext_01
      responses:
        '200':
          description: List of filtered screening requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningRequestCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: e4a2gff8ybaba
  '/hooks/{hookId}/identities/{identityId}':
    parameters:
      - name: hookId
        in: path
        required: true
        description: id of hook
        schema:
          type: string
          example: '42'
      - name: identityId
        in: path
        required: true
        description: id of target identity
        schema:
          type: string
          example: '1337'
    post:
      security:
        - OAuth2:
            - event_management
      tags:
        - Events
      summary: Association between a hook and an identity
      operationId: AssociateHookToIdentity
      responses:
        '201':
          description: hook was associated to identity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 4yodj4xwh5bqq
    delete:
      security:
        - OAuth2:
            - event_management
      tags:
        - Events
      summary: Dissociates a hook and an identity
      operationId: DissociateHookFromIdentity
      responses:
        '200':
          description: hook was disassociated from identity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: x7qzao2n7m0d5
  /events:
    post:
      deprecated: true
      security:
        - OAuth2:
            - emit_event
      tags:
        - Events
      summary: Emit an event
      operationId: EmitEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmitEventRequest'
      responses:
        '202':
          description: Everything was fine.
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: gluyy7j9r1ejn
  /identities:
    get:
      security:
        - OAuth2:
            - identity_view
      tags:
        - Identities
      summary: List Identities
      description: |
        List all Identities
      operationId: ListIdentities
      parameters:
        - name: legalType
          in: query
          schema:
            $ref: '#/components/schemas/LegalType'
        - name: profileId
          in: query
          schema:
            $ref: '#/components/schemas/ProfileId'
        - name: externalId
          in: query
          schema:
            $ref: '#/components/schemas/ExternalId'
        - name: role
          in: query
          schema:
            $ref: '#/components/schemas/IdentityRole'
        - name: startLastUpdateKyc
          in: query
          schema:
            $ref: ./DateTime.yaml
        - name: endLastUpdateKyc
          in: query
          schema:
            $ref: ./DateTime.yaml
        - name: activitySectorCode
          in: query
          schema:
            type: string
        - name: addressLine1
          in: query
          schema:
            type: string
        - name: addressLine2
          in: query
          schema:
            type: string
        - name: alias
          in: query
          schema:
            type: string
        - name: annualTurnover
          in: query
          schema:
            type: string
        - name: averageSalary
          in: query
          schema:
            type: string
        - name: bankName
          in: query
          schema:
            type: string
        - name: birthCountry
          in: query
          schema:
            $ref: '#/components/schemas/Country'
        - name: birthCounty
          in: query
          schema:
            type: string
        - name: birthDate
          in: query
          schema:
            $ref: ./DateTime.yaml
        - name: birthDepartment
          in: query
          schema:
            type: string
        - name: birthPlace
          in: query
          schema:
            type: string
        - name: brandName
          in: query
          schema:
            type: string
        - name: businessDirectory
          in: query
          schema:
            type: string
        - name: city
          in: query
          schema:
            type: string
        - name: closureDate
          in: query
          schema:
            $ref: ./DateTime.yaml
        - name: contactPhone
          in: query
          schema:
            type: string
        - name: country
          in: query
          schema:
            $ref: '#/components/schemas/Country'
        - name: cumulativeSalary
          in: query
          schema:
            type: string
        - name: deathDate
          in: query
          schema:
            $ref: ./DateTime.yaml
        - name: district
          in: query
          schema:
            type: string
        - name: email
          in: query
          schema:
            type: string
        - name: familyName
          in: query
          schema:
            type: string
        - name: firstName
          in: query
          schema:
            type: string
        - name: gender
          in: query
          schema:
            type: string
            description: 'Expected values are 1 for male, 2 for female and 0 for none'
        - name: givenName
          in: query
          schema:
            type: string
        - name: idNumber
          in: query
          schema:
            type: string
        - name: incomeRange
          in: query
          schema:
            type: string
        - name: information
          in: query
          schema:
            type: string
        - name: jobTitle
          in: query
          schema:
            type: string
        - name: lang
          in: query
          schema:
            $ref: '#/components/schemas/Lang'
        - name: lastName
          in: query
          schema:
            type: string
        - name: legalCategory
          in: query
          schema:
            type: string
        - name: legalForm
          in: query
          schema:
            type: string
        - name: legalName
          in: query
          schema:
            type: string
        - name: maidenName
          in: query
          schema:
            type: string
        - name: marriedName
          in: query
          schema:
            type: string
        - name: nationality
          in: query
          schema:
            type: string
        - name: netIncomeRange
          in: query
          schema:
            type: string
        - name: notTaxResident
          in: query
          schema:
            type: boolean
        - name: numberOfEmployees
          in: query
          schema:
            type: string
        - name: otherNationality
          in: query
          schema:
            type: string
        - name: personTitle
          in: query
          schema:
            $ref: '#/components/schemas/PersonTitle'
        - name: postName
          in: query
          schema:
            type: string
        - name: province
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: registrationCountry
          in: query
          schema:
            $ref: '#/components/schemas/Country'
        - name: registrationDate
          in: query
          schema:
            $ref: ./DateTime.yaml
        - name: registrationNumber
          in: query
          schema:
            type: string
        - name: registrationPlace
          in: query
          schema:
            type: string
        - name: requiredAction
          in: query
          schema:
            type: string
        - name: shareCapital
          in: query
          schema:
            type: string
        - name: socioProfessionalCategory
          in: query
          schema:
            type: string
        - name: spouseFirstName
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/IdentityStatusEnum'
        - name: taxAddressLine1
          in: query
          schema:
            type: string
        - name: taxAddressLine2
          in: query
          schema:
            type: string
        - name: taxCity
          in: query
          schema:
            type: string
        - name: taxCountry
          in: query
          schema:
            $ref: '#/components/schemas/Country'
        - name: taxDistrict
          in: query
          schema:
            type: string
        - name: taxProvince
          in: query
          schema:
            type: string
        - name: taxRegion
          in: query
          schema:
            type: string
        - name: taxZipCode
          in: query
          schema:
            type: string
        - name: webSite
          in: query
          schema:
            type: string
        - name: zipcode
          in: query
          schema:
            type: string
        - name: kycExpiresBefore
          in: query
          schema:
            $ref: ./DateTime.yaml
        - name: kycExpiresAfter
          in: query
          schema:
            $ref: ./DateTime.yaml
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - legalType
              - profileId
              - externalId
              - role
              - lastUpdateKyc
      responses:
        '200':
          description: List of Identities matching the request filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: o3jnucjxkz8jc
    post:
      security:
        - OAuth2:
            - identity_creation
      tags:
        - Identities
      summary: Create Identity
      description: |
        Creating an Identity without Profile will create an Identity with a `NON_CUSTOMER` role.

        To create an Identity with `LEGAL_ENTITY` legal type, at least one relation of type `HAS_FOR_BOARD_MEMBER` is required in `relations` field of creation request.

        Response will not contain the Identity relations provided in the request. Use the relations management endpoints to get and modify Identity relations.
      operationId: CreateIdentity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityCreationRequest'
      responses:
        '201':
          description: Identity has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ykueb6nu66anh
  /identities/migrate:
    post:
      security:
        - OAuth2:
            - sda_identity_creation_migrate
      tags:
        - Migration
      summary: Migrate an Identity
      description: MERCHANT and COMPANY role need a legalName. COMPANY and DISTRIBUTOR need a Board Member with `fromIdentityId` property and a `BOARD_MEMBER` relation nature. DELEGATED_USER role needs a relation nature of `DELEGATED_USER` with a `toIdentityId` property. Migrating an Identity without Profile will create an Identity with a `NON_CUSTOMER` role. Response will not contain the Identity relations provided in the request. Use the relations management endpoints to get and modify Identity relations
      operationId: MigrateIdentity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityMigrationRequest'
      responses:
        '201':
          description: Identity has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: b0tmn35zn0kgt
  '/identities/{identityId}':
    parameters:
      - in: path
        name: identityId
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
    get:
      security:
        - OAuth2:
            - identity_view
      tags:
        - Identities
      summary: Retrieve one Identity
      description: |
        Administrators are not considered as Identity and therefor are not returned by this endpoint.
      operationId: GetIdentity
      responses:
        '200':
          description: The Identity matching the ID in request
          headers:
            Skaleet-Resource-Version:
              description: Indicates the current version of Identity
              schema:
                type: string
                example: '1'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: u4skk4ngbo5es
    patch:
      security:
        - OAuth2:
            - identity_update
      tags:
        - Identities
      summary: Update Identity
      operationId: UpdateIdentity
      parameters:
        - in: header
          name: Skaleet-Resource-Version
          required: false
          description: 'Indicate the version of the modified entity. If it does not correspond to the current version, an error is returned'
          schema:
            type: string
            example: '1'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityUpdateRequest'
      responses:
        '200':
          description: The Identity has been successfully updated. Returns the updated Identity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
        '409':
          $ref: '#/components/responses/VersionConflictResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 6pmo7msddquxf
  '/identities/{identityId}/phones':
    parameters:
      - in: path
        name: identityId
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
    post:
      security:
        - OAuth2:
            - identity_creation
      tags:
        - Identities
      summary: Associate a new phone to an identity
      operationId: AssociatePhoneToIdentity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: An Identity creation form
              required:
                - phone
              properties:
                phone:
                  $ref: '#/components/schemas/Phone'
      responses:
        '204':
          description: Phone has been successfully created an associated
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 4z5d6afnct6qj
  '/identities/{identityId}/activate-phone-pairing':
    parameters:
      - in: path
        name: identityId
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
    post:
      security:
        - OAuth2:
            - sda_phones_association
      tags:
        - Identities
      summary: Activate the pairing of a phone number to an identity
      operationId: ActivateIdentityPhoneNumberPairing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivatePhonePairingParam'
      responses:
        '204':
          description: The pairing of a phone number to an identity has been successfully activated
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: te32yftid2cac
  '/identities/{identityId}/credentials/reset-pincode':
    parameters:
      - in: path
        required: true
        name: identityId
        schema:
          $ref: '#/components/schemas/IdentityId'
    post:
      tags:
        - Identities
      security:
        - OAuth2:
            - sda_pincode_reset
      summary: Reset Identity pincode
      operationId: ResetIdentityPincode
      responses:
        '204':
          description: Identity pincode was successfully reset
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: v1wcsjsax8o0y
  '/identities/{identityId}/change-status':
    parameters:
      - in: path
        required: true
        name: identityId
        schema:
          $ref: '#/components/schemas/IdentityId'
    put:
      tags:
        - Identities
      security:
        - OAuth2:
            - identity_status_change
      summary: Change Identity status
      operationId: ChangeIdentityStatus
      parameters:
        - in: header
          name: Skaleet-Resource-Version
          required: false
          description: 'Indicate the version of the modified entity. If it does not correspond to the current version, an error is returned'
          schema:
            type: string
            example: '1'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeIdentityStatusActionRequest'
      responses:
        '204':
          description: Identity status was successfully changed
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '409':
          $ref: '#/components/responses/VersionConflictResponse'
      x-stoplight:
        id: kqbed56654kj2
  '/identities/{identityId}/recipients':
    parameters:
      - name: identityId
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - recipients_view
      tags:
        - Identities
      summary: List recipients of an identity
      operationId: FetchRecipients
      parameters:
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/RecipientId'
        - name: name
          in: query
          schema:
            $ref: '#/components/schemas/RecipientName'
        - name: externalReference
          in: query
          schema:
            $ref: '#/components/schemas/RecipientExternalReference'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - name
      responses:
        '200':
          description: List of Recipients matching the request filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: cj1f940aplpt3
    post:
      security:
        - OAuth2:
            - recipients_create
      tags:
        - Identities
      summary: Create a recipient for an identity
      operationId: CreateRecipient
      requestBody:
        required: true
        description: |
          Recipient Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipientCreateRequest'
      responses:
        '200':
          description: Recipient Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientCreateResponse'
        '400':
          description: Bad Response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CreationErrorInvalidPhoneNumber'
                  - $ref: '#/components/schemas/CreationErrorDetailsRequired'
                  - $ref: '#/components/schemas/CreationErrorRequiresIBANorAccount'
                  - $ref: '#/components/schemas/CreationErrorNameTooLong'
                  - $ref: '#/components/schemas/CreationErrorUnknownBIC'
                  - $ref: '#/components/schemas/CreationErrorInvalidAddress'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ora7sv6vfanbt
  '/identities/{identityId}/recipients/{recipientId}':
    parameters:
      - name: identityId
        in: path
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        required: true
        schema:
          type: string
        description: 'Recipient ID, including the prefix that indictates the type of recipient (INT or EXT)'
    patch:
      security:
        - OAuth2:
            - recipients_update
      tags:
        - Identities
      summary: Update one recipient for an identity
      operationId: UpdateRecipient
      requestBody:
        required: true
        description: |
          Recipient Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipientUpdateRequest'
      responses:
        '200':
          description: Recipient update successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientUpdateRequest'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 1cvxtvjv0rruc
    delete:
      security:
        - OAuth2:
            - recipients_delete
      tags:
        - Identities
      summary: Delete one recipient for an identity
      operationId: DeleteRecipient
      responses:
        '204':
          description: Recipient update successful response
        '400':
          description: Deleting a recipient that does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 66113
                  message:
                    type: string
                    example: 'The recipient #EXT182 belonging to third party #1 not found'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: vc9be7l731xyh
  '/identities/{identityId}/available-statuses':
    parameters:
      - name: identityId
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - identity_status_change
      tags:
        - Identities
      summary: Get list of statuses available for identity update
      operationId: GetIdentityAvailableStatuses
      responses:
        '200':
          description: List of identity statuses available for a given identity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityStatusList'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: No identity found for this identityId
      x-stoplight:
        id: eg5f4bqq08nxh
  '/identities/{identityId}/accounts':
    parameters:
      - name: identityId
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - partner_accounts_view
      tags:
        - Identities
      summary: Fetch identity's accounts
      operationId: GetIdentityAccounts
      parameters:
        - name: offset
          in: query
          description: Pagination start (from 0)
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
            minimum: 0
            default: 20
      responses:
        '200':
          description: List of accounts belonging to a given identity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCollection'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: No identity found for this identityId
      x-stoplight:
        id: uisjmgozhq0wb
  /tax-profiles:
    get:
      security:
        - OAuth2:
            - tax_profile_view
      tags:
        - TaxProfile
      summary: Load collection of Tax Profile
      operationId: loadTaxProfile
      parameters:
        - name: id
          in: query
          required: false
          description: id of tax profile
          schema:
            type: string
            example: '1337'
        - name: currency
          in: query
          required: false
          description: Currency alpha code (ISO 4217)
          schema:
            type: string
            example: EUR
        - name: offset
          in: query
          description: Pagination start (from 0)
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
            minimum: 0
            default: 20
        - name: sort
          in: query
          description: Field to define sort order
          schema:
            type: string
            default: id
      responses:
        '200':
          description: List of filtered tax profile and pagination infos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxProfileCollectionResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 3bh4is477cidp
  /populations:
    get:
      security:
        - OAuth2:
            - population_view
      tags:
        - Populations
      summary: Load available population
      operationId: loadPopulation
      responses:
        '200':
          description: List of available population
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulationCollectionResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: r9cp7sx64krxv
  /available-employers:
    get:
      security:
        - OAuth2:
            - employers_view
      tags:
        - Employers
      summary: Load collection of employers with at least one employee
      operationId: loadEmployers
      parameters:
        - name: offset
          in: query
          description: Pagination start (from 0)
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
            minimum: 0
            default: 20
        - name: sort
          in: query
          description: Field to define sort order
          schema:
            type: string
            default: id
      responses:
        '200':
          description: List of filtered employers and pagination infos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployersCollectionResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: zj8wcfe2iwmrc
  /documents:
    post:
      security:
        - OAuth2:
            - identity_documents_management
        - OAuth2:
            - documents_management
      tags:
        - Documents Management
      summary: Send a document
      operationId: CreateDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreateRequest'
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: c5580b908uokr
  '/documents/{documentId}':
    parameters:
      - $ref: '#/components/parameters/DocumentId'
    get:
      security:
        - OAuth2:
            - identity_documents_view
        - OAuth2:
            - documents_view
      tags:
        - Documents Management
      summary: Retrieve a document
      operationId: GetDocument
      responses:
        '200':
          description: Example response (Status 200)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '404':
          description: Document not found with this ID
      x-stoplight:
        id: hsy03951j2ab1
    patch:
      summary: Update a document
      tags:
        - Documents Management
      security:
        - OAuth2:
            - identity_documents_management
            - documents_management
      responses:
        '200':
          description: Document has been patched.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
      operationId: UpdateDocument
      x-stoplight:
        id: 736wqd0etm8r3
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  x-stoplight:
                    id: 9q53myfmxu0i6
                directory:
                  type: string
                  x-stoplight:
                    id: 9l4ys247tadpy
                externalData:
                  $ref: '#/components/schemas/ExternalData'
                  x-stoplight:
                    id: p9v5d1cr2ti9k
                metadata:
                  oneOf:
                    - $ref: '#/components/schemas/IncorporationCertificateMetadata'
                    - $ref: '#/components/schemas/PortraitMetadata'
                    - $ref: '#/components/schemas/ProofOfActivityMetadata'
                    - $ref: '#/components/schemas/ProofOfBankDomiciliationMetadata'
                    - $ref: '#/components/schemas/ProofOfIdentityMetadata'
                    - $ref: '#/components/schemas/ProofOfResidenceMetadata'
                    - $ref: '#/components/schemas/ProofOfResourcesMetadata'
                    - $ref: '#/components/schemas/ProofOfTaxationMetadata'
                    - $ref: '#/components/schemas/SignatureMetadata'
                    - $ref: '#/components/schemas/OtherMetadata'
  '/documents/{documentId}/content':
    parameters:
      - $ref: '#/components/parameters/DocumentId'
    get:
      security:
        - OAuth2:
            - identity_documents_view
            - documents_view
      tags:
        - Documents Management
      summary: Retrieve a document's content
      operationId: GetDocumentContent
      responses:
        '200':
          description: The document content
        '404':
          description: Document not found with this ID
      x-stoplight:
        id: 1uql57ge9hp1x
  '/documents/{documentId}/preview':
    parameters:
      - $ref: '#/components/parameters/DocumentId'
    get:
      security:
        - OAuth2:
            - identity_documents_view
        - OAuth2:
            - documents_view
      tags:
        - Documents Management
      summary: 'Retrieve a document''s preview content, with a max width of 200px'
      operationId: GetDocumentPreview
      responses:
        '200':
          description: The document's preview content
        '404':
          description: Document not found with this ID
      x-stoplight:
        id: oo8dwrl7fhrv0
  '/documents/{documentId}/archive':
    parameters:
      - $ref: '#/components/parameters/DocumentId'
    post:
      security:
        - OAuth2:
            - identity_documents_management
            - documents_management
      summary: Archive a document
      tags:
        - Documents Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ArchieveDocument
      x-stoplight:
        id: vshsxyb5i0wyl
      description: Archive a document if it is not already archived
  '/identities/{identityId}/documents':
    parameters:
      - $ref: '#/components/parameters/IdentityId'
    get:
      security:
        - OAuth2:
            - identity_documents_view
            - documents_view
      tags:
        - Documents Management
      summary: List user's documents
      operationId: SearchDocument
      responses:
        '200':
          description: Identity's documents list is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCollection'
        '404':
          description: Identity not found with this ID
      x-stoplight:
        id: js5n85jgtjbm0
      parameters:
        - schema:
            type: string
          in: query
          name: directory
          description: return only documents inside the given directory
        - schema:
            type: string
            enum:
              - 'true'
              - 'false'
              - 'on'
              - 'off'
              - 'yes'
              - 'no'
              - '1'
              - '0'
          in: query
          name: withArchivedDocuments
          description: wether show or hide archived documents
  '/kyc-data/{id}':
    get:
      security:
        - OAuth2:
            - additional-data_read
      tags:
        - Additional Data
      summary: Get an additional data (deprecated)
      operationId: FetchOneAdditionalDataDeprecated
      responses:
        '200':
          description: Description of the KYC Data whose ID you provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KycFieldData'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: gf4go5km6ms6t
      deprecated: true
      description: 'use `/additional-data-configuration/{id}` instead'
    parameters:
      - name: id
        in: path
        required: true
        description: Name of the additional data you want to fetch
        schema:
          type: string
  '/additional-data-configuration/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: Code of the additional data
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - additional-data_read
      tags:
        - Additional Data
      summary: Get an additional data configuration
      operationId: FetchOneAdditionalData
      responses:
        '200':
          description: Description of the Additional data field with the given code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalDataConfiguration'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: zmvkj8j74ghz0
    delete:
      summary: Delete an additional data configuration
      tags:
        - Additional Data
      responses:
        '204':
          description: Additional data successfuly delete.
        default:
          description: Request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: DeleteAdditionalData
      x-stoplight:
        id: tu0s3yvmcmor4
      security:
        - OAuth2:
            - sda_additional-data_delete
      description: Delete an additional data configuration
  /additional-data-configuration-export:
    parameters: []
    get:
      security:
        - OAuth2:
            - additional-data_read
      tags:
        - Additional Data
      summary: Export additional data
      operationId: ExportAdditionalData
      responses:
        '200':
          description: 'Streaming of a json-seq file containing N lines of json objects, starting by `\x1E` and ending by `\n`'
          content:
            application/json-seq:
              schema:
                $ref: '#/components/schemas/AdditionalDataConfiguration'
          headers:
            Content-Type:
              schema:
                type: string
              description: text/jsonl; charset=UTF-8;
            Content-Disposition:
              schema:
                type: string
              description: attachment; filename = "filename.jsonl"
            Content-Length:
              schema:
                type: integer
              description: file size
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      parameters:
        - schema:
            type: string
          in: query
          name: code
          description: additional data code (identifier)
        - schema:
            type: string
            enum:
              - TEXT
              - LONG_TEXT
              - INT
              - FLOAT
              - DATE
              - DATE_TIME
              - BOOLEAN
              - SELECT
              - MULTI_SELECT
              - PHONE
              - EMAIL
              - LANG
              - COUNTRY
              - GENDER
              - TITLE
              - BANK_NAME
              - AUTOCOMPLETE_TEXT
              - PREDEFINED_LIST
              - COMPLIANCE
          in: query
          name: format
          description: field type
        - schema:
            type: string
            enum:
              - NATURAL_PERSON
              - LEGAL_ENTITY
          in: query
          name: legalType
          description: legal type for association
        - schema:
            type: boolean
          in: query
          name: isSearchable
        - schema:
            type: boolean
          in: query
          name: isPersonalData
        - schema:
            type: boolean
          in: query
          name: isSystemField
          description: either is system field (predefined) or custom
      description: ''
      x-stoplight:
        id: 0tq61zuuo7gba
  /additional-data-configuration-import:
    post:
      security:
        - OAuth2:
            - additional-data_write
      tags:
        - Additional Data
      summary: Import additional data
      operationId: ImportAdditionalData
      responses:
        '200':
          description: 'Streaming of a json-seq file containing N lines of json objects, starting by `\x1E` and ending by `\n`'
          content:
            application/json-seq:
              schema:
                type: object
                required:
                  - executionId
                  - jobName
                  - links
                properties:
                  executionId:
                    type: string
                    x-stoplight:
                      id: gqln3xj9jgea9
                    example: dd435-ER345-ESD45r-334D
                  jobName:
                    type: string
                    x-stoplight:
                      id: pekp4ysyeoc99
                    example: JobImportAdditionalDataConfiguration
                    default: JobImportAdditionalDataConfiguration
                  links:
                    type: array
                    x-stoplight:
                      id: u46a1ykz0ee1w
                    items:
                      x-stoplight:
                        id: gzmlvw4fayn5o
                      allOf:
                        - required:
                            - rel
                            - href
                            - type
                          properties:
                            rel:
                              type: string
                              x-stoplight:
                                id: 6kihv2jvl1knn
                              default: progress
                              example: progress
                            href:
                              type: string
                              x-stoplight:
                                id: d7clpxkojc07w
                              example: apiservicedomain/jobs/JobImportAdditionalDataConfiguration_fromAPI
                            type:
                              type: string
                              x-stoplight:
                                id: ydpth5sho81j9
                              default: GET
                              example: GET
                        - x-stoplight:
                            id: m6zwlehepoxi9
                          required:
                            - rel
                            - href
                            - type
                          properties:
                            rel:
                              type: string
                              x-stoplight:
                                id: h3jebsunfq9d3
                              default: output
                              example: output
                            href:
                              type: string
                              x-stoplight:
                                id: 8ipsmb8o9i7ur
                              example: apiservicedomain/executions/34DFK-DR569-DDCEF-DFDF4/outputs/JobImportAdditionalDataConfiguration_inputFile
                            type:
                              type: string
                              x-stoplight:
                                id: p02oi36c7nesw
                              default: GET
                              example: GET
                      type: object
          headers:
            Content-Type:
              schema:
                type: string
              description: text/jsonl; charset=UTF-8;
            Content-Disposition:
              schema:
                type: string
              description: attachment; filename = "filename.jsonl"
            Content-Length:
              schema:
                type: integer
              description: file size
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: xk9y2u8mtlfgd
      parameters:
        - schema:
            type: integer
          in: query
          name: offset
          description: Starting item position (pagination start)
        - schema:
            type: integer
          in: query
          name: limit
          description: Number of item per page (default 1000)
      description: ''
      requestBody:
        description: 'Streaming of a json-seq file containing N lines of json objects, starting by `\x1E` and ending by `\n`'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalDataConfiguration'
    parameters: []
  '/kyc-data-packages/{id}':
    parameters:
      - in: path
        name: id
        required: true
        description: Id of the additional data package
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - additional-data_read
      tags:
        - Additional Data
      summary: Get an additional data package by id (deprecated)
      operationId: RetrieveAdditionalDataPackageByIdDeprecated
      responses:
        '200':
          description: Additional data package
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalDataPackage'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: a4tq7cpdvvp2x
      deprecated: true
      description: 'use `/additional-data-package/{id}` instead'
  '/additional-data-packages/{id}':
    parameters:
      - in: path
        name: id
        required: true
        description: Id of the additional data package
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - additional-data_read
      tags:
        - Additional Data
      summary: Get an additional data package by id
      operationId: RetrieveAdditionalDataPackageById
      responses:
        '200':
          description: Additional data package
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalDataPackage'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 5uwobladi9dxc
  /kyc-data-packages:
    get:
      security:
        - OAuth2:
            - additional-data_read
      tags:
        - Additional Data
      summary: Search additional data packages (deprecated)
      operationId: SearchAdditionalDataPackagesDeprecated
      parameters:
        - name: name
          in: query
          schema:
            type: string
            description: Addition data package name filter
            example: AGENT
        - name: id
          in: query
          schema:
            type: string
            description: Addition data package id filter
            example: '2'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
          allowEmptyValue: true
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
          allowEmptyValue: true
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
          allowEmptyValue: true
      responses:
        '200':
          description: Additional data packages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalDataPackageCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: r5538umwdc9xi
      deprecated: true
      description: use `/additional-data-package` instead
  /additional-data-packages:
    get:
      security:
        - OAuth2:
            - additional-data_read
      tags:
        - Additional Data
      summary: Search additional data packages
      operationId: SearchAdditionalDataPackages
      parameters:
        - name: name
          in: query
          schema:
            type: string
            description: Addition data package name filter
            example: AGENT
        - name: id
          in: query
          schema:
            type: string
            description: Addition data package id filter
            example: '2'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
      responses:
        '200':
          description: Additional data packages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalDataPackageCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: w7j12ooaphvlo
    parameters: []
  '/identities/{identityId}/kyc-renewal-date':
    parameters:
      - in: path
        name: identityId
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
    put:
      security:
        - OAuth2:
            - identity_status_change
      tags:
        - Identities
      summary: Update the renewable KYC renewal date
      operationId: UpdateKycRenewalDate
      parameters:
        - name: renewalDate
          in: query
          required: false
          schema:
            $ref: ./DateTime.yaml
          description: The new renewal date
      responses:
        '204':
          description: Renewable KYC renewal date was successfully updated
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: tyg30h6h4z7vd
  /document-types:
    get:
      security:
        - OAuth2:
            - document_setup_view
      tags:
        - Document Configuration
      summary: Search configured document types
      operationId: SearchDocumentType
      parameters:
        - name: code
          in: query
          schema:
            type: string
            example: CODE
        - name: legalType
          in: query
          schema:
            type: string
            enum:
              - NATURAL_PERSON
              - LEGAL_ENTITY
            example: NATURAL_PERSON
        - name: originType
          in: query
          schema:
            type: string
            enum:
              - PREDEFINED
              - CUSTOM
            example: CUSTOM
        - name: isReceived
          in: query
          schema:
            type: boolean
            example: false
        - name: isGenerated
          in: query
          schema:
            type: boolean
            example: false
        - name: offset
          in: query
          description: Pagination start (from 0)
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
            minimum: 0
            default: 20
        - name: sort
          in: query
          description: Field to define sort order
          schema:
            type: string
            default: code
      responses:
        '200':
          description: Document types search result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: u3xhwlbr94qhy
    post:
      security:
        - OAuth2:
            - document_setup_management
      tags:
        - Document Configuration
      summary: Configure a new document type
      operationId: CreateDocumentType
      requestBody:
        description: New document type
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - name
                - legalType
              properties:
                code:
                  type: string
                  example: PASPOR
                name:
                  type: string
                  example: Passport
                legalType:
                  type: string
                  enum:
                    - NATURAL_PERSON
                    - LEGAL_ENTITY
                isReceived:
                  type: boolean
                  example: true
                isGenerated:
                  type: boolean
                  example: false
                authorizedFormats:
                  type: array
                  example:
                    - image/jpeg
                    - image/png
                    - image/gif
                    - application/pdf
                  description: 'Mandatory for received document. Possible values "image/jpeg", "image/png", "image/gif", "application/pdf"'
                  items:
                    type: string
                    enum:
                      - image/jpeg
                      - image/png
                      - image/gif
                      - application/pdf
                mandatoryPages:
                  type: integer
                  description: Mandatory for received document
                  example: 1
                optionnalPages:
                  type: integer
                  example: 0
      responses:
        '201':
          description: Document type was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentType'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: het0yy9d5ylt7
  '/document-types/{code}':
    parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - document_setup_view
      tags:
        - Document Configuration
      summary: Get document type
      operationId: GetDocumentType
      responses:
        '200':
          description: Get Document type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentType'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 2vl534jyubwou
    patch:
      security:
        - OAuth2:
            - document_setup_management
      tags:
        - Document Configuration
      summary: Modify an existing document type
      operationId: ModifyDocumentType
      requestBody:
        description: Updated document type
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Passport
                legalType:
                  type: string
                  enum:
                    - NATURAL_PERSON
                    - LEGAL_ENTITY
                isReceived:
                  type: boolean
                  example: true
                isGenerated:
                  type: boolean
                  example: false
                authorizedFormats:
                  type: array
                  example:
                    - image/jpeg
                    - image/png
                    - image/gif
                    - application/pdf
                  description: 'Mandatory for received document. Possible values "image/jpeg", "image/png", "image/gif", "application/pdf"'
                  items:
                    type: string
                    enum:
                      - image/jpeg
                      - image/png
                      - image/gif
                      - application/pdf
                mandatoryPages:
                  type: integer
                  description: Mandatory for received document
                  example: 1
                optionnalPages:
                  type: integer
                  example: 0
      responses:
        '200':
          description: Document type modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentType'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: iz5i7axo0t3y4
  /document-packages:
    post:
      security:
        - OAuth2:
            - document_setup_management
      tags:
        - Document Configuration
      summary: Configure a new document package
      operationId: CreateDocumentPackage
      requestBody:
        description: New document package
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentPackage'
      responses:
        '201':
          description: Document package was created
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - name
                  - legalType
                properties:
                  code:
                    type: string
                    example: ENROL1
                  name:
                    type: string
                    example: Package for enrollment
                  legalType:
                    type: string
                    enum:
                      - NATURAL_PERSON
                      - LEGAL_ENTITY
                    example: NATURAL_PERSON
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: rsbmgugwuwlc0
    get:
      security:
        - OAuth2:
            - document_setup_view
      tags:
        - Document Configuration
      summary: Search configured document packages
      operationId: SearchDocumentPackage
      parameters:
        - name: code
          in: query
          schema:
            type: string
        - name: legalType
          in: query
          schema:
            type: string
            enum:
              - NATURAL_PERSON
              - LEGAL_ENTITY
        - name: name
          in: query
          schema:
            type: string
        - name: offset
          in: query
          description: Pagination start (from 0)
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
            minimum: 0
            default: 20
        - name: sort
          in: query
          description: Field to define sort order
          schema:
            type: string
            default: code
      responses:
        '200':
          description: Document packages search result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPackageCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: yjcfbb1apgo9n
  '/document-packages/{packageCode}':
    parameters:
      - name: packageCode
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - document_setup_view
      tags:
        - Document Configuration
      summary: Get one document package
      operationId: GetDocumentPackage
      responses:
        '200':
          description: A document package
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - name
                  - legalType
                  - types
                properties:
                  code:
                    type: string
                    example: ENROL1
                  name:
                    type: string
                    example: Package for enrollment
                  legalType:
                    type: string
                    enum:
                      - NATURAL_PERSON
                      - LEGAL_ENTITY
                    example: NATURAL_PERSON
                  types:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - order
                        - requiredStatus
                      properties:
                        code:
                          type: string
                          example: PASPOR
                        order:
                          type: integer
                          example: 3
                        requiredStatus:
                          type: string
                          enum:
                            - NEW
                            - PENDING
                            - VALIDATED
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 7p2en1uf03k7z
    put:
      security:
        - OAuth2:
            - document_setup_management
      tags:
        - Document Configuration
      summary: Modify an existing document package
      operationId: ModifyDocumentPackage
      requestBody:
        description: Document package to modify
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - legalType
              properties:
                name:
                  type: string
                  example: Package for enrollment
                legalType:
                  type: string
                  enum:
                    - NATURAL_PERSON
                    - LEGAL_ENTITY
                  example: NATURAL_PERSON
      responses:
        '200':
          description: Document package was modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPackage'
      x-stoplight:
        id: 52fhxm336p8kp
  '/document-packages/{packageCode}/types':
    parameters:
      - name: packageCode
        in: path
        required: true
        schema:
          type: string
    post:
      security:
        - OAuth2:
            - document_setup_management
      tags:
        - Document Configuration
      summary: Associate a document type to a package
      operationId: AssociateDocumentTypeToPackage
      requestBody:
        description: Document type association
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                code:
                  type: string
                  example: PASPOR
                order:
                  type: integer
                  example: 3
                requiredStatus:
                  type: string
                  enum:
                    - NEW
                    - PENDING
                    - VALIDATED
                    - UNKNOWN
                  default: UNKNOWN
      responses:
        '201':
          description: Document type association success
          content:
            application/json:
              schema:
                type: object
                required:
                  - packageCode
                  - code
                  - order
                  - requiredStatus
                properties:
                  packageCode:
                    type: string
                    example: TRAVEL_DOCUMENT
                  code:
                    type: string
                    example: PASPOR
                  order:
                    type: integer
                    example: 3
                  requiredStatus:
                    type: string
                    enum:
                      - NEW
                      - PENDING
                      - VALIDATED
                      - UNKNOWN
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: chwm5v75yjz8w
  '/document-packages/{packageCode}/types/{typeCode}':
    parameters:
      - name: packageCode
        in: path
        required: true
        schema:
          type: string
      - name: typeCode
        in: path
        required: true
        schema:
          type: string
    delete:
      security:
        - OAuth2:
            - document_setup_management
      tags:
        - Document Configuration
      summary: Remove association between document type and a package
      operationId: DissociateDocumentTypeFromPackage
      responses:
        '204':
          description: Document type dissociation success
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 6tqw88d2onrtm
  '/document-packages/{packageCode}/types/{typeCode}/increase':
    parameters:
      - name: packageCode
        in: path
        required: true
        schema:
          type: string
      - name: typeCode
        in: path
        required: true
        schema:
          type: string
    patch:
      security:
        - OAuth2:
            - document_setup_management
      tags:
        - Document Configuration
      summary: Increase order of association between document type and a package
      operationId: IncreaseOrderOfDocumentTypeInPackage
      responses:
        '204':
          description: Order document type association increased
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: mknfqz8ue1d87
  '/document-packages/{packageCode}/types/{typeCode}/decrease':
    parameters:
      - name: packageCode
        in: path
        required: true
        schema:
          type: string
      - name: typeCode
        in: path
        required: true
        schema:
          type: string
    patch:
      security:
        - OAuth2:
            - document_setup_management
      tags:
        - Document Configuration
      summary: Decrease order of association between document type and a package
      operationId: DecreaseOrderOfDocumentTypeInPackage
      responses:
        '204':
          description: Order document type association decreased
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: qzpwdyyyxk9cu
  /scores:
    post:
      security:
        - OAuth2:
            - scoring_management
      tags:
        - Scoring
      summary: Create a new score
      operationId: CreateScore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreCreate'
      responses:
        '201':
          description: score has been inserted
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 5bxqj8pswwftf
    get:
      security:
        - OAuth2:
            - scoring_view
      tags:
        - Scoring
      summary: Get score list
      operationId: ScoreList
      parameters:
        - name: code
          in: query
          description: Filter the result on code (like)
          schema:
            type: string
        - name: type
          in: query
          description: Filter the result on type (equal)
          schema:
            type: string
            enum:
              - internal
              - external
        - name: offset
          in: query
          description: Pagination start (from 0)
          schema:
            type: integer
        - name: limit
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
        - name: sort
          in: query
          description: Field to define sort order
          schema:
            type: string
      responses:
        '202':
          description: score list has returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScoreOutput'
                  count:
                    type: integer
                    description: Number of results corresponding to the filter (no matter the pagination)
                    example: 5
                  offset:
                    type: integer
                    example: 0
                    description: Pagination start (from 0)
                  limit:
                    type: integer
                    example: 100
                    description: Number of results to display (default 100)
                  sort:
                    type: string
                    description: Field to define sort order
                    example: code
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ovoh8urfs3nvg
  '/scores/{code}':
    parameters:
      - name: code
        in: path
        required: true
        description: Code of the score
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - scoring_view
      tags:
        - Scoring
      summary: Get one score
      operationId: GetScore
      responses:
        '202':
          description: score return
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreOutput'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: r7c065f2doew1
    put:
      security:
        - OAuth2:
            - scoring_management
      tags:
        - Scoring
      summary: Update score
      operationId: EditScore
      requestBody:
        required: true
        description: Score need to be add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreEdit'
      responses:
        '202':
          description: score has been updated
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: qjia6xz657vwx
    delete:
      security:
        - OAuth2:
            - scoring_management
      tags:
        - Scoring
      summary: Remove score
      operationId: DeleteScore
      responses:
        '202':
          description: score has been deleted
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 9jrbkeexe3k4d
  '/scores/{code}/links':
    parameters:
      - name: code
        in: path
        required: true
        description: Code of the score
        schema:
          type: string
    post:
      security:
        - OAuth2:
            - scoring_management
      tags:
        - Scoring
      summary: Associate something to a score
      operationId: AssociateLinkScore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreLink'
      responses:
        '201':
          description: link has been associated to the score
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ep678zw8j1kyi
    delete:
      security:
        - OAuth2:
            - scoring_management
      tags:
        - Scoring
      summary: Dissociate something from a score
      operationId: DissociateLinkScore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreLink'
      responses:
        '202':
          description: product has been dissociated from the score
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: fbavv1biqn5cp
  /score-results:
    post:
      security:
        - OAuth2:
            - scoring_management
      tags:
        - Scoring
      summary: Create a new score result
      description: Calculate a score according to given input calculation parameters.
      operationId: CreateScoreResult
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreResultCreate'
      responses:
        '201':
          description: Score has been calculated and created according to the given parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreResultOutput'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: m7fae86cknd8w
  '/score-results/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the score result
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - scoring_view
      tags:
        - Scoring
      summary: Get one score result
      operationId: GetScoreResult
      responses:
        '202':
          description: Score result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreResultOutput'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 48xrb87qv5pen
  /velocities:
    get:
      security:
        - OAuth2:
            - velocity_view
      tags:
        - Velocities
      summary: Get velocity batch list with rules
      operationId: VelocityList
      parameters:
        - name: id
          in: query
          description: Filter the result on id
          schema:
            $ref: '#/components/schemas/VelocityBatchId'
        - name: ruleId
          in: query
          description: Filter the result on rule id
          schema:
            $ref: '#/components/schemas/VelocityRuleId'
        - name: profileId
          in: query
          description: Filter the result on user profile id
          schema:
            $ref: '#/components/schemas/ProfileId'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - label
      responses:
        '200':
          description: List of velocity batch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VelocityBatchWithRulesCollection'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ig6b8lnnh7m4l
  '/identities/{identityId}/velocities':
    parameters:
      - $ref: '#/components/parameters/IdentityId'
    get:
      security:
        - OAuth2:
            - velocity_view
      tags:
        - Identities
      summary: Get velocity batch list with rules and current values for given identity
      operationId: VelocityListForIdentity
      responses:
        '200':
          $ref: '#/components/responses/IdentityVelocitiesResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: yjijyhd398ujj
  '/identities/{identityId}/relations/{relationId}':
    parameters:
      - $ref: '#/components/parameters/IdentityId'
      - in: path
        name: relationId
        required: true
        schema:
          type: string
          description: Id for a relation
    delete:
      security:
        - OAuth2:
            - identity_relations_management
      tags:
        - Identities
      summary: Delete a relation
      operationId: DeleteIdentityRelation
      responses:
        '204':
          description: Response was successfully deleted
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: 1yjmhyt0mgulm
  '/identities/{identityId}/relations':
    parameters:
      - $ref: '#/components/parameters/IdentityId'
    get:
      tags:
        - Identities
      security:
        - OAuth2:
            - identity_relations_view
      operationId: GetIdentityRelations
      summary: Get Identity's relations
      responses:
        '200':
          $ref: '#/components/responses/GetIdentityRelationsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: kgfgtfbtqra4n
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nature
                - sourceId
              properties:
                nature:
                  $ref: '#/components/schemas/RelationNatureId'
                sourceId:
                  $ref: '#/components/schemas/IdentityId'
      tags:
        - Identities
      security:
        - OAuth2:
            - identity_relations_management
      operationId: CreateIdentityRelation
      summary: Create a new relation for given identity
      responses:
        '200':
          $ref: '#/components/responses/CreateIdentityRelationResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: zp4lz9orve7z3
  '/identities/{identityId}/operations':
    parameters:
      - $ref: '#/components/parameters/IdentityId'
    get:
      parameters:
        - name: notBefore
          in: query
          required: true
          schema:
            type: string
            format: date-time
            description: To filter operations recorded after the date
        - name: notAfter
          in: query
          required: true
          schema:
            type: string
            format: date-time
            description: To filter operations recorded before the date
        - in: query
          name: id
          schema:
            $ref: '#/components/schemas/OperationId'
        - in: query
          name: typeId
          schema:
            $ref: '#/components/schemas/OperationTypeId'
        - name: media
          in: query
          description: Operation media
          schema:
            $ref: '#/components/schemas/Media'
        - name: amount
          in: query
          description: Operation amount
          schema:
            $ref: '#/components/schemas/Amount'
        - name: currency
          in: query
          description: Operation currency ISO numeric code
          schema:
            type: integer
        - name: role
          in: query
          schema:
            $ref: '#/components/schemas/ContributorRole'
        - name: phoneNumber
          in: query
          description: Phone number associated to operation
          schema:
            type: string
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            enum:
              - id
            default: id
      tags:
        - Identities
      security:
        - OAuth2:
            - partner_operations_view
      summary: Get Identity's operations
      operationId: GetIdentityOperations
      responses:
        '200':
          $ref: '#/components/responses/GetIdentityOperationsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: uhpux2jx1h4db
  '/form-configurations/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: Code of the form configuration
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - form_read
      tags:
        - Form configuration
      summary: Get a form configuration
      operationId: RetrieveAFormConfiguration
      responses:
        '200':
          description: Form configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormConfiguration'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: f8seu1mf49omr
  /form-configurations:
    get:
      security:
        - OAuth2:
            - form_read
      tags:
        - Form configuration
      summary: Search a form configuration
      operationId: SearchAFormConfiguration
      parameters:
        - name: attribution
          in: query
          schema:
            type: string
            description: Attribution of the form configuration
            enum:
              - ONBOARDING
              - CREDIT_REQUEST
        - name: code
          in: query
          schema:
            type: string
            description: Code of the form configuration
            example: FORM_1548
        - name: legalType
          in: query
          schema:
            $ref: '#/components/schemas/LegalType'
      responses:
        '200':
          description: Form collection
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                      count:
                        type: integer
                        description: the total count of objects in collection
                        minimum: 0
                      offset:
                        type: integer
                        description: Pagination start (from 0)
                        minimum: 0
                        default: 0
                      limit:
                        type: integer
                        description: Number of results to display (default 20)
                        minimum: 0
                        maximum: 100
                        default: 20
                      sort:
                        type: string
                        description: Field to define sort order
                        default: id
                  - type: object
                    properties:
                      items:
                        type: array
                        description: Form configuration item
                        items:
                          $ref: '#/components/schemas/FormConfigurationWithoutSteps'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ctshg63thnbug
  '/form-configurations/{id}/start-session':
    parameters:
      - name: id
        in: path
        required: true
        description: Code of the form configuration
        schema:
          type: string
    post:
      security:
        - OAuth2:
            - sda_form_submit
      tags:
        - Form configuration
      summary: Start session form
      operationId: StartSessionForm
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - partyId
              properties:
                partyId:
                  description: Party concerned by the session form
                  type: string
      responses:
        '201':
          description: Form session started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormConfigurationSession'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: w0l18rlz37obr
  '/form-configuration-sessions/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: Session id of the form configuration
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - form_read
      tags:
        - Form configuration
      summary: Get a session form
      operationId: GetSessionForm
      responses:
        '200':
          description: Form session fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormConfigurationSession'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 4ur74345r49ks
    post:
      security:
        - OAuth2:
            - sda_form_submit
      tags:
        - Form configuration
      summary: Submit session form
      operationId: SubmitSessionForm
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - form
              properties:
                form:
                  allOf:
                    - $ref: '#/components/schemas/InputValues'
      responses:
        '204':
          description: Session form submitted
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 3e8lr1pfz3z2u
  '/identities/{identityId}/onboarding-file':
    parameters:
      - $ref: '#/components/parameters/IdentityId'
    get:
      tags:
        - Identities
      security:
        - OAuth2:
            - sda_customer_onboarding_view
      operationId: GetOnboardingFile
      summary: Get Party onboarding file
      description: |
        Returns the Client onboarding file containing the onboarding form, status and possible actions.
      responses:
        '200':
          $ref: '#/components/responses/GetOnboardingFileResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: yktk2epxmy32s
    patch:
      tags:
        - Identities
      security:
        - OAuth2:
            - sda_customer_onboarding_update
      operationId: UpdateOnboardingFile
      summary: Update onboarding file
      description: Update onboarding file content
      requestBody:
        $ref: '#/components/requestBodies/OnboardingFileUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/OnboardingFileUpdatedResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: ochzy3gbxqoah
  '/identities/{identityId}/onboarding-file/submit':
    parameters:
      - $ref: '#/components/parameters/IdentityId'
    post:
      tags:
        - Identities
      security:
        - OAuth2:
            - sda_customer_onboarding_submit
      operationId: SubmitOnboardingFile
      summary: Submit onboarding file
      description: Submit completed onboarding file content
      responses:
        '204':
          description: Onboarding file was submitted successfully
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: oc7wepflymnyc
  /relation-natures:
    get:
      security:
        - OAuth2:
            - identity_relations_view
      tags:
        - Customers
      summary: Get available relation natures
      description: Returns the full list of available natures of relation
      operationId: GetRelationNatures
      parameters:
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
      responses:
        '200':
          description: Relation natures paginated list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationNatureCollection'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: ms3j37ijp162d
  '/transactions/{id}/external-data':
    parameters:
      - in: path
        required: true
        name: id
        schema:
          $ref: '#/components/schemas/TransactionId'
    patch:
      tags:
        - Transaction - External Data
      security:
        - OAuth2:
            - sda_transactions_external-data_update
      summary: Update the external data of a transaction
      operationId: UpdateTransactionExternalData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTransactionExternalDataRequest'
      responses:
        '204':
          description: The transaction's external information have been updated with success.
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: 5nvwvro1mzv3v
  /retail-customer-onboarding/initiate:
    post:
      security:
        - OAuth2:
            - sda_customer_onboarding_create
      tags:
        - Onboarding
      summary: Initiate natural person onboarding
      operationId: InitiateNaturalPersonOnboarding
      requestBody:
        $ref: '#/components/requestBodies/InitiateNaturalPersonOnboardingRequest'
      responses:
        '204':
          description: Party onboarding has been initiated successfully.
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: cdqdf90pbzvwc
  '/accounts/{accountId}/balances':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountNumber'
    get:
      security:
        - OAuth2:
            - sda_accounts_view
      tags:
        - Accounts
      summary: Read an account's balances
      operationId: LoadAccountBalances
      responses:
        '200':
          description: Account balances
          content:
            application/json:
              schema:
                $ref: ./AccountBalances.yaml
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: n2i5xigo62ek4
  '/accounts/{accountNumber}/balances-by-date':
    parameters:
      - name: accountNumber
        in: path
        required: true
        schema:
          type: string
          title: AccountNumber
          description: Account number
          examples:
            - '10000000157'
          x-stoplight:
            id: 5b0zj49q9xz8w
    get:
      security:
        - OAuth2:
            - sda_accounts_view
      tags:
        - Accounts
      summary: Read an account's balances at a given  date
      operationId: LoadAccountBalancesByDate
      responses:
        '200':
          description: Account balances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalancesByDate'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: pn342rkesibjt
      parameters:
        - schema:
            type: string
            format: date
            example: '2024-01-25'
          in: query
          name: date
          description: date to compute the account balances at
  '/accounts/{accountNumber}/retrieve-history':
    parameters:
      - name: accountNumber
        in: path
        required: true
        schema:
          type: string
          title: AccountNumber
          description: Account number
          examples:
            - '10000000157'
          x-stoplight:
            id: 5b0zj49q9xz8w
    get:
      security:
        - OAuth2:
            - sda_accounts_view
      tags:
        - Accounts
      summary: Read an account's balances history within 3 months range
      operationId: LoadAccountBalancesHistory
      responses:
        '200':
          description: Account balances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalancesHistory'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: 6baqr5th7o9af
      parameters:
        - schema:
            type: string
            format: date
            example: '2024-01-01'
          in: query
          name: startDate
          description: start date of the 3 months margin
        - schema:
            type: string
            format: date
            example: '2024-04-01'
          in: query
          name: endDate
          description: end date of the 3 months margin
  /accounts:
    get:
      security:
        - OAuth2:
            - sda_accounts_view
      tags:
        - Accounts
      summary: Read account list
      operationId: ListAccounts
      parameters:
        - name: id
          in: query
          description: Filter for account number
          schema:
            $ref: '#/components/schemas/AccountNumber'
        - name: createdBefore
          in: query
          description: Filter for accounts created before this date
          schema:
            $ref: ./DateTime.yaml
        - name: createdAfter
          in: query
          description: Filter for accounts created after this date
          schema:
            $ref: ./DateTime.yaml
        - name: lastUsedBefore
          in: query
          description: Filter for accounts which last usage date was before this date
          schema:
            $ref: ./DateTime.yaml
        - name: lastUsedAfter
          in: query
          description: Filter for accounts which last usage date was after this date
          schema:
            $ref: ./DateTime.yaml
        - name: lastChangedBefore
          in: query
          description: Filter for accounts which last status change date was before this date
          schema:
            $ref: ./DateTime.yaml
        - name: lastChangedAfter
          in: query
          description: Filter for accounts which last status change date was after this date
          schema:
            $ref: ./DateTime.yaml
        - name: currency
          in: query
          description: Filter for accounts using this currency
          schema:
            $ref: '#/components/schemas/Currency'
        - name: externalId
          in: query
          description: Filter for accounts having given external identifier (please note this filter does not allow filtering on account "external references")
          schema:
            $ref: '#/components/schemas/AccountExternalId'
        - name: productId
          in: query
          description: Filter for accounts using given product
          schema:
            $ref: '#/components/schemas/ProductId'
        - name: userId
          in: query
          description: Filter for accounts owned by given user
          schema:
            $ref: '#/components/schemas/UserId'
        - name: status
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AccountStatus'
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/AccountType'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - created
              - lastUsed
              - lastChanged
              - userId
              - externalId
              - type
              - status
              - currency
      responses:
        '200':
          description: Read account list
          content:
            application/json:
              schema:
                $ref: ./Accounts.yaml
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: qplg5ueto0tzo
    post:
      security:
        - OAuth2:
            - sda_accounts_creation
      tags:
        - Accounts
      summary: Create an account
      operationId: CreateAccount
      requestBody:
        $ref: '#/components/requestBodies/CreateAccountRequest'
      responses:
        '201':
          description: Account creation response.
          content:
            application/json:
              schema:
                $ref: ./Account.yaml
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ghfs8vixnrylh
  /accounts/migrate:
    post:
      security:
        - OAuth2:
            - sda_accounts_migration
      tags:
        - Migration
      summary: Migrate an account
      operationId: MigrateAccounts
      requestBody:
        $ref: '#/components/requestBodies/MigrateAccountRequest'
      responses:
        '201':
          description: Account has been migrated successfully.
          content:
            application/json:
              schema:
                $ref: ./Account.yaml
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
      x-stoplight:
        id: kewmyntp6zbu7
  '/accounts/{accountId}/bank-account-details/download':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
    get:
      security:
        - OAuth2:
            - sda_accounts_view
      tags:
        - Accounts
      summary: Download bank account details
      operationId: DownloadBankAccountDetails
      responses:
        '200':
          description: Document content
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: pug3mxqi3h6vy
  '/accounts/{accountId}/link':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountNumber'
    post:
      security:
        - OAuth2:
            - sda_accounts_viewers_association
      tags:
        - Accounts
      summary: Link delegate users to an account
      operationId: LinkViewersToAccount
      requestBody:
        description: Link delegate users or profile of delegate users to an account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkOrUnlinkDelegateUsersToAccountRequest'
      responses:
        '204':
          description: Delegated users are linked to this account
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: awckm5deaavpt
  '/accounts/{accountId}/unlink':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountNumber'
    post:
      security:
        - OAuth2:
            - sda_accounts_viewers_association
      tags:
        - Accounts
      summary: Unlink account's delegate users
      operationId: UnlinkViewersToAccount
      requestBody:
        description: Unlink delegate users or profile of delegate users to an account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkOrUnlinkDelegateUsersToAccountRequest'
      responses:
        '204':
          description: Delegated users are no longer linked to this account
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: azhhtwq47ppi2
  '/accounts/{accountId}/external-references':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountNumber'
    post:
      operationId: CreateAccountExternalReference
      requestBody:
        description: External reference to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountExternalReference'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountExternalReference'
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      security:
        - OAuth2:
            - sda_accounts_external_references_create
      summary: Create external reference for an account
      tags:
        - Accounts
      x-stoplight:
        id: a7byi30q0tm8g
    get:
      operationId: GetAccountExternalReferences
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountExternalReference'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      security:
        - OAuth2:
            - sda_accounts_external_references_read
      summary: Get all external references for an account
      tags:
        - Accounts
      x-stoplight:
        id: qy39x8vaxt1ud
    put:
      operationId: ReplaceAccountExternalReferences
      requestBody:
        description: External references that will replace the existing ones
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AccountExternalReference'
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      security:
        - OAuth2:
            - sda_accounts_external_references_update
      summary: Replace all external references for an account
      tags:
        - Accounts
      x-stoplight:
        id: 4wxv8l0k0mvu2
    delete:
      operationId: DeleteAccountExternalReferences
      requestBody:
        description: External reference to delete
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountExternalReference'
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      security:
        - OAuth2:
            - sda_accounts_external_references_delete
      summary: Delete an external reference for an account
      tags:
        - Accounts
      x-stoplight:
        id: 2gkye658upsl1
  '/accounts/{accountId}/external-references/{type}/{reference}':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountNumber'
      - name: type
        in: path
        required: true
        schema:
          type: string
        description: Type of the external reference
      - name: reference
        in: path
        required: true
        schema:
          type: string
        description: Reference of the external reference
    patch:
      operationId: UpdateAccountExternalReference
      requestBody:
        description: External reference to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountExternalReference'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountExternalReference'
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account or external reference was not found
      security:
        - OAuth2:
            - sda_accounts_external_references_update
      summary: Update an external reference for an account
      tags:
        - Accounts
      x-stoplight:
        id: zvalrbhcguz2e
  /external-references:
    get:
      tags:
        - Identities
      summary: Get external references for party
      description: This endpoint returns all external references for a specific party.
      operationId: GetPartyExternalReferences
      parameters:
        - in: query
          name: partyId
          description: Party unique identifier
          schema:
            $ref: '#/components/schemas/IdentityId'
        - in: query
          name: type
          description: Identifier of the partner
          schema:
            $ref: '#/components/schemas/PartyExternalReferenceType'
        - in: query
          name: value
          description: Identifier of the party in the partner system
          schema:
            $ref: '#/components/schemas/PartyExternalReferenceValue'
      security:
        - OAuth2:
            - sda_external-references_view
      responses:
        '200':
          $ref: '#/components/responses/GetPartyExternalReferencesResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 0moeypu9kt69z
  '/accounts/{accountId}/externalId':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
    patch:
      security:
        - OAuth2:
            - sda_accounts_externalId_update
      tags:
        - Accounts
      summary: Update an account's external ID
      operationId: UpdateAccountExternalId
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - externalId
              properties:
                externalId:
                  type: string
                  description: New externalId value
      responses:
        '204':
          description: Account externalId was updated
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: ibrp2ha700fo5
  '/identities/{identityId}/external-references':
    parameters:
      - $ref: '#/components/parameters/IdentityId'
    post:
      tags:
        - Identities
      summary: Add external references for party
      description: This endpoint permits to add an external reference for a specific party.
      operationId: AddPartyExternalReferences
      security:
        - OAuth2:
            - sda_external-references_creation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: The type of the external reference to add
                value:
                  type: string
                  description: The value of the external reference to add
              required:
                - type
      responses:
        '201':
          description: External reference added.
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: iurk8q25of3gy
  '/accounts/{accountId}/iban':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
    post:
      security:
        - OAuth2:
            - sda_accounts_iban_create
      tags:
        - Accounts
      summary: Create an account's IBAN
      operationId: CreateAccountIban
      requestBody:
        required: true
        content: {}
      responses:
        '204':
          description: Account IBAN was created
          content:
            application/json:
              schema:
                type: object
                properties:
                  iban:
                    type: string
                x-examples:
                  Example 1:
                    iban: FR7630027160211002452185750
              examples:
                Example 1:
                  value:
                    iban: FR7630027160211002452185750
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: bema9pxmrr8b2
    patch:
      security:
        - OAuth2:
            - sda_accounts_iban_update
      tags:
        - Accounts
      summary: Update an account's IBAN
      operationId: UpdateAccountIban
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - iban
              properties:
                iban:
                  type: string
                  description: New account IBAN
      responses:
        '204':
          description: Account IBAN was updated
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: opamdn89iiieu
  '/accounts/{accountId}/external-data':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
    patch:
      security:
        - OAuth2:
            - sda_accounts_externalData_update
      tags:
        - Accounts
      summary: Update the external data of an account
      operationId: UpdateAccountExternalData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - externalData
              properties:
                externalData:
                  type: object
                  description: Set of key-value pairs that you can attach to an object. This can be useful for storing your additional information about the object in a structured format.
                  example:
                    key1: value1
                    key2: value2
      responses:
        '204':
          description: The account's external data have been updated with success.
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: pes3d3c8c5f4z
  '/accounts/{accountId}/name':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
    patch:
      security:
        - OAuth2:
            - sda_accounts_name_update
      tags:
        - Accounts
      summary: Update an account's name
      operationId: UpdateAccountName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: 'New account name, leave empty to reset to default account name'
      responses:
        '204':
          description: Account name was updated
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: 1c3zbdm52nqlt
  '/accounts/{accountId}/close':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
    post:
      security:
        - OAuth2:
            - sda_accounts_close
      tags:
        - Accounts
      summary: Close an account
      operationId: CloseAccount
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusUpdateReason'
      responses:
        '204':
          description: Account was closed
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: 4wgyqcw6gxz44
  '/identities/{identityId}/onboarding-file/request-complementary-information':
    post:
      summary: Request Complementary Informations
      tags:
        - Onboarding
        - Identities
      responses:
        '204':
          description: No Content
        default:
          $ref: '#/components/responses/ErrorResponse'
      operationId: post-identities-identityId-request-complementary-information
      x-stoplight:
        id: zqj1pbc4u7wmq
      description: Request a pending user to upload new documents
      security:
        - OAuth2:
            - sda_customer_onboarding_manage
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  x-stoplight:
                    id: tfe7i44nb52yf
                  description: Reason of the complementary information request
      parameters: []
    parameters:
      - $ref: '#/components/parameters/IdentityId'
  '/accounts/{accountId}/block':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
    post:
      security:
        - OAuth2:
            - sda_accounts_block
      tags:
        - Accounts
      summary: Block an account
      operationId: BlockAccount
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusUpdateReason'
      responses:
        '204':
          description: Account was blocked
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: kyl67dwpu2e05
  '/accounts/{accountId}/unblock':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
    post:
      security:
        - OAuth2:
            - sda_accounts_unblock
      tags:
        - Accounts
      summary: Unblock an account
      operationId: UnblockAccount
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusUpdateReason'
      responses:
        '204':
          description: Account was unblocked
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: q470pbpfaun76
  /required-action-types:
    get:
      security:
        - OAuth2:
            - sda_required_action_types_read
      tags:
        - Required Action Types
      summary: Get required action types list
      operationId: GetRequiredActionTypes
      responses:
        '200':
          description: Array of required action types
          content:
            application/json:
              example:
                - NONE
                - ADMIN_ACTION_REQUIRED
                - CLIENT_ACTION_REQUIRED
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
      x-stoplight:
        id: mi1dj7hjrdhtg
  '/identities/{identityId}/required-actions':
    parameters:
      - $ref: '#/components/parameters/IdentityId'
    put:
      tags:
        - Identities
      summary: Add required action
      description: Add a required action to a party
      operationId: PartyAddRequiredAction
      security:
        - OAuth2:
            - sda_required-actions_write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                requiredActionType:
                  type: string
                  description: type of the action to be added
                reason:
                  type: object
                  description: reason for adding the action
              required:
                - requiredActionType
                - reason
      responses:
        '200':
          description: Successfully added required action to party
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: kljhkougutiwk
    delete:
      tags:
        - Identities
      summary: Deleted required action
      description: Delete required action of a party
      operationId: PartyManualDeleteRequiredAction
      parameters:
        - in: query
          name: action
          description: Type of the action to be deleted
          required: false
          schema:
            type: string
      security:
        - OAuth2:
            - sda_required-actions_write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Reason for deleting the action
      responses:
        '204':
          description: Successfully deleted required action to party
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: oumu2rlgs4zqe
  '/accounts/{accountId}/statements':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountNumber'
    get:
      security:
        - OAuth2:
            - sda_accounts_view
      tags:
        - Accounts
      summary: List all account statements
      operationId: ListAccountStatement
      responses:
        '200':
          description: Returns an account statement collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatementCollection'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
      x-stoplight:
        id: dvq36p0c4ewn0
  '/accounts/{accountId}/statements/{statementId}/download':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountNumber'
      - name: statementId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountStatementId'
    get:
      security:
        - OAuth2:
            - sda_accounts_view
      tags:
        - Accounts
      summary: Download an account's statement
      operationId: DownloadAccountStatement
      responses:
        '200':
          description: the statement document as PDF file
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: q19fqexppmqbr
  '/cards/{cardId}/details':
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CardId'
    post:
      security:
        - OAuth2:
            - sda_card_sensitive_data_view
      tags:
        - Cards
      operationId: GetCardDetails
      summary: Get a card's details
      requestBody:
        description: Provide the public key to encrypt the card details
        content:
          application/json:
            schema:
              type: object
              properties:
                publicKey:
                  type: string
      responses:
        '200':
          description: The card's details
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CardDetail'
                  - $ref: '#/components/schemas/CardImage'
      x-stoplight:
        id: f353yz0xkllgk
  /cards/migrate:
    post:
      security:
        - OAuth2:
            - sda_card_migration
      tags:
        - Migration
      summary: Migrate a card
      operationId: MigrateCard
      requestBody:
        $ref: '#/components/requestBodies/MigrateCardRequest'
      responses:
        '201':
          description: Card creation response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardItemWithLinks'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
      x-stoplight:
        id: fv3iywib963hh
  '/accounts/{accountId}/authorizedOverdraft':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - authorizedOverdraft_read
      tags:
        - Accounts
      summary: Get authorized overdraft for an account
      operationId: GetAuthorizedOverdraft
      responses:
        '200':
          description: Account overdraft information
          content:
            application/json:
              schema:
                $ref: ./AccountOverdraft.yaml
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: ih4tauelmhjv7
    patch:
      security:
        - OAuth2:
            - authorizedOverdraft_write
      tags:
        - Accounts
      summary: Update an account's discretionary overdraft
      operationId: UpdateDiscretionaryOverdraft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                overdraft:
                  description: Discretionary overdraft configuration
                  properties:
                    authorizedOverdraft:
                      required:
                        - currency
                        - value
                      type: object
                      properties:
                        currency:
                          $ref: '#/components/schemas/Currency'
                        value:
                          $ref: '#/components/schemas/AmountValue'
                  type: object
                  example:
                    authorizedOverdraft:
                      currency: EUR
                      value: 100
      responses:
        '204':
          description: The overdraft configuration has been successfully updated for the specified current account.
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: yttqcrflfxpki
    delete:
      security:
        - OAuth2:
            - authorizedOverdraft_write
      tags:
        - Accounts
      summary: Delete discretionary overdraft for an account
      operationId: DeleteDiscretionaryOverdraft
      responses:
        '204':
          description: The authorized overdraft has been successfully deleted for the specified current account.
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: c4hmz04xatrex
  '/accounts/{accountId}/additional-data':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountNumber'
    get:
      security:
        - OAuth2:
            - sda_accounts_additionalData_read
      tags:
        - Accounts
      summary: Retrieve an account additional data
      operationId: GetAccountAdditionalData
      responses:
        '200':
          description: Account additional data
          content:
            application/json:
              schema:
                type: object
                properties:
                  key1:
                    type: string
                    example: value1
                  key2:
                    type: string
                    example: value2
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 73q8cj71zdqup
    patch:
      security:
        - OAuth2:
            - sda_accounts_additionalData_update
      tags:
        - Accounts
      summary: Update the additional data of an account
      operationId: UpdateAccountAdditionalData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key1:
                  type: string
                  example: value1
                key2:
                  type: string
                  example: value2
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  key1:
                    type: string
                    example: value1
                  key2:
                    type: string
                    example: value2
          description: The account's additional data have been updated with success.
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: dzio77zy7g7ik
  '/identities/{identityId}/add-external-score-result':
    parameters:
      - $ref: '#/components/parameters/IdentityId'
    post:
      tags:
        - Identities
      summary: Add an external score result
      description: Adds a new external score result for a previously defined score
      operationId: AddExternalScoreResult
      security:
        - OAuth2:
            - scoring_management
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scoreCode:
                  type: integer
                scoreValue:
                  type: integer
              required:
                - scoreCode
                - scoreValue
      responses:
        '201':
          $ref: '#/components/responses/AddExternalScoreResultResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: 1r5k3deh2k5k1
  /transactions:
    get:
      security:
        - OAuth2:
            - sda_transactions_view
      tags:
        - Transactions
      summary: Search in transaction history
      operationId: SearchTransactions
      parameters:
        - name: externalId
          in: query
          description: Filter the result on transaction external id
          schema:
            $ref: '#/components/schemas/TransactionExternalId'
        - name: type
          in: query
          description: Filter the result on transaction type
          schema:
            $ref: '#/components/schemas/TransactionType'
        - name: startDate
          in: query
          description: replaced by bookingDateAfter
          schema:
            $ref: ./DateTime.yaml
        - name: endDate
          in: query
          description: replaced by bookingDateBefore
          schema:
            $ref: ./DateTime.yaml
          deprecated: true
        - name: bookingDateAfter
          in: query
          description: filter bookingDates after given date
          schema:
            type: string
            format: date-time
            example: '2023-01-25T12:00:00Z'
        - name: bookingDateBefore
          in: query
          description: filter bookingDates before given date
          schema:
            type: string
            example: '2023-01-25T12:00:00Z'
        - name: valueDateAfter
          in: query
          description: filter valueDates after given date
          schema:
            type: string
            format: date
            example: '2023-01-25'
        - name: valueDateBefore
          in: query
          description: filter valueDates before given date
          schema:
            type: string
            example: '2023-01-25'
        - name: amount
          in: query
          description: Filter for given amount (integer value)
          schema:
            $ref: '#/components/schemas/AmountValue'
        - name: currency
          in: query
          description: Filter for given currency
          schema:
            $ref: '#/components/schemas/Currency'
        - name: accountId
          in: query
          description: Filter for given account
          schema:
            $ref: '#/components/schemas/AccountNumber'
        - name: userId
          in: query
          description: Filter for given identity
          schema:
            $ref: '#/components/schemas/IdentityId'
        - name: cardId
          in: query
          description: Filter for given card
          schema:
            $ref: '#/components/schemas/CardId'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - date
              - amount
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCollection'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: 'If filtering on a specific account, means that given account was not found'
      x-stoplight:
        id: c63i8nttaj13o
  /transactions/export:
    get:
      security:
        - OAuth2:
            - sda_transactions_view
      tags:
        - Transactions
      summary: Export all transactions
      operationId: ExportTransaction
      parameters:
        - name: Skaleet-Column-ExternalData
          in: header
          description: Add Transaction external data in the exported CSV file
          schema:
            type: integer
            example: 1
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/TransactionId'
        - name: externalId
          in: query
          schema:
            $ref: '#/components/schemas/TransactionExternalId'
        - name: userId
          in: query
          schema:
            $ref: '#/components/schemas/UserId'
        - name: type
          in: query
          description: Transaction type
          schema:
            $ref: '#/components/schemas/TransactionType'
        - name: startDate
          in: query
          description: Transaction date range start
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Transaction date range end
          schema:
            type: string
            format: date-time
        - name: amount
          in: query
          description: Transaction amount (in cents)
          schema:
            type: integer
        - name: currency
          in: query
          description: Transaction currency
          schema:
            $ref: '#/components/schemas/Currency'
        - name: media
          in: query
          description: Transaction media
          schema:
            allOf:
              - default: ALL
              - $ref: '#/components/schemas/Media'
        - name: accountingCode
          in: query
          schema:
            type: string
            description: Accounting code from the point of view of the calling system
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - externalId
              - type
              - date
              - currency
              - media
              - amount
              - accountingCode
      responses:
        '200':
          description: A CSV file with the requested export
          content:
            text/csv:
              schema:
                type: string
      x-stoplight:
        id: v13b6tgjcfihr
  '/transactions/{transactionId}':
    parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          type: integer
    get:
      security:
        - OAuth2:
            - sda_transactions_view
      tags:
        - Transactions
      summary: Retrieve a specific transaction
      operationId: GetTransaction
      responses:
        '200':
          description: A transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given transaction was not found
      x-stoplight:
        id: ea1rrjcg7x56v
  '/identities/{identityId}/scores':
    parameters:
      - $ref: '#/components/parameters/IdentityId'
    get:
      tags:
        - Identities
      summary: Get linked score results
      description: This endpoint returns references to all external and internal scores and score results which can be fetched with their corresponding links.
      operationId: GetScoreLinkToScoreResults
      parameters:
        - in: query
          name: scoreCode
          description: Filter on the Score code
          schema:
            $ref: '#/components/schemas/ScoreCode'
      security:
        - OAuth2:
            - scoring_management
      responses:
        '200':
          $ref: '#/components/responses/GetScoreLinkToResultsResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: h8xuyrcyjtfmi
  '/accounts/{accountId}':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountNumber'
    get:
      security:
        - OAuth2:
            - sda_accounts_view
      tags:
        - Accounts
      summary: Retrieve an account
      operationId: GetAccount
      responses:
        '200':
          description: Account information
          content:
            application/json:
              schema:
                $ref: ./Account.yaml
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: fl1bz15hgfw2o
  /general-accounts:
    get:
      security:
        - OAuth2:
            - sda_accounts_view
      tags:
        - General Accounts
      summary: Read general account list
      operationId: ListGeneralAccounts
      parameters:
        - name: id
          in: query
          description: 'Filter by account id, can be used with multiple values separated by comma'
          schema:
            type: string
        - name: number
          in: query
          description: Filter by account number
          schema:
            type: string
            example: '10000000157'
        - name: currency
          in: query
          description: Filter by given currency
          schema:
            $ref: '#/components/schemas/Currency'
        - name: label
          in: query
          description: Filter by account label
          schema:
            type: string
            example: 'Current account #123546'
        - name: iban
          in: query
          description: Filter by IBAN
          schema:
            $ref: '#/components/schemas/IBAN'
        - name: assignments
          in: query
          description: Filter by assignment
          schema:
            type: string
            example: pricing
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: number
            enum:
              - number
              - currency
              - label
              - iban
              - assignments
      responses:
        '200':
          description: Read account list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralAccounts'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: oud9uc67fhgm4
  '/iban-structure/{iban}':
    parameters:
      - name: iban
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IBAN'
    get:
      security:
        - OAuth2:
            - sda_iban_structure_view
      tags:
        - Iban
      summary: Retrieve the content of a given IBAN
      operationId: GetIbanStructure
      description: 'With a given IBAN, this endoint will provide an structured object of the content.'
      responses:
        '200':
          description: The IBAN structured object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbanStructure'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: b50kzbcpdk4eu
  /payment-networks/configuration:
    get:
      security:
        - OAuth2:
            - payment_network
      tags:
        - Payment - Network
      summary: Get activated networks configuration
      operationId: GetActivatedNetworksConfiguration
      responses:
        '200':
          description: List of activated networks configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentNetworkCollection'
        '404':
          description: No network found matching service level
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 2ixh4f0vfuojs
  '/payment-networks/{serviceLevel}/{subnetwork}/configuration':
    parameters:
      - name: serviceLevel
        in: path
        required: true
        schema:
          type: string
          description: Network service level
          example: ABC
      - name: subnetwork
        in: path
        required: true
        schema:
          type: string
          description: Sub network
          example: CREDIT_TRANSFER
          enum:
            - CREDIT_TRANSFER
            - DIRECT_DEBIT
    get:
      security:
        - OAuth2:
            - payment_network
      tags:
        - Payment - Network
      summary: Get network configuration
      operationId: GetNetworkConfiguration
      responses:
        '200':
          description: Network configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentNetwork'
        '404':
          description: No network found matching service level
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 5xlnydmy7w50o
    patch:
      security:
        - OAuth2:
            - payment_network
      tags:
        - Payment - Network
      summary: Update network configuration
      operationId: UpdateNetworkConfiguration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentNetworkConfiguration'
      responses:
        '200':
          description: Network configuration updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentNetwork'
        '404':
          description: No network found matching service level
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: hlnnbqbhtquz6
  '/payment-networks/{serviceLevel}/{subnetwork}/reachability':
    parameters:
      - name: serviceLevel
        in: path
        required: true
        schema:
          type: string
          description: Network service level
          example: SEPA
      - name: subnetwork
        in: path
        required: true
        schema:
          type: string
          description: Sub network
          example: CREDIT_TRANSFER
    post:
      security:
        - OAuth2:
            - payment_network
      tags:
        - Payment - Network
      summary: Check payment network reachability of a beneficiary
      operationId: CheckPaymentNetworkReachability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckPaymentNetworkReachability'
      responses:
        '200':
          description: Check network reachability completed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reachable:
                    type: boolean
                    description: Is the network reachable for the beneficiary
                    example: true
        '404':
          description: No network found matching service level and sub network
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: xoh3if2p54kfq
  /payment-services:
    post:
      security:
        - OAuth2:
            - payment_service
      tags:
        - Payment - Service
      summary: Create a new payment service for an identity
      operationId: CreatePaymentService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentServiceRequest'
      responses:
        '201':
          description: Reference of the payment service.
          content:
            application/json:
              schema:
                type: object
                required:
                  - reference
                properties:
                  reference:
                    $ref: '#/components/schemas/PaymentServiceReference'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 53pei90il4vkl
  '/payment-services/{ref}/close':
    parameters:
      - name: ref
        in: path
        description: Internal reference of the payment service contract
        schema:
          type: string
          description: Internal reference of the payment service contract
          example: '16000620084'
        required: true
    post:
      security:
        - OAuth2:
            - payment_service
      tags:
        - Payment - Service
      summary: Close a payment service
      operationId: ClosePaymentServiceContract
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosePaymentServiceContractRequest'
      responses:
        '204':
          description: The Payment service has been closed successfully
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: t27ml3rzpy23j
  '/payment-services/{ref}':
    parameters:
      - name: ref
        in: path
        description: Internal reference of the payment service contract
        schema:
          type: string
          description: Internal reference of the payment service contract
          example: '16000620084'
        required: true
    get:
      security:
        - OAuth2:
            - payment_service
      tags:
        - Payment - Service
      summary: Get a payment service by ref
      operationId: GetPaymentService
      responses:
        '200':
          description: Payment service information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentServiceResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ii96fi89ayyoh
  /payment-service-contract:
    get:
      security:
        - OAuth2:
            - payment-service-contract_view
      tags:
        - Payment - Service contract
      summary: Get payment service contracts of connected user
      operationId: GetPaymentServiceContractConnectedUser
      responses:
        '200':
          description: List of payment service contracts of connected user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentServiceContractResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: qqyv84f0an1h7
  '/payment-service-contract/{identityId}':
    parameters:
      - name: identityId
        in: path
        required: true
        schema:
          type: integer
          description: Identity ID
          example: 5988
    get:
      security:
        - OAuth2:
            - payment-service-contract_view
      tags:
        - Payment - Service contract
      summary: Get payment service contracts of an identity
      operationId: GetPaymentServiceContract
      responses:
        '200':
          description: List of payment service contracts of an identity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentServiceContractResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 3v8berionjycn
  /customer-instructions:
    parameters:
      - in: query
        name: internalId
        schema:
          $ref: '#/components/schemas/InternalId'
      - in: query
        name: status
        schema:
          $ref: '#/components/schemas/CustomerInstructionInternalStatusValue'
      - in: query
        name: groupStatus
        schema:
          $ref: '#/components/schemas/CustomerInstructionUserFriendlyGroupStatusValue'
      - in: query
        name: minRequestedExecutionDate
        schema:
          type: string
          description: Requested execution date. Format Y-m-d
          format: date
      - in: query
        name: maxRequestedExecutionDate
        schema:
          type: string
          description: Requested execution date. Format Y-m-d
          format: date
      - in: query
        name: customerInstructionReference
        schema:
          $ref: '#/components/schemas/CustomerInstructionReference'
      - in: query
        name: amount
        schema:
          type: number
          description: Amount without separator and symbol
          example: 1234
      - in: query
        name: type
        schema:
          type: string
          enum:
            - CreditTransfer
            - CreditTransferInst
            - DirectDebit
    get:
      security:
        - OAuth2:
            - customer-instruction_view
      tags:
        - Payment - Customer instructions
      summary: Retrieve all customer instructions
      operationId: GetAllCustomerInstructions
      responses:
        '200':
          description: Sorted and paginated list of customer instructions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerInstructionCollection'
      x-stoplight:
        id: of0j6i3ksea0j
  '/customer-instructions/{customerInstructionId}':
    parameters:
      - name: customerInstructionId
        in: path
        description: Internal identifier of the Customer Instruction
        schema:
          $ref: '#/components/schemas/InternalId'
        required: true
    get:
      security:
        - OAuth2:
            - customer-instruction_view
      tags:
        - Payment - Customer instructions
      summary: View a customer instruction
      operationId: CustomerInstructionCreditTransfers_View
      responses:
        '200':
          description: Customer Instruction information
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewCreditTransferCustomerInstructionResponse'
                  - $ref: '#/components/schemas/CustomerInstructionAfterInitiationLinks'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 8z6vjqhw8c5cx
  /customer-instructions/credit-transfers:
    post:
      security:
        - OAuth2:
            - customer-instruction_initiation
      tags:
        - Payment - Customer instructions
      summary: Initiate a credit transfer customer instruction
      operationId: CreditTransferCustomerInstruction_Initiate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateCreditTransferCustomerInstructionRequest'
      responses:
        '201':
          description: Customer Instruction initiated.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewCreditTransferCustomerInstructionResponse'
                  - $ref: '#/components/schemas/CustomerInstructionAfterInitiationLinks'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: kcx0i9rg9lfn9
  /customer-instructions/direct-debits:
    post:
      security:
        - OAuth2:
            - customer-instruction_initiation
      tags:
        - Payment - Customer instructions
      summary: Initiate a direct debit customer instruction
      operationId: DirectDebitCustomerInstruction_Initiate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateDirectDebitCustomerInstructionRequest'
      responses:
        '201':
          description: Customer Instruction initiated.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewDirectDebitCustomerInstructionResponse'
                  - $ref: '#/components/schemas/CustomerInstructionAfterInitiationLinks'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 43owk06swqaen
    parameters: []
  '/customer-instructions/direct-debits/{customerInstructionId}/submit':
    parameters:
      - name: customerInstructionId
        in: path
        description: Internal identifier of the Customer Instruction
        schema:
          $ref: '#/components/schemas/InternalId'
        required: true
    post:
      security:
        - OAuth2:
            - customer-instruction_submission
      tags:
        - Payment - Customer instructions
      summary: Submit a direct debit
      operationId: CustomerInstructionDirectDebits_Submit
      responses:
        '201':
          description: Customer Instruction submitted.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewDirectDebitCustomerInstructionResponse'
                  - $ref: '#/components/schemas/CustomerInstructionAfterSubmissionLinks'
        '202':
          description: Customer instruction accepted. Pending strong authentication
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - id
                      - status
                      - strongAuthenticationReference
                    properties:
                      id:
                        $ref: '#/components/schemas/PaymentTransactionInternalId'
                      status:
                        $ref: '#/components/schemas/PaymentTransactionInternalStatus'
                      strongAuthenticationReference:
                        description: Strong authentication reference
                        type: string
                  - $ref: '#/components/schemas/CustomerInstructionAfterSubmissionLinks'
        '403':
          description: The strong authentication has failed to many time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: A strong authentication session is required but pre-conditions not met to initiate one
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: flvos5hak7jbm
      x-internal: true
  '/customer-instructions/credit-transfers/{customerInstructionId}/submit':
    parameters:
      - name: customerInstructionId
        in: path
        description: Internal identifier of the Customer Instruction
        schema:
          $ref: '#/components/schemas/InternalId'
        required: true
    post:
      security:
        - OAuth2:
            - customer-instruction_submission
      tags:
        - Payment - Customer instructions
      summary: Submit a credit transfer
      operationId: CustomerInstructionCreditTransfers_Submit
      responses:
        '201':
          description: Customer Instruction submitted.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewCreditTransferCustomerInstructionResponse'
                  - $ref: '#/components/schemas/CustomerInstructionAfterSubmissionLinks'
        '202':
          description: Customer instruction accepted. Pending strong authentication
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - id
                      - status
                      - strongAuthenticationReference
                    properties:
                      id:
                        $ref: '#/components/schemas/PaymentTransactionInternalId'
                      status:
                        $ref: '#/components/schemas/PaymentTransactionInternalStatus'
                      strongAuthenticationReference:
                        description: Strong authentication reference
                        type: string
                  - $ref: '#/components/schemas/CustomerInstructionAfterSubmissionLinks'
        '403':
          description: The strong authentication has failed to many time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: A strong authentication session is required but pre-conditions not met to initiate one
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 5agliw63weai4
  '/customer-instructions/credit-transfers/{customerInstructionId}':
    parameters:
      - name: customerInstructionId
        in: path
        description: Internal identifier of the Customer Instruction
        schema:
          $ref: '#/components/schemas/InternalId'
        required: true
    patch:
      security:
        - OAuth2:
            - customer-instruction_update
      tags:
        - Payment - Customer instructions
      summary: Update a customer instruction of credit transfers
      operationId: CustomerInstructionCreditTransfers_Update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCreditTransferCustomerInstructionRequest'
      responses:
        '200':
          description: Customer Instruction information
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewCreditTransferCustomerInstructionResponse'
                  - $ref: '#/components/schemas/CustomerInstructionAfterInitiationLinks'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: dsi3w0238zuzd
    delete:
      security:
        - OAuth2:
            - customer-instruction_deletion
      tags:
        - Payment - Customer instructions
      summary: Delete a customer instruction of credit transfers (before submission)
      operationId: CustomerInstructionCreditTransfers_Delete
      responses:
        '204':
          description: Customer Instruction successfully deleted
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 0ms8dt0hzg949
  '/customer-instructions/direct-debits/{customerInstructionId}':
    parameters:
      - name: customerInstructionId
        in: path
        description: Internal identifier of the Customer Instruction
        schema:
          $ref: '#/components/schemas/InternalId'
        required: true
    patch:
      security:
        - OAuth2:
            - customer-instruction_update
      tags:
        - Payment - Customer instructions
      summary: Update a customer instruction of direct debit
      operationId: CustomerInstructionDirectDebits_Update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDirectDebitCustomerInstructionRequest'
      responses:
        '200':
          description: Customer Instruction information
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewDirectDebitCustomerInstructionResponse'
                  - $ref: '#/components/schemas/DirectDebitCustomerInstructionAfterInitiationLinks'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-internal: true
      x-stoplight:
        id: wk69vsvfwl58o
    delete:
      security:
        - OAuth2:
            - customer-instruction_deletion
      tags:
        - Payment - Customer instructions
      summary: Delete a customer instruction of direct debits (before submission)
      operationId: CustomerInstructionDirectDebits_Delete
      responses:
        '204':
          description: Customer Instruction successfully deleted
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-internal: true
      x-stoplight:
        id: wjybe2crh4ula
  /customer-instructions/credit-transfers/submit:
    post:
      security:
        - OAuth2:
            - customer-instruction_submission
      tags:
        - Payment - Customer instructions
      summary: Submit a credit transfer single payment
      operationId: CreditTransferSinglePayment_Submit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitCustomerInstructionCreditTransferRequest'
      responses:
        '201':
          description: Customer Instruction created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitCustomerCreditTransferInstructionCreatedResponse'
        '202':
          description: Customer instruction accepted. Pending strong authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitCustomerCreditTransferInstructionAcceptedResponse'
        '422':
          description: A strong authentication session is required but pre-conditions not met to initiate one
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: gu4gzys705lty
  '/customer-instructions/credit-transfers/payment-transactions/{paymentTransactionId}':
    parameters:
      - name: paymentTransactionId
        in: path
        description: Internal identifier of the Payment Transaction
        schema:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
        required: true
    patch:
      security:
        - OAuth2:
            - customer-instruction_update
      tags:
        - Payment - Customer instructions
      summary: Update a payment transaction associated to a customer instruction of credit transfers
      operationId: CustomerInstructionCreditTransfers_UpdatePaymentTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCreditTransferPaymentTransactionRequest'
      responses:
        '200':
          description: Payment transaction internal information
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewCreditTransferPaymentTransactionResponse'
                  - $ref: '#/components/schemas/CreditTransferPaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: pznmwihzpt1ik
    delete:
      security:
        - OAuth2:
            - customer-instruction_deletion
      tags:
        - Payment - Customer instructions
      summary: Delete a payment transaction associated to a customer instruction of credit transfers (before submission)
      operationId: CustomerInstructionCreditTransfers_DeletePaymentTransaction
      responses:
        '204':
          description: Payment transaction successfully deleted
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: tkr3u7nrkulc8
  '/customer-instructions/direct-debits/payment-transactions/{paymentTransactionId}':
    parameters:
      - name: paymentTransactionId
        in: path
        description: Internal identifier of the Payment Transaction
        schema:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
        required: true
    patch:
      security:
        - OAuth2:
            - customer-instruction_update
      tags:
        - Payment - Customer instructions
      summary: Update a payment transaction associated to a customer instruction of direct debits
      operationId: CustomerInstructionDirectDebits_UpdatePaymentTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerDirectDebitPaymentTransactionRequest'
      responses:
        '200':
          description: Payment transaction internal information
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewDirectDebitPaymentTransactionResponse'
                  - $ref: '#/components/schemas/DirectDebitPaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-internal: true
      x-stoplight:
        id: ucyc1xime7qtq
    delete:
      security:
        - OAuth2:
            - customer-instruction_deletion
      tags:
        - Payment - Customer instructions
      summary: Delete a payment transaction associated to a customer instruction of direct debits (before submission)
      operationId: CustomerInstructionDirectDebits_DeletePaymentTransaction
      responses:
        '204':
          description: Payment transaction successfully deleted
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-internal: true
      x-stoplight:
        id: 58pxvpss0jsm0
  '/customer-instructions/credit-transfers/{customerInstructionId}/payment-transactions':
    parameters:
      - name: customerInstructionId
        in: path
        description: Internal identifier of the Customer Instruction
        schema:
          $ref: '#/components/schemas/InternalId'
        required: true
    post:
      security:
        - OAuth2:
            - customer-instruction_initiation
      tags:
        - Payment - Customer instructions
      summary: Initiate a payment transaction and associate to existing customer instruction of credit transfers
      operationId: CreditTransferCustomerInstruction_InitiatePaymentTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateCreditTransferPaymentTransactionAssociatedToCustomerInstructionRequest'
      responses:
        '201':
          description: Payment transaction initiated.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewCreditTransferPaymentTransactionResponse'
                  - $ref: '#/components/schemas/CreditTransferPaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: rp0kve1yczdyb
  '/customer-instructions/direct-debits/{customerInstructionId}/payment-transactions':
    parameters:
      - name: customerInstructionId
        in: path
        description: Internal identifier of the Customer Instruction
        schema:
          $ref: '#/components/schemas/InternalId'
        required: true
    post:
      security:
        - OAuth2:
            - customer-instruction_initiation
      tags:
        - Payment - Customer instructions
      summary: Initiate a payment transaction and associate to existing customer instruction of direct debits
      operationId: DirectDebitCustomerInstruction_InitiatePaymentTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateDirectDebitPaymentTransactionAssociatedToCustomerInstructionRequest'
      responses:
        '201':
          description: Payment transaction initiated.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewDirectDebitPaymentTransactionWithMandateResponse'
                  - $ref: '#/components/schemas/DirectDebitPaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: fqanftwbtsitk
      x-internal: true
  '/customer-instructions/{customerInstructionId}/payment-transactions':
    parameters:
      - in: path
        required: true
        name: customerInstructionId
        schema:
          $ref: '#/components/schemas/InternalId'
      - in: query
        name: paymentTransactionId
        schema:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
      - in: query
        name: status
        schema:
          type: string
          description: Status value of the customer instruction within the platform
          enum:
            - INI_STARTED
            - INI_IS_VALID
            - INI_NOT_IS_VALID
            - INI_INT_CTRL_FAILED
            - INI_INT_CTRL_PASSED
            - INI_UPDATED
            - INITIATED
            - SUB_REQUIRED
            - SUB_STARTED
            - SUB_NOT_IS_VALID
            - SUB_IS_VALID
            - SUB_INT_CTRL_PASSED
            - SUB_INT_CTRL_FAILED
            - SUB_STRONG_AUTH_REQUIRED
            - SUB_STRONG_AUTH_FAILED
            - SUB_STRONG_AUTH_ERROR
            - VALIDATED
            - SUBMITTED
            - READY_FOR_PROCESSING
            - WAREHOUSED
            - P_TRN_SUB_NOT_PASSED
            - P_R_TRN_SUB_NOT_PASSED
            - PRO_STARTED
            - PRO_INT_CTRL_PASSED
            - PRO_INT_CTRL_FAILED
            - PRO_START_ERROR
            - PRO_DEBIT_HOLD
            - PROCESSED
            - PARTIALLY_PROCESSED
            - PRO_FAILED
            - P_TRN_PRO_FAILED
            - P_R_TRN_PRO_FAILED
            - WAITING_FOR_APPROVAL
          example: INITIATED
      - in: query
        name: amount
        schema:
          type: integer
          description: Amount without separator and symbol
          example: 1337
      - in: query
        name: startInstructedDate
        schema:
          $ref: '#/components/schemas/InstructedDate'
      - in: query
        name: endInstructedDate
        schema:
          $ref: '#/components/schemas/InstructedDate'
      - in: query
        name: serviceLevel
        schema:
          $ref: '#/components/schemas/ServiceLevel'
      - in: query
        name: externalTransactionId
        schema:
          $ref: '#/components/schemas/ExternalTransactionId'
    get:
      tags:
        - Payment - Customer instructions
      security:
        - OAuth2:
            - customer-instruction_view
      summary: Load minified payment transactions associated to customer instruction
      operationId: LoadMinifiedPaymentTransactionsAssociatedToCustomerInstruction
      responses:
        '200':
          description: Sorted and paginated list of payment transactions associated to the customer instruction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinifiedPaymentTransactionsAssociatedToCustomerInstructionCollection'
      x-stoplight:
        id: 0epnvo6jks55v
  '/customer-instructions/{customerInstructionId}/detailed-payment-transactions':
    parameters:
      - in: path
        required: true
        name: customerInstructionId
        schema:
          $ref: '#/components/schemas/InternalId'
      - in: query
        name: paymentTransactionId
        schema:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
      - in: query
        name: status
        schema:
          type: string
          description: Status value of the customer instruction within the platform
          enum:
            - INI_STARTED
            - INI_IS_VALID
            - INI_NOT_IS_VALID
            - INI_INT_CTRL_FAILED
            - INI_INT_CTRL_PASSED
            - INI_UPDATED
            - INITIATED
            - SUB_STARTED
            - SUB_NOT_IS_VALID
            - SUB_IS_VALID
            - SUB_INT_CTRL_PASSED
            - SUB_INT_CTRL_FAILED
            - SUB_STRONG_AUTH_REQUIRED
            - VALIDATED
            - SUBMITTED
            - READY_FOR_PROCESSING
            - WAREHOUSED
            - P_TRN_SUB_NOT_PASSED
            - PRO_STARTED
            - PRO_INT_CTRL_PASSED
            - PRO_INT_CTRL_FAILED
            - PRO_START_ERROR
            - PRO_DEBIT_HOLD
            - PROCESSED
            - P_TRN_PRO_FAILED
          example: PRO_INT_CTRL_PASSED
      - in: query
        name: amount
        schema:
          type: integer
          description: Amount without separator and symbol
          example: 1337
      - in: query
        name: startInstructedDate
        schema:
          $ref: '#/components/schemas/InstructedDate'
      - in: query
        name: endInstructedDate
        schema:
          $ref: '#/components/schemas/InstructedDate'
      - in: query
        name: serviceLevel
        schema:
          $ref: '#/components/schemas/ServiceLevel'
      - in: query
        name: externalTransactionId
        schema:
          $ref: '#/components/schemas/ExternalTransactionId'
    get:
      tags:
        - Payment - Customer instructions
      security:
        - OAuth2:
            - customer-instruction_view
      summary: Load detailed payment transactions associated to customer instruction
      operationId: LoadDetailedPaymentTransactionsAssociatedToCustomerInstruction
      responses:
        '200':
          description: Sorted and paginated list of detailed payment transactions associated to the customer instruction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedPaymentTransactionsAssociatedToCustomerInstructionCollection'
      x-stoplight:
        id: bjt3rvi3xiwia
  '/customer-instructions/{customerInstructionId}/payment-r-transactions':
    parameters:
      - in: path
        required: true
        name: customerInstructionId
        schema:
          $ref: '#/components/schemas/InternalId'
    get:
      security:
        - OAuth2:
            - customer-instruction_view
      parameters:
        - in: query
          name: paymentRTransactionId
          schema:
            $ref: '#/components/schemas/PaymentRTransactionInternalId'
        - in: query
          name: status
          schema:
            $ref: '#/components/schemas/PaymentRTransactionInternalStatusValue'
        - in: query
          name: returnedAmount
          schema:
            type: integer
            description: Returned amount without separator and symbol
            example: 1337
        - in: query
          name: startInstructedDate
          schema:
            $ref: '#/components/schemas/PaymentRTransactionInstructedDate'
        - in: query
          name: endInstructedDate
          schema:
            $ref: '#/components/schemas/PaymentRTransactionInstructedDate'
        - in: query
          name: serviceLevel
          schema:
            $ref: '#/components/schemas/ServiceLevel'
        - in: query
          name: externalTransactionId
          schema:
            $ref: '#/components/schemas/ExternalTransactionId'
      tags:
        - Payment - Customer instructions
      summary: Load minified payment R transactions associated to customer instruction
      operationId: LoadMinifiedPaymentRTransactionsAssociatedToCustomerInstruction
      responses:
        '200':
          description: Sorted and paginated list of minified payment R transactions associated to the customer instruction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinifiedPaymentRTransactionsCollection'
      x-stoplight:
        id: 6gwtz3dj7szac
  '/customer-instructions/{customerInstructionId}/detailed-payment-r-transactions':
    parameters:
      - in: path
        required: true
        name: customerInstructionId
        schema:
          $ref: '#/components/schemas/InternalId'
      - in: query
        name: paymentRTransactionId
        schema:
          $ref: '#/components/schemas/PaymentRTransactionInternalId'
      - in: query
        name: status
        schema:
          $ref: '#/components/schemas/PaymentRTransactionInternalStatusValue'
      - in: query
        name: returnedAmount
        schema:
          type: integer
          description: Returned amount without separator and symbol
          example: 1337
      - in: query
        name: startInstructedDate
        schema:
          $ref: '#/components/schemas/PaymentRTransactionInstructedDate'
      - in: query
        name: endInstructedDate
        schema:
          $ref: '#/components/schemas/PaymentRTransactionInstructedDate'
      - in: query
        name: serviceLevel
        schema:
          $ref: '#/components/schemas/ServiceLevel'
      - in: query
        name: externalTransactionId
        schema:
          $ref: '#/components/schemas/ExternalTransactionId'
    get:
      tags:
        - Payment - Customer instructions
      security:
        - OAuth2:
            - customer-instruction_view
      summary: Load detailed payment R transactions associated to customer instruction
      operationId: LoadDetailedPaymentRTransactionsAssociatedToCustomerInstruction
      responses:
        '200':
          description: Sorted and paginated list of detailed payment R transactions associated to the customer instruction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedPaymentRTransactionsCollection'
      x-stoplight:
        id: eyuvvun4i7f01
  '/payment-transactions/{paymentTransactionId}':
    parameters:
      - name: paymentTransactionId
        in: path
        description: Internal identifier of the Payment Transaction
        schema:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
        required: true
    get:
      security:
        - OAuth2:
            - customer-instruction_view
            - payment-instruction_view
      tags:
        - Payment - Payment transaction
      summary: View a payment transaction
      operationId: ViewPaymentTransaction
      responses:
        '200':
          description: Payment transaction internal information
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewCreditTransferPaymentTransactionWithMandateResponse'
                  - $ref: '#/components/schemas/CreditTransferPaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: k8iodj9brd9yg
  /payment-transactions:
    parameters:
      - in: query
        name: paymentTransactionId
        schema:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
      - in: query
        name: status
        schema:
          type: string
          description: Status value of the payment transaction within the platform
          enum:
            - INI_STARTED
            - INI_IS_VALID
            - INI_NOT_IS_VALID
            - INI_INT_CTRL_FAILED
            - INI_INT_CTRL_PASSED
            - INI_UPDATED
            - INITIATED
            - SUB_STARTED
            - SUB_IS_VALID
            - SUB_NOT_IS_VALID
            - SUB_INT_CTRL_PASSED
            - SUB_INT_CTRL_FAILED
            - SUBMITTED
            - VALIDATED
            - READY_FOR_PROCESSING
            - C_INSTRUCTION_SUB_NOT_PASSED
            - P_INSTRUCTION_SUB_NOT_PASSED
            - P_INSTRUCTION_POSTING_NOT_PASSED
            - WAREHOUSED
            - PRO_STARTED
            - PRO_INT_CTRL_PASSED
            - PRO_INT_CTRL_FAILED
            - PRO_DEBIT_HOLD
            - PRO_DEBIT_HOLD_FAILED
            - PRO_ROUTING_FAILED
            - PRO_WAIT_SETTLEMENT_DATE
            - PRO_SETTLEMENT_FAILED
            - SETTLED
            - C_INSTRUCTION_PRO_FAILED
            - C_INSTRUCTION_PRO_START_ERROR
            - READY_FOR_EXCHANGE
            - DEBIT_HOLD_CANCEL_FAILED
            - REVERSAL_FAILED
            - EXT_REFUSED
            - EXCHANGED
            - EXCHANGE_ERROR
            - PRO_EXT_CTRL_REQUESTED
            - PRO_EXT_CTRL_PASSED
            - PRO_EXT_CTRL_FAILED
            - RETURNED
            - C_INST_WAITING_FOR_APPROVAL
            - WAITING_FOR_SETTLEMENT
            - ABANDONED
            - ABANDONMENT_FAILED
          example: SUBMITTED
      - in: query
        name: amount
        schema:
          type: integer
          description: Amount without separator and symbol
          example: 1337
      - in: query
        name: startInstructedDate
        schema:
          $ref: '#/components/schemas/InstructedDate'
      - in: query
        name: endInstructedDate
        schema:
          $ref: '#/components/schemas/InstructedDate'
      - in: query
        name: startCreationDate
        schema:
          $ref: '#/components/schemas/CreationDate'
      - in: query
        name: endCreationDate
        schema:
          $ref: '#/components/schemas/CreationDate'
      - in: query
        name: startSettlementDate
        schema:
          $ref: '#/components/schemas/SettlementDate'
      - in: query
        name: endSettlementDate
        schema:
          $ref: '#/components/schemas/SettlementDate'
      - in: query
        name: serviceLevel
        schema:
          $ref: '#/components/schemas/ServiceLevel'
      - in: query
        name: externalTransactionId
        schema:
          $ref: '#/components/schemas/ExternalTransactionId'
    get:
      tags:
        - Payment - Payment transaction
      security:
        - OAuth2:
            - customer-instruction_view
            - payment-instruction_view
      summary: Load payment transactions
      operationId: LoadPaymentTransactions
      responses:
        '200':
          description: Sorted and paginated list of detailed payment transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedPaymentTransactionsCollection'
      x-stoplight:
        id: 9spgqzbhcm1ej
  '/payment-r-transactions/{paymentRTransactionId}':
    parameters:
      - name: paymentRTransactionId
        in: path
        description: Internal identifier of the payment R transaction
        schema:
          $ref: '#/components/schemas/PaymentRTransactionInternalId'
        required: true
    get:
      security:
        - OAuth2:
            - customer-instruction_view
            - payment-instruction_view
      tags:
        - Payment - Payment R transactions
      summary: View a payment R transaction
      operationId: ViewPaymentRTransaction
      responses:
        '200':
          $ref: '#/components/responses/PaymentRTransactionCreditTransferResponse'
      x-stoplight:
        id: gs73nz34sp2sy
  /payment-r-transactions:
    get:
      security:
        - OAuth2:
            - customer-instruction_view
            - payment-instruction_view
      parameters:
        - in: query
          name: paymentRTransactionId
          schema:
            $ref: '#/components/schemas/PaymentRTransactionInternalId'
        - in: query
          name: status
          schema:
            $ref: '#/components/schemas/PaymentRTransactionInternalStatusValue'
        - in: query
          name: returnedAmount
          schema:
            type: integer
            description: Returned amount without separator and symbol
            example: 1337
        - in: query
          name: startInstructedDate
          schema:
            $ref: '#/components/schemas/PaymentRTransactionInstructedDate'
        - in: query
          name: endInstructedDate
          schema:
            $ref: '#/components/schemas/PaymentRTransactionInstructedDate'
        - in: query
          name: serviceLevel
          schema:
            $ref: '#/components/schemas/ServiceLevel'
        - in: query
          name: externalTransactionId
          schema:
            $ref: '#/components/schemas/ExternalTransactionId'
      tags:
        - Payment - Payment R transactions
      summary: Load payment R transactions
      operationId: LoadPaymentRTransactions
      responses:
        '200':
          description: Sorted and paginated list of detailed payment R transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedPaymentRTransactionsCollection'
      x-stoplight:
        id: ogdzlz44lann5
  /customer-instructions/r-credit-transfers/submit:
    post:
      security:
        - OAuth2:
            - customer-instruction_submit
      tags:
        - Payment - Customer instructions
      summary: Submit a credit transfer single payment R transaction
      operationId: CreditTransferSinglePaymentRTransaction_Submit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitCustomerInstructionRCreditTransferRequest'
      responses:
        '201':
          description: Customer Instruction created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewRCustomerInstructionResponse'
                  - $ref: '#/components/schemas/CustomerInstructionAfterSubmissionLinks'
                  - type: object
                    required:
                      - paymentRTransaction
                    properties:
                      paymentRTransaction:
                        allOf:
                          - description: Information on the payment R transaction
                          - $ref: '#/components/schemas/PaymentRTransactionCreditTransferResponseData'
      x-stoplight:
        id: nxjvli7o76b0m
  /customer-instructions/r-direct-debits/submit:
    post:
      security:
        - OAuth2:
            - customer-instruction_submit
      tags:
        - Payment - Customer instructions
      summary: Submit a direct debit single payment R transaction
      operationId: DirectDebitSinglePaymentRTransaction_Submit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitCustomerInstructionRCreditTransferRequest'
      responses:
        '201':
          description: Customer Instruction created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewRCustomerInstructionResponse'
                  - $ref: '#/components/schemas/CustomerInstructionAfterSubmissionLinks'
                  - type: object
                    required:
                      - paymentRTransaction
                    properties:
                      paymentRTransaction:
                        allOf:
                          - description: Information on the payment R transaction
                          - $ref: '#/components/schemas/PaymentRTransactionDirectDebitResponseData'
      x-stoplight:
        id: brrnwnalli6vt
  /inward-payment-instructions/credit-transfers:
    post:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_initiation
      summary: Initiate a credit transfer payment instruction
      operationId: InitiateCreditTransferPaymentInstruction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInstructionCreditTransferRequest'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionCreditTransferResponse'
      x-stoplight:
        id: 5pw8yhgclko6p
  '/inward-payment-instructions/credit-transfers/{paymentInstructionId}':
    parameters:
      - name: paymentInstructionId
        in: path
        description: Payment instruction identifier
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
        required: true
    patch:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_update
      summary: Update payment instruction
      operationId: UpdatePaymentInstruction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentInstructionRequest'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionCreditTransferResponse'
      x-stoplight:
        id: 5vt5mpr219bjc
    delete:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_deletion
      summary: Delete a payment instruction
      operationId: DeletePaymentInstruction
      responses:
        '204':
          description: Payment instruction was successfully deleted
      x-stoplight:
        id: tf6n3gyesw2i8
  '/inward-payment-instructions/{paymentInstructionId}/refuse-credit-transfer-inst':
    parameters:
      - in: path
        required: true
        name: paymentInstructionId
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
    post:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_refuse
      summary: Refuse an inward sct inst payment instruction
      operationId: RefuseSctInstInwardPaymentInstruction
      responses:
        '201':
          $ref: '#/components/responses/PaymentInstructionCreditTransferResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 4cfuetqcuko7n
  '/inward-payment-instructions/{paymentInstructionId}/submit':
    parameters:
      - in: path
        required: true
        name: paymentInstructionId
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
    post:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_submission
      summary: Submit an inward payment instruction
      operationId: SubmitInwardPaymentInstruction
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionDirectDebitResponse'
      x-stoplight:
        id: 6go8r3mcrswgg
  '/inward-payment-instructions/credit-transfers/{paymentInstructionId}/payment-transactions':
    parameters:
      - name: paymentInstructionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
    post:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_initiation
      summary: Initiate a credit transfer payment transaction and associate it to a payment instruction
      operationId: InitiateCreditTransferPaymentTransactionAndAssociateToPaymentInstruction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiatePaymentTransactionRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreditTransferPaymentTransactionResponse'
      x-stoplight:
        id: yn4ymwtxn3adc
  '/inward-payment-instructions/credit-transfers/payment-transactions/{paymentTransactionId}':
    parameters:
      - name: paymentTransactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
    delete:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_deletion
      summary: Delete a payment transaction associated to a payment instruction
      operationId: DeletePaymentTransaction
      responses:
        '204':
          description: Payment transaction has been deleted
      x-stoplight:
        id: j22vtkxbn5yk6
    patch:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_update
      summary: Update a payment transaction associated to a payment instruction
      operationId: UpdatePaymentTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreditTransferPaymentTransactionResponse'
      x-stoplight:
        id: i3vjfqw19ona3
  '/inward-payment-instructions/credit-transfers/{paymentInstructionId}/payment-r-transactions':
    parameters:
      - name: paymentInstructionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
    post:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_initiation
      summary: Initiate a payment r transaction and associate it to a payment instruction
      operationId: InitiatePaymentRTransactionAndAssociateToPaymentInstruction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiatePaymentRTransactionRequest'
      responses:
        '201':
          $ref: '#/components/responses/PaymentRTransactionCreditTransferResponse'
      x-stoplight:
        id: 8c9jmwutzeqqi
  '/inward-payment-instructions/credit-transfers/payment-r-transactions/{paymentRTransactionId}':
    parameters:
      - name: paymentRTransactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaymentRTransactionInternalId'
    delete:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_deletion
      summary: Delete a payment r transaction associated to a payment instruction
      operationId: DeletePaymentRTransaction
      responses:
        '204':
          description: Payment r transaction has been deleted
      x-stoplight:
        id: erjzr9o7gh5l7
    patch:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_update
      summary: Update a payment r transaction associated to a payment instruction
      operationId: UpdatePaymentRTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentRTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/PaymentRTransactionCreditTransferResponse'
      x-stoplight:
        id: j3m3x1va6wccm
  /inward-payment-instructions/submit:
    post:
      deprecated: true
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_submission
      summary: Submit an inward payment instruction with a single payment transaction
      operationId: SubmitPaymentInstructionWithSinglePaymentTransactionDeprecated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitPaymentInstructionWithSinglePaymentTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionCreditTransferResponse'
      x-stoplight:
        id: o9c05ltqw4spi
  /inward-payment-instructions/credit-transfers/submit:
    post:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_submission
      summary: Submit an inward payment instruction with a single payment transaction
      operationId: SubmitPaymentInstructionWithSinglePaymentTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitPaymentInstructionWithSinglePaymentTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionCreditTransferResponse'
      x-stoplight:
        id: vzfi4ce3v710f
  /inward-payment-instructions/r-credit-transfers/submit:
    post:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_submission
      summary: Submit an inward payment instruction with a single payment r transaction
      operationId: SubmitPaymentInstructionWithSinglePaymentRTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitPaymentInstructionWithSinglePaymentRTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionCreditTransferResponse'
      x-stoplight:
        id: 45u46vkzctysi
  '/outward-payment-instructions/{paymentInstructionId}/submit':
    parameters:
      - in: path
        required: true
        name: paymentInstructionId
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
    post:
      tags:
        - Payment - Outward payment instructions
      security:
        - OAuth2:
            - payment-instruction_submission
      summary: Submit payment instruction
      operationId: SubmitPaymentInstruction
      responses:
        '201':
          $ref: '#/components/responses/PaymentInstructionCreditTransferResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 69gqq5p4cqekr
  '/outward-payment-instructions/{paymentInstructionId}/refuse':
    parameters:
      - in: path
        required: true
        name: paymentInstructionId
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
    post:
      tags:
        - Payment - Outward payment instructions
      security:
        - OAuth2:
            - payment-instruction_refuse
      summary: Refuse payment instruction
      operationId: RefusePaymentInstruction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefusePaymentInstructionRequest'
      responses:
        '201':
          $ref: '#/components/responses/PaymentInstructionCreditTransferResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 7i6b9awweia8n
  '/outward-payment-instructions/{paymentInstructionId}/exchange':
    parameters:
      - in: path
        required: true
        name: paymentInstructionId
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
    post:
      tags:
        - Payment - Outward payment instructions
      security:
        - OAuth2:
            - payment-instruction_exchange
      summary: Exchange payment instruction
      operationId: ExchangePaymentInstruction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettleOrExchangePaymentInstructionRequest'
      responses:
        '201':
          $ref: '#/components/responses/PaymentInstructionCreditTransferResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: bm969fnzs4lht
  '/outward-payment-instructions/{paymentInstructionId}/settle':
    parameters:
      - in: path
        required: true
        name: paymentInstructionId
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
    post:
      tags:
        - Payment - Outward payment instructions
      security:
        - OAuth2:
            - payment-instruction_settle
      summary: Settle payment instruction
      operationId: SettlePaymentInstruction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettleOrExchangePaymentInstructionRequest'
      responses:
        '201':
          $ref: '#/components/responses/PaymentInstructionCreditTransferResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 5ac90ruyn0jjn
  '/outward-payment-instructions/payment-transactions/{paymentTransactionInternalId}/exchange':
    parameters:
      - name: paymentTransactionInternalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
    post:
      tags:
        - Payment - Outward payment instructions
      security:
        - OAuth2:
            - payment-instruction_exchange
      summary: Exchange a payment transaction
      operationId: ExchangePaymentTransaction
      responses:
        '201':
          $ref: '#/components/responses/CreditTransferPaymentTransactionResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 23ms8t2cw1ev8
  '/outward-payment-instructions/payment-transactions/{paymentTransactionInternalId}/refuse':
    parameters:
      - name: paymentTransactionInternalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
    post:
      tags:
        - Payment - Outward payment instructions
      security:
        - OAuth2:
            - payment-instruction_refuse
      summary: Refuse a payment transaction
      operationId: RefusePaymentTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - message
              properties:
                code:
                  type: string
                  description: code of refusal
                  maxLength: 32
                message:
                  type: string
                  description: short explanation of the refusal
                  maxLength: 1024
      responses:
        '201':
          $ref: '#/components/responses/CreditTransferPaymentTransactionResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 567eo4mbifud8
  '/outward-payment-instructions/payment-transactions/{paymentTransactionInternalId}/external-transaction-id':
    parameters:
      - name: paymentTransactionInternalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
    put:
      tags:
        - Payment - Outward payment instructions
      security:
        - OAuth2:
            - payment-instruction_exchange
      summary: Set the external payment transaction id on outward payment transaction
      operationId: SetExternalPaymentTransactionId
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              description: External transaction id
              example: EXT001
      responses:
        '200':
          $ref: '#/components/responses/CreditTransferPaymentTransactionResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: zs4ko1ybbipmc
  '/outward-payment-instructions/payment-r-transactions/{paymentRTransactionInternalId}/exchange':
    parameters:
      - name: paymentRTransactionInternalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaymentRTransactionInternalId'
    post:
      tags:
        - Payment - Outward payment instructions
      security:
        - OAuth2:
            - payment-instruction_exchange
      summary: Exchange a payment R transaction
      operationId: ExchangePaymentRTransaction
      responses:
        '201':
          $ref: '#/components/responses/PaymentRTransactionCreditTransferResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: n6dgyzanx0ex5
  '/outward-payment-instructions/payment-r-transactions/{paymentRTransactionInternalId}/refuse':
    parameters:
      - name: paymentRTransactionInternalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaymentRTransactionInternalId'
    post:
      tags:
        - Payment - Outward payment instructions
      security:
        - OAuth2:
            - payment-instruction_refuse
      summary: Refuse a payment R transaction
      operationId: RefusePaymentRTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - message
              properties:
                code:
                  type: string
                  description: code of refusal
                  maxLength: 32
                message:
                  type: string
                  description: short explanation of the refusal
                  maxLength: 1024
      responses:
        '201':
          $ref: '#/components/responses/PaymentRTransactionCreditTransferResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: e6zah2okglozj
  '/outward-payment-instructions/payment-r-transactions/{paymentRTransactionInternalId}/external-transaction-id':
    parameters:
      - name: paymentRTransactionInternalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaymentRTransactionInternalId'
    put:
      tags:
        - Payment - Outward payment instructions
      security:
        - OAuth2:
            - payment-instruction_exchange
      summary: Set the external payment transaction id on outward payment R transaction
      operationId: SetExternalPaymentRTransactionId
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              description: External transaction id
              example: EXT001
      responses:
        '200':
          $ref: '#/components/responses/PaymentRTransactionCreditTransferResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: k4hj6l58jp86a
  /payment-instructions:
    parameters:
      - in: query
        name: id
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
      - in: query
        name: minSettlementDate
        schema:
          type: string
          description: Settlement date. Format Y-m-d
          format: date
      - in: query
        name: maxSettlementDate
        schema:
          type: string
          description: Settlement date. Format Y-m-d
          format: date
      - in: query
        name: status
        schema:
          $ref: '#/components/schemas/PaymentInstructionStatusValue'
      - in: query
        name: amount
        schema:
          type: number
          description: Amount without separator and symbol
          example: 1234
      - in: query
        name: direction
        schema:
          type: string
          enum:
            - INWARD
            - OUTWARD
      - in: query
        name: serviceLevel
        schema:
          type: string
          enum:
            - XCT
            - SEPA
    get:
      tags:
        - Payment - Payment instructions consultation
      security:
        - OAuth2:
            - payment-instruction_view
      summary: List all payment instructions
      operationId: GetAllPaymentInstruction
      responses:
        '200':
          description: Sorted and paginated list of payment instructions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstructionCollection'
      x-stoplight:
        id: g5bgdswypdluo
  '/payment-instructions/{paymentInstructionId}':
    parameters:
      - in: path
        required: true
        name: paymentInstructionId
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
    get:
      tags:
        - Payment - Payment instructions consultation
      security:
        - OAuth2:
            - payment-instruction_view
      summary: Load payment instruction information
      operationId: LoadPaymentInstruction
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionDirectDebitResponse'
      x-stoplight:
        id: peusrjah7vfnz
  '/payment-instructions/{paymentInstructionId}/payment-transactions':
    parameters:
      - in: path
        required: true
        name: paymentInstructionId
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
      - in: query
        name: paymentTransactionId
        schema:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
      - in: query
        name: status
        schema:
          type: string
          description: Status value of the payment instruction within the platform
          enum:
            - CREATED
            - SUB_STARTED
            - SUB_IS_NOT_VALID
            - SUB_IS_VALID
            - SUB_REQUIRED
            - PARTIALLY_SUBMITTED
            - SUBMITTED
            - REFUSAL_REQUIRED
            - REFUSED
            - PARTIALLY_REFUSED
            - REFUSAL_FAILED
            - EXCHANGE_REQUIRED
            - SETTLE_REQUIRED
            - EXCHANGED
            - PARTIALLY_EXCHANGED
            - EXCHANGE_FAILED
            - SETTLED
            - PARTIALLY_SETTLED
            - SETTLEMENT_FAILED
            - ACCOUNTING_ERROR
            - INI_STARTED
            - INI_IS_NOT_VALID
            - INI_IS_VALID
            - INITIATED
            - INITIATION_COMPLETED
            - P_TRN_SUB_NOT_PASSED
            - P_R_TRN_SUB_NOT_PASSED
            - INTERBANKING_ERROR
            - ABANDONED
            - PARTIALLY_ABANDONED
            - INI_POSTED
            - PRO_POSTED
          example: CREATED
      - in: query
        name: amount
        schema:
          type: integer
          description: Amount without separator and symbol
          example: 1337
      - in: query
        name: startInstructedDate
        schema:
          $ref: '#/components/schemas/InstructedDate'
      - in: query
        name: endInstructedDate
        schema:
          $ref: '#/components/schemas/InstructedDate'
      - in: query
        name: serviceLevel
        schema:
          $ref: '#/components/schemas/ServiceLevel'
      - in: query
        name: externalTransactionId
        schema:
          $ref: '#/components/schemas/ExternalTransactionId'
    get:
      tags:
        - Payment - Payment instructions consultation
      security:
        - OAuth2:
            - payment-instruction_view
      summary: Load minified payment transactions associated to payment instruction
      operationId: LoadMinifiedPaymentTransactionsAssociatedToPaymentInstruction
      responses:
        '200':
          description: Sorted and paginated list of payment transactions associated to the payment instruction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinifiedPaymentTransactionsAssociatedToPaymentInstructionCollection'
      x-stoplight:
        id: dar0ese04uqv4
  '/payment-instructions/{paymentInstructionId}/detailed-payment-transactions':
    parameters:
      - in: path
        required: true
        name: paymentInstructionId
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
      - in: query
        name: paymentTransactionId
        schema:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
      - in: query
        name: status
        schema:
          type: string
          description: Status value of the payment transaction within the platform
          enum:
            - INI_STARTED
            - INI_IS_VALID
            - INI_NOT_IS_VALID
            - INI_INT_CTRL_FAILED
            - INI_INT_CTRL_PASSED
            - INI_UPDATED
            - INITIATED
            - SUB_STARTED
            - SUB_IS_VALID
            - SUB_NOT_IS_VALID
            - SUB_INT_CTRL_PASSED
            - SUB_INT_CTRL_FAILED
            - SUBMITTED
            - VALIDATED
            - READY_FOR_PROCESSING
            - C_INSTRUCTION_SUB_NOT_PASSED
            - P_INSTRUCTION_SUB_NOT_PASSED
            - WAREHOUSED
            - PRO_STARTED
            - PRO_INT_CTRL_PASSED
            - PRO_INT_CTRL_FAILED
            - PRO_DEBIT_HOLD
            - PRO_DEBIT_HOLD_FAILED
            - PRO_ROUTING_FAILED
            - PRO_WAIT_SETTLEMENT_DATE
            - PRO_SETTLEMENT_FAILED
            - SETTLED
            - C_INSTRUCTION_PRO_FAILED
            - C_INSTRUCTION_PRO_START_ERROR
            - READY_FOR_EXCHANGE
            - DEBIT_HOLD_CANCEL_FAILED
            - EXT_REFUSED
            - EXCHANGED
            - EXCHANGE_ERROR
          example: INITIATED
      - in: query
        name: amount
        schema:
          type: integer
          description: Amount without separator and symbol
          example: 1337
      - in: query
        name: startInstructedDate
        schema:
          $ref: '#/components/schemas/InstructedDate'
      - in: query
        name: endInstructedDate
        schema:
          $ref: '#/components/schemas/InstructedDate'
      - in: query
        name: serviceLevel
        schema:
          $ref: '#/components/schemas/ServiceLevel'
      - in: query
        name: externalTransactionId
        schema:
          $ref: '#/components/schemas/ExternalTransactionId'
    get:
      tags:
        - Payment - Payment instructions consultation
      security:
        - OAuth2:
            - payment-instruction_view
      summary: Load detailed payment transactions associated to payment instruction
      operationId: LoadDetailedPaymentTransactionsAssociatedToPaymentInstruction
      responses:
        '200':
          description: Sorted and paginated list of detailed payment transactions associated to the payment instruction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedPaymentTransactionsAssociatedToPaymentInstructionCollection'
      x-stoplight:
        id: 3yrc5ssqxh7uh
  '/payment-instructions/{paymentInstructionId}/payment-r-transactions':
    parameters:
      - in: path
        required: true
        name: paymentInstructionId
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
    get:
      security:
        - OAuth2:
            - payment-instruction_view
      parameters:
        - in: query
          name: paymentRTransactionId
          schema:
            $ref: '#/components/schemas/PaymentRTransactionInternalId'
        - in: query
          name: status
          schema:
            $ref: '#/components/schemas/PaymentRTransactionInternalStatusValue'
        - in: query
          name: returnedAmount
          schema:
            type: integer
            description: Returned amount without separator and symbol
            example: 1337
        - in: query
          name: startInstructedDate
          schema:
            $ref: '#/components/schemas/PaymentRTransactionInstructedDate'
        - in: query
          name: endInstructedDate
          schema:
            $ref: '#/components/schemas/PaymentRTransactionInstructedDate'
        - in: query
          name: serviceLevel
          schema:
            $ref: '#/components/schemas/ServiceLevel'
        - in: query
          name: externalTransactionId
          schema:
            $ref: '#/components/schemas/ExternalTransactionId'
      tags:
        - Payment - Payment instructions consultation
      summary: Load minified payment R transactions associated to payment instruction
      operationId: LoadMinifiedPaymentRTransactionsAssociatedToPaymentInstruction
      responses:
        '200':
          description: Sorted and paginated list of minified payment R transactions associated to the payment instruction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinifiedPaymentRTransactionsCollection'
      x-stoplight:
        id: ly3cfmb9zom7p
  '/payment-instructions/{paymentInstructionId}/detailed-payment-r-transactions':
    parameters:
      - in: path
        required: true
        name: paymentInstructionId
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
    get:
      security:
        - OAuth2:
            - payment-instruction_view
      parameters:
        - in: query
          name: paymentRTransactionId
          schema:
            $ref: '#/components/schemas/PaymentRTransactionInternalId'
        - in: query
          name: status
          schema:
            $ref: '#/components/schemas/PaymentRTransactionInternalStatusValue'
        - in: query
          name: returnedAmount
          schema:
            type: integer
            description: Returned amount without separator and symbol
            example: 1337
        - in: query
          name: startInstructedDate
          schema:
            $ref: '#/components/schemas/PaymentRTransactionInstructedDate'
        - in: query
          name: endInstructedDate
          schema:
            $ref: '#/components/schemas/PaymentRTransactionInstructedDate'
        - in: query
          name: serviceLevel
          schema:
            $ref: '#/components/schemas/ServiceLevel'
        - in: query
          name: externalTransactionId
          schema:
            $ref: '#/components/schemas/ExternalTransactionId'
      tags:
        - Payment - Payment instructions consultation
      summary: Load detailed payment R transactions associated to payment instruction
      operationId: LoadDetailedPaymentRTransactionsAssociatedToPaymentInstruction
      responses:
        '200':
          description: Sorted and paginated list of detailed payment R transactions associated to the payment instruction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedPaymentRTransactionsCollection'
      x-stoplight:
        id: cpnbq5uk2uqh6
  /credit-transfers/submit:
    post:
      security:
        - OAuth2:
            - customer-instruction_submit
      tags:
        - Standard Credit Transfer
      summary: Submit a credit transfer single payment
      operationId: StandardCreditTransferSinglePayment_Submit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitCustomerCreditTransferInstructionRequest'
      responses:
        '201':
          description: Customer Instruction created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitCustomerCreditTransferInstructionResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ci1a603yeyzp9
  /templating/pdf:
    post:
      security:
        - OAuth2:
            - templating_document_generate
      tags:
        - Templating
      summary: Generate a PDF from a template
      operationId: GeneratePdfFromTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneratePdfFromTemplate'
      responses:
        '200':
          description: The PDF file
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: s4hj082a1kjhe
    get:
      security:
        - OAuth2:
            - templating_document_generate
      tags:
        - Templating
      summary: Generate a PDF from a template
      operationId: GeneratePdfFromTemplateDeprecated
      parameters:
        - name: templateType
          in: query
          required: true
          description: The type of the template.
          schema:
            type: string
            enum:
              - invoice
              - accountStatement
              - rib
              - feeStatement
              - creditOffer
              - savingsOffer
        - name: userType
          in: query
          required: true
          description: The type of user. Some templates may work only for a specific type of user.
          schema:
            type: string
            enum:
              - agent
              - merchant
              - client
              - company
              - distributor
              - legalEntity
              - naturalPerson
        - name: locale
          in: query
          required: true
          description: The locale of the template.
          schema:
            $ref: '#/components/schemas/Lang'
        - name: date
          in: query
          required: true
          description: Date of the template to be used for generation.
          schema:
            format: date-time
            example: '2022-11-30T11:33:22Z'
            type: string
        - name: variables
          in: query
          required: true
          description: 'A list of variables and their associated values to generate the PDF with. Key is the variable name, while value is the variable value.'
          schema:
            type: object
            additionalProperties:
              type: object
              properties:
                variable:
                  type: string
                value:
                  type: string
              example:
                foo: value1
                bar: value2
      responses:
        '200':
          description: The PDF file
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: lo8gk0cqwguwq
      deprecated: true
  /templating/template:
    post:
      security:
        - OAuth2:
            - sda_templating_setting
      tags:
        - Templating
      summary: Create a new template
      operationId: CreateTemplate
      requestBody:
        description: New template body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateBody'
      responses:
        '201':
          description: Template was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '400':
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: f5weybn9hmovf
  /templating/template-type:
    post:
      security:
        - OAuth2:
            - sda_templating_setting
      tags:
        - Templating
      summary: Create a new template type
      operationId: CreateTemplateType
      requestBody:
        description: New template type body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateTypeBody'
      responses:
        '201':
          description: Template type was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateTypeCreated'
        '400':
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 0htkb4bea09sq
    get:
      summary: Search Template Types
      tags:
        - Templating
      responses:
        '200':
          description: List of corresponding Template Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateTypeCollection'
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Error'
      operationId: get-templating-template-type
      x-stoplight:
        id: j0oi2ml4rsm4i
      security:
        - OAuth2:
            - sda_templating_setting
      parameters:
        - name: code
          schema:
            type: string
          in: query
          description: Template Type Code
        - schema:
            type: boolean
          in: query
          name: predefined
          description: Boolean value to specify retrieve only predefined Template Type
  '/templating/template-type/{code}':
    parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
        example: TEMPTYPE01
        description: Unique code of the template type
    get:
      security:
        - OAuth2:
            - sda_templating_setting
      tags:
        - Templating
      summary: Get template type by code
      operationId: GetTemplateTypeByCode
      responses:
        '200':
          description: Template type was fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateType'
        '400':
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: bkbtsx65t1l9w
    put:
      summary: Modify Template Type
      tags:
        - Templating
      responses:
        '200':
          description: Updated Template Type
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/TemplateTypeCreated'
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Error'
      operationId: put-templating-template-type-code
      x-stoplight:
        id: wvcc4iiz7ilzb
      security:
        - OAuth2:
            - sda_templating_setting
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/TemplateTypeForUpdate'
  /operations:
    get:
      security:
        - OAuth2:
            - operation_read
      parameters:
        - in: query
          required: false
          name: operationType
          schema:
            type: string
            example: POSTING
        - in: query
          required: false
          name: isSystem
          schema:
            type: boolean
            example: true
      operationId: RetrieveOperationByType
      summary: Search Operations
      tags:
        - Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    technicalName:
                      type: string
                      description: The technical name of the operation.
                      example: POSTING_CUSTOM
                    type:
                      type: string
                      description: Operation's type
                      example: POSTING
                    isSystem:
                      type: boolean
                      description: Is a system operation
                    translations:
                      type: object
                      description: Translations of the record's name in different languages.
                      additionalProperties:
                        type: string
                        description: The translation of the record's name in a particular language.
                      example:
                        fr_FR: French translation
                        en_US: English translation
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: tntmqiuopbd7r
  /profiles:
    get:
      security:
        - OAuth2:
            - profiles_view
      tags:
        - Profiles
      summary: List User Profiles
      description: |
        Returns the list of all accessible User Profiles
      operationId: ListProfiles
      parameters:
        - name: profileId
          in: query
          schema:
            $ref: '#/components/schemas/ProfileId'
        - name: role
          in: query
          schema:
            $ref: '#/components/schemas/IdentityRole'
        - name: name
          in: query
          schema:
            type: string
            description: the Profile name
        - name: ownerId
          in: query
          schema:
            $ref: '#/components/schemas/IdentityId'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
      responses:
        '200':
          description: List of usable Profiles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: afnj0hutbf64h
    post:
      tags:
        - Profiles
      security:
        - OAuth2:
            - sda_create_user_profiles
      operationId: CreateUserProfile
      summary: Create a new User Profile.
      requestBody:
        $ref: '#/components/requestBodies/CreateUserProfileRequest'
      responses:
        '201':
          $ref: '#/components/responses/UserProfileCreatedResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: rf8j9zbfz6ecf
  '/mandates/identity/{identityId}':
    parameters:
      - name: identityId
        in: path
        required: true
        description: The id of the identity.
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - mandate_management
      tags:
        - Mandates
      summary: Get the mandates of an identity
      operationId: MandatesByIdentity
      responses:
        '200':
          description: The paginated list of the identity inward debit mandates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MandatesCollection'
        '400':
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: xosiy4fm7fvnx
  '/mandates/{mandateId}/revoke':
    parameters:
      - in: path
        required: true
        name: mandateId
        schema:
          $ref: '#/components/schemas/MandateId'
    delete:
      tags:
        - Mandates
      security:
        - OAuth2:
            - mandate_management
      summary: Revoke mandate
      operationId: RevokeMandate
      responses:
        '200':
          description: The revoked mandate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mandate'
        '400':
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 9oihz38ye1xs1
  '/mandates/{mandateId}/activate':
    parameters:
      - in: path
        required: true
        name: mandateId
        schema:
          $ref: '#/components/schemas/MandateId'
    post:
      tags:
        - Mandates
      security:
        - OAuth2:
            - mandate_management
      summary: Activate mandate
      operationId: ActivateMandate
      responses:
        '200':
          description: The activated mandate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mandate'
        '400':
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: z2euanbjqtfd7
  /delegated-accesses:
    post:
      tags:
        - Customer access
      security:
        - OAuth2:
            - sda_create_delegated_accesses
      operationId: CreateDelegatedAccessForParty
      summary: Create new party with delegated access to another
      requestBody:
        $ref: '#/components/requestBodies/CreateDelegatedAccessForPartyRequest'
      responses:
        '201':
          $ref: '#/components/responses/DelegatedAccessCreatedResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: 9aznamhntaz0o
  /currencies:
    get:
      tags:
        - Currencies
      security:
        - OAuth2:
            - sda_currency_view
      summary: Get list of currencies available on the platform
      operationId: ListCurrencies
      parameters:
        - in: query
          name: isoNumeric
          schema:
            type: string
        - in: query
          name: isoAlpha
          schema:
            type: string
      responses:
        '200':
          description: Returns list of currencies with details
          content:
            application/json:
              schema:
                type: object
                properties:
                  currencies:
                    $ref: '#/components/schemas/Currencies'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: mfbyq2jjsdjsq
  /cards:
    post:
      tags:
        - Cards
      security:
        - OAuth2:
            - sda_card_management
        - OAuth2:
            - sda_card_creation
      operationId: CreateCardForAccount
      summary: Request a new card
      requestBody:
        $ref: '#/components/requestBodies/CreateCardRequest'
      responses:
        '201':
          description: Card creation response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardItemWithLinks'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: fkzzgy6gohoti
    get:
      security:
        - OAuth2:
            - sda_card_management
        - OAuth2:
            - sda_card_view
      tags:
        - Cards
      summary: List all cards
      operationId: SearchCards
      parameters:
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/CardId'
        - name: anonymous
          in: query
          schema:
            type: boolean
            description: Get anonymous cards
        - name: embossedName
          in: query
          schema:
            type: string
            description: Card embossed name
        - name: embossedReference
          in: query
          description: Card embossed reference
          schema:
            type: string
        - name: number
          in: query
          description: Card support number
          schema:
            type: string
        - name: truncatedPan
          in: query
          description: Card truncated PAN
          schema:
            type: string
        - name: startConfirmationDate
          in: query
          description: Confirmation date range start
          schema:
            $ref: ./DateTime.yaml
        - name: endConfirmationDate
          in: query
          description: Confirmation date range end
          schema:
            $ref: ./DateTime.yaml
        - name: startExpirationDate
          in: query
          description: Expiration date range start
          schema:
            $ref: ./DateTime.yaml
        - name: endExpirationDate
          in: query
          description: Expiration date range end
          schema:
            $ref: ./DateTime.yaml
        - name: startActivationDate
          in: query
          description: Activation date range start
          schema:
            $ref: ./DateTime.yaml
        - name: endActivationDate
          in: query
          description: Activation date range end
          schema:
            $ref: ./DateTime.yaml
        - name: startAssociationDate
          in: query
          description: Association date range start
          schema:
            $ref: ./DateTime.yaml
        - name: endAssociationDate
          in: query
          description: Association date range end
          schema:
            $ref: ./DateTime.yaml
        - name: startCreationDate
          in: query
          description: Creation date range start
          schema:
            $ref: ./DateTime.yaml
        - name: endCreationDate
          in: query
          description: Creation date range end
          schema:
            $ref: ./DateTime.yaml
        - name: externalStatus
          in: query
          description: Card external status
          schema:
            type: string
        - name: hasLastOperationInError
          in: query
          description: Get cards with an operation in error
          schema:
            type: boolean
        - name: hasOperationBlocked
          in: query
          description: Get cards with last operation in pending block request
          schema:
            type: boolean
        - name: hasOperationUnblocked
          in: query
          description: Get cards with last operation in pending unblock request
          schema:
            type: boolean
        - name: hasPendingOpposition
          in: query
          description: Get cards with last operation in pending opposition request
          schema:
            type: boolean
        - name: productId
          in: query
          schema:
            $ref: '#/components/schemas/ProductId'
        - name: externalId
          in: query
          schema:
            $ref: '#/components/schemas/CardExternalId'
        - name: status
          in: query
          description: Card status
          schema:
            $ref: '#/components/schemas/CardStatus'
        - name: startStatusChangeDate
          in: query
          description: Status change date range start
          schema:
            $ref: ./DateTime.yaml
        - name: endStatusChangeDate
          in: query
          description: Status change date rand end
          schema:
            $ref: ./DateTime.yaml
        - name: userId
          in: query
          schema:
            $ref: '#/components/schemas/IdentityId'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - embossedName
              - embossedReference
              - externalStatusConfirmationDate
              - activationDate
              - associationDate
              - truncatedPan
              - number
              - expirationDate
              - creationDate
              - productId
              - status
              - statusChangeDate
              - userId
      responses:
        '200':
          description: Returns a card collection matching filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardCollection'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
      x-stoplight:
        id: 74tr6fjynq1h7
  /cards/virtual:
    post:
      tags:
        - Cards
      security:
        - OAuth2:
            - sda_card_virtual_creation
      operationId: CreateVirtualCardForAccount
      summary: Request a new virtual card
      requestBody:
        $ref: '#/components/requestBodies/CreateCardRequest'
      responses:
        '201':
          description: Card creation response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardItemWithLinks'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: suqz0h3z33i7b
  '/cards/{cardId}':
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CardId'
    get:
      security:
        - OAuth2:
            - sda_card_management
        - OAuth2:
            - sda_card_view
      tags:
        - Cards
      summary: Retrieve a card
      operationId: GetCard
      responses:
        '200':
          description: Card information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardItemWithLinks'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
      x-stoplight:
        id: k0or7pjdmxu43
    patch:
      security:
        - OAuth2:
            - sda_card_management
      tags:
        - Cards
      summary: Update a card
      operationId: UpdateCard
      requestBody:
        $ref: '#/components/requestBodies/CardUpdateRequest'
      responses:
        '201':
          description: Card pincode reissued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardSelfLink'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: xjyo5ye7vqbkv
  '/cards/{cardId}/image':
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CardId'
    get:
      security:
        - OAuth2:
            - sda_card_management
        - OAuth2:
            - sda_card_view
      tags:
        - Cards
      summary: Get a card's image
      operationId: GetCardImage
      responses:
        '200':
          description: The card's image as PNG
          content:
            image/png:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
      x-stoplight:
        id: 9te5ihco8h21v
  '/cards/{cardId}/operations':
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CardId'
    get:
      security:
        - OAuth2:
            - sda_card_management
        - OAuth2:
            - sda_card_view
      tags:
        - Cards
      summary: List all card operations
      operationId: CardOperationList
      parameters:
        - name: id
          in: query
          schema:
            type: string
            description: Card operation Id
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/CardManagementOperationType'
        - name: state
          in: query
          schema:
            $ref: '#/components/schemas/CardManagementOperationState'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - type
              - state
      responses:
        '200':
          description: Card operation list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardManagementOperationCollection'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
      x-stoplight:
        id: uhvtrhfq56l8x
  '/cards/{cardId}/outstandings':
    parameters:
      - $ref: '#/components/parameters/CardId'
    get:
      security:
        - OAuth2:
            - sda_card_management
        - OAuth2:
            - sda_card_view
      tags:
        - Cards
      summary: Get card outstandings
      operationId: GetCardOutstandingList
      responses:
        '200':
          description: Card outstandings list
          content:
            application/json:
              schema:
                type: object
                required:
                  - outstandings
                properties:
                  outstandings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Outstanding'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
      x-stoplight:
        id: v14g1w33s8pkm
  '/cards/{cardId}/activate':
    parameters:
      - $ref: '#/components/parameters/CardId'
    post:
      security:
        - OAuth2:
            - sda_card_management
        - OAuth2:
            - sda_card_activate
      tags:
        - Cards
      summary: Request a card activation
      operationId: CardActivation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: Activation code
      responses:
        '201':
          description: Card activation requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardSelfLink'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: kss3okbitqkdr
      parameters:
        - schema:
            type: string
            enum:
              - ALL
              - API
              - APP
              - BANK
              - IVR
              - ONLINE
              - POS
              - SMS
              - UNKNOWN
              - USSD
              - WEB
          in: query
          name: media
          description: Available media channels
  '/cards/{cardId}/deactivate':
    parameters:
      - $ref: '#/components/parameters/CardId'
    post:
      security:
        - OAuth2:
            - sda_card_management
        - OAuth2:
            - sda_card_deactivate
      tags:
        - Cards
      summary: Request a card deactivation
      operationId: CardDeactivation
      responses:
        '201':
          description: Card deactivation requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardSelfLink'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: hq8hr14gj1yah
      parameters:
        - schema:
            type: string
            enum:
              - ALL
              - API
              - APP
              - BANK
              - IVR
              - ONLINE
              - POS
              - SMS
              - UNKNOWN
              - USSD
              - WEB
          in: query
          name: media
          description: Available media channels
  '/cards/{cardId}/block':
    parameters:
      - $ref: '#/components/parameters/CardId'
    post:
      security:
        - OAuth2:
            - sda_card_management
        - OAuth2:
            - sda_card_block
      tags:
        - Cards
      summary: Request a card blocking
      operationId: CardBlock
      responses:
        '201':
          description: Card block requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardSelfLink'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: o58w51iqik9t1
      parameters:
        - schema:
            type: string
            enum:
              - ALL
              - API
              - APP
              - BANK
              - IVR
              - ONLINE
              - POS
              - SMS
              - UNKNOWN
              - USSD
              - WEB
          in: query
          name: media
          description: Available media channels
  '/cards/{cardId}/unblock':
    parameters:
      - $ref: '#/components/parameters/CardId'
    post:
      security:
        - OAuth2:
            - sda_card_management
        - OAuth2:
            - sda_card_unblock
      tags:
        - Cards
      summary: Request a card unblock
      operationId: CardUnblock
      responses:
        '201':
          description: Card unblock requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardSelfLink'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: pss5jqenu5gji
      parameters:
        - schema:
            type: string
            enum:
              - ALL
              - API
              - APP
              - BANK
              - IVR
              - ONLINE
              - POS
              - SMS
              - UNKNOWN
              - USSD
              - WEB
          in: query
          name: media
          description: Available media channels
  '/cards/{cardId}/oppose':
    parameters:
      - $ref: '#/components/parameters/CardId'
    post:
      security:
        - OAuth2:
            - sda_card_management
        - OAuth2:
            - sda_card_oppose
      tags:
        - Cards
      summary: Request a card opposition
      operationId: CardOpposition
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Oppose reason
                  enum:
                    - ABUSE
                    - LOST
                    - STOLEN
                    - NOT_DISTRIBUTED
                    - COUNTERFEIT
      responses:
        '201':
          description: Card opposition requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardSelfLink'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: vhd1fzww5e3aw
      parameters:
        - schema:
            type: string
            enum:
              - ALL
              - API
              - APP
              - BANK
              - IVR
              - ONLINE
              - POS
              - SMS
              - UNKNOWN
              - USSD
              - WEB
          in: query
          name: media
          description: Available media channels
  '/cards/{cardId}/refabricate':
    parameters:
      - $ref: '#/components/parameters/CardId'
    post:
      security:
        - OAuth2:
            - sda_card_management
            - sda_card_refabrication
      tags:
        - Cards
      summary: Request a card refabrication
      operationId: CardRefabrication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  enum:
                    - ABUSE
                    - DAMAGED
                    - EXPIRED
                    - LOST
                    - OPPOSED
                    - STOLEN
                  description: Refabrication reason
                  type: string
      responses:
        '201':
          description: Card refabrication requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardSelfLink'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: c27xpvz0n6g7r
      parameters:
        - schema:
            type: string
            enum:
              - ALL
              - API
              - APP
              - BANK
              - IVR
              - ONLINE
              - POS
              - SMS
              - UNKNOWN
              - USSD
              - WEB
          in: query
          name: media
          description: Available media channels
  '/cards/{cardId}/features':
    parameters:
      - $ref: '#/components/parameters/CardId'
    patch:
      security:
        - OAuth2:
            - sda_card_management
        - OAuth2:
            - sda_card_features_management
      tags:
        - Cards
      summary: Request a card feature change
      operationId: ChangeCardFeature
      requestBody:
        $ref: '#/components/requestBodies/ChangeCardFeatureRequest'
      responses:
        '200':
          description: Card feature updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardSelfLink'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 8cpz79dmynuap
  '/cards/{cardId}/limits':
    parameters:
      - $ref: '#/components/parameters/CardId'
    patch:
      security:
        - OAuth2:
            - sda_card_management
        - OAuth2:
            - sda_card_limits_management
      tags:
        - Cards
      summary: Request a card limit change
      operationId: ChangeCardLimit
      requestBody:
        $ref: '#/components/requestBodies/ChangeCardLimitRequest'
      responses:
        '200':
          description: Card limit updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardSelfLink'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: qjx6w3mswxpqq
  '/cards/{cardId}/pinCodeReissuing':
    parameters:
      - $ref: '#/components/parameters/CardId'
    post:
      security:
        - OAuth2:
            - sda_card_management
        - OAuth2:
            - sda_card_reissue_pincode
      tags:
        - Cards
      summary: Request a pin code reissue
      operationId: CardPinCodeReissuing
      requestBody:
        $ref: '#/components/requestBodies/CardPincodeReissuingRequest'
      responses:
        '201':
          description: Card pincode reissued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardSelfLink'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: sxc88777mi1u7
      parameters:
        - schema:
            type: string
            enum:
              - ALL
              - API
              - APP
              - BANK
              - IVR
              - ONLINE
              - POS
              - SMS
              - UNKNOWN
              - USSD
              - WEB
          in: query
          name: media
          description: Available media channels
  '/external-system-configurations/{code}':
    parameters:
      - in: path
        name: code
        required: true
        schema:
          $ref: '#/components/schemas/Code'
    put:
      security:
        - OAuth2:
            - sda_external-system-configurations_management
      tags:
        - External System Configuration
      operationId: SaveExternalSystemConfiguration
      summary: Save external system configuration
      requestBody:
        description: |
          Accept operation properties.
          Set of key-value pairs that you can attach to the external system configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationBody'
      responses:
        '201':
          $ref: '#/components/responses/SaveExternalSystemConfigurationResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: enn8ohpi59tjz
    get:
      security:
        - OAuth2:
            - sda_external-system-configurations_management
      tags:
        - External System Configuration
      operationId: GetExternalSystemConfiguration
      summary: Get external system configuration
      responses:
        '200':
          $ref: '#/components/responses/GetExternalSystemConfigurationResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: upq9uruw9jaym
    delete:
      security:
        - OAuth2:
            - sda_external-system-configurations_management
      tags:
        - External System Configuration
      operationId: DeleteExternalSystemConfiguration
      summary: Delete external system configuration
      responses:
        '204':
          description: External system configuration deleted successfully
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: x7r60rhcvk25p
  /customer-actions/available-actions:
    get:
      security:
        - OAuth2:
            - sda_customer-actions_read
      tags:
        - Customer Actions
      operationId: GetCustomerActions
      summary: Get customer actions
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerActionsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
      x-stoplight:
        id: gsu98vopzx9xh
  '/customer-actions/initiate-action/{action-code}':
    parameters:
      - name: action-code
        in: path
        description: The code of the customer action to initiate
        required: true
        schema:
          type: string
          example: email_change
    put:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerActionInitiationRequest'
      security:
        - OAuth2:
            - sda_customer-actions_initiate
      tags:
        - Customer Actions
      operationId: InitiateCustomerAction
      summary: Initiate customer action
      responses:
        '201':
          $ref: '#/components/responses/InitiateCustomerActionResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: rarnfkchq8btf
  '/customer-actions/ongoing-actions/{customerActionBusinessProcessId}':
    parameters:
      - name: customerActionBusinessProcessId
        in: path
        description: The id of the customer action business process to get
        required: true
        schema:
          $ref: '#/components/schemas/CustomerActionBusinessProcessId'
    get:
      security:
        - OAuth2:
            - sda_customer-actions_read
      tags:
        - Customer Actions
      operationId: GetOngoingCustomerActionBusinessProcess
      summary: Get ongoing customer action business process
      responses:
        '200':
          $ref: '#/components/responses/GetOngoingCustomerActionBusinessProcessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: chkqsjh0udi44
    patch:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerActionUpdateRequest'
      security:
        - OAuth2:
            - sda_customer-actions_initiate
      tags:
        - Customer Actions
      operationId: UpdateOngoingCustomerActionBusinessProcess
      summary: Update ongoing customer action business process
      responses:
        '200':
          $ref: '#/components/responses/GetOngoingCustomerActionBusinessProcessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: 1mi0sg6jmz2fj
  '/customer-actions/ongoing-actions/{customerActionBusinessProcessId}/submit':
    parameters:
      - name: customerActionBusinessProcessId
        in: path
        description: The id of the customer action business process to submit
        required: true
        schema:
          $ref: '#/components/schemas/CustomerActionBusinessProcessId'
    post:
      security:
        - OAuth2:
            - sda_customer-actions_initiate
      tags:
        - Customer Actions
      operationId: SubmitOngoingCustomerActionBusinessProcess
      summary: submit ongoing customer action business process
      responses:
        '204':
          description: Customer Action Business Process submitted successfully
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: m2lr3ibp9ccfx
  /postings:
    post:
      security:
        - OAuth2:
            - posting
      tags:
        - Posting
      summary: Perform an internal transfer (Posting)
      description: Perform an internal transfer between accounts
      operationId: PostPosting
      requestBody:
        required: true
        description: |
          Transaction information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostingRequest'
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Transaction ID
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 4sqzcg1pyv1c5
  '/postings/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          description: Transaction ID
    get:
      security:
        - OAuth2:
            - posting
      tags:
        - Posting
      summary: Get an internal transfer (Posting)
      description: Get an internal transfer between accounts
      operationId: GetPosting
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetails'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: zi234agrk6p3k
  /authentications/processes:
    post:
      security:
        - OAuth2:
            - sda_authentications-processes_write
      tags:
        - Authentications
      summary: '[NYI] Set up a new authentication process'
      operationId: SetUpNewAuthenticationProcess
      requestBody:
        $ref: '#/components/requestBodies/CreateAuthenticationProcessRequest'
      responses:
        '201':
          $ref: '#/components/responses/AuthenticationProcessCreatedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: oumtkev3f8czr
    get:
      security:
        - OAuth2:
            - sda_authentications-processes_view
      tags:
        - Authentications
      summary: '[NYI] Search authentication processes'
      operationId: searchAuthenticationProcesses
      parameters:
        - name: code
          in: query
          description: Filter on code of authentication process
          schema:
            type: string
            example: AUTH_POSTING
        - name: status
          in: query
          description: Filter on the status of authentication processes
          schema:
            $ref: '#/components/schemas/AuthenticationProcessStatus'
      responses:
        '200':
          $ref: '#/components/responses/ListAuthenticationProcessesResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 13x6osil1nm3d
  '/authentications/processes/{code}':
    parameters:
      - name: code
        in: path
        description: Code of the authentication process to update
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationProcessCodeReadOnly'
    put:
      security:
        - OAuth2:
            - sda_authentications-processes_write
      tags:
        - Authentications
      summary: '[NYI] Update an authentication process'
      operationId: UpdateAuthenticationProcess
      requestBody:
        $ref: '#/components/requestBodies/UpdateAuthenticationProcessRequest'
      responses:
        '201':
          $ref: '#/components/responses/AuthenticationProcessUpdatedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 8n1uk223l5lfz
    get:
      security:
        - OAuth2:
            - sda_authentications-processes_view
      tags:
        - Authentications
      summary: '[NYI] Retrieve an authentication process by code'
      operationId: RetrieveAuthenticationProcess
      responses:
        '200':
          description: The authentication process
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationProcess'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: uiq1qtervsa8l
  '/authentications/processes/{code}/methods':
    parameters:
      - name: code
        in: path
        description: Code of the authentication process to list the processes methods
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationProcessCodeReadOnly'
    get:
      security:
        - OAuth2:
            - sda_authentications-processes_view
      tags:
        - Authentications
      summary: '[NYI] Search processes methods for an authentication process'
      operationId: SearchAuthenticationProcessMethods
      responses:
        '200':
          $ref: '#/components/responses/ListAuthenticationProcessMethodsResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ua5e666pjij8x
    post:
      security:
        - OAuth2:
            - sda_authentications-processes_write
      tags:
        - Authentications
      summary: '[NYI] Associate with a new authentication process method'
      operationId: AssociateNewAuthenticationProcessMethod
      requestBody:
        $ref: '#/components/requestBodies/CreateAuthenticationProcessMethodRequest'
      responses:
        '201':
          description: New authentication process method pincode associated
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: pllc82c0yxnel
  '/authentications/processes/{processCode}/methods/{methodCode}':
    parameters:
      - name: processCode
        in: path
        description: Code of the authentication process
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationProcessCodeReadOnly'
      - name: methodCode
        in: path
        description: Code of the authentication process method
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationProcessMethodCode'
    put:
      security:
        - OAuth2:
            - sda_authentications-processes_write
      tags:
        - Authentications
      summary: '[NYI] Update an authentication process method'
      operationId: UpdateAuthenticationProcessMethod
      requestBody:
        $ref: '#/components/requestBodies/UpdateAuthenticationProcessMethodRequest'
      responses:
        '201':
          $ref: '#/components/responses/AuthenticationProcessMethodUpdatedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 1myibv6jlc1k3
    get:
      security:
        - OAuth2:
            - sda_authentications-processes_view
      tags:
        - Authentications
      summary: '[NYI] Retrieve an authentication process method'
      operationId: RetrieveAuthenticationProcessMethod
      responses:
        '200':
          description: Authentication process method retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationProcessMethod'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: sn0wls06qap4w
  /authentications/sessions:
    post:
      security:
        - OAuth2:
            - sda_authentications-sessions_initiate
      tags:
        - Authentications
      summary: Initiate a new authentication session
      operationId: InitiateNewAuthenticationSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateNewAuthenticationSessionParam'
      responses:
        '201':
          description: New authentication session initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationSessionInitiated'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: munwq4zjqi6fa
    get:
      security:
        - OAuth2:
            - sda_authentications-sessions_view
      tags:
        - Authentications
      summary: Search authentication sessions
      operationId: SearchAuthenticationSessions
      parameters:
        - name: token
          in: query
          description: Filter on session token
          schema:
            $ref: '#/components/schemas/AuthenticationSessionToken'
        - name: id
          in: query
          description: Filter on session id
          schema:
            $ref: '#/components/schemas/AuthenticationSessionId'
        - name: isSuspicious
          in: query
          description: Filter on suspicious flag
          schema:
            type: boolean
        - name: offset
          in: query
          description: Pagination start (from 0)
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
            minimum: 1
            default: 20
      responses:
        '200':
          $ref: '#/components/responses/ListAuthenticationSessionsResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 03m9bwomxbss0
  '/authentications/sessions/{token}':
    parameters:
      - name: token
        in: path
        description: Session token
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationSessionToken'
    get:
      security:
        - OAuth2:
            - sda_authentications-sessions_view
      tags:
        - Authentications
      summary: Retrieve information about the authentication session
      operationId: RetrieveAuthenticationSession
      responses:
        '200':
          description: Authentication session retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationSession'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: dxxrywwwfdd26
  '/authentications/sessions/{token}/cancel':
    parameters:
      - name: token
        in: path
        description: Session token to cancel
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationSessionToken'
    post:
      security:
        - OAuth2:
            - sda_authentications-sessions_auth
      tags:
        - Authentications
      summary: Cancel the authentication session
      operationId: CancelAuthenticationSession
      responses:
        '204':
          description: Authentication session cancelled
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: oncdgcf0g50aa
  '/authentications/sessions/{token}/refuse':
    parameters:
      - name: token
        in: path
        description: Session token
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationSessionToken'
    post:
      security:
        - OAuth2:
            - sda_authentications-sessions_auth
      tags:
        - Authentications
      summary: Refuse the authentication session
      operationId: RefuseAuthenticationSession
      responses:
        '204':
          description: Authentication session refused
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 2a6w3v6moc5d9
  '/authentications/sessions/{token}/mark-suspicious':
    parameters:
      - name: token
        in: path
        description: Session token
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationSessionToken'
    patch:
      security:
        - OAuth2:
            - sda_authentications-sessions_suspicious
      tags:
        - Authentications
      summary: Mark the authentication session as suspicious
      operationId: MarkSuspiciousAuthenticationSession
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Comment to identify the reason for marking the authentication session as suspicious
              properties:
                suspiciousComment:
                  type: string
                  description: suspicious comment
      responses:
        '204':
          description: Authentication session marked as suspicious
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: cm9xku9cfq6j3
  '/authentications/sessions/{token}/unmark-suspicious':
    parameters:
      - name: token
        in: path
        description: Session token
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationSessionToken'
    patch:
      security:
        - OAuth2:
            - sda_authentications-sessions_suspicious
      tags:
        - Authentications
      summary: Unmark the authentication session as suspicious
      operationId: UnMarkSuspiciousAuthenticationSession
      responses:
        '204':
          description: Authentication session unmarked as suspicious
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: sjnwbdv95n9gp
  '/authentications/sessions/{token}/methods/sms/send':
    parameters:
      - name: token
        in: path
        description: Session token
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationSessionToken'
    post:
      security:
        - OAuth2:
            - sda_authentications-sessions_auth
      tags:
        - Authentications
      summary: Send sms information to authenticate the current authentication method sms
      operationId: SendAuthenticationSessionMethodSms
      responses:
        '200':
          description: Authentication session method sms sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationSessionAuthResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: yyndf7uxx7phc
  '/authentications/sessions/{token}/methods/sms/verify':
    parameters:
      - name: token
        in: path
        description: Session token
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationSessionToken'
    post:
      security:
        - OAuth2:
            - sda_authentications-sessions_auth
      tags:
        - Authentications
      summary: Authenticate with information for the current authentication method sms
      operationId: AuthenticateAuthenticationSessionSMS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateAuthenticationSessionMethodSmsParam'
      responses:
        '200':
          description: Authentication session method SMS Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationSessionAuthResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: dxy44ws574m38
  '/authentications/sessions/{token}/methods/email/send':
    parameters:
      - name: token
        in: path
        description: Session token
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationSessionToken'
    post:
      security:
        - OAuth2:
            - sda_authentications-sessions_auth
      tags:
        - Authentications
      summary: '[NYI] Send email information to authenticate the current authentication method email'
      operationId: SentAuthenticationSessionMethodSms
      responses:
        '200':
          description: Authentication session method email sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationSessionAuthResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: iv359jc2rpi0r
  '/authentications/sessions/{token}/methods/email/verify':
    parameters:
      - name: token
        in: path
        description: Session token
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationSessionToken'
    post:
      security:
        - OAuth2:
            - sda_authentications-sessions_auth
      tags:
        - Authentications
      summary: '[NYI] Authenticate with information for the current authentication method email'
      operationId: AuthenticateAuthenticationSessionEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateAuthenticationSessionMethodEmailParam'
      responses:
        '200':
          description: Authentication session method email Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationSessionAuthResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 6iumqpjqbbghi
  '/authentications/sessions/{token}/keyboard':
    parameters:
      - name: token
        in: path
        description: Session token
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationSessionToken'
    post:
      security:
        - OAuth2:
            - sda_authentications-sessions_auth
      tags:
        - Authentications
      summary: Generates a secret code input keyboard to authenticate
      description: |
        **Notice:** a Keyboard can only be used once. If the secret code validation fails, you will have to generate a new Keyboard to make a new attempt.
      operationId: GenerateVirtualKeyboard
      parameters:
        - name: font
          in: query
          description: the font to use in images
          schema:
            type: string
        - name: color
          in: query
          description: the text color
          schema:
            type: string
            pattern: '^#[0-9]{6}$'
            example: '#000000'
        - name: width
          in: query
          description: size of the image in pixel
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: fontSize
          in: query
          description: size of the font
          schema:
            type: integer
            minimum: 1
            maximum: 500
      responses:
        '201':
          description: returns a keyboard safe to use to input client secret code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PincodeKeyboardData'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: jc8sp8in7bpxv
  '/authentications/sessions/{token}/methods/pincode/verify':
    parameters:
      - name: token
        in: path
        description: Session token
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationSessionToken'
    post:
      security:
        - OAuth2:
            - sda_authentications-sessions_auth
      tags:
        - Authentications
      summary: Authenticate with information for the current authentication method pincode
      operationId: AuthenticateAuthenticationSessionPincode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateAuthenticationSessionMethodPincodeParam'
      responses:
        '200':
          description: Authentication session method pincode Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationSessionAuthResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: axpgx5mdnhpjq
  /spending-categorization/categories:
    get:
      security:
        - OAuth2:
            - sda_spending-categorization_management
      tags:
        - Spending Categorization
      summary: Get available categories
      description: Returns the full list of spending categories and subcategories
      operationId: GetSpendingCategories
      responses:
        '200':
          $ref: '#/components/responses/GetSpendingsCategories'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
      x-stoplight:
        id: e7cu8z51yq8vr
  /spending-categorization/available-additional-data:
    get:
      security:
        - OAuth2:
            - sda_spending-categorization_management
      tags:
        - Spending Categorization
      summary: Get available spending additional data keys
      operationId: GetSpendingAdditionalDataKeys
      responses:
        '200':
          $ref: '#/components/responses/GetSpendingsAdditionalData'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
      x-stoplight:
        id: 4yn84h4864u71
  /spending-categorization/spendings:
    get:
      security:
        - OAuth2:
            - sda_spending-categorization_management
      tags:
        - Spending Categorization
      operationId: GetSpendingDetailsOnTransaction
      parameters:
        - name: categoryId
          in: query
          description: Filter the result on spending categoryId (use `UNCATEGORIZED` for non-categorized transactions)
          schema:
            $ref: '#/components/schemas/WriteOnlySpendingCategoryId'
        - name: subcategoryId
          in: query
          description: Filter the result on spending subcategoryId (use `UNCATEGORIZED` for non-categorized transactions)
          schema:
            $ref: '#/components/schemas/WriteOnlySpendingCategoryId'
        - name: transactionId
          in: query
          description: Filter on the transactionId
          schema:
            $ref: '#/components/schemas/TransactionId'
        - name: locked
          in: query
          description: 'If true, spendings details of this transaction can no longer be updated'
          schema:
            type: boolean
            example: true
        - name: qualified
          in: query
          description: Whether the transaction's amount is fully qualified or not.
          schema:
            type: boolean
            example: true
        - name: justified
          in: query
          description: Whether the transaction has at least one attachment to justify it.
          schema:
            type: boolean
            example: true
        - name: externalId
          in: query
          description: Filter the result on transaction external id
          schema:
            $ref: '#/components/schemas/TransactionExternalId'
        - name: type
          in: query
          description: 'Filter the result on transaction type. You might want to use `?type[]=CASHIN&type[]=CASHOUT` for multiple filter.'
          schema:
            $ref: '#/components/schemas/TransactionType'
        - name: startDate
          in: query
          description: Filter for transactions after this date (date range is limited to 3 months)
          schema:
            $ref: ./DateTime.yaml
        - name: endDate
          in: query
          description: Filter for transactions before this date (date range is limited to 3 months)
          schema:
            $ref: ./DateTime.yaml
        - name: amount
          in: query
          description: Filter for given amount (integer value)
          schema:
            $ref: '#/components/schemas/AmountValue'
        - name: currency
          in: query
          description: Filter for given currency
          schema:
            $ref: '#/components/schemas/Currency'
        - name: accountId
          in: query
          description: Filter for given account
          schema:
            $ref: '#/components/schemas/AccountNumber'
        - name: userId
          in: query
          description: Filter for given identity
          schema:
            $ref: '#/components/schemas/IdentityId'
        - name: cardId
          in: query
          description: Filter for given card
          schema:
            $ref: '#/components/schemas/CardId'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - date
              - amount
      summary: Get spending details on transaction
      responses:
        '200':
          $ref: '#/components/responses/GetSpendingDetailsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: fvofwpzw9yjff
    post:
      security:
        - OAuth2:
            - sda_spending-categorization_management
      tags:
        - Spending Categorization
      operationId: AddSpendingDetailOnTransaction
      summary: Add detailed spending on transaction
      requestBody:
        $ref: '#/components/requestBodies/AddSpendingDetailOnTransactionRequest'
      responses:
        '201':
          $ref: '#/components/responses/SpendingDetailAddedOnTransactionResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: wyivr2zy9zjz8
  '/spending-categorization/spendings/{spendingId}':
    parameters:
      - in: path
        name: spendingId
        required: true
        schema:
          $ref: '#/components/schemas/SpendingDetailId'
    get:
      security:
        - OAuth2:
            - sda_spending-categorization_management
      tags:
        - Spending Categorization
      operationId: LoadSpendingDetailWithTransactionById
      summary: Load spending detail by ID with its transaction
      responses:
        '200':
          $ref: '#/components/responses/SpendingDetailUpdatedResponse'
      x-stoplight:
        id: imymqp1ajw2nc
    patch:
      security:
        - OAuth2:
            - sda_spending-categorization_management
      tags:
        - Spending Categorization
      operationId: UpdateSpendingDetail
      summary: Update spending detail
      description: |
        To delete an additional data value, use the `null` value with the corresponding key in the `additionalData` array.
        ```
        {
          "key": "additionalDataKey",
          "value": null
        }
        ```
      requestBody:
        $ref: '#/components/requestBodies/UpdateSpendingDetailRequest'
      responses:
        '200':
          $ref: '#/components/responses/SpendingDetailUpdatedResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: q3nb8pakyy3ip
    delete:
      security:
        - OAuth2:
            - sda_spending-categorization_management
      tags:
        - Spending Categorization
      operationId: DeleteSpendingDetail
      summary: Delete spending detail
      responses:
        '204':
          $ref: '#/components/responses/SpendingDetailDeletedResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 31vhhf25dwj21
  /transaction-attachments:
    get:
      security:
        - OAuth2:
            - sda_spending-categorization_management
      tags:
        - Transaction Attachments
      operationId: GetTransactionAttachmentsList
      summary: Get attachments on transaction
      parameters:
        - in: query
          name: transactionId
          required: true
          schema:
            $ref: '#/components/schemas/TransactionId'
      responses:
        '200':
          $ref: '#/components/responses/GetTransactionAttachmentsListResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: ranm691ke59fe
    post:
      security:
        - OAuth2:
            - sda_spending-categorization_management
      tags:
        - Transaction Attachments
      operationId: AddAttachmentToTransaction
      summary: Add attachment to transaction
      requestBody:
        $ref: '#/components/requestBodies/AddAttachmentToTransactionRequest'
      responses:
        '201':
          $ref: '#/components/responses/AttachmentAddedToTransactionResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: ti7nmhr83dp3w
  '/transaction-attachments/{attachmentId}':
    parameters:
      - in: path
        name: attachmentId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionAttachmentId'
    delete:
      security:
        - OAuth2:
            - sda_spending-categorization_management
      tags:
        - Transaction Attachments
      operationId: DeleteTransactionAttachment
      summary: Delete attachments on transaction
      responses:
        '204':
          $ref: '#/components/responses/TransactionAttachmentDeletedResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: k972jho8u1z56
  '/transaction-attachments/{attachmentId}/content':
    parameters:
      - in: path
        name: attachmentId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionAttachmentId'
    get:
      security:
        - OAuth2:
            - sda_spending-categorization_management
      tags:
        - Transaction Attachments
      operationId: GetTransactionAttachmentContent
      summary: Get attachments content
      responses:
        '200':
          $ref: '#/components/responses/TransactionAttachmentContentResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: y8gc41phn10xa
  '/transaction-attachments/{attachmentId}/preview':
    parameters:
      - in: path
        name: attachmentId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionAttachmentId'
    get:
      security:
        - OAuth2:
            - sda_spending-categorization_management
      tags:
        - Transaction Attachments
      operationId: GetTransactionAttachmentThumbnail
      summary: Get attachments content thumbnail
      responses:
        '200':
          $ref: '#/components/responses/TransactionAttachmentPreviewResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: no9503a7kher5
  /settings:
    get:
      security:
        - OAuth2:
            - sda_settings_view
      tags:
        - Settings
      summary: View current settings of platform
      operationId: ViewSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
      x-stoplight:
        id: fmy6f4s1vm4wg
  /exchange-rates:
    parameters:
      - name: date
        in: query
        required: false
        schema:
          type: string
          description: 'Date at which we want to know all applicable rates on the platform. If not provided, the current date is used. Format YYYYMMDD'
          example: '20240117'
    get:
      security:
        - OAuth2:
            - sda_exchange-rates_view
      operationId: ViewApplicableExchangeRatesForDate
      tags:
        - Exchange rates
      summary: Get applicable rates for given date
      description: Get applicable rates for given date
      responses:
        '200':
          $ref: '#/components/responses/GetExchangeRateHistoryResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: csosnzpjia9nt
  '/exchange-rates/{exchangeRateHistoryId}/history':
    parameters:
      - name: exchangeRateHistoryId
        in: path
        required: true
        schema:
          type: string
          description: 'Pair of currencies (e.g. EURUSD, THBUSD)'
          example: EURUSD
    get:
      security:
        - OAuth2:
            - sda_exchange-rates_view
      operationId: GetExchangeRate
      tags:
        - Exchange rates
      summary: View the history for an exchange rate
      description: View the history of the values for a pair of currencies.
      responses:
        '200':
          $ref: '#/components/responses/GetExchangeRateHistoryResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 3wd2pucnkafdd
  '/exchange-rates/{exchangeRateHistoryId}/history/{date}':
    parameters:
      - name: exchangeRateHistoryId
        in: path
        required: true
        schema:
          type: string
          description: 'Pair of currencies alpha codes (e.g. EURUSD, THBUSD)'
          example: EURUSD
      - name: date
        in: path
        required: true
        schema:
          type: string
          description: 'Date for which the exchange rate is valid, format YYYYMMDD'
          example: '20200101'
    put:
      security:
        - OAuth2:
            - sda_exchange-rates_write
      operationId: SaveExchangeRate
      tags:
        - Exchange rates
      description: Create or update an exchange rate for a pair of currencies valid for a specific date
      summary: Create or update an exchange rate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeRateEditionRequest'
      responses:
        '200':
          description: Modified successfully
        '201':
          description: Exchange rate was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExchangeRateHistoryResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 8wl484q6j8uu7
    delete:
      security:
        - OAuth2:
            - sda_exchange-rates_write
      operationId: DeleteExchangeRate
      tags:
        - Exchange rates
      summary: Delete an exchange rate
      description: Delete the exchange rate for a pair of currencies valid for a specific date.
      responses:
        '204':
          description: Value for currencies and date deleted successfully
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 8px90bisd9lq4
  '/exchange-rates/{exchangeRateHistoryId}':
    parameters:
      - name: exchangeRateHistoryId
        in: path
        required: true
        schema:
          type: string
          description: 'Pair of currencies (e.g. EURUSD, THBUSD)'
          example: EURUSD
    delete:
      security:
        - OAuth2:
            - sda_exchange-rates_write
      operationId: DeleteExchangeRatesForCurrencies
      tags:
        - Exchange rates
      summary: Delete the whole history for a pair of currencies
      description: Delete the whole history for a pair of currencies. This will delete all the exchange rates for the given pair of currencies. This operation is not reversible.
      responses:
        '204':
          description: Deleted successfully
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: l4pyvc6xdzuws
  /docusign/envelopes/send:
    post:
      security:
        - OAuth2:
            - sda_docusign_send_envelopes
      tags:
        - DocuSign
      summary: Send an envelope
      operationId: sendEnvelopeDocuSign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Envelope'
      responses:
        '201':
          description: Envelope successfully send
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: zif12lzz4yc0q
  /docusign/envelopes/receive:
    post:
      security:
        - OAuth2:
            - sda_docusign_receive_envelopes
      tags:
        - DocuSign
      summary: This end point must be call by DocuSign to notify that an envelope has been signed
      operationId: receiveEnvelopeDocuSign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceiveEnvelope'
      responses:
        '200':
          description: Envelope successfully received
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: d28mtgrhjej8p
  /cheque-products:
    get:
      security:
        - OAuth2:
            - product_management
      operationId: SearchChequeProduct
      tags:
        - Product
      summary: Search within cheque products
      description: Search within cheque products
      parameters:
        - name: id
          in: query
          description: Filter by cheque product identifier
          schema:
            type: string
        - name: name
          in: query
          description: Filter by product name
          schema:
            type: string
            example: My Cheque Product
        - name: code
          in: query
          description: Filter by product code
          schema:
            type: string
            example: CHEQUE41
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - name
              - code
        - name: profileIds
          in: query
          schema:
            type: array
            items:
              type: string
            example:
              - '1'
              - '24'
          description: Filter by profile IDs associated to cheque products
      responses:
        '200':
          description: Cheque products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChequeProductCollection'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: dsub72q8u8gj0
    post:
      security:
        - OAuth2:
            - product_management
      operationId: CreateChequeProduct
      tags:
        - Product
      summary: Create a cheque product
      description: Create a product related to cheques
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChequeProductRequest'
      responses:
        '201':
          description: Cheque product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChequeProduct'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: iwjp9cxfz35w6
  '/cheque-products/{productId}':
    parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: string
          description: Product id
          example: '1234'
    get:
      security:
        - OAuth2:
            - product_management
      operationId: ReadChequeProduct
      tags:
        - Product
      summary: Get a cheque product details
      description: Get the details from a product related to cheques
      responses:
        '200':
          description: Cheque product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChequeProduct'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 3t7maln59tf2s
    patch:
      security:
        - OAuth2:
            - product_management
      operationId: UpdateChequeProduct
      tags:
        - Product
      summary: Update a cheque product
      description: Updates an existing cheque product. Only fields defined in the request will be updated.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChequeProductRequest'
      responses:
        '200':
          description: Cheque product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChequeProduct'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: yb0auvk3ffwad
    delete:
      security:
        - OAuth2:
            - product_management
      operationId: DeleteChequeProduct
      tags:
        - Product
      summary: Delete a cheque product
      description: Delete a product related to cheques
      responses:
        '204':
          description: Cheque product deleted successfully
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: ao4d3ili6kmp9
  /operations-awaiting-decision:
    get:
      security:
        - OAuth2:
            - sda_operation-awaiting-decision_view
      summary: Search operations awaiting decision
      operationId: SearchOperationsAwaitingDecision
      parameters:
        - name: id
          in: query
          description: Filter on id of operations awaiting decision
          schema:
            $ref: '#/components/schemas/OperationAwaitingDecisionProcessId'
        - name: status
          in: query
          description: Filter on the status of operations awaiting decision
          schema:
            $ref: '#/components/schemas/OperationAwaitingDecisionStatus'
        - schema:
            type: string
          in: query
          name: operationIdentityId
          description: Filter on the operation identity id of operations awaiting decision
        - schema:
            type: string
          in: query
          name: operationAccountNumber
          description: Filter on the operation account number of operations awaiting decision
      responses:
        '200':
          description: Operations awaiting decision listed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationAwaitingDecisionsCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 3mx3kjioafcxb
      tags:
        - Operations Awaiting Decision
    parameters: []
  '/operations-awaiting-decision/{id}':
    parameters:
      - name: id
        in: path
        description: Id of the operation awaiting decision
        required: true
        schema:
          $ref: '#/components/schemas/OperationAwaitingDecisionProcessId'
    get:
      security:
        - OAuth2:
            - sda_operation-awaiting-decision_view
      summary: Retrieve the operation awaiting decision
      operationId: RetrieveOperationAwaitingDecisions
      responses:
        '200':
          description: Operation awaiting decision retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationAwaitingDecisionProcess'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 17vk7lg3gid2u
      tags:
        - Operations Awaiting Decision
  '/operations-awaiting-decision/{id}/approve':
    parameters:
      - name: id
        in: path
        description: Id of the operation awaiting decision
        required: true
        schema:
          $ref: '#/components/schemas/OperationAwaitingDecisionProcessId'
    post:
      security:
        - OAuth2:
            - sda_operation-awaiting-decision_management
      summary: Approve the operation awaiting decision
      operationId: ApproveOperationAwaitingDecision
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - decisionComment
              properties:
                decisionComment:
                  type: string
                  description: Comment to approve the operation awaiting decision
      responses:
        '200':
          description: Operation awaiting decision approved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationAwaitingDecisionProcess'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: nb3j7h2ql86wi
      tags:
        - Operations Awaiting Decision
  '/operations-awaiting-decision/{id}/refuse':
    parameters:
      - name: id
        in: path
        description: Id of the operation awaiting decision
        required: true
        schema:
          $ref: '#/components/schemas/OperationAwaitingDecisionProcessId'
    post:
      security:
        - OAuth2:
            - sda_operation-awaiting-decision_management
      summary: Refuse the operation awaiting decision
      operationId: RefuseOperationAwaitingDecision
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - decisionComment
              properties:
                decisionComment:
                  type: string
                  description: Comment to refuse the operation awaiting decision. (can be empty)
      responses:
        '200':
          description: Operation awaiting decision refused
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationAwaitingDecisionProcess'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: jbcrmbkrzccgq
      tags:
        - Operations Awaiting Decision
  /customer-files/credit-transfers:
    parameters:
      - name: type
        in: query
        description: Type of uploaded customer file
        required: true
        schema:
          type: string
          enum:
            - pain.001
      - name: norm
        in: query
        description: Norm of uploaded customer file
        required: true
        schema:
          type: string
          enum:
            - ISO20022
            - ISO20022PLUS
    post:
      security:
        - OAuth2:
            - customer-instruction_upload
      summary: Upload a customer instructions initiation file
      tags:
        - Payment - Customer instructions
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    x-stoplight:
                      id: n3f78iwco9a4e
                  message:
                    type: string
                    x-stoplight:
                      id: vhiszjwvgdk6k
      operationId: post-customer-files-credit-transfers-file
      x-stoplight:
        id: dkezb5r2ys7hw
      description: Upload a customer files initiation file
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/xml
  /accounting:
    get:
      summary: Retrieve accounting entries
      tags:
        - Accounting
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        2XX:
          description: A collection corresponding accounting entries are returned
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    items:
                      - id: '36653'
                        type: TRANSFER
                        description: 'Bill payment from account of 10,00 € to Haribo - Issuer reference: 123'
                        relatedTransactionInformation:
                          id: '87530'
                          type: PAYBILL_ACCOUNT
                          businessProcessId: null
                          reconciliationReference: null
                          links:
                            rel: transaction
                            href: 'https://sandbox.skaleet.com/api/service-domain/v1/transactions/87530'
                        account:
                          accountNumber: '10000000157'
                          accountBalance: 996879704
                          productCode: CLIENT_CURRENT_EUR
                          subledgerAccountNumber: '80000000010'
                        accountOwner:
                          id: '3'
                          role: CLIENT
                          name: Jean
                          mappingCriteria: null
                        date:
                          bookingDate: '2024-02-05T10:54:47+01:00'
                          valueDate: '2024-02-05T00:00:00+01:00'
                        amount:
                          value: 1000
                          currency:
                            isoNumeric: '978'
                            isoAlpha: EUR
                            name: Euro
                            symbol: €
                            decimalNumber: 2
                            symbolFirst: false
                            decimalSeparator: ','
                            thousandsSeparator: null
                            precision: 2
                        direction: debit
                        analyticAccountingReference: SKLT_2795_2024-07-03_externalData_1
                    count: 1
                    limit: 20
                    offset: 0
                    sort: +accountingEntryId
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        type:
                          type: string
                        description:
                          type: string
                        relatedTransactionInformation:
                          type: object
                          properties:
                            id:
                              type: string
                            type:
                              type: string
                            businessProcessId:
                              type: 'null'
                            reconciliationReference:
                              type: 'null'
                            links:
                              type: object
                              properties:
                                rel:
                                  type: string
                                href:
                                  type: string
                        account:
                          type: object
                          properties:
                            accountNumber:
                              type: string
                            accountBalance:
                              type: integer
                            productCode:
                              type: string
                            subledgerAccountNumber:
                              type: string
                        accountOwner:
                          type: object
                          properties:
                            id:
                              type: string
                            role:
                              type: string
                            name:
                              type: string
                            mappingCriteria:
                              type: array
                              items:
                                type: object
                                properties:
                                  fieldId:
                                    type: string
                                    x-stoplight:
                                      id: h6f51wyfhd85c
                        date:
                          type: object
                          properties:
                            bookingDate:
                              type: string
                            valueDate:
                              type: string
                        amount:
                          type: integer
                        currency:
                          type: object
                          properties:
                            name:
                              type: string
                            iso_numeric:
                              type: string
                              x-stoplight:
                                id: 7l0apuqpmjxxr
                            iso_alpha:
                              type: string
                              x-stoplight:
                                id: hpmfl7z5bonbv
                            precision:
                              type: integer
                              description: Number of decimals
                            symbol:
                              type: string
                            symbol_first:
                              type: boolean
                              x-stoplight:
                                id: rch18kjp4wuht
                        direction:
                          type: string
                        analyticAccountingReference:
                          type: string
                  count:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer
                  sort:
                    type: string
              examples:
                Example 1:
                  value:
                    items:
                      - id: string
                        type: string
                        description: string
                        relatedTransactionInformation:
                          id: string
                          type: string
                          businessProcessId: null
                          reconciliationReference: null
                          links:
                            rel: string
                            href: string
                        account:
                          accountNumber: string
                          accountBalance: 0
                          productCode: string
                          subledgerAccountNumber: string
                        accountOwner:
                          id: string
                          role: string
                          name: string
                          mappingCriteria:
                            - birthCountry: 250
                            - hasAnimals: true
                        date:
                          bookingDate: string
                          valueDate: string
                        amount: 1000
                        currency:
                          isoNumeric: string
                          isoAlpha: string
                          name: string
                          symbol: string
                          symbolFirst: true
                          decimalSeparator: string
                          thousandsSeparator: null
                          precision: 0
                        direction: string
                        analyticAccountingReference: string
                    count: 0
                    limit: 0
                    offset: 0
                    sort: string
      operationId: get-accounting
      x-stoplight:
        id: oln19r5i7ci8g
      description: Retrieve accounting entries given a given filter
      security:
        - OAuth2:
            - sda_accounting_view
      parameters:
        - schema:
            type: string
          in: query
          name: accountingEntryId
        - schema:
            $ref: '#/components/schemas/AccountingEntryType'
          in: query
          name: accountingEntryType
        - schema:
            type: string
          in: query
          name: transactionId
        - schema:
            $ref: '#/components/schemas/TransactionType'
            example: PAYMENT
          in: query
          name: transactionType
        - schema:
            type: string
          in: query
          name: transactionExternalId
        - schema:
            type: string
          in: query
          name: transactionBusinessProcessId
        - schema:
            type: string
          in: query
          name: transactionReconciliationReference
        - schema:
            type: string
          in: query
          name: accountNumber
        - schema:
            type: string
          in: query
          name: subledgerAccountNumber
        - schema:
            type: string
            format: date-time
          in: query
          name: bookingDateAfter
        - schema:
            type: string
            format: date-time
          in: query
          name: bookingDateBefore
        - schema:
            type: string
            format: date-time
          in: query
          name: valueDateAfter
        - schema:
            type: string
            format: date-time
          in: query
          name: valueDateBefore
        - schema:
            type: integer
          in: query
          name: minAmount
        - schema:
            type: integer
          in: query
          name: maxAmount
        - schema:
            type: string
            enum:
              - debit
              - credit
          in: query
          name: direction
        - schema:
            $ref: '#/components/schemas/Currency'
          in: query
          name: currency
        - schema:
            type: string
          in: query
          name: sort
          description: Parameter to sort by. Prefix with `-` for Descending ordern.
        - schema:
            type: number
          in: query
          name: offset
        - schema:
            type: number
          in: query
          name: limit
  /chequebooks:
    post:
      summary: Request chequebook order
      responses:
        '201':
          description: Chequebook requested
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: string
                    x-stoplight:
                      id: 4dep12mepg43b
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: OrderChequebook
      x-stoplight:
        id: qer8pxvbd8a7i
      security:
        - OAuth2:
            - sda_chequebooks_write
      requestBody:
        $ref: '#/components/requestBodies/OrderChequebookRequest'
      description: 'Use this endpoint to request a chequebook for an account. '
      tags:
        - Cheques
    get:
      summary: Get all chequebooks
      responses:
        '200':
          description: List of corresponding chequebooks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChequebookCollection'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: GetAllChequebooks
      security:
        - OAuth2:
            - sda_chequebooks_read
      description: Get all chequebooks.
      tags:
        - Cheques
      parameters:
        - schema:
            type: string
          in: query
          name: id
          description: Filter on an ID for a specific chequebook
        - schema:
            type: string
          in: query
          name: accountNumber
          description: Filter on the account number
        - schema:
            type: string
          in: query
          name: productId
          description: Filter on the product ID
        - schema:
            type: string
          in: query
          description: Filter by chequebook status
          name: status
        - schema:
            type: string
            example: '345'
          in: query
          name: clientId
          description: Filter on the client ID
        - schema:
            type: integer
            example: 42
          in: query
          name: numberOfCheques
          description: Filter on the number of cheques
        - schema:
            type: string
            format: date
            example: '2024-07-25'
          in: query
          name: startDate
          description: 'Filter on the order date of the chequebooks, ranging from the start date to the end date. The date must be provided in the ''Y-m-d'' format'
        - schema:
            type: string
            format: date
            example: '2024-08-06'
          in: query
          name: endDate
          description: 'Filter on the order date of the chequebooks, ranging from the start date to the end date. The date must be provided in the ''Y-m-d'' format'
        - schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 500
          in: query
          name: limit
          description: The number of items per page
        - schema:
            type: integer
            default: 0
            minimum: 0
          in: query
          name: offset
          description: Starting item position number
        - schema:
            type: string
            default: id
            enum:
              - id
          in: query
          name: sort
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
      x-stoplight:
        id: xo348peykhjb1
  /cheques:
    get:
      summary: Get all cheques
      responses:
        '200':
          description: List of corresponding cheques
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChequeViewModelForGetAllChequesCollection'
              examples:
                Example 1:
                  value:
                    items:
                      - id: '54321'
                        number: 42
                        status: PENDING
                        clientId: '12345'
                        accountNumber: '10000000157'
                        chequebookId: '1337'
                        chequeProductId: '3210'
                      - id: '54321'
                        number: 44
                        status: PENDING
                        clientId: '12345'
                        accountNumber: '10000000157'
                        chequebookId: '1337'
                        chequeProductId: '3210'
                    count: 2
                    offset: 0
                    limit: 20
                    sort: id
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: GetAllCheques
      security:
        - OAuth2:
            - sda_cheque_read
      description: Get all cheques
      tags:
        - Cheques
      parameters:
        - schema:
            type: string
          in: query
          name: id
          description: Filter on an id for a specific cheque
        - schema:
            type: string
          in: query
          name: accountNumber
          description: Filter on the account number
        - schema:
            type: string
          in: query
          name: number
          description: Filter on the cheque number
        - schema:
            type: string
          in: query
          description: Filter by Status
          name: status
        - schema:
            type: string
          in: query
          description: Filter on an id for a specific chequebook
          name: chequebookId
        - schema:
            type: string
          in: query
          name: clientId
          description: Filter on the owner's identity id
        - name: offset
          in: query
          description: Pagination start (from 1)
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: size
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
            minimum: 1
            default: 20
        - name: sort
          in: query
          description: |
            Field to define the sort order.
            To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -.
          schema:
            type: string
            example: +accountNumber
            default: +accountNumber
            enum:
              - +accountNumber
              - '-accountNumber'
              - +chequebookId
              - '-chequebookId'
              - +clientId
              - '-clientId'
              - +number
              - '-number'
              - +status
              - '-status'
        - schema:
            type: string
            example: '2024-07-31T14:19:44Z'
            format: date-time
          in: query
          name: lastStatusChangeDateLowerBound
          description: Lower bound for the last status change date of the cheques to retrieve. Must be in the DATE_ATOM format
        - schema:
            type: string
            example: '2024-08-30T14:19:44Z'
            format: date-time
          in: query
          name: lastStatusChangeDateUpperBound
          description: Upper bound for the last status change date of the cheques to retrieve. Must be in the DATE_ATOM format
      x-stoplight:
        id: e78suo3wwp9rb
  '/cheques/{chequeId}':
    parameters:
      - schema:
          type: string
        name: chequeId
        in: path
        required: true
        description: Cheque id
    get:
      summary: Get a cheque
      responses:
        '200':
          description: retrieve a cheque by Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cheque'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: RetrieveACheque
      security:
        - OAuth2:
            - sda_cheque_read
      description: Get a cheque.
      tags:
        - Cheques
      x-stoplight:
        id: 44l7zl103kdas
  '/accounts/:accountId/statements/generate':
    get:
      summary: Generate and download a statement of account for a defined period
      tags:
        - Accounts
      responses:
        '200':
          description: The PDF file
        '400':
          description: Request could not be processed
      operationId: GenerateAccountStatement
      x-stoplight:
        id: d5hzm8jpzzd4q
      security:
        - OAuth2:
            - sda_accounts_view
      parameters:
        - schema:
            type: string
            format: date
            example: '2024-01-01'
          in: query
          name: startDate
          required: true
        - schema:
            type: string
            format: date
            example: '2024-01-31'
          in: query
          name: endDate
          required: true
  '/chequebooks/{chequebookId}':
    parameters:
      - schema:
          type: string
        name: chequebookId
        in: path
        required: true
        description: Chequebook id
    get:
      summary: Retrieve a chequebook
      tags:
        - Cheques
      responses:
        '200':
          description: Chequebook detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chequebook'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: getChequebookByChequebookId
      x-stoplight:
        id: g5h704pw4gk4d
      security:
        - OAuth2:
            - sda_chequebooks_read
  /customer-billing/pricings:
    post:
      security:
        - OAuth2:
            - pricing_management
      tags:
        - Customer Billing
      summary: Setup a new pricing
      operationId: SetupNewPricing
      requestBody:
        description: New Pricing
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerBillingPricingBody'
      responses:
        '201':
          description: Pricing was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBillingPricing'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: dwnc5mgkz9xcl
    get:
      security:
        - OAuth2:
            - pricing_view
      tags:
        - Customer Billing
      summary: Search pricings
      operationId: SearchPricing
      parameters:
        - name: codes
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
            example:
              - PRICING01
              - PRICING02
          description: Search pricing with these exact codes
        - name: name
          in: query
          schema:
            type: string
            example: pricing 01 Name
          description: Search pricing having name like specified name
        - name: currency
          in: query
          schema:
            type: string
            example: EUR
        - name: vatType
          in: query
          schema:
            type: string
          description: id of the TVA profile
        - name: type
          in: query
          schema:
            type: string
            enum:
              - AMOUNT
              - FORMULA
            example: AMOUNT
        - name: operationTypes
          style: form
          explode: false
          in: query
          schema:
            type: array
            items:
              type: string
            example:
              - ACCOUNT_TO_ACCOUNT
              - SALARY_TO_ACCOUNT
          description: Search pricing having all specified operation types
        - name: operationIds
          style: form
          explode: false
          in: query
          schema:
            type: array
            items:
              type: string
            example:
              - POSTING_INTERNATIONAL
              - POSTING_NATIONAL
          description: Search pricing having all specified operationIds (technical name)
        - name: profileIds
          style: form
          explode: false
          in: query
          schema:
            type: array
            items:
              type: string
            example:
              - '1'
              - '3'
          description: Search pricing having one of specified profile Ids
        - name: productIds
          style: form
          explode: false
          in: query
          schema:
            type: array
            items:
              type: string
            example:
              - '11'
              - '33'
          description: Search pricing having one of specified product Ids
        - name: offset
          in: query
          description: Pagination start (from 0)
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
            minimum: 0
            default: 20
        - schema:
            type: string
            enum:
              - SOURCE
              - BENEFICIARY
              - BOTH
          in: query
          name: direction
          description: 'Direction of the customer billing, indicating the party on which fees will be applied'
      responses:
        '200':
          description: Pricing search result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: uvmbx88xlx598
  '/customer-billing/pricings/{code}':
    parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - pricing_view
      tags:
        - Customer Billing
      summary: Retrieve pricing
      operationId: RetrievePricing
      responses:
        '200':
          description: Get pricing detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBillingPricing'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: p6ahkw2gxvpsh
    put:
      security:
        - OAuth2:
            - pricing_management
      tags:
        - Customer Billing
      summary: Modify a pricing
      operationId: ModifyPricing
      requestBody:
        description: Modify Pricing
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiablePricingFields'
      responses:
        '200':
          description: Pricing was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBillingPricing'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: vbhd640eovrcy
  '/customer-billing/client-consumptions/{clientId}':
    parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: string
          example: '349'
    get:
      security:
        - OAuth2:
            - pricing_view
      tags:
        - Customer Billing
      summary: Retrieve details of pricing consumed by a client
      operationId: RetrievePricingClientConsumptions
      responses:
        '200':
          description: Get details of pricing consumed by a client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBillingPricingClientConsumption'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: pkmu0jb77e4co
  /customer-billing/calculate-fees:
    put:
      security:
        - OAuth2:
            - sda_fees_read
      tags:
        - Customer Billing
      summary: Calculate fees associated to an operation ID and profile ID
      operationId: CalculateFees
      requestBody:
        description: Calculate Fees
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateFeesPricing'
      responses:
        '200':
          description: Calculate fees result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateFeesList'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: k8464an4nxywo
  '/customer-billing/pricings/client-account/{accountNumber}':
    parameters:
      - name: accountNumber
        in: path
        required: true
        description: Search pricings that could be applied to this client account
        schema:
          type: string
          example: '13000057730'
    get:
      security:
        - OAuth2:
            - pricing_view
            - sda_fees_discount_read
      tags:
        - Customer Billing
      summary: Search pricings by client account
      operationId: SearchPricingByClientAccount
      parameters:
        - name: name
          in: query
          description: Search pricing having name like specified name
          schema:
            type: string
            example: pricing 01 Name
        - name: currency
          in: query
          schema:
            type: string
            example: EUR
        - name: page
          in: query
          description: Pagination start (from 1)
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: size
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
            minimum: 1
            default: 20
        - name: sort
          in: query
          description: |
            Field to define the sort order.
            To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -.
          schema:
            type: string
            example: +currency
            default: +currency
            enum:
              - +name
              - '-name'
              - +currency
              - '-currency'
              - +rate
              - '-rate'
      responses:
        '200':
          description: Pricings by client account search result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingForClientAccountCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: t7lnuivhi9ply
  /customer-billing/subscriptions:
    post:
      security:
        - OAuth2:
            - pricing_management
      tags:
        - Customer Billing
      summary: Setup a new subscription
      operationId: SetupNewSubscription
      requestBody:
        description: New subscription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerBillingSubscriptionBody'
      responses:
        '201':
          description: Pricing was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBillingSubscription'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: uau0mm3g5fz1d
    get:
      security:
        - OAuth2:
            - pricing_view
      tags:
        - Customer Billing
      summary: Search subscriptions
      operationId: SearchSubscription
      parameters:
        - name: codes
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
            example:
              - PRICING01
              - PRICING02
          description: Search pricing with these exact codes
        - name: name
          in: query
          schema:
            type: string
            example: pricing 01 Name
          description: Search pricing having name like specified name
        - name: currency
          in: query
          schema:
            type: string
            example: EUR
        - name: isMandatory
          in: query
          schema:
            type: boolean
            example: false
        - name: frequency
          in: query
          schema:
            type: string
            enum:
              - DAILY
              - WEEKLY
              - MONTHLY
              - QUARTERLY
              - SEMESTER
              - YEARLY
            example: DAILY
        - name: vatType
          in: query
          schema:
            type: string
          description: id of the TVA profile
        - name: productIds
          style: form
          explode: false
          in: query
          schema:
            type: array
            items:
              type: string
            example:
              - '11'
              - '33'
          description: Search subscriptions having one of specified product Ids
        - name: offset
          in: query
          description: Pagination start (from 0)
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
            minimum: 0
            default: 20
      responses:
        '200':
          description: Pricing search result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBillingSubsriptionCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: azqkymizl2z79
  '/customer-billing/subscriptions/{code}':
    parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - pricing_view
      tags:
        - Customer Billing
      summary: Retrieve subscription
      operationId: RetrieveSubscription
      responses:
        '200':
          description: Get subscription detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBillingSubscription'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: bjz0i49dn3fzs
    put:
      security:
        - OAuth2:
            - pricing_management
      tags:
        - Customer Billing
      summary: Modify a subscription
      operationId: ModifySubscription
      requestBody:
        description: Modify subscription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiableSubscriptionFields'
      responses:
        '200':
          description: Pricing was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBillingSubscription'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: k9a0p67tuzpgp
  '/customer-billing/client-subscriptions/{code}/client/{id}/activate':
    parameters:
      - name: code
        in: path
        description: Client subscription code
        required: true
        schema:
          type: string
          example: PHONESUBSCRIPTION349ED
      - name: id
        in: path
        description: Client ID
        required: true
        schema:
          type: string
          example: '349'
    post:
      security:
        - OAuth2:
            - subscription_write
      tags:
        - Customer Billing
      summary: Activate a subscription on a client
      operationId: ActivateClientSubscription
      requestBody:
        description: Modify Pricing
        content:
          application/json:
            schema:
              type: object
              properties:
                reductionCode:
                  type: string
                  example: RED01
                  description: Reduction to apply on the subscription
      responses:
        '200':
          description: Client subscription is activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSubscription'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ra7l91xrso56r
  /customer-billing/client-subscriptions:
    get:
      security:
        - OAuth2:
            - subscription_read
      tags:
        - Customer Billing
      summary: Search client subscriptions
      operationId: SearchClientSubscriptions
      parameters:
        - name: clientId
          in: query
          schema:
            type: string
            example: '349'
          description: Client ID
        - name: customerBillingCode
          in: query
          schema:
            type: string
            example: PHONESUBSCRIPTION
          description: Customer billing code
        - name: offset
          in: query
          description: Pagination start (from 0)
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
            minimum: 1
            default: 20
      responses:
        '200':
          description: Client subscriptions search result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSubscriptionCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: mp0et9npnf0yr
  '/customer-billing/client-subscriptions/{code}':
    parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
          example: PHONESUBSCRIPTION349ED
    get:
      security:
        - OAuth2:
            - subscription_read
      tags:
        - Customer Billing
      summary: Retrieve a client subscription
      operationId: RetrieveClientSubscription
      responses:
        '200':
          description: The client subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSubscription'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: atkz6puaepx6e
  '/customer-billing/client-subscriptions/{code}/deactivate':
    parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
          example: PHONESUBSCRIPTION349ED
    post:
      security:
        - OAuth2:
            - subscription_write
      tags:
        - Customer Billing
      summary: Deactivate a client subscription
      operationId: DeactivateClientSubscription
      responses:
        '200':
          description: The client subscription is deactivated
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: whlbjlrpox1y8
  '/customer-billing/client-subscriptions/{code}/installments/{date}/pay':
    parameters:
      - name: code
        in: path
        description: Client subscription code
        required: true
        schema:
          type: string
          example: PHONESUBSCRIPTION349ED
      - name: date
        in: path
        description: Date of the installment
        required: true
        schema:
          type: string
          format: date
          example: '2023-03-31'
    post:
      security:
        - OAuth2:
            - subscription_write
      tags:
        - Customer Billing
      summary: Pay a client subscription installment
      operationId: PayClientSubscriptionInstallment
      responses:
        '200':
          description: The installment is paid
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ex4r38vqzd8eq
  /customer-billing/credit-pricings:
    post:
      security:
        - OAuth2:
            - pricing_management
      tags:
        - Customer Billing
      summary: Setup a new credit pricing
      operationId: SetupNewCreditPricing
      requestBody:
        description: New Credit Pricing
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerBillingCreditPricingBody'
      responses:
        '201':
          description: Credit pricing was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBillingCreditPricing'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ntgm6sn2fwcsv
    get:
      security:
        - OAuth2:
            - pricing_view
      tags:
        - Customer Billing
      summary: Search credit pricings
      operationId: SearchCreditPricing
      parameters:
        - name: codes
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
            example:
              - PRICING01
              - PRICING02
          description: Search pricing with these exact codes
        - name: name
          in: query
          schema:
            type: string
            example: pricing 01 Name
          description: Search pricing having name like specified name
        - name: nature
          in: query
          schema:
            type: string
            enum:
              - FEES
              - INSURANCE
          description: nature of the pricing
        - name: currency
          in: query
          schema:
            type: string
            example: EUR
        - name: isMandatory
          in: query
          schema:
            type: boolean
            example: false
        - name: frequency
          in: query
          schema:
            type: string
            enum:
              - SINGLE
              - CONTRACT
              - DAILY
              - WEEKLY
              - MONTHLY
              - QUARTERLY
              - SEMESTER
              - YEARLY
            example: SINGLE
        - name: vatType
          in: query
          schema:
            type: string
          description: id of the TVA profile
        - name: aprc
          in: query
          schema:
            type: boolean
            example: false
        - name: type
          in: query
          schema:
            type: string
            enum:
              - AMOUNT
              - FORMULA
            example: AMOUNT
        - name: offset
          in: query
          description: Pagination start (from 0)
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
            minimum: 0
            default: 20
      responses:
        '200':
          description: Credit pricing search result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBillingCreditPricingCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 7nh8qjwh4rdu6
  '/customer-billing/credit-pricings/{code}':
    parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - pricing_view
      tags:
        - Customer Billing
      summary: Retrieve credit pricing
      operationId: RetrieveCreditPricing
      responses:
        '200':
          description: Get credit pricing detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBillingCreditPricing'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: n00tnqspdzdzj
    put:
      security:
        - OAuth2:
            - pricing_management
      tags:
        - Customer Billing
      summary: Modify a credit pricing
      operationId: ModifyCreditPricing
      requestBody:
        description: Modify Credit Pricing
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiableCreditPricingFields'
      responses:
        '200':
          description: Credit pricing was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBillingCreditPricing'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 1nh6shr7m2d19
  /entities:
    post:
      security:
        - OAuth2:
            - sda_entities_write
      tags:
        - Entities
      summary: Create a new entity
      operationId: CreateEntity
      requestBody:
        description: Create a new entity
        content:
          application/json:
            schema:
              required:
                - code
                - name
                - parentCode
              properties:
                code:
                  type: string
                  description: 'Unique code, containing capital letters, numbers, - and _'
                  example: NEW_ENTITY-1
                  maxLength: 64
                  pattern: '^[A-Z0-9_\-]+$'
                name:
                  type: string
                  description: The non-localized display name of the entity
                  maxLength: 256
                  example: My new entity n°1
                parentCode:
                  type: string
                  description: The code of the parent entity
                  maxLength: 64
                  example: MAIN
                  pattern: '^[A-Z0-9_\-]+$'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
      x-stoplight:
        id: jv4ppn49klf1j
  /fees:
    post:
      security:
        - OAuth2:
            - sda_fees_write
      tags:
        - Fees
      summary: Add a fee
      operationId: AddFee
      requestBody:
        description: New Fee
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeBody'
      responses:
        '201':
          description: Fee was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: svb64vt35avno
    get:
      security:
        - OAuth2:
            - sda_fees_read
      tags:
        - Fees
      summary: Retrieve all fees
      operationId: RetrieveAllFees
      parameters:
        - name: id
          in: query
          description: Filter by ID of fee
          schema:
            type: integer
            format: int64
        - name: srcAccountNumber
          in: query
          description: Filter by a source account number
          schema:
            type: string
            example: '10000065846'
        - name: pricingCode
          in: query
          description: Filter by a pricing code
          schema:
            type: string
            example: PRICINGCODEEXAMPLE
        - name: amount
          in: query
          description: Filter by an amount
          schema:
            type: integer
            format: int64
        - name: currency
          in: query
          description: Filter by given currency
          schema:
            $ref: '#/components/schemas/Currency'
        - name: makerId
          in: query
          description: Filter by the maker
          schema:
            type: integer
            format: int64
        - name: startDate
          in: query
          description: Start date of the range for the fee creation date (date range is limited to 3 months)
          schema:
            type: string
            format: date-time
            description: Default value is endDate - 3 months
            example: '2023-11-29T00:00:00+01:00'
        - name: endDate
          in: query
          description: End date of the range for the fee creation date (date range is limited to 3 months)
          schema:
            type: string
            format: date-time
            description: Default value is today
            example: '2024-02-29T23:59:59+01:00'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - srcAccountNumber
              - pricingCode
              - amount
              - currency
              - makerId
              - date
        - schema:
            type: string
          in: query
          description: Filter by fee status
          name: status
      responses:
        '200':
          description: Fees retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: aotr9p3rbscn9
  '/fees/{id}':
    parameters:
      - name: id
        in: path
        description: ID of fee
        required: true
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - sda_fees_read
      tags:
        - Fees
      summary: Retrieve a fee
      operationId: RetrieveFee
      responses:
        '200':
          description: Fee retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 2x0jlbzcaskad
  '/fees/{id}/validate':
    parameters:
      - name: id
        in: path
        description: ID of the pending fee to validate
        required: true
        schema:
          type: string
          example: '456872'
    post:
      security:
        - OAuth2:
            - sda_fees_validate
      tags:
        - Fees
      summary: Validate a fee
      operationId: ValidateFee
      requestBody:
        description: Fee validation comment
        content:
          application/json:
            schema:
              required:
                - validationComment
              properties:
                validationComment:
                  type: string
                  description: Reason for validating the fee
                  example: Mailing fee approved
      responses:
        '202':
          description: Fee was validated
          content:
            application/json:
              schema:
                required:
                  - transactionId
                properties:
                  transactionId:
                    type: string
                    description: ID of the payment transaction that is initiated after the fee is validated
                    example: '123987'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: qp59ue8bdwodr
  '/fees/{id}/refuse':
    parameters:
      - name: id
        in: path
        description: ID of the pending fee to refuse
        required: true
        schema:
          type: string
          example: '456872'
    post:
      security:
        - OAuth2:
            - sda_fees_refuse
      tags:
        - Fees
      summary: Refuse a fee
      operationId: RefuseFee
      requestBody:
        description: Fee refusal comment
        content:
          application/json:
            schema:
              required:
                - refusalComment
              properties:
                refusalComment:
                  type: string
                  description: Reason for refusing the fee
                  example: Mailing fee refused
      responses:
        '202':
          description: Fee was refused
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: k708jemkmaybk
  '/fees/{id}/cancel':
    parameters:
      - name: id
        in: path
        description: ID of the pending fee to cancel
        required: true
        schema:
          type: string
          example: '456872'
    post:
      security:
        - OAuth2:
            - sda_fees_cancel
      tags:
        - Fees
      summary: Cancel a fee
      operationId: CancelFee
      requestBody:
        description: Fee cancellation comment
        content:
          application/json:
            schema:
              required:
                - cancellationComment
              properties:
                cancellationComment:
                  type: string
                  description: Reason for cancelling the fee
                  example: Mailing fee cancelled
      responses:
        '202':
          description: Fee was cancelled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: xcu1lscyxejc4
  '/fees/{id}/abandon':
    parameters:
      - name: id
        in: path
        description: ID of the unpaid fee to abandon
        required: true
        schema:
          type: string
          example: '456872'
    post:
      security:
        - OAuth2:
            - sda_fees_write
      tags:
        - Fees
      summary: Abandon a fee
      operationId: AbandonFee
      requestBody:
        description: Fee abandonment comment
        content:
          application/json:
            schema:
              required:
                - abandonmentComment
              properties:
                abandonmentComment:
                  type: string
                  description: Reason for abandoning the fee
                  example: Mailing fee not applicable
      responses:
        '200':
          description: Fee was abandoned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: dpepi51gan1zf
  '/fees/{id}/pay':
    parameters:
      - name: id
        in: path
        description: ID of the unpaid fee to pay
        required: true
        schema:
          type: string
          example: '456872'
    post:
      security:
        - OAuth2:
            - sda_fees_write
      tags:
        - Fees
      summary: Pay an unpaid fee
      operationId: PayFee
      responses:
        '200':
          description: Fee was paid
          content:
            application/json:
              schema:
                required:
                  - transactionId
                properties:
                  transactionId:
                    type: string
                    description: ID of the transaction corresponding to the payment of the fee
                    example: '123987'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 8cb8pedw9hgux
  /discounts:
    get:
      security:
        - OAuth2:
            - sda_fees_discount_read
      tags:
        - Discounts
      summary: Fetch all discounts
      operationId: SearchDiscounts
      parameters:
        - name: accountNumber
          in: query
          schema:
            description: Search for account number on which the discount is applied
            example: '13000057730'
        - name: code
          in: query
          schema:
            description: Search for discount code
            example: 13000057730_PRICING01
        - name: pricingCode
          in: query
          schema:
            description: Search for pricing on which the discount will be applied
            example: PRICING01
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: code
            enum:
              - code
              - accountNumber
              - pricingCode
      responses:
        '200':
          description: client's cards
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountsCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 59lonbiogs3oe
    post:
      security:
        - OAuth2:
            - sda_fees_discount_write
      tags:
        - Discounts
      summary: Add discount
      operationId: AddDiscount
      requestBody:
        description: New discount
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountBody'
      responses:
        '201':
          description: Discount was created
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: 13000057730_PRICING01
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 03gxx5l7jyapu
  '/discounts/{code}':
    parameters:
      - name: code
        in: path
        description: Code of the discount
        required: true
        schema:
          type: string
          example: 10000000041_PRICING01
    get:
      security:
        - OAuth2:
            - sda_fees_discount_read
      tags:
        - Discounts
      summary: Retrieve discount
      operationId: RetrieveDiscount
      responses:
        '200':
          description: Discount retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 0gizlo11y18gq
    patch:
      security:
        - OAuth2:
            - sda_fees_discount_write
      tags:
        - Discounts
      summary: Update discount rate
      operationId: UpdateDiscountRate
      requestBody:
        description: Update the rate of an already existing discount
        content:
          application/json:
            schema:
              type: object
              properties:
                rate:
                  type: integer
                  description: New rate that will be applied to the discount
                  example: 75
      responses:
        '201':
          description: Discount was updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: 13000057730_PRICING01
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 5nllvfs6ikpva
    delete:
      security:
        - OAuth2:
            - sda_fees_discount_delete
      tags:
        - Discounts
      summary: Delete discount
      operationId: DeleteDiscount
      responses:
        '204':
          description: Discount was deleted
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: wek44rq1pc95g
  '/fees/{id}/refund':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the fee to request refund for
    post:
      summary: Request a fee refund
      tags:
        - Fees
      responses:
        '200':
          description: Refund was requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
        default:
          description: Default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: RequestFeeRefund
      x-stoplight:
        id: 5v49p77w03q15
      security:
        - OAuth2:
            - sda_fees_request-refund
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - reason
              properties:
                amount:
                  type: integer
                  x-stoplight:
                    id: dywcxzbljvsji
                  description: 'Amount to be refunded, in cents'
                  example: 42
                reason:
                  $ref: '#/components/schemas/FeeRefundReason'
                  x-stoplight:
                    id: x5woan4e9r53k
                  description: Reason for this refund request
                comment:
                  type: string
                  x-stoplight:
                    id: aa9ixxmjw7dxs
                  description: Optional comment about the refund request
                  example: Refund because...
  /messages/send:
    post:
      summary: Send message
      security:
        - OAuth2:
            - sda_message_send
      tags:
        - Messages
      operationId: SendMessage
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SendSmsMessage'
                - $ref: '#/components/schemas/SendEmailMessage'
            examples:
              Send SMS define sender:
                value:
                  type: SMS
                  sender: string
                  content: string
                  recipient:
                    identifier: PHONE_NUMBER
                    value: '33612345678'
              Send SMS use sender name from communication setting on platform:
                value:
                  type: SMS
                  content: string
                  recipient:
                    identifier: PHONE_NUMBER
                    value: '33612345678'
              Send EMAIL define sender:
                value:
                  type: EMAIL
                  sender:
                    name: string
                    brandName: string
                    emailAddress: sender-mail@domain.sub
                    phoneNumber: '33612345678'
                  content:
                    subject: subject-string
                    body: body-string
                  recipient:
                    identifier: EMAIL_ADDRESS
                    value: any@domain.sub
              Send EMAIL use sender info from communication setting on platform:
                value:
                  type: EMAIL
                  content:
                    subject: subject-string
                    body: body-string
                  recipient:
                    identifier: EMAIL_ADDRESS
                    value: any@domain.sub
      responses:
        '200':
          $ref: '#/components/responses/SendMessageTypeSmsSuccessResponse'
        '201':
          description: Email message sent successfully
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
      x-stoplight:
        id: x7nizdeaw797o
  /messages/sms:
    get:
      summary: Retrieve several SMS
      tags:
        - Messages
      responses:
        '200':
          description: The SMS corresponding to the given filter
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example:
                    items:
                      - id: '1234'
                        type: sms_custom
                        status:
                          code: ERROR
                          label: SMS couldn't be sent. Please refer to the provider for a detailed cause of failure.
                          description: SMS couldn't be sent. Please refer to the provider for a detailed cause of failure
                        sender: MyBank
                        receiver:
                          phoneNumber: '33611223344'
                        content: string
                        creationDate: '2024-04-19T14:16:44+02:00'
                    count: 1
                    limit: 20
                    offset: 0
                    sort: '-id'
                    links:
                      - rel: getCurrentPage
                        href: 'http://sandbox.tagpay.fr/api/service-domain/v1/messages/sms?offset=0&limit=20&sort=-id&sms_id=21080'
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        type:
                          type: string
                        status:
                          type: object
                          properties:
                            code:
                              $ref: '#/components/schemas/SmsEvent'
                            label:
                              type: string
                              description: The label of the code
                            description:
                              type: string
                              description: Description of the error
                        sender:
                          type: string
                        receiver:
                          type: object
                          properties:
                            phoneNumber:
                              type: string
                        content:
                          type: string
                        creationDate:
                          type: string
                  count:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer
                  sort:
                    type: string
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        rel:
                          type: string
                        href:
                          type: string
              examples:
                Example 1:
                  value:
                    items:
                      - id: string
                        type: string
                        status:
                          code: PENDING
                          label: string
                          description: string
                        sender: string
                        receiver:
                          phoneNumber: string
                        content: string
                        creationDate: string
                    count: 1
                    limit: 20
                    offset: 0
                    sort: '-id'
                    links:
                      - rel: string
                        href: string
      operationId: get-messages-sms
      x-stoplight:
        id: gtlshoaoajc6x
      security:
        - OAuth2:
            - sda_sms_view
      parameters:
        - schema:
            type: string
          in: query
          name: id
          description: Filter on SMS ID
        - schema:
            type: string
            example: MyBank
          in: query
          name: sender
          description: Filter on SMS Sender
        - schema:
            $ref: ./Phone.yaml
          in: query
          name: receiver
          description: 'Filter on SMS Receiver, should be a phone number in international format'
        - schema:
            $ref: '#/components/schemas/SmsEvent'
          in: query
          name: statusCode
          description: Filter on SMS Status
        - schema:
            type: string
            example: sms_custo
          in: query
          name: type
          description: Filter on SMS Type
        - schema:
            type: string
            format: date-time
          in: query
          name: creationDateAfter
          description: 'Retrieve SMS sent after this date '
        - schema:
            type: string
            format: date-time
          in: query
          name: creationDateBefore
          description: 'Retrieve SMS sent before this date '
  /messages/sms/resend:
    post:
      summary: Resend SMS
      tags:
        - Messages
      responses:
        '200':
          description: Resend SMS successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  x-stoplight:
                    id: xg324y7tkwnc9
                  type: integer
              examples:
                Resent SMS Ids:
                  value:
                    - 3
                    - 4
        '400':
          description: Request is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Request client is not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
      operationId: ResendSms
      x-stoplight:
        id: oeaf6o1gyk8ml
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                smsIds:
                  type: array
                  x-stoplight:
                    id: 48tdri3t8yf3s
                  items: {}
            examples:
              Resend SMS with id 1 & 2:
                value:
                  smsIds:
                    - 1
                    - 2
      security:
        - OAuth2:
            - sda_sms_send
  '/fees/{id}/refuse-refund':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: Refuse a fee refund request
      tags:
        - Fees
      responses:
        '200':
          description: Refund was denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
        default:
          description: Default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: RefuseFeeRefundRequest
      x-stoplight:
        id: qfwan3vn1hc3q
      security:
        - OAuth2:
            - sda_fees_refuse-refund
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - refusalComment
              properties:
                refusalComment:
                  type: string
                  x-stoplight:
                    id: auylcjktvic4h
                  description: Comment explaining why this refund request is being refused
  '/fees/{id}/validate-refund':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: Validate a fee refund request
      tags:
        - Fees
      responses:
        '200':
          description: Fee was refunded
          content:
            application/json:
              schema:
                type: object
                required:
                  - transactionId
                properties:
                  transactionId:
                    type: string
                    x-stoplight:
                      id: vsac7l2p1m7oc
                    description: Refund transaction id
        default:
          description: Default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: ValidateFeeRefundRequest
      x-stoplight:
        id: livqh42yx71ol
      security:
        - OAuth2:
            - sda_fees_validate-refund
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - validationComment
              properties:
                validationComment:
                  type: string
                  x-stoplight:
                    id: natfmdifovh41
                  description: Fee refund validation comment
  '/chequebooks/{chequebookId}/request-approval':
    parameters:
      - schema:
          type: string
        name: chequebookId
        in: path
        required: true
        description: 'The chequebook''s ID '
    post:
      summary: Request chequebook order approval
      security:
        - OAuth2:
            - sda_chequebooks_write
      tags:
        - Cheques
      responses:
        '201':
          description: 'Chequebook set as approval required '
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequebookRequireApproval
      x-stoplight:
        id: yiripi7bsmbvg
  '/chequebooks/{chequebookId}/refuse':
    parameters:
      - schema:
          type: string
        name: chequebookId
        in: path
        required: true
        description: 'The chequebook''s ID '
    post:
      summary: Refuse chequebook order
      security:
        - OAuth2:
            - sda_chequebooks_write
      tags:
        - Cheques
      responses:
        '201':
          description: Chequebook request refused
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequebookRefuse
      x-stoplight:
        id: hyy0x5mkd46u3
  '/chequebooks/{chequebookId}/approve':
    parameters:
      - schema:
          type: string
        name: chequebookId
        in: path
        required: true
        description: 'The chequebook''s ID '
    post:
      summary: Approve chequebook order
      security:
        - OAuth2:
            - sda_chequebooks_write
      tags:
        - Cheques
      responses:
        '201':
          description: Chequebook request approved
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequebookApprove
      x-stoplight:
        id: gjyx33t5bucga
  '/chequebooks/{chequebookId}/order':
    parameters:
      - schema:
          type: string
        name: chequebookId
        in: path
        required: true
        description: 'The chequebook''s ID '
    post:
      summary: Order chequebook
      security:
        - OAuth2:
            - sda_chequebooks_write
      tags:
        - Cheques
      responses:
        '201':
          description: Chequebook ordered
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequebookOrder
      x-stoplight:
        id: v6fyrvu7nk3pf
  '/chequebooks/{chequebookId}/pending':
    parameters:
      - schema:
          type: string
        name: chequebookId
        in: path
        required: true
        description: 'The chequebook''s ID '
    post:
      summary: Set chequebook to pending delivery
      security:
        - OAuth2:
            - sda_chequebooks_write
      tags:
        - Cheques
      responses:
        '201':
          description: Chequebook pending delivery
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequebookPending
      x-stoplight:
        id: gno8v2l46kl65
  '/chequebooks/{chequebookId}/receive':
    parameters:
      - schema:
          type: string
        name: chequebookId
        in: path
        required: true
        description: 'The chequebook''s ID '
    post:
      summary: Receive chequebook
      security:
        - OAuth2:
            - sda_chequebooks_write
      tags:
        - Cheques
      responses:
        '201':
          description: Chequebook received
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequebookReceived
      x-stoplight:
        id: bb7ihhydd3c60
  '/chequebooks/{chequebookId}/available':
    parameters:
      - schema:
          type: string
        name: chequebookId
        in: path
        required: true
        description: 'The chequebook''s ID '
    post:
      summary: Set chequebook as available
      security:
        - OAuth2:
            - sda_chequebooks_write
      tags:
        - Cheques
      responses:
        '201':
          description: Chequebook Available
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequebookAvailable
      x-stoplight:
        id: n2uk1fhi8zknu
  '/chequebooks/{chequebookId}/activate':
    parameters:
      - schema:
          type: string
        name: chequebookId
        in: path
        required: true
        description: 'The chequebook''s ID '
    post:
      summary: Activate chequebook
      security:
        - OAuth2:
            - sda_chequebooks_write
      tags:
        - Cheques
      responses:
        '201':
          description: Chequebook active
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequebookActive
      x-stoplight:
        id: s2fn5e7ib1uek
  '/chequebooks/{chequebookId}/inactivate':
    parameters:
      - schema:
          type: string
        name: chequebookId
        in: path
        required: true
        description: 'The chequebook''s ID '
    post:
      summary: Inactivate chequebook
      security:
        - OAuth2:
            - sda_chequebooks_write
      tags:
        - Cheques
      responses:
        '201':
          description: Chequebook inactivated
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequebookInactivated
      requestBody:
        content: {}
      x-stoplight:
        id: faj2o3fvgzaiw
  '/chequebooks/{chequebookId}/destroy':
    parameters:
      - schema:
          type: string
        name: chequebookId
        in: path
        required: true
        description: 'The chequebook''s ID '
    post:
      summary: Destroy chequebook
      security:
        - OAuth2:
            - sda_chequebooks_write
      tags:
        - Cheques
      responses:
        '201':
          description: Chequebook destroyed
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequebookDestroyed
      x-stoplight:
        id: t1uex1zj4yg4z
      requestBody:
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
              maxProperties: 1
              required:
                - reason
              properties:
                reason:
                  x-stoplight:
                    id: fdpxor8nzozmk
                  enum:
                    - CLIENT
                    - DEFECT
                    - ACCOUNT_CLOSED
            examples:
              Example 1:
                value:
                  reason: CLIENT
              Example 2:
                value:
                  reason: ACCOUNT_CLOSED
              Example 3:
                value:
                  reason: DEFECT
  '/chequebooks/{chequebookId}/unblock':
    parameters:
      - schema:
          type: string
        name: chequebookId
        in: path
        required: true
        description: 'The chequebook''s ID '
    post:
      summary: Unblock chequebook
      security:
        - OAuth2:
            - sda_chequebooks_write
      tags:
        - Cheques
      responses:
        '201':
          description: Chequebook unblocked
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequebookUnblocked
      requestBody:
        content: {}
      x-stoplight:
        id: ibxpe60xbfx93
  '/chequebooks/{chequebookId}/block-request':
    parameters:
      - schema:
          type: string
        name: chequebookId
        in: path
        required: true
        description: 'The chequebook''s ID '
    post:
      summary: Request chequebook block
      security:
        - OAuth2:
            - sda_chequebooks_write
      tags:
        - Cheques
      responses:
        '201':
          description: Chequebook block requested
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequebookBlockRequested
      requestBody:
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
              maxProperties: 1
              required:
                - reason
              properties:
                reason:
                  $ref: '#/components/schemas/ChequeBlockReason'
            examples:
              Example 1:
                value:
                  reason: LEGAL
              Example 2:
                value:
                  reason: FRAUD
              Example 3:
                value:
                  reason: LOST_BANK
      x-stoplight:
        id: imrmmj5h411qr
  '/chequebooks/{chequebookId}/block-validate':
    parameters:
      - schema:
          type: string
        name: chequebookId
        in: path
        required: true
        description: 'The chequebook''s ID '
    post:
      summary: Validate chequebook block
      security:
        - OAuth2:
            - sda_chequebooks_write
      tags:
        - Cheques
      responses:
        '201':
          description: Chequebook block validated
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequebookBlockValidated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  document: DOC_CONTENT
                  comment: string
              required:
                - document
                - comment
              properties:
                document:
                  type: string
                  description: This string must be the base64 encoding of a PDF file.
                comment:
                  type: string
                  description: 'Comment will be associated to block status. '
      x-stoplight:
        id: n21nmn6m3wu15
  '/chequebooks/{chequebookId}/block-refuse':
    parameters:
      - schema:
          type: string
        name: chequebookId
        in: path
        required: true
        description: 'The chequebook''s ID '
    post:
      summary: Refuse chequebook block
      security:
        - OAuth2:
            - sda_chequebooks_write
      tags:
        - Cheques
      responses:
        '201':
          description: Chequebook block refused
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequebookBlockRefused
      requestBody:
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
              maxProperties: 1
              required:
                - comment
              properties:
                comment:
                  x-stoplight:
                    id: da1nvlzs6igrj
                  type: string
            examples:
              Example 1:
                value:
                  comment: Provided document document wasd
      x-stoplight:
        id: llqkonhotwcwf
  '/cheques/{chequeId}/block-request':
    parameters:
      - schema:
          type: string
        name: chequeId
        in: path
        required: true
        description: 'The cheque''s ID '
    post:
      summary: Request cheque block
      security:
        - OAuth2:
            - sda_cheque_write
      tags:
        - Cheques
      responses:
        '201':
          description: Cheque block requested
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequeBlockRequested
      requestBody:
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
              maxProperties: 1
              required:
                - reason
              properties:
                reason:
                  $ref: '#/components/schemas/ChequeBlockReason'
            examples:
              Example 1:
                value:
                  reason: LEGAL
              Example 2:
                value:
                  reason: FRAUD
              Example 3:
                value:
                  reason: LOST_BANK
      x-stoplight:
        id: i7rxkcee14q64
  '/cheques/{chequeId}/block-refuse':
    parameters:
      - schema:
          type: string
        name: chequeId
        in: path
        required: true
    post:
      summary: Refuse cheque block
      security:
        - OAuth2:
            - sda_cheque_write
      tags:
        - Cheques
      responses:
        '201':
          description: Cheque block refused
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequeBlockRefused
      requestBody:
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
              maxProperties: 1
              required:
                - comment
              properties:
                comment:
                  type: string
            examples:
              Example 1:
                value:
                  comment: Provided document was invalid
      x-stoplight:
        id: ebxgo2ibfot9d
  '/cheques/{chequeId}/block-validate':
    parameters:
      - schema:
          type: string
        name: chequeId
        in: path
        required: true
    post:
      summary: Validate cheque block
      security:
        - OAuth2:
            - sda_cheque_write
      tags:
        - Cheques
      responses:
        '201':
          description: Cheque block validated
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequeBlockValidated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - comment
                - document
              properties:
                comment:
                  type: string
                document:
                  type: string
                  description: This string must be the base64 encoding of a PDF file.
            examples:
              Example 1:
                value:
                  comment: Provided document was legitimate
                  document: Encoded PDF document as base64
      x-stoplight:
        id: r2f9123dqamgg
  '/cheques/{chequeId}/unblock':
    parameters:
      - schema:
          type: string
        name: chequeId
        in: path
        required: true
        description: 'The cheque''s ID '
    post:
      summary: Unblock cheque
      security:
        - OAuth2:
            - sda_cheque_write
      tags:
        - Cheques
      responses:
        '201':
          description: Cheque unblocked
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChequeUnblocked
      requestBody:
        content: {}
      x-stoplight:
        id: 57qqorm12udt9
  '/fees/{id}/cancel-refund':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the fee for which to cancel the pending refund request
    post:
      summary: Cancel a fee refund request
      tags:
        - Fees
      responses:
        '200':
          description: Refund was cancelled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
        default:
          description: Default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: CancelFeeRefundRequest
      x-stoplight:
        id: 2mldq9m36n9el
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - cancellationComment
              properties:
                cancellationComment:
                  type: string
                  x-stoplight:
                    id: 4eaq92n5p1rhb
                  example: Refund cancelled
                  description: User comment describing the reason for cancelling the fee refund request
                  writeOnly: true
              writeOnly: true
      security:
        - OAuth2:
            - sda_fees_cancel-refund
  /inward-payment-instructions/direct-debits:
    post:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_initiation
      summary: Initiate a direct debit payment instruction
      operationId: InitiateDirectDebitPaymentInstruction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInstructionDirectDebitRequest'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionDirectDebitResponse'
      x-stoplight:
        id: xd4gvrkpyoo31
  '/inward-payment-instructions/direct-debits/{paymentInstructionId}':
    parameters:
      - name: paymentInstructionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
    delete:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_deletion
      summary: Delete a direct debit payment instruction
      operationId: DeleteDirectDebitPaymentInstruction
      responses:
        '204':
          description: Payment instruction was successfully deleted
      x-stoplight:
        id: fw642jai04te5
    patch:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_update
      summary: Update direct debit payment instruction
      operationId: UpdateDirectDebitPaymentInstruction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentInstructionRequest'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionDirectDebitResponse'
      x-stoplight:
        id: ya1tx4tyvosw6
  '/inward-payment-instructions/direct-debits/{paymentInstructionId}/payment-transactions':
    parameters:
      - name: paymentInstructionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
    post:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_initiation
      summary: Initiate a direct debit payment transaction and associate it to a payment instruction
      operationId: InitiateDirectDebitPaymentTransactionAndAssociateToPaymentInstruction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateDirectDebitPaymentTransactionRequest'
      responses:
        '201':
          $ref: '#/components/responses/DirectDebitPaymentTransactionResponse'
      x-stoplight:
        id: 0xonj6djp1qv3
  '/inward-payment-instructions/direct-debits/payment-transactions/{paymentTransactionId}':
    parameters:
      - name: paymentTransactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
    patch:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_update
      summary: Update a payment transaction associated to a direct debit payment instruction
      operationId: UpdateDirectDebitPaymentTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDirectDebitPaymentTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/PaymentTransactionWithMandateResponse'
      x-stoplight:
        id: h5pv5a2c2g65x
    delete:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_deletion
      summary: Delete a payment transaction associated to a direct debit payment instruction
      operationId: DeleteDirectDebitPaymentTransaction
      responses:
        '204':
          description: Payment transaction has been deleted
      x-stoplight:
        id: tjffcq629welq
  '/inward-payment-instructions/direct-debits/{paymentInstructionId}/payment-r-transactions':
    parameters:
      - name: paymentInstructionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaymentInstructionId'
    post:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_initiation
      summary: Initiate a payment r transaction and associate it to a direct debit payment instruction
      operationId: InitiatePaymentRTransactionAndAssociateToDirectDebitPaymentInstruction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiatePaymentRTransactionRequest'
      responses:
        '201':
          $ref: '#/components/responses/PaymentRTransactionDirectDebitResponse'
      x-stoplight:
        id: oj1z4le2madqh
  '/inward-payment-instructions/direct-debits/payment-r-transactions/{paymentRTransactionId}':
    parameters:
      - name: paymentRTransactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaymentRTransactionInternalId'
    patch:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_update
      summary: Update a payment r transaction associated to a direct debit payment instruction
      operationId: UpdateDirectDebitPaymentRTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentRTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/PaymentRTransactionDirectDebitResponse'
      x-stoplight:
        id: zbj92yvqejnvu
    delete:
      tags:
        - Payment - Inward payment instructions
      security:
        - OAuth2:
            - payment-instruction_deletion
      summary: Delete a payment r transaction associated to a direct debit payment instruction
      operationId: DeleteDirectDebitPaymentRTransaction
      responses:
        '204':
          description: Payment r transaction has been deleted
      x-stoplight:
        id: ttqcgmb1x4j06
  '/mandates/{mandateId}/oppose':
    parameters:
      - schema:
          type: string
        name: mandateId
        in: path
        required: true
    post:
      summary: Oppose mandate
      tags:
        - Mandates
      responses:
        '200':
          description: The opposed mandate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mandate'
        '400':
          description: Mandate is not in active state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No mandate found for specified id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      operationId: post-mandates-mandateId-oppose
      x-stoplight:
        id: 24ue5vqs7j6l3
      security:
        - OAuth2: []
      description: Oppose specified mandate.
  /oppose-mandates:
    post:
      summary: Oppose mandates of a creditor
      tags:
        - Mandates
      responses:
        '204':
          description: Mandates have been opposed successfully.
        '400':
          description: No active mandate found for creditor reference.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: post-mandates-oppose-mandates
      x-stoplight:
        id: 17mg4kyd2lbwh
      requestBody:
        content: {}
      security:
        - OAuth2:
            - mandate_management
      description: Oppose all active mandates of a creditor for a debtor.
      parameters:
        - schema:
            type: string
          in: query
          name: creditorRef
          description: Reference of the creditor
          required: true
        - schema:
            type: string
          in: query
          name: debtorRef
          description: Reference of the debtor
          required: true
    parameters: []
  /mandates:
    post:
      summary: Create mandate
      tags:
        - Mandates
      responses:
        '201':
          description: Mandate created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mandate'
        '400':
          description: Missing or invalid field.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: CreateMandate
      x-stoplight:
        id: wjoushaaiyp6q
      security:
        - {}
        - OAuth2:
            - mandate_management
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - reference
                - creditorRef
                - creditorName
                - debtorRef
                - signatureDate
                - type
                - recurrent
              properties:
                reference:
                  $ref: '#/components/schemas/MandateRef'
                  x-stoplight:
                    id: xcba82kki2mi3
                creditorRef:
                  $ref: '#/components/schemas/MandateCreditorReference'
                  x-stoplight:
                    id: lqvxtlf9mqf5w
                creditorName:
                  $ref: '#/components/schemas/MandateCreditorName'
                  x-stoplight:
                    id: ofbpj18hlq2sg
                debtorRef:
                  $ref: '#/components/schemas/MandateDebtorReference'
                  x-stoplight:
                    id: oaxijj5pjtltz
                signatureDate:
                  $ref: '#/components/schemas/DateAtom'
                  x-stoplight:
                    id: ipmau5cbu1180
                type:
                  $ref: '#/components/schemas/MandateType'
                  x-stoplight:
                    id: lcrw137sbogdi
                recurrent:
                  $ref: '#/components/schemas/MandateRecurrent'
                  x-stoplight:
                    id: utlwcue4eqmpd
    get:
      summary: Search mandates
      tags:
        - Mandates
      responses:
        '200':
          description: Collection of matching mandates.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MandatesCollection'
      operationId: get-mandates
      x-stoplight:
        id: cx65q8e6kv8y3
      security:
        - OAuth2:
            - mandate_view
      parameters:
        - schema:
            type: string
          in: query
          name: id
          description: Id of the mandate
        - schema:
            type: string
          in: query
          name: reference
          description: Reference of the mandate
        - schema:
            type: string
          in: query
          name: status
          description: Status of the mandate
        - schema:
            type: string
          in: query
          name: creditorRef
          description: Reference of the creditor
        - schema:
            type: string
          in: query
          name: debtorRef
          description: Reference of the debtor
        - schema:
            type: string
          in: query
          name: type
          description: Type of the mandate
        - schema:
            type: integer
          in: query
          name: offset
          description: Search offset
        - schema:
            type: integer
          in: query
          name: limit
          description: Limit count of mandates returned
        - schema:
            type: string
          in: query
          name: sort
          description: Sorting field
  /activate-mandates:
    post:
      summary: Activate mandates of a creditor
      tags:
        - Mandates
      responses:
        '204':
          description: Mandates have been activated successfully.
        '400':
          description: No creditor opposed mandate found for creditor reference.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: post-mandates-activate-mandates
      x-stoplight:
        id: qvrfx2nkye1ol
      requestBody:
        content: {}
      security:
        - OAuth2:
            - mandate_management
      description: Activate all creditor opposed mandates of a creditor for a debtor.
      parameters:
        - schema:
            type: string
          in: query
          name: creditorRef
          description: Reference of the creditor
          required: true
        - schema:
            type: string
          in: query
          name: debtorRef
          description: Reference of the debtor
          required: true
  '/mandates/{mandateId}':
    parameters:
      - schema:
          type: string
        name: mandateId
        in: path
        required: true
        description: Id of the mandate.
    get:
      summary: Get mandate
      tags:
        - Mandates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mandate'
        '404':
          description: No mandate found for specified id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      operationId: get-mandates-mandateId
      x-stoplight:
        id: cdvkklfqs9snj
      security:
        - {}
        - OAuth2:
            - mandate_view
  '/accounts/{accountId}/forecast-balance':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountNumber'
    get:
      summary: Get forecast balance for an account
      tags:
        - Accounts
      responses:
        '200':
          description: Account forecast balance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountForecastBalance'
              examples: {}
        '401':
          description: Unauthorized
        '404':
          description: Given account was not found
      operationId: GetAccountForecastBalance
      x-stoplight:
        id: 038csgljjs8qc
      security:
        - OAuth2:
            - sda_accounts_view
      parameters:
        - schema:
            type: string
            example: '2024-01-01'
            format: date
          in: query
          name: date
          required: true
          description: The date for which the forecast balance is requested. The date must be within 7 days from the current date.
  /funds-isolation/calculate:
    parameters:
      - name: currency
        in: query
        required: true
        schema:
          type: string
          description: Currency ISO numeric
          example: '978'
      - name: fundsType
        in: query
        required: true
        schema:
          type: string
          description: Funds type
          example: eMoney
          enum:
            - payment
            - eMoney
      - name: balancesDate
        in: query
        required: false
        schema:
          type: string
          format: date
          description: Balances date. Format Y-m-d
          example: '2024-01-01'
    get:
      security:
        - OAuth2:
            - funds_isolation
      tags:
        - Funds Isolation
      summary: Get a funds isolation calculation
      operationId: FundsIsolationCalculate
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  amountToIsolate:
                    type: number
                    example: 10000
                  currency:
                    type: string
                    example: '978'
                  fundsType:
                    type: string
                    example: eMoney
                  links:
                    type: object
                    properties:
                      rel:
                        type: string
                        example: Execute funds isolation / release transaction (POST)
                      href:
                        type: string
                        description: Link to execute the funds isolation
                        example: '/funds-isolation/execute?amountToIsolate=[10000]&currency=[978]&fundsType=[eMoney]'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 64wi53awq8pfx
  /funds-isolation/execute:
    post:
      security:
        - OAuth2:
            - funds_isolation
      tags:
        - Funds Isolation
      summary: Execute a funds isolation
      operationId: FundsIsolationExecute
      requestBody:
        description: New FundsIsolation
        content:
          application/json:
            schema:
              type: object
              properties:
                currency:
                  type: string
                  description: Currency ISO numeric
                  example: '978'
                fundsType:
                  type: string
                  description: Funds type
                  example: eMoney
                  enum:
                    - payment
                    - eMoney
                amountToIsolate:
                  type: string
                  description: Amount to isolate
                  example: '10000'
                externalData:
                  type: array
                  items:
                    type: object
      responses:
        '201':
          $ref: '#/components/responses/TransactionLogResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: xkhror4t0j261
  '/objects-to-screen/{otsId}/request-new-screening':
    parameters:
      - $ref: '#/components/parameters/ObjectToScreenId'
    post:
      summary: Request new screening
      tags:
        - Objects to screen
      responses:
        '204':
          description: No Content
        default:
          $ref: '#/components/responses/ErrorResponse'
      operationId: post-objects-to-screen-otsId-request-new-screening
      x-stoplight:
        id: hd60t72695kh1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                screeningTypeCodes:
                  type: array
                  x-stoplight:
                    id: 6fct81jbsfudg
                  description: List of all screening types to resend. All by default
                  items: {}
      security:
        - OAuth2:
            - sda_screening-request_write
  '/identities/{identityId}/actions/change-profile':
    parameters:
      - $ref: '#/components/parameters/IdentityId'
    put:
      summary: Change Identity Profile
      tags:
        - Identities
        - Profiles
      responses:
        '204':
          description: Identity profile has been successfully changed
          content: {}
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: ChangeIdentityProfile
      x-stoplight:
        id: 1ulignfb8l7in
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                profileId:
                  $ref: '#/components/schemas/ProfileId'
                  x-stoplight:
                    id: kpxfr5nsp516u
      security:
        - OAuth2:
            - sda_identity_profile_change
  '/additional-data/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Code of the additional data
    get:
      security:
        - OAuth2:
            - additional-data_read
      summary: Get an additional data
      tags:
        - Additional Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalData'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      operationId: get-additional-data-id
      x-stoplight:
        id: 8sr8ru6jb8k6g
      parameters: []
      description: ''
  '/camt/{camtType}/request-statement':
    parameters:
      - schema:
          $ref: '#/components/schemas/CamtRequestType'
        name: camtType
        in: path
        required: true
        description: CAMT type
    post:
      summary: Create a CAMT statement request
      tags:
        - Camt Statement
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestCamtStatementResponseBody'
        '400':
          description: Bad Request
      operationId: post-camt-camtType-request-statement
      x-stoplight:
        id: xlpqup5jhow36
      security:
        - OAuth2:
            - sda_camt_request
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - identityId
                - from
                - to
              properties:
                identityId:
                  type: string
                  x-stoplight:
                    id: h1iegzp7xv055
                  description: 'Third-party identity '
                accountNumber:
                  type: string
                  x-stoplight:
                    id: 6a09gcfzj1l8n
                  description: Account number of thrd-party for which the statement is going to be generated
                from:
                  type: string
                  x-stoplight:
                    id: 7ip2ao0or7j2o
                  format: date
                  example: '2023-01-01'
                  description: Starting date for the statement generation
                to:
                  type: string
                  x-stoplight:
                    id: mj6z6au6kwktt
                  format: date
                  description: Ending date for the statement generation
                  example: '2023-12-31'
  /camt:
    get:
      summary: Search CAMT statements
      tags:
        - Camt Statement
      responses:
        '200':
          description: List of corresponding CAMT statements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CamtStatementCollection'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-camt
      x-stoplight:
        id: mnhvxdxrz49yy
      security:
        - OAuth2:
            - sda_camt_request
      parameters:
        - schema:
            type: string
          in: query
          name: accountNumber
          description: Third-party account number
        - schema:
            type: string
          in: query
          name: id
          description: CAMT request ID
        - schema:
            type: string
          in: query
          name: identityId
          description: Identity ID of the third-party
        - schema:
            type: string
          in: query
          name: status
          description: Status of the CAMT request
  '/camt/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the CAMT request
    get:
      summary: Retrieve a CAMT statement in base64 format
      tags:
        - Camt Statement
      responses:
        '200':
          description: CAMT statement in base64 format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCamtStatementResponseBody'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-camt-id
      x-stoplight:
        id: d6s0qjeat1bb1
      security:
        - OAuth2:
            - sda_camt_request
  /fees-statements:
    parameters:
      - name: accountNumber
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountNumber'
          type: string
      - schema:
          $ref: '#/components/schemas/IdentityId'
          type: string
        in: query
        name: identityId
      - schema:
          type: integer
        in: query
        name: limit
      - schema:
          type: integer
        in: query
        name: offset
    get:
      security:
        - OAuth2:
            - sda_fees_statements_management
      tags:
        - Fees statements
      summary: Search  fees statements
      operationId: SearchFeesStatements
      responses:
        '200':
          description: The fees statements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeesStatementCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: sgmpbwh4k1ss9
  '/fees-statements/{statementId}':
    parameters:
      - name: statementId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FeesStatementId'
    get:
      security:
        - OAuth2:
            - sda_fees_statements_management
      tags:
        - Fees statements
      summary: Load a fees statement
      operationId: GetFeesStatement
      responses:
        '200':
          description: The fees statement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeesStatement'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: hixnk1ygiqdtw
  '/fees-statements/{statementId}/download':
    parameters:
      - name: statementId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FeesStatementId'
    get:
      security:
        - OAuth2:
            - sda_fees_statements_management
      tags:
        - Fees statements
      summary: Download a fees statement
      operationId: DownloadFeesStatementById
      responses:
        '200':
          description: The statement document as PDF file
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: dvztlz1kcxp5p
  '/customer-billing/client-subscriptions/{code}/update-next-payment-date':
    parameters:
      - schema:
          type: string
        name: code
        in: path
        required: true
        description: Client subscription code
    post:
      summary: Update next payment date of the client subscription
      security:
        - OAuth2:
            - sda_client_subscription_update
      tags:
        - Customer Billing
      responses:
        '200':
          description: Payment date of the last installment is updated
        default:
          description: Default
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Error'
      operationId: UpdateClientSubscriptionNextPaymentDate
      x-stoplight:
        id: jujujtpb8gnqy
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - paymentDate
              properties:
                paymentDate:
                  type: string
                  x-stoplight:
                    id: 4ww5pmok5hsop
                  format: date
                  example: '2024-01-31'
                  description: Format Y-m-d
      description: "Update the payment date of the last scheduled installment\r\n\"Not whitelisted\""
  '/accounts/{accountId}/owner':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountNumber'
          type: string
    patch:
      summary: Update account main owner
      tags:
        - Accounts
      responses:
        '204':
          description: Account main owner has been updated
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    code: 77800
                    message: 'Client #859 is not allowed to become the owner of the account'
              examples:
                Example 1:
                  value:
                    code: 77800
                    message: 'Client #123 is not allowed to become the owner of the account'
        '404':
          description: Given account was not found
      operationId: UpdateAccountMainOwner
      x-stoplight:
        id: 8nzux1x14cwpy
      security:
        - OAuth2:
            - sda_account-owners_manage
      requestBody:
        $ref: '#/components/requestBodies/UpdateAccountMainOwnerRequest'
  '/accounts/{accountId}/owners':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountNumber'
          type: string
    patch:
      summary: Add account owner
      tags:
        - Accounts
      responses:
        '204':
          description: Account owner added
        '400':
          description: Bad Request
        '404':
          description: Given account was not found
      operationId: AddAccountOwner
      x-stoplight:
        id: 1ya09tn37pq4l
      security:
        - OAuth2:
            - sda_account-owners_manage
      requestBody:
        $ref: '#/components/requestBodies/AddAccountOwnerRequest'
  '/accounts/{accountId}/owners/{ownerId}':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountNumber'
          type: string
      - schema:
          type: string
        name: ownerId
        in: path
        required: true
    delete:
      summary: Delete account owner
      tags:
        - Accounts
      responses:
        '204':
          description: Account owner has been deleted
        '400':
          description: Bad Request
        '404':
          description: Given account was not found
      operationId: DeleteAccountOwner
      x-stoplight:
        id: vakvygb6qlsw8
      security:
        - OAuth2:
            - sda_account-owners_manage
      requestBody:
        $ref: '#/components/requestBodies/DeleteAccountOwnerRequest'
  '/templating/template/{templateTypeCode}/{partyType}/{lang}':
    parameters:
      - schema:
          type: string
        name: partyType
        in: path
        required: true
      - schema:
          type: string
        name: lang
        in: path
        required: true
      - schema:
          type: string
        name: templateTypeCode
        in: path
        required: true
    get:
      summary: Retrieve the Template against the key
      tags:
        - Templating
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                required:
                  - ''
                properties:
                  '':
                    type: object
                    $ref: '#/components/schemas/Template'
                    x-stoplight:
                      id: bno0y89aa6yr3
        '400':
          description: Bad Request
      operationId: GetTemplateByCodeAndPartyType
      x-stoplight:
        id: rh3tistvhvk6n
      security:
        - {}
        - OAuth2:
            - sda_templating_setting
      requestBody:
        content: {}
  '/templating/template-history/{templateTypeCode}/{partyType}/{lang}':
    parameters:
      - schema:
          type: string
        name: partyType
        in: path
        required: true
      - schema:
          type: string
        name: templateTypeCode
        in: path
        required: true
      - schema:
          type: string
        name: lang
        in: path
        required: true
    get:
      summary: Retrieves the Template History based key
      tags:
        - Templating
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateCollection'
        '400':
          description: Bad Request
      operationId: GetTemplateHistoryByTemplateCodeAndPartyType
      x-stoplight:
        id: eoeky6ll1uaft
      security:
        - OAuth2:
            - sda_templating_setting
  '/templating/template/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Retrieve Template By Template Id
      tags:
        - Templating
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Template'
        '400':
          description: Bad Request
      operationId: get-templating-template-id
      x-stoplight:
        id: 4qgdjzeaucb0q
      security:
        - OAuth2:
            - sda_templating_setting
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://sandbox.skaleet.com/api/service-domain/v1/oauth2/token'
          scopes:
            product_management: Manage products
            sda_product_partner_management: Manage product partners
            job_view: Job read only
            job_update: Edit or execute a job
            event_management: Can manage hooks
            identity_view: Allow the API client to list Identities details
            identity_update: Allow the API client to update existing Identities
            document_setup_management: Document setup management
            document_setup_view: Document setup view
            employers_view: View Employers
            recipients_view: View Recipients
            recipients_update: Update Recipients
            recipients_create: Create Recipients
            recipients_delete: Delete Recipients
            scoring_view: score view
            scoring_management: score management
            customer-instruction_submit: Submit a customer instruction
            identity_status_change: Change Identity Status
            sda_audits_view: Fetch audit records
            emit_event: Emit events
            payment_network: Consult and configure payment networks
            templating_document_generate: Generate a document from a template
            operation_read: view operation
            sda_create_user_profiles: Create new user profiles
            sda_transactions_view: Can view transactions
            sda_accounts_view: 'View accounts informations, balances, and transactions history'
            sda_accounts_creation: Create account
            sda_accounts_viewers_association: Associate Delegage Users to an account
            sda_accounts_close: Close accounts
            sda_accounts_block: Block accounts
            sda_accounts_unblock: Unblock accounts
            sda_accounts_externalId_update: Update account externalId
            sda_accounts_iban_update: Update account IBAN
            sda_accounts_name_update: Update account name
            sda_accounts_migration: Migrate accounts
            sda_fees_statements_management: Fees statements management
            mandate_management: Manage user mandates
            mandate_view: View user mandates
            sda_card_management: Can manage debit cards
            sda_card_view: Can visualize debit cards
            sda_card_sensitive_data_view: Can visualize debit card detail
            sda_card_creation: Can create debit cards
            sda_card_virtual_creation: Can create virtual debit cards
            sda_card_activate: Can activate debit cards
            sda_card_deactivate: Can deactivate debit cards
            sda_card_block: Can block debit cards
            sda_card_unblock: Can unblock debit cards
            sda_card_oppose: Can oppose debit cards
            sda_card_features_management: Can manage debit cards features
            sda_card_limits_management: Can manage debit cards limits
            sda_card_reissue_pincode: Can reissue debit cards pincode
            sda_card_refabrication: Can ask for debit card refabrication
            sda_card_authorization_holds_view: Can visualize debit card authorization holds
            sda_card_authorization_holds_update: Can update debit card authorization holds
            sda_card_migration: Can migrate debit cards
            additional-data_read: View additional data
            sda_objects_to_screen: Manage objects to screen
            sda_spending-categorization_management: Manage spending categorization
            form_read: Get a form configuration
            sda_form_submit: Manage the session form
            sda_authentications-processes_write: authentication process write
            sda_authentications-processes_view: authentication process view
            sda_authentications-sessions_initiate: authentications sessions initiate
            sda_authentications-sessions_view: authentications sessions view
            sda_authentications-sessions_auth: authentications sessions auth
            sda_authentications-sessions_suspicious: authentications sessions suspicious
            sda_external-references_creation: modify the references of a party
            sda_external-system-configurations_management: Manage external system configurations
            sda_customer-actions_read: View customer actions
            sda_customer-actions_initiate: Can initiate a customer action process
            sda_required_action_types_read: Can view required action types
            sda_settings_view: View settings platform
            sda_exchange-rates_write: Edit exchange rates
            sda_exchange-rates_view: View exchange rates
            sda_pincode_reset: Reset pincode
            sda_customer_onboarding_create: Can initiate party onboarding process
            sda_customer_onboarding_submit: Can submit completed onboarding files
            sda_customer_onboarding_view: Can view parties onboarding processes
            sda_customer_onboarding_update: Can update parties onboarding files
            sda_fees_read: View fees
            sda_fees_write: Modify fees
            sda_fees_validate: Validate fees
            sda_fees_cancel: Cancel fees
            sda_fees_refuse: Refuse fees
            sda_fees_discount_read: View a fee discount
            sda_fees_discount_write: Modify a fee discount
            sda_fees_discount_delete: Delete a fee discount
            sda_fees_request-refund: Request a fee refund
            sda_fees_validate-refund: Validate a fee refund request
            sda_fees_refuse-refund: Refuse a fee refund request
            sda_fees_cancel-refund: Cancel a fee refund request
            sda_chequebooks_read: View chequebooks
            sda_chequebooks_write: Manage chequebooks
            sda_cheque_read: View cheque
            sda_cheque_write: Manage cheque
            sda_operation-awaiting-decision_management: Manage operation awaiting decision
            sda_operation-awaiting-decision_view: View operation awaiting decision
            sda_accounting_view: View accounting entries
            pricing_management: Pricing setup management
            pricing_view: Pricing setup view
            customer-instruction_upload: upload credit-transfers file
            sda_accounts_iban_create: Can create an account's IBAN
            sda_accounts_external_references_create: Can create external references for an account
            sda_accounts_external_references_read: View external references of an account
            sda_accounts_external_references_update: Can update external references of an account
            sda_accounts_external_references_delete: Can delete external references of an account
            sda_accounts_externalData_update: Can update external data of an account
            sda_accounts_additionalData_read: Can read additional data of an account
            sda_accounts_additionalData_update: Can update additional data of an account
            authorizedOverdraft_read: View authorized overdraft
            authorizedOverdraft_write: Modify authorized overdraft
            payment_service: Manage payment services
            payment-service-contract_view: View payment service contracts
            sda_pairing-request_write: Can edit pairing requests
            audit: Add new audit trails
            customer-instruction_deletion: 'Can delete a customer instruction, if not submitted'
            customer-instruction_initiation: Can initiate a new customer instruction
            customer-instruction_submission: Can submit a customer instruction
            customer-instruction_update: 'Can update a customer instruction, if not submitted'
            customer-instruction_view: Can access a customer instruction data
            documents_management: (deprecated) Can manage customer's documents (use identity_documents_management instead)
            documents_view: (deprecated) Can access to existing customer's documents (use as identity_documents_view instead)
            identity_creation: Can create new parties
            identity_documents_view: Can access to existing customer's documents
            identity_documents_management: Can access to existing customer's documents
            identity_relations_management: Can manage parties relations
            identity_relations_view: Can access to parties relations details
            object_to_screen: Can manage objets to screen
            partner_accounts_view: Can access to partner accounts
            partner_operations_view: Can access to partner operations
            payment-instruction_deletion: 'Can delete an inward payment instruction, if not submitted'
            payment-instruction_exchange: Can validate the exchange of an outward submitted payment instruction
            payment-instruction_initiation: Can initiate a new inward payment instruction
            payment-instruction_refuse: Can refuse an outward submitted payment instruction
            payment-instruction_settle: Can settle an outward exchanged payment instruction
            payment-instruction_submission: Can submit an inward payment instruction
            payment-instruction_update: 'Can update an inward payment instruction, if not submitted'
            payment-instruction_view: Can access an inward payment instruction data
            population_view: Can access to populations definition details
            posting: Can initiate Posting operations
            profiles_view: Can access to user profiles
            sda_create_delegated_accesses: Can create new delegated accesses to a party
            sda_delegated-accesses_deactivation: Can deactivate existing delegated accesses
            sda_delegated-accesses_reset: Can reset existing delegated accesses
            sda_docusign_receive_envelopes: Can receive DocuSign envelopes
            sda_docusign_send_envelopes: Can send DocuSign envelopes
            sda_external-references_view: Can access to parties' external references
            sda_message_send: Can send messages
            sda_phones_association: Can initiate phone association procedure for a party
            sda_required-actions_write: Can create and update required actions on parties
            sda_screening-requests_creation: Can create screening requests on Objects to screen
            sda_screening-request_preparation: Can prepare screening requests on Objects to screen
            sda_screening-requests_view: Can access to screening requests on Objects to screen
            sda_screening-request_write: Can create or edit screening requests
            sda_transactions_external-data_update: Can add and update transactions external data
            sda_client_subscription_update: Can update client subscription
            subscription_read: Can access to existing subscription data
            subscription_write: Can create and update subscription data
            tax_profile_view: Can access to tax profiles
            velocity_view: Can access to velocity rules data
            sda_sms_view: Can view an SMS
            funds_isolation: Calculate/Execute funds isolation
            sda_customer_onboarding_manage: Can manage a customer onboarding
            sda_identity_profile_change: Can change an identity profile
            sda_identity_creation_migrate: Allow to migrate an identity
            sda_sms_send: Resend a list of SMS
            sda_additional-data_delete: Can delete additional data
            sda_camt_request: Can request for CAMT statement
            sda_templating_setting: Can manage templating
            sda_account-owners_manage: Can manage account owners
          refreshUrl: ''
  requestBodies:
    OnboardingFileUpdateRequest:
      description: Onboarding update request
      content:
        application/json:
          schema:
            type: object
            required:
              - form
            properties:
              form:
                $ref: '#/components/schemas/InputCollectionUpdate'
    InitiateNaturalPersonOnboardingRequest:
      description: Enrollment initiation request
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - phoneNumber
              - lastName
              - firstName
              - privacyPolicyAcceptance
              - termsAcceptance
            properties:
              email:
                type: string
                description: Person to create e-mail address. Will be used as `login` if request's `login` field is empty
                example: john.doe@email.com
                format: email
              phoneNumber:
                $ref: ./Phone.yaml
              lastName:
                type: string
                description: Person to create last name
                example: Doe
              firstName:
                type: string
                description: Person to create first name
                example: John
              privacyPolicyAcceptance:
                type: boolean
                description: Person to agree privacy policy acceptance
                example: true
              termsAcceptance:
                type: boolean
                description: Person to agree terms acceptance
                example: true
    CreateAccountRequest:
      description: 'Create a new account (only current, technical, subaccount or savings product)'
      content:
        application/json:
          schema:
            type: object
            required:
              - userId
              - productId
            properties:
              userId:
                $ref: '#/components/schemas/UserId'
              productId:
                $ref: '#/components/schemas/ProductId'
              externalId:
                $ref: '#/components/schemas/ExternalId'
              iban:
                $ref: '#/components/schemas/IBAN'
              externalData:
                $ref: '#/components/schemas/ExternalData'
              coOwners:
                type: array
                x-stoplight:
                  id: 4ubh4glcvzdxd
                items:
                  $ref: '#/components/schemas/IdentityId'
                  x-stoplight:
                    id: 7ox3syvsg450t
    CreateUserProfileRequest:
      description: Request to create a new user profile
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserProfile'
    CreateDelegatedAccessForPartyRequest:
      description: Create a new party with delegated access to owner party
      content:
        application/json:
          schema:
            type: object
            required:
              - profileId
              - ownerPartyId
              - lastName
              - email
            properties:
              profileId:
                $ref: '#/components/schemas/UserProfileId'
              ownerPartyId:
                $ref: '#/components/schemas/IdentityId'
              lastName:
                type: string
                description: Person to create last name
                example: Doe
              email:
                type: string
                description: Person to create e-mail address. Will be used as `login` if request's `login` field is empty
                example: john.doe@email.com
                format: email
              firstName:
                type: string
                description: Person to create first name
                example: John
              login:
                $ref: '#/components/schemas/Login'
              externalId:
                $ref: '#/components/schemas/ExternalId'
              expirationDate:
                $ref: ./DateTime.yaml
    CreateCardRequest:
      description: Create a new card for an account
      content:
        application/json:
          schema:
            type: object
            required:
              - accountId
              - productId
            properties:
              accountId:
                $ref: '#/components/schemas/AccountNumber'
              productId:
                $ref: '#/components/schemas/ProductId'
              userId:
                $ref: '#/components/schemas/UserId'
                x-stoplight:
                  id: bjlc9lmthziub
              embossedName:
                type: string
                description: 'The card holder name, default is account''s holder name. Can be modified while status is NEW. Can only contain "A-Z", "0-9", "''", "-", " ", and ".".'
                example: JOHN DOE
              embossedReference:
                type: string
                description: 'Mandatory for anonymous cards, reference at the back of the card to link anonymous card with an account'
              externalId:
                $ref: '#/components/schemas/ExternalId'
              limits:
                $ref: '#/components/schemas/Limits'
              features:
                $ref: '#/components/schemas/CreateCardFeaturesProperty'
              pincode:
                type: string
                description: Pincode of the card. Must be 4 digits if defined
                example: '1234'
              contractId:
                type: string
                description: Card contract associated with the card. Leave empty to create a card in a new contract.
              externalData:
                $ref: '#/components/schemas/ExternalData'
              label:
                type: string
                description: Label of the card.
    CardUpdateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              externalId:
                $ref: '#/components/schemas/CardExternalId'
              externalStatus:
                type: string
              expirationMonth:
                type: integer
                description: Required when `expirationYear` is set
                example: 1
              expirationYear:
                type: integer
                description: Required when `expirationMonth` is set
                example: 1970
              externalData:
                $ref: '#/components/schemas/ExternalData'
    ChangeCardFeatureRequest:
      description: Change card feature
      content:
        application/json:
          schema:
            type: object
            required:
              - feature
              - enabled
            properties:
              feature:
                $ref: '#/components/schemas/CardFeatureId'
              enabled:
                type: boolean
                example: true
    ChangeCardLimitRequest:
      description: Change card limit
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Limit'
    CardPincodeReissuingRequest:
      description: Reissue card pincode
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                description: New card pincode
                example: '1234'
              channel:
                $ref: '#/components/schemas/PinSendingChannelType'
    CreateAuthenticationProcessRequest:
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - status
            properties:
              code:
                $ref: '#/components/schemas/AuthenticationProcessCodeWriteOnly'
              status:
                $ref: '#/components/schemas/AuthenticationProcessStatus'
    UpdateAuthenticationProcessRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationProcess'
    CreateAuthenticationProcessMethodRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationProcessMethod'
    UpdateAuthenticationProcessMethodRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationProcessMethod'
    AddSpendingDetailOnTransactionRequest:
      description: Spending details to add on transaction
      content:
        application/json:
          schema:
            type: object
            required:
              - transactionId
              - label
              - categoryId
              - subcategoryId
            properties:
              transactionId:
                $ref: '#/components/schemas/TransactionId'
              categoryId:
                $ref: '#/components/schemas/WriteOnlySpendingCategoryId'
              subcategoryId:
                $ref: '#/components/schemas/WriteOnlySpendingCategoryId'
              label:
                type: string
                description: label of the spending detail
              amount:
                $ref: '#/components/schemas/Amount'
              additionalData:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      $ref: '#/components/schemas/SpendingsAdditionalDataKey'
                    value:
                      type: string
    UpdateSpendingDetailRequest:
      description: Spending details to add on transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpendingDetailUpdate'
    AddAttachmentToTransactionRequest:
      description: Document data to attach to transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddAttachTransactionSchema'
    OrderChequebookRequest:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                productId: '54321'
                accountNumber: '123456789'
                externalData:
                  channel: back-office
                  formId: 1234
            required:
              - productId
              - accountNumber
            properties:
              productId:
                type: string
                description: Cheque product id
              accountNumber:
                $ref: '#/components/schemas/AccountNumber'
              externalData:
                $ref: '#/components/schemas/ExternalData'
          examples:
            Example 1:
              value:
                productId: '54321'
                accountNumber: '10000000157'
                externalData:
                  key1: value1
                  key2: value2
    MigrateAccountRequest:
      description: The account information to migrate
      content:
        application/json:
          schema:
            type: object
            required:
              - productId
              - id
            properties:
              productId:
                $ref: '#/components/schemas/ProductId'
              id:
                $ref: '#/components/schemas/AccountNumber'
              userId:
                $ref: '#/components/schemas/UserId'
              externalId:
                $ref: '#/components/schemas/ExternalId'
              externalData:
                $ref: '#/components/schemas/ExternalData'
              externalReferences:
                type: array
                description: collection of external references
                items:
                  $ref: '#/components/schemas/AccountExternalReference'
              iban:
                $ref: '#/components/schemas/IBAN'
              name:
                $ref: '#/components/schemas/AccountLabel'
              status:
                $ref: '#/components/schemas/AccountMigrationStatus'
              balance:
                $ref: '#/components/schemas/AccountBalance'
              createdAt:
                $ref: '#/components/schemas/DateAtom'
              lastUsedAt:
                $ref: '#/components/schemas/DateAtom'
              lastChangedAt:
                $ref: '#/components/schemas/DateAtom'
              authorizedOverdraft:
                type: object
                properties:
                  currency:
                    $ref: '#/components/schemas/Currency'
                  value:
                    $ref: '#/components/schemas/AmountValue'
              statusChangeReason:
                $ref: '#/components/schemas/StatusChangeReason'
    MigrateCardRequest:
      description: The card information to migrate
      content:
        application/json:
          schema:
            type: object
            required:
              - accountId
              - productId
            properties:
              accountId:
                $ref: '#/components/schemas/AccountNumber'
              productId:
                $ref: '#/components/schemas/ProductId'
              userId:
                $ref: '#/components/schemas/UserId'
                x-stoplight:
                  id: by9nrodcv97zt
              contractId:
                $ref: '#/components/schemas/ContractId'
              embossedName:
                $ref: '#/components/schemas/EmbossedName'
              embossedReference:
                $ref: '#/components/schemas/EmbossedReference'
              panAlias:
                $ref: '#/components/schemas/PanAlias'
              panDisplay:
                $ref: '#/components/schemas/PanDisplay'
              status:
                $ref: '#/components/schemas/CardStatus'
              description:
                $ref: '#/components/schemas/CardDescription'
              externalId:
                $ref: '#/components/schemas/CardExternalId'
              externalData:
                $ref: '#/components/schemas/ExternalData'
              externalStatus:
                $ref: '#/components/schemas/DebitCardExternalStatus'
              limits:
                $ref: '#/components/schemas/Limits'
              features:
                $ref: '#/components/schemas/CreateCardFeaturesProperty'
              creationDate:
                $ref: '#/components/schemas/DateAtom'
              expirationDate:
                $ref: '#/components/schemas/DateAtom'
              lastUsageDate:
                $ref: '#/components/schemas/DateAtom'
              replacedBy:
                description: collection of cards that replaced this card
                required:
                  - cardId
                  - replacementReason
                type: array
                items:
                  description: Test
                  type: object
                  properties:
                    cardId:
                      example: 1234
                      type: integer
                    replacementReason:
                      $ref: '#/components/schemas/CardRefabricateReason'
              replacementFor:
                $ref: '#/components/schemas/ReplacementFor'
              replacementReason:
                $ref: '#/components/schemas/CardRefabricateReason'
    MandateRequest:
      content:
        application/json:
          schema:
            type: object
            required:
              - reference
              - creditorRef
              - creditorName
              - debtorRef
              - signatureDate
              - type
              - recurrent
            properties:
              reference:
                type: string
                x-stoplight:
                  id: mfo47crddpdz9
                description: Reference of the mandate
              creditorRef:
                type: string
                x-stoplight:
                  id: 8zhwrxxdx8usg
                description: Creditor's reference
              creditorName:
                type: string
                x-stoplight:
                  id: 1qzyqr5dftryg
                description: Creditor name
              debtorRef:
                type: string
                x-stoplight:
                  id: 2drjd6271jora
                description: Debtor's reference
              signatureDate:
                $ref: '#/components/schemas/DateAtom'
                x-stoplight:
                  id: ogcuby884uy5g
                description: Signature date
              type:
                x-stoplight:
                  id: 8d9ytmd2newvs
                enum: []
                description: Mandate type
              recurrent:
                type: boolean
                x-stoplight:
                  id: 3f4ppp2kk1pvy
                description: Is mandate recurrent
          examples: {}
      description: Mandate request body
    UpdateAccountMainOwnerRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              ownerId:
                type: integer
            x-examples:
              Example 1:
                ownerId: 859
      description: ''
    AddAccountOwnerRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              ownerId:
                type: integer
            x-examples:
              Example 1:
                ownerId: 1234
          examples:
            Example 1:
              value:
                ownerId: 1234
    DeleteAccountOwnerRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              reason:
                type: string
            x-examples:
              Example 1:
                reason: reason
  responses:
    OAuth2AuthRequestResponse:
      description: Authorization request initiated successfully. Redirection must be followed.
      headers:
        Location:
          schema:
            type: string
            description: the URI to redirect the client to.
    InvalidRequestResponse:
      description: Request is not valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidRequestError'
    ForbiddenResponse:
      description: Request client was not allowed to make this action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    OAuth2AccessTokenResponse:
      description: Access Token issued successfully
      content:
        application/json:
          schema:
            type: object
            required:
              - token_type
              - expires_in
              - access_token
              - refresh_token
            properties:
              token_type:
                type: string
                description: the Access Token type. Always "Bearer".
                example: Bearer
              expires_in:
                type: integer
                description: the duration in seconds of Access Token validity
              access_token:
                type: string
                description: the Access Token that is a base64 encoded JWT
                example: |
                  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
              refresh_token:
                $ref: '#/components/schemas/RefreshToken'
    RestfulErrorResponse:
      description: Request could not be processed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ErrorResponse:
      description: Request could not be processed
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/Response'
              - type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                example:
                  success: false
                  error:
                    code: 1337
                    message: An error occurred
    UnauthorizedResponse:
      description: Request client is not authorized to access this endpoint
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    NotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    SearchAuditTrailsResponse:
      description: List of filtered audit trails and pagination information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuditEntryCollection'
    CreateExternalPartyScreeningRequest:
      description: External screening request successfully stored
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExternalRequestCreated'
    VersionConflictResponse:
      description: The request could not be processed because the current version does not match the specified version
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    IdentityVelocitiesResponse:
      description: List of velocity batch
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VelocityBatchWithRulesAndValuesCollection'
    GetIdentityRelationsResponse:
      description: Returned identity's relations list
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RelationCollection'
    CreateIdentityRelationResponse:
      description: Returned identity relation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Relation'
    GetIdentityOperationsResponse:
      description: Returned a paginated list of an identity's operations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationCollection'
    GetOnboardingFileResponse:
      description: Response contains onboarding file content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OnboardingFile'
    OnboardingFileUpdatedResponse:
      description: Onboarding file was updated successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OnboardingFile'
    AddPartyExternalReferencesResponse:
      description: Adding an external references to a given party
      content:
        application/json:
          schema:
            type: object
            properties:
              links:
                type: array
                readOnly: true
                description: |
                  Can contain the following actions (identified by their `rel` attribute):
                    * `getPartyExternalReference` [GET] Load external references
                items:
                  $ref: '#/components/schemas/Link'
                example:
                  - rel: getPartyExternalReference
                    href: 'https://sandbox.skaleet.com/api/service-domain/v1/external-references'
    GetPartyExternalReferencesResponse:
      description: List of external references belonging to a given identity
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                  count:
                    type: integer
                    description: the total count of objects in collection
                    minimum: 0
                  offset:
                    type: integer
                    description: Pagination start (from 0)
                    minimum: 0
                    default: 0
                  limit:
                    type: integer
                    description: Number of results to display (default 20)
                    minimum: 0
                    maximum: 100
                    default: 20
                  sort:
                    type: string
                    description: Field to define sort order
                    default: id
                  links:
                    type: array
                    readOnly: true
                    description: |
                      Can contain the following actions (identified by their `rel` attribute):
                        * `getCurrentPage` [GET] Load the current collection page
                        * `getNextPage` [GET] Load the next collection page, if any
                        * `getPreviousPage` [GET] Load the previous collection page, if any
                    items:
                      $ref: '#/components/schemas/Link'
                    example:
                      - rel: getCurrentPage
                        href: 'https://sandbox.skaleet.com/api/service-domain/v1?limit=20&offset=40&sort=example_sorting_parameter'
                      - rel: getNextPage
                        href: 'https://sandbox.skaleet.com/api/service-domain/v1?limit=20&offset=60&sort=example_sorting_parameter'
                      - rel: getPreviousPage
                        href: 'https://sandbox.skaleet.com/api/service-domain/v1?limit=20&offset=20&sort=example_sorting_parameter'
              - $ref: '#/components/schemas/PartyExternalReferences'
    AddExternalScoreResultResponse:
      description: New external Score result was successfully added to Party
      content:
        application/json:
          schema:
            type: object
            properties:
              links:
                type: array
                readOnly: true
                description: |
                  Can contain the following actions (identified by their `rel` attribute):
                    * `getScoreResult` [GET] Load the Score result added to Party
                    * `getAllScoreResultsForParty` [GET] Load all Score results added to Party
                items:
                  $ref: '#/components/schemas/Link'
                example:
                  - rel: getScoreResult
                    href: 'https://sandbox.skaleet.com/api/service-domain/v1/score-results/1234'
                  - rel: getAllScoreResultsForParty
                    href: 'https://sandbox.skaleet.com/api/service-domain/v1/identities/1234/scores'
    GetScoreLinkToResultsResponse:
      description: Score results related to the user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetScoreLinkToResults'
    PaymentRTransactionCreditTransferResponse:
      description: The payment R transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentRTransactionCreditTransferResponseData'
    PaymentRTransactionDirectDebitResponse:
      description: The payment R transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentRTransactionDirectDebitResponseData'
    PaymentInstructionCreditTransferResponse:
      description: The payment instruction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentInstructionCreditTransferResponseData'
    PaymentInstructionDirectDebitResponse:
      description: The payment instruction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentInstructionDirectDebitResponseData'
    CreditTransferPaymentTransactionResponse:
      description: The payment transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreditTransferPaymentTransaction'
    DirectDebitPaymentTransactionResponse:
      description: The payment transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DirectDebitPaymentTransaction'
    PaymentTransactionWithMandateResponse:
      description: The payment transaction with mandate information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ViewCreditTransferPaymentTransactionWithMandateResponse'
    UserProfileCreatedResponse:
      description: Successfully created a new user profile
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserProfile'
    DelegatedAccessCreatedResponse:
      description: Delegated access has been successfully created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DelegatedAccess'
    SaveExternalSystemConfigurationResponse:
      description: External system configuration successfully saved response
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                $ref: '#/components/schemas/Code'
    GetExternalSystemConfigurationResponse:
      description: Get external system configuration response
      content:
        application/json:
          schema:
            type: object
            example:
              key1: value1
              key2: value2
    GetCustomerActionsResponse:
      description: Get customers actions response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerActionsCollection'
    InitiateCustomerActionResponse:
      description: Response to customer action initiation request
      content:
        application/json:
          schema:
            type: object
            required:
              - id
              - links
            properties:
              id:
                type: integer
                example: 42
              links:
                type: object
                required:
                  - rel
                  - href
                properties:
                  rel:
                    type: string
                    example: self
                  href:
                    type: string
                    example: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-actions/42'
    GetOngoingCustomerActionBusinessProcessResponse:
      description: Response to customer action business process request
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/CustomerActionBusinessProcess'
              - type: object
                required:
                  - form
                properties:
                  form:
                    $ref: '#/components/schemas/InputCollection'
    AuthenticationProcessCreatedResponse:
      description: New authentication process created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationProcess'
    ListAuthenticationProcessesResponse:
      description: List of matching authentication processes
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: '#/components/schemas/AuthenticationProcess'
    AuthenticationProcessUpdatedResponse:
      description: Authentication process updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationProcess'
    ListAuthenticationProcessMethodsResponse:
      description: Authentication process methods listed
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                $ref: '#/components/schemas/AuthenticationProcessMethods'
    AuthenticationProcessMethodUpdatedResponse:
      description: Authentication process method updated successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationProcessMethod'
    ListAuthenticationSessionsResponse:
      description: sessions logs listed
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: '#/components/schemas/AuthenticationSession'
    GetSpendingsCategories:
      description: Categories to use for expense management
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpendingCategoryArray'
    GetSpendingsAdditionalData:
      description: Categories to use for expense management
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpendingsAdditionalData'
    GetSpendingDetailsResponse:
      description: 'The list of spending details with its transaction. If not spending is associated to the transaction, `UNCATEGORIZED` spending will be returned.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpendingDetailsWithTransactionList'
    SpendingDetailAddedOnTransactionResponse:
      description: A new spending detail has been added successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpendingDetail'
    SpendingDetailUpdatedResponse:
      description: Spending detail has been updated successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpendingDetail'
    SpendingDetailDeletedResponse:
      description: Spending detail has been successfully deleted
    GetTransactionAttachmentsListResponse:
      description: The list of attachments of the transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAttachmentsList'
    AttachmentAddedToTransactionResponse:
      description: A new attachment has been added successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAttachment'
    TransactionAttachmentDeletedResponse:
      description: Transaction attachment has been successfully deleted
    TransactionAttachmentContentResponse:
      description: Document content (check `Content-Type` header value to know the exact MIME type of content)
      headers:
        Content-Type:
          description: Returned file MIME type
          schema:
            type: string
            example: image/png
      content:
        image/jpeg:
          schema:
            type: string
            format: binary
        image/gif:
          schema:
            type: string
            format: binary
        image/png:
          schema:
            type: string
            format: binary
        application/pdf:
          schema:
            type: string
            format: binary
    TransactionAttachmentPreviewResponse:
      description: Document content (check `Content-Type` header value to know the exact MIME type of content)
      headers:
        Content-Type:
          description: Returned file MIME type
          schema:
            type: string
            example: image/png
      content:
        image/png:
          schema:
            type: string
            format: binary
    GetExchangeRateHistoryResponse:
      description: Exchange rates history for currencies
      content:
        application/json:
          schema:
            type: object
            properties:
              baseCurrency:
                $ref: '#/components/schemas/Currency'
              foreignCurrency:
                description: Alpha iso code of associated currency (ISO 4217)
                type: string
                minLength: 3
                maxLength: 3
                example: USD
              valueDate:
                type: string
                format: date
                description: Date of validity for the exchange rate
                example: '2023-12-20'
              exchangeRates:
                type: object
                properties:
                  buyRate:
                    type: number
                    description: Exchange rate for buying the foreign currency
                    format: float
                    example: 38.5
                  sellRate:
                    type: number
                    description: Exchange rate for selling the foreign currency
                    format: float
                    example: 41.2
    SendMessageTypeSmsSuccessResponse:
      description: SMS message sent successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
    TransactionLogResponse:
      description: Transaction log created successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              transaction:
                $ref: '#/components/schemas/TransactionLogDetails'
  schemas:
    ApiClientId:
      type: string
      description: API client identifier
      example: 78ee4408bb9b0f8ca87d08c8574de47f
      x-stoplight:
        id: warelw6emd2oo
    RedirectUri:
      type: string
      description: |
        The URI the Authorization Server should use to redirect the authorized user or communicate the authorization failure.

        On final user redirection, if authorization were successful, the authorization server will add `code` and `state` parameters.

        `state` must be the same value as the one transmitted in the initiation.

        `code` contains the Authorization Code to exchange for an Access Token.
      format: uri
      example: 'https://client.example.org/oauth-redirect'
      x-stoplight:
        id: t1fkvmpwypk71
    Scope:
      type: string
      description: |
        The wished scopes list, each scope must be separated by one blank space

        **In case of token refresh**, it is impossible to request scopes that were not requested during the initial Access Token request.

        The list may contain a subset of the initially requested scopes.
      x-stoplight:
        id: idx85z3a47tdk
    AuthCodeState:
      type: string
      description: A CSRF token. This parameter is optional but highly recommended. You should store the value of the CSRF token in the user’s session to be validated when they return.
      example: OWY4NmQwODE4ODRjN2Q2NTlhMmZlYWEwYzU1YWQwMTVhM2JmNGYxYjJiMGI4MjJjZDE1ZDZMGYwMGEwOA==
      x-stoplight:
        id: mx9csa2ofs2pz
    OAuth2AccessTokenRequest:
      oneOf:
        - $ref: '#/components/schemas/OAuth2PasswordAccessTokenRequest'
        - $ref: '#/components/schemas/OAuth2AuthCodeAccessTokenRequest'
        - $ref: '#/components/schemas/OAuth2ClientCredentialsAccessTokenRequest'
      discriminator:
        propertyName: grant_type
        mapping:
          password: '#/components/schemas/OAuth2PasswordAccessTokenRequest'
          authorization_code: '#/components/schemas/OAuth2AuthCodeAccessTokenRequest'
          client_credentials: '#/components/schemas/OAuth2ClientCredentialsAccessTokenRequest'
      x-stoplight:
        id: 2tfgz79bbyxvb
    CardId:
      type: string
      description: Card identifier
      example: CARD123
      x-stoplight:
        id: pineii3930c7w
    EmbossedName:
      type: string
      description: Card holder name
      example: John Doe
      x-stoplight:
        id: kics65ojnarml
    EmbossedReference:
      type: string
      description: 'Reference at the back of the card, if any'
      example: '123456789'
      x-stoplight:
        id: 5gxil4i1lp5oo
    PanAlias:
      type: string
      description: Card PAN alias
      example: cardPanAlias
      x-stoplight:
        id: gprdmw082g7nd
    PanDisplay:
      type: string
      description: Card PAN to display
      example: 5119 77XX XXXX 4431
      x-stoplight:
        id: yz1sy3g7y000w
    CardDescription:
      type: string
      description: Card description
      example: My card
      x-stoplight:
        id: ah67yuzx92cj3
    ReplacementFor:
      type: string
      description: Id of the card that this card replaced
      example: CARD789
      x-stoplight:
        id: veghjt3exg4v5
    AmountValue:
      description: Amount without separator and symbol
      type: integer
      example: 1337
      x-stoplight:
        id: 11el882x319gr
    Currency:
      description: Alpha iso code of associated currency (ISO 4217)
      type: string
      minLength: 3
      maxLength: 3
      example: EUR
      x-stoplight:
        id: r42iio9mshl7d
    Currencies:
      description: List of currencies
      type: array
      items:
        $ref: '#/components/schemas/CurrencyDetails'
      x-stoplight:
        id: 4p0c3fyzh1w0p
    CurrencyDetails:
      description: Details on a platform's currency
      x-stoplight:
        id: emrdk8viajtao
      type: object
      properties:
        name:
          type: string
          example: Euro
        isoNumeric:
          type: string
          example: '978'
        isoAlpha:
          type: string
          example: EUR
        precision:
          description: Number of decimals
          type: integer
          example: 2
        symbol:
          type: string
          example: €
        symbolFirst:
          type: boolean
          example: false
        separators:
          type: object
          properties:
            thousands:
              type: string
              example: ''
            decimal:
              type: string
              example: .
    AccountNumber:
      type: string
      description: Account number
      example: '10000000157'
      x-stoplight:
        id: 37hvgxbuccewa
    CardAuthorizationHoldId:
      type: string
      description: Card Authorization hold id
      example: AHO4
      x-stoplight:
        id: xjyc0p5hackre
    DateAtom:
      type: string
      format: date-time
      description: 'Date in Atom format (exemple 2000-01-20T12:00:00Z)'
      x-stoplight:
        id: n3kk8lo05902k
    CardAuthorizationHoldState:
      type: string
      enum:
        - PENDING
        - CONSUMED
        - CANCELED
        - EXPIRED
      x-stoplight:
        id: mptg7fh7nz3z5
    CardAuthorizationHoldCollection:
      description: Sorted and paginated list of card authorization holds
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of card authorization holds
              items:
                $ref: '#/components/schemas/CardAuthorizationHold'
            startDate:
              type: string
              format: date-time
              description: Card Authorization holds date range start
            endDate:
              type: string
              format: date-time
              description: Card Authorization holds date range end
      x-stoplight:
        id: ji3fm6neudnke
    JobProgress:
      type: object
      properties:
        name:
          type: string
          example: myJob
          description: name of job
        state:
          $ref: '#/components/schemas/JobStateType'
        step:
          type: integer
          example: 5
          description: actual step
        stepNumber:
          type: integer
          example: 5
          description: step number
        duration:
          type: integer
          example: 10
          description: duration in second
        lastExecutionId:
          type: string
          example: '20220315143826'
          description: id of the last execution
      x-stoplight:
        id: ad08jpbtll6dz
    JobRun:
      type: object
      properties:
        name:
          type: string
          example: myJob
          description: name of job
        state:
          $ref: '#/components/schemas/JobStateType'
        lastExecutionId:
          type: string
          example: '20220315143826'
          description: id of the last execution or null
      x-stoplight:
        id: m665fgyz1cose
    ExecutionJobCollection:
      description: list of execution for a job
      allOf:
        - type: object
          properties:
            items:
              type: array
              description: collection of execution
              items:
                $ref: '#/components/schemas/ExecutionJob'
      x-stoplight:
        id: 7rq13v07dodk3
    IdentityId:
      type: string
      example: '1'
      description: Identity unique identifier
      x-stoplight:
        id: pd5vqv9771ku4
    CreateProductRequest:
      type: object
      required:
        - type
        - name
      properties:
        type:
          type: string
          description: Type
          enum:
            - CREDIT
            - SAVINGS
          example: CREDIT
        name:
          type: string
          description: Name
          example: Consumer credit
        code:
          type: string
          description: Code
          example: CONS
        partner:
          $ref: '#/components/schemas/ProductPartnerName'
        familyId:
          type: string
          description: Family id
          example: '1234'
        profileIds:
          type: array
          description: Profile ids
          items:
            type: string
            example: '1234'
        currency:
          type: string
          description: Currency code ISO Alpha
          example: EUR
      x-stoplight:
        id: 8b4u3hzeeu7ze
    Product:
      oneOf:
        - $ref: '#/components/schemas/ExternalProduct'
        - $ref: '#/components/schemas/CreditEmissionProduct'
        - $ref: '#/components/schemas/CreditReceptionProduct'
        - $ref: '#/components/schemas/DirectEmissionProduct'
        - $ref: '#/components/schemas/DirectReceptionProduct'
      discriminator:
        propertyName: type
        mapping:
          CREDIT: '#/components/schemas/ExternalProduct'
          CREDIT_TRANSFER_EMISSION: '#/components/schemas/CreditEmissionProduct'
          CREDIT_TRANSFER_RECEPTION: '#/components/schemas/CreditReceptionProduct'
          DIRECT_DEBIT_EMISSION: '#/components/schemas/DirectEmissionProduct'
          DIRECT_DEBIT_RECEPTION: '#/components/schemas/DirectReceptionProduct'
      x-stoplight:
        id: lwxj8s85fjcjd
    CreateProductPartnerRequest:
      type: object
      required:
        - name
      properties:
        name:
          allOf:
            - type: object
              description: |
                Product partner's technical name
                - Must be unique
                - Must contains only letters, numbers, spaces, dashes, underscores and dots
            - $ref: '#/components/schemas/ProductPartnerName'
        displayName:
          type: string
          description: Product partner's display name
          example: Partner Name
        activationModes:
          type: array
          description: Allowed card activation modes
          items:
            $ref: '#/components/schemas/CardActivationMode'
          example:
            - BY_PLATFORM_WITH_CODE
            - BY_PLATFORM_WITHOUT_CODE
        cardManagementOperations:
          type: array
          description: Allowed card management operations
          items:
            $ref: '#/components/schemas/CardManagementOperationType'
          example:
            - CARD_CREATION
            - CARD_ACTIVATION
        features:
          type: array
          description: Partner allowed features
          items:
            $ref: '#/components/schemas/DebitCardProductFeature'
        limits:
          type: array
          description: Partner limits
          items:
            $ref: '#/components/schemas/CardLimit'
      x-stoplight:
        id: pym7lce21q25p
    ProductPartnerConfiguration:
      type: object
      required:
        - name
        - displayName
      properties:
        name:
          $ref: '#/components/schemas/ProductPartnerName'
        displayName:
          type: string
          description: Product partner's display name
          example: Partner Name
        cardPartnerConfiguration:
          type: object
          properties:
            activationModes:
              type: array
              items:
                $ref: '#/components/schemas/CardActivationMode'
            cardManagementOperations:
              type: array
              items:
                $ref: '#/components/schemas/CardManagementOperationType'
            features:
              type: array
              items:
                $ref: '#/components/schemas/DebitCardProductFeature'
            limits:
              type: array
              items:
                $ref: '#/components/schemas/CardLimit'
      x-stoplight:
        id: 97yy7oojjcn2c
    ProductPartnerName:
      type: string
      description: Product partner's technical name
      example: PARTNER-NAME_00.1
      x-stoplight:
        id: wwg5jsx11kv4f
    ProductPartnerConfigurationCollection:
      description: Sorted and paginated list of partners
      allOf:
        - type: object
          properties:
            items:
              type: array
              description: Collection of partner
              items:
                $ref: '#/components/schemas/ProductPartnerConfiguration'
        - type: object
          properties:
            sort:
              type: string
              default: '-name'
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              items:
                $ref: '#/components/schemas/Link'
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/product-partners?limit=20&offset=40&sort=example_sorting_parameter'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/product-partners?limit=20&offset=60&sort=example_sorting_parameter'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/product-partners?limit=20&offset=20&sort=example_sorting_parameter'
      x-stoplight:
        id: rb17dlwnlgt2l
    EditProductPartnerRequest:
      type: object
      properties:
        displayName:
          type: string
          description: Product partner's display name
          example: Partner Name
        activationModes:
          type: array
          description: Allowed card activation modes
          items:
            $ref: '#/components/schemas/CardActivationMode'
          example:
            - BY_PLATFORM_WITH_CODE
            - BY_PLATFORM_WITHOUT_CODE
        cardManagementOperations:
          type: array
          description: Allowed card management operations
          items:
            $ref: '#/components/schemas/CardManagementOperationType'
          example:
            - CARD_CREATION
            - CARD_ACTIVATION
        features:
          type: array
          description: Partner allowed features
          items:
            $ref: '#/components/schemas/DebitCardProductFeature'
        limits:
          type: array
          description: Partner limits
          items:
            $ref: '#/components/schemas/CardLimit'
      x-stoplight:
        id: r5diphfocnbtp
    AddAuditRequest:
      type: object
      required:
        - type
        - description
      properties:
        type:
          $ref: '#/components/schemas/AuditEventName'
        description:
          type: string
          description: Description
          example: Product "Consumer credit" was created
        makerIdentityId:
          $ref: '#/components/schemas/IdentityId'
        targetIdentityId:
          $ref: '#/components/schemas/IdentityId'
        externalData:
          type: object
          description: Optional data added to the audit trail
          example:
            key1: value1
            key2: value2
      x-stoplight:
        id: lm2272i4urzp1
    Audit:
      type: object
      required:
        - id
        - date
        - type
        - description
      properties:
        id:
          $ref: '#/components/schemas/AuditId'
        date:
          $ref: '#/components/schemas/DateAtom'
        type:
          $ref: '#/components/schemas/AuditEventName'
        description:
          type: string
          description: Description
          example: Product "Consumer credit" was created
        makerIdentityId:
          $ref: '#/components/schemas/IdentityId'
        makerLogin:
          $ref: '#/components/schemas/Login'
        targetIdentityId:
          $ref: '#/components/schemas/IdentityId'
        externalData:
          type: object
          description: Optional data added by the maker
          example:
            key1: value1
            key2: value2
      x-stoplight:
        id: rfby90wq9i0d1
    AuditId:
      type: string
      description: Audit entry identifier
      example: '1'
      x-stoplight:
        id: yy83zx0u7hd9o
    AuditRole:
      type: string
      example: System
      enum:
        - Admin
        - Client
        - Company
        - Unknown
        - Merchant
        - Agent
        - Distributor
        - System
      x-stoplight:
        id: 6almzor9j1449
    Login:
      type: string
      description: the Credential's login
      example: pierre.gola
      x-stoplight:
        id: ifni50mclt78j
    AuditEventName:
      type: string
      description: Audit entry event name
      example: Self-Enrollment
      x-stoplight:
        id: lbb54nf537a35
    ObjectToScreenTargets:
      type: string
      description: The type of the object to screen
      enum:
        - PARTY
        - INSTRUCTION
      x-stoplight:
        id: ooec159v72d5s
    ObjectToScreenStates:
      type: string
      description: The state of the object to screen
      enum:
        - INITIATED
        - PENDING
        - ERROR
        - COMPLIANT
        - NON_COMPLIANT
      x-stoplight:
        id: k3ugb0v25foej
    FetchAllObjectsToScreen:
      type: object
      description: The fetched objects to screen
      additionalProperties:
        type: object
        description: One object to screen (key is the objet's id)
        properties:
          state:
            $ref: '#/components/schemas/ObjectToScreenStates'
          creationDate:
            type: string
            description: The timestamp of the creation of the object to screen
            example: '2023-05-04T15:45:39+02:00'
          updateDate:
            type: string
            description: The timestamp of the last update of the object to screen
            example: '2023-05-04T15:50:39+02:00'
          targetType:
            $ref: '#/components/schemas/ObjectToScreenTargets'
          target:
            type: object
            description: The properties of the target
            properties:
              id:
                type: string
                example: '42'
              lastName:
                type: string
                example: Doe
              firstName:
                type: string
                example: John
              legalType:
                $ref: '#/components/schemas/LegalType'
          links:
            type: array
            readOnly: true
            description: |
              Can contain the following actions (identified by their `rel` attribute):
                * `/objects-to-screen/{objectToScreenId}` [GET] Load the details of an object to screen
            items:
              $ref: '#/components/schemas/Link'
            example:
              - rel: details
                href: 'https://sandbox.skaleet.com/api/service-domain/v1/objects-to-screen/42'
      example:
        '1234':
          state: ERROR
          creationDate: '2023-05-04T15:45:39+02:00'
          updateDate: '2023-05-04T15:45:45+02:00'
          targetType: PARTY
          target:
            id: '42'
            lastName: Doe
            firstName: John
            legalType: NATURAL_PERSON
          links:
            - rel: details
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/objects-to-screen/42'
      x-stoplight:
        id: zrjbvdat6xp5c
    CreateObjectsToScreen:
      type: object
      description: The created object to screen
      properties:
        id:
          type: string
          description: The id of the object to screen
          example: '1234'
        state:
          type: string
          example: INITIATED
        targetType:
          $ref: '#/components/schemas/ObjectToScreenTargets'
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `/objects-to-screen/{objectToScreenId}/history` [GET] Get the history on the object to screen
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: history
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/objects-to-screen/42/history'
        target:
          type: object
          description: The properties of the target
          properties:
            id:
              type: string
              example: '42'
            lastName:
              type: string
              example: Doe
            firstName:
              type: string
              example: John
            legalType:
              $ref: '#/components/schemas/LegalType'
      example:
        id: '42'
        state: INITIATED
        targetType: PARTY
        links:
          - rel: history
            href: 'https://sandbox.skaleet.com/api/service-domain/v1/objects-to-screen/42/history'
        target:
          id: '42'
          lastName: Doe
          firstName: John
          legalType: NATURAL_PERSON
      x-stoplight:
        id: 7epa2lmn2pf3i
    FetchOneObjectsToScreen:
      type: object
      description: The fetched object to screen
      properties:
        id:
          type: string
          description: The id of the object to screen
          example: '1234'
        state:
          $ref: '#/components/schemas/ObjectToScreenStates'
        updateDate:
          type: string
          description: The date of the last update of the object to screen (format ATOM)
          example: '2023-05-04T15:45:39+02:00'
        targetType:
          $ref: '#/components/schemas/ObjectToScreenTargets'
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `/objects-to-screen/{objectToScreenId}`         [GET] Get the details on the object to screen
              * `/objects-to-screen/{objectToScreenId}/history` [GET] Get the history on the object to screen
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: details
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/objects-to-screen/42'
            - rel: history
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/objects-to-screen/42/history'
        target:
          type: object
          description: The properties of the target
          properties:
            id:
              type: string
              example: '42'
            lastName:
              type: string
              example: Doe
            firstName:
              type: string
              example: John
            legalType:
              $ref: '#/components/schemas/LegalType'
      example:
        id: '42'
        state: ERROR
        updateDate: '2023-05-04T15:45:39+02:00'
        targetType: PARTY
        links:
          - rel: details
            href: 'https://sandbox.skaleet.com/api/service-domain/v1/objects-to-screen/42'
          - rel: history
            href: 'https://sandbox.skaleet.com/api/service-domain/v1/objects-to-screen/42/history'
        target:
          id: '42'
          lastName: Doe
          firstName: John
          legalType: NATURAL_PERSON
      x-stoplight:
        id: 6xg44cxgud10r
    FetchOneObjectsToScreenHistory:
      type: object
      description: The fetched object to screen history
      properties:
        id:
          type: string
          description: The id of the object to screen
          example: '1234'
        transitions:
          type: object
          description: The transition to the given object to screen
          properties:
            transitionId:
              type: object
              description: One transition
              properties:
                previousState:
                  $ref: '#/components/schemas/ObjectToScreenStates'
                newState:
                  $ref: '#/components/schemas/ObjectToScreenStates'
                date:
                  type: string
                  description: Date of the transition (format ATOM)
                  example: '2023-05-04T15:45:39+02:00'
                comment:
                  type: string
                  example: Automated by Fircosoft
      example:
        id: '42'
        transitions:
          '49':
            nextState: INITIATED
            date: '2023-05-04T15:45:39+02:00'
            comment: Automated by Fircosoft
          '50':
            previousState: INITIATED
            nextState: PENDING
            date: '2023-05-04T15:45:39+02:00'
            comment: Automated by Fircosoft
      x-stoplight:
        id: hs79natdr5ocq
    FetchObjectsToScreenScreeningTypes:
      type: object
      description: The fetched objects to screen screening types
      properties:
        code:
          type: string
          example: SCREENING_DEFAULT_PARTY
        label:
          type: string
          example: Default Party screening type
        targetType:
          $ref: '#/components/schemas/ObjectToScreenTargets'
        kycField:
          type: object
          properties:
            id:
              type: string
              example: lastName
            label:
              type: string
              example: Last name
      x-stoplight:
        id: 7hkolbg0y4gzs
    CreateObjectToScreenScreeningResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: Screening response status
          enum:
            - REQUESTED
            - PENDING_DECISION
            - REQUEST_ERROR
            - OK
            - NOK
          example: OK
        screeningData:
          type: object
          description: JSON Object of external screening data
          additionalProperties: {}
      x-stoplight:
        id: mpgm6fmwkwbk2
    ObjectToScreenId:
      type: integer
      example: 1
      description: object to screen unique identifier
      x-stoplight:
        id: 9lupsqshdovg6
    ScreeningRequestId:
      type: integer
      example: 1
      description: screening request unique identifier
      x-stoplight:
        id: 3t5fd3tacq2qy
    ScreeningRequestCollection:
      description: List of screening requests
      type: array
      items:
        $ref: '#/components/schemas/ScreeningRequest'
      x-stoplight:
        id: 80lciinbb2k8x
    Response:
      type: object
      properties:
        success:
          type: boolean
      x-stoplight:
        id: 9bwn8u6oifl2i
    EmitEventRequest:
      type: object
      required:
        - header
      properties:
        header:
          type: object
          required:
            - id
            - date
            - name
            - producer
          properties:
            id:
              type: string
              example: 622382eb-6e4a-4ef3-b66c-726e0202d908
            date:
              type: string
              format: date-time
            name:
              type: string
              example: credit.credit_request.initiated
            producer:
              type: object
              required:
                - id
                - name
              properties:
                id:
                  type: string
                  example: '33153'
                name:
                  type: string
                  example: myApplication
            subject:
              type: object
              required:
                - type
                - id
              description: Entity concerned by the event
              properties:
                type:
                  type: string
                  example: CREDIT_REQUEST
                id:
                  type: string
                  example: 202206311312FR
        data:
          type: object
          description: additional data sent with the event
      x-stoplight:
        id: 76kd5sy28svjb
    LegalType:
      type: string
      description: |
        The user can be a natural person (physical person with firstname and lastname) or a legal entity (company or non-profit with legalName)
      enum:
        - NATURAL_PERSON
        - LEGAL_ENTITY
      x-stoplight:
        id: 4ilngeustafbh
    ProfileId:
      type: integer
      example: 1
      description: ID of a Profile.
      x-stoplight:
        id: lajkdpadmlfkv
    ExternalId:
      type: string
      description: External id (from the calling system)
      example: EXT123456789
      x-stoplight:
        id: z2l8wbw8q8wim
    IdentityRole:
      type: string
      description: 'An Identity can be of type CLIENT, COMPANY, MERCHANT, AGENT, DISTRIBUTOR, DELEGATE_USER or NON_CUSTOMER'
      enum:
        - CLIENT
        - COMPANY
        - MERCHANT
        - AGENT
        - NON_CUSTOMER
        - DISTRIBUTOR
        - DELEGATE_USER
      x-stoplight:
        id: a5083kqxcg5wu
    Country:
      description: Numeric iso code of associated country (3 digits)
      type: string
      minLength: 3
      maxLength: 3
      example: '250'
      x-stoplight:
        id: yojj3izq52q2g
    Lang:
      type: string
      description: Locale identifier
      format: '[a-z]{2}_[A-Z]{2}'
      example: fr_FR
      x-stoplight:
        id: ogjbjukl69dz3
    PersonTitle:
      description: Person title
      type: string
      enum:
        - MR
        - MS
        - MRS
      example: MR
      x-stoplight:
        id: pq5q8hrnea88t
    IdentityStatusEnum:
      type: string
      enum:
        - INITIATED
        - PENDING
        - OPENED
        - BLOCKED
        - CLOSED
        - INIBLOCKED
      x-stoplight:
        id: b1eowyqr8le1k
    IdentityCollection:
      description: Sorted and paginated list of Identities
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of Identities
              items:
                $ref: '#/components/schemas/Identity'
      x-stoplight:
        id: cknk7jg3wcjia
    IdentityCreationRequest:
      type: object
      description: An Identity creation form
      required:
        - legalType
        - kyc
      properties:
        legalType:
          $ref: '#/components/schemas/LegalType'
        kyc:
          $ref: '#/components/schemas/Kyc'
        profileId:
          $ref: '#/components/schemas/ProfileId'
        externalId:
          $ref: '#/components/schemas/ExternalId'
        distributorId:
          $ref: '#/components/schemas/DistributorId'
        relations:
          $ref: '#/components/schemas/CreateIdentityRelationCollection'
      x-stoplight:
        id: 2rsn83wdncae2
    IdentityMigrationRequest:
      type: object
      description: An Identity migration form
      required:
        - legalType
        - kyc
        - status
        - profileId
      properties:
        legalType:
          $ref: '#/components/schemas/LegalType'
        kyc:
          $ref: '#/components/schemas/Kyc'
        profileId:
          $ref: '#/components/schemas/ProfileId'
        externalId:
          $ref: '#/components/schemas/ExternalId'
        distributorId:
          $ref: '#/components/schemas/DistributorId'
        relations:
          $ref: '#/components/schemas/CreateIdentityRelationCollection'
        creationDate:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/IdentityStatusEnum'
      x-stoplight:
        id: 4pniszznhmzi4
    Identity:
      type: object
      description: An Identity
      required:
        - id
        - legalType
        - kyc
        - role
        - creationDate
        - updateDate
      properties:
        id:
          $ref: '#/components/schemas/IdentityId'
        legalType:
          $ref: '#/components/schemas/LegalType'
        kyc:
          $ref: '#/components/schemas/Kyc'
        profileId:
          $ref: '#/components/schemas/ProfileId'
        distributorId:
          $ref: '#/components/schemas/DistributorId'
        externalId:
          $ref: '#/components/schemas/ExternalId'
        role:
          $ref: '#/components/schemas/IdentityRole'
        creationDate:
          type: string
          format: date-time
          description: Identity's creation date
        updateDate:
          type: string
          format: date-time
          description: Identity's last update date
        kycExpirationDate:
          format: date-time
          description: Identity's closest KYC expiration date
      x-stoplight:
        id: 3hcc2bydx1ui8
    IdentityUpdateRequest:
      type: object
      description: Identity update form
      properties:
        kyc:
          $ref: '#/components/schemas/Kyc'
        externalId:
          $ref: '#/components/schemas/ExternalId'
      x-stoplight:
        id: pcjj5iw2nv477
    Phone:
      type: string
      description: |
        Phone number in international format (E.164)

        (without plus sign, dashes or spaces)
      example: '33612354678'
      pattern: '^[0-9]+$'
      x-stoplight:
        id: 2c7uupfuws1ze
    EmailText:
      type: string
      description: Email address
      example: xxx@domain.sub
      format: email
      x-stoplight:
        id: pgh54psgbmltf
    ActivatePhonePairingParam:
      type: object
      description: Validation code is required to validate the pairing of the phone number to identity
      required:
        - validationCode
        - phoneNumber
      properties:
        validationCode:
          type: string
          description: Validation code sent by sms
          example: '123565'
        phoneNumber:
          $ref: '#/components/schemas/Phone'
      x-stoplight:
        id: 7t1wzq4vquhnn
    ChangeIdentityStatusActionRequest:
      type: object
      required:
        - status
        - reason
      properties:
        status:
          $ref: '#/components/schemas/IdentityStatusEnum'
        reason:
          type: string
          description: Reason that justify the to Identity status change
      x-stoplight:
        id: bedxua8bu1bwm
    RecipientId:
      type: string
      description: Recipient ID
      example: REC2
      x-stoplight:
        id: 29kp3g32gozdr
    RecipientName:
      type: string
      description: 'Recipient alias, if any'
      example: John Doe
      x-stoplight:
        id: z9bfjal6i95vo
    RecipientExternalReference:
      type: string
      description: 'Recipient external reference, if any'
      example: EXT_REFERENCE_1
      x-stoplight:
        id: y1xre2cf5at2o
    RecipientCollection:
      description: Sorted and paginated list of recipients
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of recipients
              items:
                $ref: '#/components/schemas/Recipient'
      x-stoplight:
        id: y0gtiqnw82odg
    RecipientCreateRequest:
      type: object
      properties:
        name:
          type: string
          description: recipient's new name
        externalReference:
          type: string
          description: recipient's external reference
        accountReference:
          type: string
          description: 'account reference (if used, BIC is optional. Cannot be used along with phone number or IBAN + BIC)'
        phone:
          type: integer
          description: recipient's phone number (cannot be used with IBAN + BIC or Account Reference + BIC)
        iban:
          type: string
          description: 'recipient''s IBAN (if used, should include BIC. Cannot be used along with phone number or Account Reference + BIC)'
        bic:
          type: string
          description: 'recipient''s BIC (if used, should include IBAN or Account Reference. Cannot be used along with phone number)'
        postalAddress:
          $ref: '#/components/schemas/PostalAddress'
      x-stoplight:
        id: b3yf6e07jdp1l
    RecipientCreateResponse:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        externalReference:
          type: string
          example: external_reference
        accountReference:
          type: string
          example: account_reference
        phone:
          type: integer
          example: 33601020304
        iban:
          type: string
          example: FR7630002032531234567890168
        bic:
          type: string
          description: CRLYFRPPXXX
        postalAddress:
          $ref: '#/components/schemas/PostalAddress'
        state:
          type: string
          enum:
            - Pending
            - Opened
          description: Pending
        strongAuthentication:
          type: object
          description: Contains the details of the strong customer authentication linked to the recipient creation. Please note that it is not active for internal recipients created with a phone number.
          required:
            - authenticationMode
            - strongAuthenticationToken
            - expirationDate
            - links
          properties:
            authenticationMode:
              type: string
              description: SCAP_OTP_SMS
            strongAuthenticationToken:
              type: string
              description: token-id
            expirationDate:
              type: string
              format: date-time
              example: '2024-02-06T16:32:00.7656563Z'
            links:
              type: array
              description: list of links for the SCA according to auth methods
              items:
                type: object
      required:
        - state
        - strongAuthentication
      x-stoplight:
        id: 4zxjsnfvcq8ai
    CreationErrorInvalidPhoneNumber:
      type: object
      properties:
        code:
          example: 11200
        message:
          example: Invalid phone number
      x-stoplight:
        id: qwt91zpabux1j
    CreationErrorDetailsRequired:
      type: object
      properties:
        code:
          example: 61901
        message:
          example: 'Phone number, IBAN or Account reference should be filled'
      x-stoplight:
        id: 37lz6fq7ht3z3
    CreationErrorRequiresIBANorAccount:
      type: object
      properties:
        code:
          example: 61911
        message:
          example: Only the combination IBAN + BIC or Account number + BIC is available
      x-stoplight:
        id: y54cwqqmtf5ne
    CreationErrorNameTooLong:
      type: object
      properties:
        code:
          example: 69409
        message:
          example: Name or external reference too long
      x-stoplight:
        id: jfhq0ltcbg8sw
    CreationErrorUnknownBIC:
      type: object
      properties:
        code:
          example: 69405
        message:
          example: BIC \"BOSZDJQEDHUEF\" is unknown
      x-stoplight:
        id: jcip5oejim090
    CreationErrorInvalidAddress:
      type: object
      properties:
        code:
          example: 69410
        message:
          example: Invalid Address
      x-stoplight:
        id: l2td8i92ixjrh
    RecipientUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: recipient's new name
        externalReference:
          type: string
          description: recipient's new external reference
      x-stoplight:
        id: lc8yazhj86q0i
    IdentityStatusList:
      type: object
      properties:
        items:
          type: array
          description: List of identity statuses
          items:
            $ref: '#/components/schemas/IdentityStatus'
      x-stoplight:
        id: m56u1grky4djc
    AccountCollection:
      description: Sorted and paginated list of accounts
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              items:
                $ref: '#/components/schemas/Link'
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1?limit=20&offset=40'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1?limit=20&offset=60'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1?limit=20&offset=20'
        - type: object
          properties:
            items:
              type: array
              description: Collection of accounts
              items:
                $ref: '#/components/schemas/Account'
      x-stoplight:
        id: txrm282epj0d8
    TaxProfileCollectionResponse:
      type: object
      properties:
        items:
          type: array
          description: list of tax profile
          items:
            $ref: '#/components/schemas/TaxProfile'
        count:
          type: integer
          description: the total count of tax profile in collection
          minimum: 0
        offset:
          type: integer
          description: Pagination start (from 0)
          minimum: 0
          default: 0
        limit:
          type: integer
          description: Number of results to display (default 20)
          minimum: 0
          default: 20
        sort:
          type: string
          description: Field to define sort order
          default: id
      x-stoplight:
        id: ehj2wfutvtkef
    PopulationCollectionResponse:
      type: object
      properties:
        items:
          type: array
          description: list of available population
          items:
            $ref: '#/components/schemas/Population'
      x-stoplight:
        id: agjt5ryvvtmg5
    EmployersCollectionResponse:
      type: object
      properties:
        items:
          type: array
          description: list of employers
          items:
            $ref: '#/components/schemas/Employers'
        count:
          type: integer
          description: the total count of employers in collection
          minimum: 0
        offset:
          type: integer
          description: Pagination start (from 0)
          minimum: 0
          default: 0
        limit:
          type: integer
          description: Number of results to display (default 20)
          minimum: 0
          default: 20
        sort:
          type: string
          description: Field to define sort order
          default: id
      x-stoplight:
        id: 7khtjp18oz73o
    DocumentCreateRequest:
      type: object
      required:
        - type
        - content
      properties:
        ownerId:
          $ref: '#/components/schemas/IdentityId'
        type:
          $ref: '#/components/schemas/DocumentCode'
        description:
          type: string
          description: Custom description
          example: 'Government ID user #XXX'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        directory:
          type: string
        content:
          description: Document file content encoded in base64 format
          type: string
          example: TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQK
      x-stoplight:
        id: t86dyjvy0l31e
    Document:
      type: object
      x-stoplight:
        id: t7fgzy99io80e
      required:
        - id
        - ownerId
        - status
        - type
        - links
        - directory
      properties:
        id:
          $ref: '#/components/schemas/ReadOnlyDocumentId'
        ownerId:
          $ref: '#/components/schemas/ReadOnlyIdentityId'
        status:
          $ref: '#/components/schemas/DocumentStatus'
        type:
          $ref: '#/components/schemas/DocumentCode'
        description:
          type: string
          description: Custom description
          example: 'Government ID user #XXX'
        uploadDate:
          type: string
          format: date-time
          readOnly: true
        lastUpdateDate:
          type: string
          format: date-time
          readOnly: true
        metadata:
          discriminator:
            propertyName: type
            mapping:
              PORTRAIT: '#/components/schemas/PortraitMetadata'
              INCORPORATION_CERTIFICATE: '#/components/schemas/IncorporationCertificateMetadata'
              PROOF_OF_ACTIVITY: '#/components/schemas/ProofOfActivityMetadata'
              PROOF_OF_BANK_DOMICILIATION: '#/components/schemas/ProofOfBankDomiciliationMetadata'
              PROOF_OF_IDENTITY: '#/components/schemas/ProofOfIdentityMetadata'
              PROOF_OF_RESIDENCE: '#/components/schemas/ProofOfResidenceMetadata'
              PROOF_OF_RESOURCES: '#/components/schemas/ProofOfResourcesMetadata'
              PROOF_OF_TAXATION: '#/components/schemas/ProofOfTaxationMetadata'
              SIGNATURE: '#/components/schemas/SignatureMetadata'
              OTHER_DOCUMENTS_LEGAL_ENTITY: '#/components/schemas/OtherMetadata'
              OTHER_DOCUMENTS: '#/components/schemas/OtherMetadata'
          oneOf:
            - $ref: '#/components/schemas/IncorporationCertificateMetadata'
            - $ref: '#/components/schemas/PortraitMetadata'
            - $ref: '#/components/schemas/ProofOfActivityMetadata'
            - $ref: '#/components/schemas/ProofOfBankDomiciliationMetadata'
            - $ref: '#/components/schemas/ProofOfIdentityMetadata'
            - $ref: '#/components/schemas/ProofOfResidenceMetadata'
            - $ref: '#/components/schemas/ProofOfResourcesMetadata'
            - $ref: '#/components/schemas/ProofOfTaxationMetadata'
            - $ref: '#/components/schemas/SignatureMetadata'
            - $ref: '#/components/schemas/OtherMetadata'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        links:
          type: array
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `[DocumentType]-content` [GET] Load the document content. DocumentType is the document's type in lower-case.
              * `[DocumentType]-preview` [GET] Get a small sized preview of the document content. DocumentType is the document's type in lower-case.
          example:
            - rel: '[DocumentType]-content'
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/documents/42/content'
            - rel: '[DocumentType]-preview'
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/documents/42/preview'
          items:
            $ref: '#/components/schemas/Link'
          readOnly: true
        directory:
          type: string
          x-stoplight:
            id: mu16td8h6xjcj
    DocumentId:
      type: string
      example: DOC123
      description: document id
      x-stoplight:
        id: g0zamijrg7lsi
    DocumentCollection:
      description: Sorted and paginated list of documents
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of documents
              items:
                $ref: '#/components/schemas/Document'
      x-stoplight:
        id: j1ixd9hiiyutw
    KycFieldData:
      type: object
      x-stoplight:
        id: e178j1uh99goi
      required:
        - id
        - dataType
        - label
      properties:
        id:
          type: string
          description: Identifier of the additional data
          example: MyData
        dataType:
          type: string
          description: Identifier of the additional data
          example: MyData
        label:
          type: string
          description: Label of the additional data
          example: My custom data
        legalEntity:
          type: string
          enum:
            - LEGAL_ENTITY
            - NATURAL_PERSON
          description: Additional data legal type. Empty for both.
          example: LEGAL_ENTITY
        parameters:
          type: object
          description: Additional data parameters
          additionalProperties:
            type: string
          example:
            MIN_LENGTH: '5'
            MAX_LENGTH: '10'
      title: Additional data
      description: ''
    AdditionalData:
      type: object
      required:
        - id
        - format
        - isSearchable
        - isPersonalData
        - isSystemField
        - labels
      properties:
        id:
          type: string
          description: Identifier of the additional data field
          example: MyData
          x-stoplight:
            id: 26dldjs1b73cf
        format:
          $ref: '#/components/schemas/FieldType'
          x-stoplight:
            id: yvxfn8na31oej
        legalType:
          type: string
          enum:
            - LEGAL_ENTITY
            - NATURAL_PERSON
          description: Additional data legal type. Empty for both.
          example: LEGAL_ENTITY
          x-stoplight:
            id: b6f2wabgxim51
        isSearchable:
          type: boolean
          x-stoplight:
            id: lwbvc75b16nhd
        isPersonalData:
          type: boolean
          x-stoplight:
            id: xofzp4g9mdvil
        isSystemField:
          type: boolean
          x-stoplight:
            id: lxu529pis9bo6
        labels:
          $ref: '#/components/schemas/Translations'
          description: Label of the additional data
          x-stoplight:
            id: xhv69ti6rw2rc
        options:
          type: array
          x-stoplight:
            id: 8q5365g5i5osb
          items:
            x-stoplight:
              id: xillsxibtiamq
            type: object
            properties:
              id:
                type: string
                x-stoplight:
                  id: s36usc45hw5vz
              label:
                $ref: '#/components/schemas/Translations'
                x-stoplight:
                  id: qr74yu5qizlbs
      title: Additional data
      x-stoplight:
        id: ilr4mcz4i7vw6
    AdditionalDataConfiguration:
      type: object
      x-stoplight:
        id: sxp3eh0g8zmfd
      required:
        - code
        - format
        - isSearchable
        - isPersonalData
        - isSystemField
        - labels
        - parameters
      properties:
        code:
          type: string
          description: Identifier of the additional data field
          example: MyData
          x-stoplight:
            id: 26dldjs1b73cf
        legalType:
          type: string
          enum:
            - LEGAL_ENTITY
            - NATURAL_PERSON
          description: Additional data legal type. Empty for both.
          example: LEGAL_ENTITY
          x-stoplight:
            id: b6f2wabgxim51
        format:
          $ref: '#/components/schemas/FieldType'
          x-stoplight:
            id: yvxfn8na31oej
        isSearchable:
          type: boolean
          x-stoplight:
            id: lwbvc75b16nhd
        isPersonalData:
          type: boolean
          x-stoplight:
            id: xofzp4g9mdvil
        isSystemField:
          type: boolean
          x-stoplight:
            id: lxu529pis9bo6
        labels:
          $ref: '#/components/schemas/Translations'
          description: Label of the additional data
          x-stoplight:
            id: xhv69ti6rw2rc
        parameters:
          $ref: '#/components/schemas/AdditionalDataFieldParameters'
          description: Additional data parameters
        accountingMappingCriterion:
          type: boolean
          x-stoplight:
            id: otcsuups70hsm
          description: available only in some platform configurations
        optionsTranslations:
          type: object
          x-stoplight:
            id: q54273jro2ocy
          description: 'only present if parameters are of type `WHITE_LIST`, each element is an value of `WHITE_LIST`'
          additionalProperties:
            $ref: '#/components/schemas/Translations'
            x-stoplight:
              id: mwstznn7owjnl
        autocompletes:
          type: array
          x-stoplight:
            id: uy33023txj90v
          description: only present if format of type `AUTCOMPLETE_TEXT`
          items:
            $ref: '#/components/schemas/Autocomplete'
            x-stoplight:
              id: 13arj78sodyzl
    AdditionalDataPackage:
      type: object
      required:
        - id
        - name
        - legalType
        - fields
      properties:
        id:
          type: string
          description: Identifier
          example: '1'
        name:
          type: string
          example: Doe
        legalType:
          type: string
          enum:
            - NATURAL_PERSON
            - LEGAL_ENTITY
          example: NATURAL_PERSON
        fields:
          type: array
          description: additional data fields
          items:
            $ref: '#/components/schemas/AdditionalDataPackageField'
      x-stoplight:
        id: w7c85nfcrscki
    AdditionalDataPackageCollection:
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              items:
                $ref: '#/components/schemas/Link'
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1?limit=20&offset=40'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1?limit=20&offset=60'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1?limit=20&offset=20'
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              description: additional data packages
              items:
                $ref: '#/components/schemas/AdditionalDataPackage'
      x-stoplight:
        id: 2g935zx32j89d
    DocumentTypeCollection:
      description: Sorted and paginated list of Document type
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: Collection of Document type
              items:
                $ref: '#/components/schemas/DocumentType'
      x-stoplight:
        id: ju4sieu54y41u
    DocumentCode:
      type: string
      description: Document code
      examples:
        - PORTRAIT
        - SIGNATURE
        - PROOF_OF_RESIDENCE
        - PHOTO
        - PROOF_OF_IDENTITY
        - OTHER_DOCUMENTS
      x-stoplight:
        id: coazmtcoif6zh
    DocumentType:
      type: object
      properties:
        code:
          type: string
          example: PASPOR
        name:
          type: string
          example: Passport
        legalType:
          type: string
          enum:
            - NATURAL_PERSON
            - LEGAL_ENTITY
        originType:
          type: string
          enum:
            - PREDEFINED
            - CUSTOM
          example: CUSTOM
        isReceived:
          type: boolean
          example: false
        isGenerated:
          type: boolean
          example: false
        authorizedFormats:
          type: array
          example:
            - image/jpeg
            - image/png
            - image/gif
            - application/pdf
          items:
            type: string
            enum:
              - image/jpeg
              - image/png
              - image/gif
              - application/pdf
        mandatoryPages:
          type: integer
          example: 1
        optionnalPages:
          type: integer
          example: 0
      x-stoplight:
        id: 39bamavh1ui0k
    DocumentPackage:
      type: object
      properties:
        code:
          type: string
          example: ENROL1
        name:
          type: string
          example: Package for enrollment
        legalType:
          type: string
          enum:
            - NATURAL_PERSON
            - LEGAL_ENTITY
          example: NATURAL_PERSON
      x-stoplight:
        id: 4811qf1s3apgf
    DocumentPackageCollection:
      description: Sorted and paginated list of Document package
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: Collection of Document package
              items:
                $ref: '#/components/schemas/DocumentPackage'
      x-stoplight:
        id: wnw0mbhee2sk4
    ScoreCreate:
      type: object
      required:
        - code
        - name
        - type
      properties:
        code:
          $ref: '#/components/schemas/ScoreCode'
        name:
          $ref: '#/components/schemas/Name'
        type:
          description: Whether the score is internal or external to CBS
          type: string
          enum:
            - INTERNAL
            - EXTERNAL
        limit:
          $ref: '#/components/schemas/Limit'
        threshold:
          type: object
          properties:
            accept:
              type: integer
              example: 750
              description: From this score it is accepted (must be superior to refuse)
            refuse:
              type: integer
              example: 149
              description: From this score it is refused (must be inferior to max)
        steps:
          type: array
          description: List of steps
          items:
            $ref: '#/components/schemas/Step'
        variables:
          type: array
          description: The list of variables that will allow the calculation of the score
          items:
            $ref: '#/components/schemas/Variable'
        isInverted:
          type: boolean
          example: true
          description: 'If set to true, a high score value is considered bad, if set to false, a low score value is considered bad'
      x-stoplight:
        id: wdhrgl6ost2nd
    ScoreOutput:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ScoreCode'
        name:
          $ref: '#/components/schemas/Name'
        type:
          description: Whether the score is internal or external to CBS
          type: string
          enum:
            - INTERNAL
            - EXTERNAL
        limit:
          $ref: '#/components/schemas/Limit'
        threshold:
          type: object
          properties:
            accept:
              type: integer
              example: 750
              description: From this score it is accepted (must be superior to refuse)
            refuse:
              type: integer
              example: 149
              description: From this score it is refused (must be inferior to max)
        steps:
          type: array
          description: List of steps
          items:
            $ref: '#/components/schemas/Step'
        links:
          type: array
          description: What the score is linked to
          items:
            $ref: '#/components/schemas/ScoreLink'
        variables:
          type: array
          description: The list of variables that will allow the calculation of the score
          items:
            $ref: '#/components/schemas/Variable'
        isInverted:
          type: boolean
          example: true
          description: 'If set to true, a high score value is considered bad, if set to false, a low score value is considered bad'
      x-stoplight:
        id: 9xkqojg1gw2s7
    ScoreEdit:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
        limit:
          $ref: '#/components/schemas/Limit'
        threshold:
          type: object
          properties:
            accept:
              type: integer
              example: 750
              description: From this score it is accepted (must be superior to refuse)
            refuse:
              type: integer
              example: 149
              description: From this score it is refused (must be inferior to max)
        steps:
          type: array
          description: List of steps
          items:
            $ref: '#/components/schemas/Step'
        variables:
          type: array
          description: The list of variables that will allow the calculation of the score
          items:
            $ref: '#/components/schemas/Variable'
      x-stoplight:
        id: 1f2scqzqxf5pn
    ScoreLink:
      type: object
      required:
        - type
        - id
      properties:
        type:
          type: string
          description: The kind of thing linked to the score
          example: product
        id:
          type: string
          description: The ID of the thing linked to the score
          example: PRO123
      x-stoplight:
        id: z2kvqa2uodu9j
    ScoreResultCreate:
      type: object
      required:
        - scoreCode
        - calculationParameters
      properties:
        scoreCode:
          type: string
          description: Code of the score
          example: SCORE_CREDIT_LOAN
        calculationParameters:
          description: List of calculation parameters. Each calculation parameter name matches a score variable. Each calculation parameter data matches a score value.
          items:
            type: object
            required:
              - name
              - data
            properties:
              name:
                type: string
                example: MARITAL_STATUS
                description: The parameter name. It should match a score variable.
              data:
                example: MARRIED
                description: The parameter data. It should match a score value.
      x-stoplight:
        id: hyojguiq25idl
    ScoreResultOutput:
      type: object
      required:
        - id
        - calculatedAt
        - finalScore
        - intermediateResults
        - matchingStep
        - scoreLimits
      properties:
        id:
          $ref: '#/components/schemas/ScoreResultId'
        calculatedAt:
          type: string
          format: ATOM
          description: The date time the result was calculated
          example: '2004-02-12 15:19:21+01:00'
        finalScore:
          $ref: '#/components/schemas/ScoreFinalValue'
        scoreLimits:
          properties:
            min:
              type: integer
              description: The score minimum's limit
              example: 100
            max:
              type: integer
              description: The score maximum's limit
              example: 800
          description: The score's limits
        thresholds:
          properties:
            refuse:
              type: integer
              description: 'Under or equal this bound, the refuse threshold is reached'
              example: 200
            accept:
              type: integer
              description: 'Above or equal this bound, the acceptance threshold is reached'
              example: 600
          description: The score's thresholds
        matchingStep:
          type: object
          description: The score's step matching the calculation result
          properties:
            code:
              type: string
              description: The step's code
              example: CRDT-1
            translations:
              type: object
              description: The translations of the step
              additionalProperties:
                type: string
                description: The locale of the step
              example:
                fr_FR: Correct
                en_US: Fair
            min:
              type: integer
              description: The step's minimal score
              example: 200
            max:
              type: integer
              description: The step's maximal score
              example: 500
            color:
              type: string
              description: The step's color
              example: '#f0c2e8'
        intermediateResults:
          type: array
          description: The score of each calculation parameter
          items:
            type: object
            properties:
              calculationParameter:
                type: object
                description: The calculation parameter that what given as input
                properties:
                  name:
                    type: string
                    example: MARITAL_STATUS
                    description: The calculation parameter name that what given as input
                  data:
                    type: string
                    example: MARRIED
                    description: The calculation parameter data that what given as input
              intermediateScore:
                type: integer
                description: The score for this calculation parameter
                example: 350
              matchedVariable:
                type: boolean
                description: Does the given calculation parameter matched a variable in the score?
                example: true
              matchedValue:
                type: boolean
                description: Does the given calculation parameter matched a value in the score?
                example: true
              variableTranslations:
                type: object
                description: The translations of the variable's name matching the calculation parameter
                additionalProperties:
                  type: string
                  description: The locale of the variable's name
                example:
                  fr_FR: Statut marital
                  en_US: Marital status
              valueTranslations:
                type: object
                description: The translations of the value that matched the calculation parameter in case of a list value
                additionalProperties:
                  type: string
                  description: The locale of the value
                example:
                  fr_FR: Marié
                  en_US: Married
      x-stoplight:
        id: vg8uz96vx6grf
    VelocityBatchId:
      type: integer
      example: 1
      description: ID of a Velocity batch.
      x-stoplight:
        id: 0ea2xq6drsrho
    VelocityRuleId:
      type: integer
      example: 1
      description: ID of a Velocity rule.
      x-stoplight:
        id: v34k5rxspckm1
    VelocityBatchWithRulesCollection:
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              items:
                $ref: '#/components/schemas/Link'
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/velocities?limit=20&offset=40&sort=example_sorting_parameter'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/velocities?limit=20&offset=60&sort=example_sorting_parameter'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/velocities?limit=20&offset=20&sort=example_sorting_parameter'
        - type: object
          properties:
            items:
              type: array
              description: Collection of VelocityBatchWithRules
              items:
                $ref: '#/components/schemas/VelocityBatchWithRules'
      x-stoplight:
        id: jvrskkmej5plk
    RelationNatureId:
      type: string
      description: Nature of the relation
      example: BOARD_MEMBER
      x-stoplight:
        id: f5d1l250u4dx5
    OperationId:
      type: string
      readOnly: true
      description: Operation unique identifier
      x-stoplight:
        id: 9hfc6iinj3cpr
    OperationTypeId:
      type: string
      description: Operation type identifier
      x-stoplight:
        id: 2wu2h09pv3b0q
    Media:
      description: Available media channels
      type: string
      enum:
        - SMS
        - USSD
        - POS
        - WEB
        - BANK
        - IVR
        - API
        - APP
        - ONLINE
        - ALL
        - UNKNOWN
      example: POS
      x-stoplight:
        id: 385s8tyz4foxa
    Amount:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/AmountValue'
        currency:
          $ref: '#/components/schemas/Currency'
        display:
          type: string
          example: '13,37 €'
      x-stoplight:
        id: cu4s4iacl1yzv
    ContributorRole:
      type: string
      description: Contributor's role in contribution
      enum:
        - INITIATOR
        - RECIPIENT
        - INTERMEDIARY
        - ACCOUNT_OWNER
      x-stoplight:
        id: pnafiu3xnfldm
    FormConfiguration:
      type: object
      required:
        - code
        - label
        - legalType
        - userProfile
        - kycProfile
        - active
        - attribution
        - steps
      properties:
        code:
          type: string
          description: Code of the form configuration
          example: FORM_FOR_ONBOARDING
        label:
          type: string
          description: Description of the form configuration
          example: Valid onboarding form
        legalType:
          $ref: '#/components/schemas/LegalType'
        userProfile:
          type: object
          properties:
            id:
              type: integer
              example: 1
            label:
              type: string
              example: My user profile
            type:
              type: string
              example: Client
          description: User profile of the form configuration
        kycProfile:
          type: object
          properties:
            id:
              type: integer
              example: 1
            label:
              type: string
              example: My user profile
            legalType:
              $ref: '#/components/schemas/LegalType'
          description: Kyc profile of the form configuration
        active:
          type: boolean
          description: Is form active or not
          example: true
        attribution:
          type: string
          enum:
            - CREDIT_REQUEST
            - ONBOARDING
        steps:
          type: array
          description: Steps of the form configuration
          items:
            type: object
            properties:
              inputs:
                type: array
                description: List of steps inputs
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Id of the step
                      example: 12
                    name:
                      type: string
                      description: Name of the input / Id of the Kyc (FIELD) / Code of the document type (DOCUMENT)
                      example: My input
                    inputType:
                      type: string
                      enum:
                        - FIELD
                        - DOCUMENT
                    type:
                      $ref: '#/components/schemas/InputType'
                    displayOrder:
                      type: integer
                      description: Display order
                      example: 1
                    mandatory:
                      type: boolean
                      description: Is input mandatory
                      example: false
                    label:
                      type: string
                      description: label
                    inputData:
                      $ref: '#/components/schemas/FormConfigurationInputData'
              label:
                type: string
                description: Label of the step
                example: My first step
              displayOrder:
                type: string
                description: Label of the step
                example: My first step
              id:
                type: integer
                description: Id of the step
                example: 1
      x-stoplight:
        id: czl1bn5qdroa6
    FormConfigurationWithoutSteps:
      type: object
      required:
        - code
        - label
        - legalType
        - userProfile
        - kycProfile
        - active
        - type
        - steps
      properties:
        code:
          type: string
          description: Code of the form configuration
          example: FORM_FOR_ONBOARDING
        label:
          type: string
          description: Description of the form configuration
          example: Valid onboarding form
        legalType:
          $ref: '#/components/schemas/LegalType'
        userProfile:
          type: object
          properties:
            id:
              type: integer
              example: 1
            label:
              type: string
              example: My user profile
            type:
              type: string
              example: Client
          description: User profile of the form configuration
        kycProfile:
          type: object
          properties:
            id:
              type: integer
              example: 1
            label:
              type: string
              example: My user profile
            legalType:
              $ref: '#/components/schemas/LegalType'
          description: Kyc profile of the form configuration
        active:
          type: boolean
          description: Is form active or not
          example: true
        attribution:
          type: string
          enum:
            - CREDIT_REQUEST
            - ONBOARDING
      x-stoplight:
        id: oyw1e17tbr7s1
    FormConfigurationSession:
      type: object
      required:
        - code
        - status
        - sessionId
        - label
        - attribution
        - partyId
        - input
      properties:
        code:
          type: string
          description: Code of the form configuration
          example: FORM_FOR_ONBOARDING
        sessionId:
          type: string
          description: Id of the session fill form
        label:
          type: string
          description: Description of the form configuration
          example: Valid onboarding form
        attribution:
          type: string
          enum:
            - CREDIT_REQUEST
            - ONBOARDING
        status:
          type: string
          enum:
            - STARTED
            - SUBMITTED
        partyId:
          type: string
          description: Id of the party
        input:
          $ref: '#/components/schemas/InputCollection'
      x-stoplight:
        id: t2j7ea8h3lsh1
    InputValues:
      type: object
      description: Form values associated to the corresponding input id
      additionalProperties:
        anyOf:
          - type: string
          - type: number
          - type: integer
          - type: boolean
          - type: array
            items: {}
          - type: object
      example:
        '114':
          creditFamilySituation: Married
          creditChildren: 1
          creditHouseSituation: owner
          creditSector: Private
          creditWorkSituation: Permanent
        '115':
          '200': doc base 64
          '201': doc base 64
          '202': doc base 64
        StepId1:
          id1: value1
          id2: value2
          id3: value3
        StepId2:
          creditIncome: 4000
          creditExpenses: 300
      x-stoplight:
        id: jb3vlrtlzvwnm
    RelationNatureCollection:
      description: Sorted and paginated list of relation natures
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              items:
                $ref: '#/components/schemas/Link'
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/relation-natures?limit=20&offset=40'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/relation-natures?limit=20&offset=60'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/relation-natures?limit=20&offset=20'
        - type: object
          properties:
            items:
              type: array
              description: collection of relation natures
              items:
                $ref: '#/components/schemas/RelationNature'
      x-stoplight:
        id: f4furumkqkyo0
    TransactionId:
      type: string
      description: transaction id
      example: TRX123
      x-stoplight:
        id: b26ur9bqzzsev
    UpdateTransactionExternalDataRequest:
      type: object
      properties:
        externalId:
          $ref: '#/components/schemas/TransactionExternalId'
        externalData:
          $ref: '#/components/schemas/ExternalData'
      x-stoplight:
        id: 2cb0srwdbs9ti
    AccountExternalId:
      type: string
      description: External id (from the calling system)
      example: EXT123456789
      x-stoplight:
        id: vbtu49snhlx7u
    ProductId:
      type: string
      description: product identifier.
      example: PRO123
      x-stoplight:
        id: 8umrw2ionnley
    UserId:
      type: integer
      description: user identifier
      example: 42
      x-stoplight:
        id: 7oj1vdjw6c36h
    AccountStatus:
      type: string
      description: The account status
      readOnly: true
      enum:
        - OPENED
        - CLOSED
        - BLOCKED
        - DEBIT_BLOCKED
        - CREDIT_BLOCKED
      x-stoplight:
        id: xnabsroxdwst3
    AccountMigrationStatus:
      type: string
      description: The account status
      enum:
        - OPENED
        - CLOSED
        - BLOCKED
        - DEBIT_BLOCKED
        - CREDIT_BLOCKED
      x-stoplight:
        id: cqor1t58486t1
    AccountType:
      type: string
      description: Account Type
      enum:
        - CURRENT
        - SAVINGS
        - SUB_ACCOUNT
        - DEDICATED
        - MONEYPOT
        - TECHNICAL
      x-stoplight:
        id: woaieaetzm6ni
    Account:
      type: object
      required:
        - id
        - currency
        - ownerName
        - name
        - productId
        - type
        - status
        - balances
        - createdAt
        - lastChangedAt
      properties:
        id:
          $ref: '#/components/schemas/AccountNumber'
        iban:
          $ref: '#/components/schemas/IBAN'
        currency:
          $ref: '#/components/schemas/Currency'
        userId:
          $ref: '#/components/schemas/UserId'
        ownerName:
          type: string
          description: owner Name
          readOnly: true
        name:
          type: string
          description: The account label
          example: 'Current account #123546'
          readOnly: true
        productId:
          $ref: '#/components/schemas/ProductId'
        type:
          $ref: '#/components/schemas/AccountType'
        status:
          $ref: '#/components/schemas/AccountStatus'
        bic:
          allOf:
            - $ref: '#/components/schemas/BIC'
            - readOnly: true
        balances:
          $ref: '#/components/schemas/Iso20022AccountBalances'
        externalReferences:
          type: array
          description: collection of external references
          items:
            $ref: '#/components/schemas/AccountExternalReference'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        externalId:
          $ref: '#/components/schemas/AccountExternalId'
        createdAt:
          type: string
          format: date-time
          readOnly: true
        lastUsedAt:
          type: string
          format: date-time
          readOnly: true
        lastChangedAt:
          type: string
          format: date-time
          readOnly: true
        distributorId:
          type: integer
          x-stoplight:
            id: 6ddgnlcnxrh78
          example: 123
        coOwners:
          type: array
          x-stoplight:
            id: 9oj35nn1muy0y
          items:
            $ref: '#/components/schemas/AccountOwner'
            x-stoplight:
              id: hf8899j0dgakr
        authorizedOverdraft:
          example:
            currency: EUR
            display: '1, 00 €'
            value: 100
            source: Account
          type: object
          readOnly: true
        additionalData:
          $ref: '#/components/schemas/AccountAdditionalData'
      x-stoplight:
        id: a8ydiyag3ti8l
    AccountId:
      type: string
      description: Account identifier
      example: ACC123
      x-stoplight:
        id: bi26hyfusaj8v
    AccountLabel:
      type: string
      description: The label of account
      example: My account
      x-stoplight:
        id: ql33j0480b60x
    StatusChangeReason:
      type: string
      description: Reason for account status change
      example: Account closed
      x-stoplight:
        id: nhe2rpn8p189i
    ContractId:
      type: string
      description: Contract identifier
      example: CON123
      x-stoplight:
        id: 3qgdafni7jxm9
    LinkOrUnlinkDelegateUsersToAccountRequest:
      type: object
      required:
        - type
        - values
      properties:
        type:
          description: Choice between "identity" or "profile"
          default: identity
          type: string
          enum:
            - identity
            - profile
        values:
          type: array
          description: Array of delegate user's Identities or profiles Id
          items:
            oneOf:
              - $ref: '#/components/schemas/IdentityId'
              - $ref: '#/components/schemas/ProfileId'
      x-stoplight:
        id: u0e2f8gr3a8kf
    AccountExternalReference:
      description: An account external reference
      properties:
        type:
          type: string
          description: External reference type
        reference:
          type: string
          description: External reference value
      x-stoplight:
        id: 5hhus6jkl98nb
    PartyExternalReferenceType:
      type: string
      description: Unique identifier of the external partner.
      example: '1'
      x-stoplight:
        id: mb57e6msydfe6
    PartyExternalReferenceValue:
      type: string
      description: Identifier of the party in the partner system.
      example: '1'
      x-stoplight:
        id: 86dcemhs2pf9j
    StatusUpdateReason:
      type: object
      properties:
        reason:
          type: string
          description: Optional reason for account status change
        code:
          type: string
          description: Optional code for account status change
      x-stoplight:
        id: hwjpr11rj335v
    AccountStatementCollection:
      description: Paginated list of account statements
      allOf:
        - type: object
          properties:
            items:
              type: array
              description: Paginated list of account statements
              items:
                $ref: '#/components/schemas/AccountStatement'
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              items:
                $ref: '#/components/schemas/Link'
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/accounts/10000000157/statements?limit=20&offset=40'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/accounts/10000000157/statements?limit=20&offset=60'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/accounts/10000000157/statements?limit=20&offset=20'
      x-stoplight:
        id: squtjrlp5ntqd
    AccountStatementId:
      type: string
      description: Account statement identifier
      example: ACCSTAT12
      x-stoplight:
        id: hlsps5wt9n82f
    CardDetail:
      type: object
      properties:
        encryptedPan:
          type: string
          example: '73894094'
        encryptedCvv:
          type: string
          example: ae739mepc
        expirationMonth:
          type: string
          example: '11'
        expirationYear:
          type: string
          example: '26'
        contractReference:
          type: string
          x-stoplight:
            id: i1rs05s5i8tpb
          description: Contract reference
          example: 66ed4dcd560df
      x-stoplight:
        id: dlkme82mtnl2e
    CardImage:
      type: object
      properties:
        content:
          type: string
          example: dGVzdA==
      x-stoplight:
        id: sdxuuz143ovz7
    TransactionExternalId:
      type: string
      description: Client custom data (external) for TransactionId
      example: EXT123456789
      x-stoplight:
        id: xu7gc05mjy3yh
    TransactionType:
      type: string
      readOnly: true
      description: Transaction type
      enum:
        - ACCOUNT_TO_ACCOUNT
        - ON_US_DIRECT_DEBIT
        - ACCOUNT_TO_EXTERNAL_TRF
        - ACCOUNT_TO_TRANSIT
        - ADJUSTMENT
        - BANK_TO_WALLET
        - BLOCK_ACCOUNT
        - BUY_DEPOSIT
        - CARD
        - CASH_TO_EXTERNAL_TRF
        - CASHIN
        - CASHIN_TO_TRANSIT
        - CASHOUT
        - CASHOUT_FROM_EXTERNAL_TRF
        - CASHOUT_FROM_TRANSIT
        - CLOSE_ACCOUNT
        - DEPOSIT
        - DISTRIBUTOR_POSTING
        - EXTERNAL
        - EXTERNAL_TO_MONEYPOT
        - ETM_SCREENING
        - ETM_SCREENING_SUCCESS
        - ETM_SCREENING_FAIL
        - ETM_SCREENING_FAIL_TO_SUCCESS
        - EXTERNAL_TRF_TO_ACCOUNT
        - EXTERNAL_TRF_WITHDRAW
        - FEES_PAYMENT
        - FEES_REFUND
        - INVOICE_GENERATION
        - MAINTENANCE_PAYMENT
        - ONLINE_PAYMENT
        - OPEN_ACCOUNT
        - OVERBALANCE
        - PAYBILL_ACCOUNT
        - PAYBILL_CASH
        - PAYMENT
        - PAYMENT_FUNDS_RESERVATION
        - POSTING
        - RECHARGE_BALANCE
        - RECHARGE_CREDIT_CARD
        - REVERSAL
        - SALARY_DISBURSEMENT
        - SALARY_TO_ACCOUNT
        - SELL_DEPOSIT
        - SETTLEMENT_TO_ACCOUNT
        - SETTLEMENT_TO_CASH
        - TRANSIT_TO_ACCOUNT
        - UNBLOCK_ACCOUNT
        - WALLET_TO_BANK
        - WALLET_TO_BANK_ARCHIVE
        - MAD_APPROVAL
        - MAD_REFUSAL
        - MAD_CREATION
        - FUNDS_ISOLATION
        - ACCOUNT_BALANCES_OFFSET
        - ACCOUNT_BALANCES_REVERSAL
      x-stoplight:
        id: 7r3h8u91j26bv
    TransactionCollection:
      description: Sorted and paginated list of account transactions
      allOf:
        - properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
            links:
              type: array
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1?limit=20&offset=40&sort=example_sorting_parameter'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1?limit=20&offset=60&sort=example_sorting_parameter'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1?limit=20&offset=20&sort=example_sorting_parameter'
              items:
                $ref: '#/components/schemas/Link'
              readOnly: true
        - properties:
            items:
              type: array
              description: Collection of account transactions
              items:
                $ref: '#/components/schemas/Transaction'
      type: object
      x-stoplight:
        id: kyt0q6vn35yoi
    Transaction:
      type: object
      required:
        - id
        - type
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        date:
          type: string
          format: date-time
          deprecated: true
          description: replaced by bookingDate
        bookingDate:
          type: string
          format: date-time
          x-stoplight:
            id: 3yio5dg4y8lqk
        valueDate:
          type: string
          format: date
          x-stoplight:
            id: 4nag163314rkk
        type:
          type: object
          required:
            - value
            - label
          properties:
            value:
              $ref: '#/components/schemas/TransactionType'
            label:
              type: string
              example: Transfer to account
        externalId:
          $ref: '#/components/schemas/TransactionExternalId'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        label:
          description: User defined transaction label
          type: string
        description:
          description: Transaction description
          type: string
        shortDescription:
          description: Transaction short description
          type: string
        balance:
          $ref: '#/components/schemas/Amount'
        amount:
          $ref: '#/components/schemas/Amount'
        geolocation:
          $ref: '#/components/schemas/GeoLocation'
        additional:
          description: Additional information on transaction
          type: string
        locked:
          type: boolean
          description: 'If true, spendings details of this transaction can no longer be updated'
        qualified:
          description: Whether the transaction's amount is fully qualified or not. Is only returned if the client has the right to manage spendings
          type: boolean
          example: false
        justified:
          description: Whether the transaction has at least one attachment to justify it. Is only returned if the client has the right to manage spendings
          type: boolean
          example: false
        detailedAccounting:
          type: array
          items:
            $ref: '#/components/schemas/AccountingEntry'
        businessProcessId:
          description: Id of the business process associated with the transaction
          example: 1234
          type: integer
      x-stoplight:
        id: 6jcg5dmuaxnqb
    ScoreCode:
      type: string
      description: Unique code of score
      example: SCORE_CREDIT_LOAN
      x-stoplight:
        id: iy0dbfybr8v89
    IBAN:
      type: string
      description: 'IBAN (International Bank Account Number), e.g. FR791680810000000538'
      example: FR791680810000000538
      x-stoplight:
        id: 6rlgc4gv5jsup
    IbanStructure:
      allOf:
        - type: object
          properties:
            countryCode:
              description: 'Country code, iso 2 digits'
              type: string
              example: FR
            checkDigits:
              description: Check digits
              type: string
              example: '76'
            bankIcc:
              description: Bank identifier
              type: string
              example: '16808'
            branchIcc:
              description: Branch identifier
              type: string
              example: '00001'
            nationalId:
              description: National id
              type: string
              example: '1680800001'
            accountNumber:
              description: Account number
              type: string
              example: '10000276989'
            ribKey:
              description: RIB control key
              type: string
              example: '86'
            totalLength:
              description: Total length
              type: integer
              example: 27
            bic:
              description: BIC
              type: string
              example: GAILFRP1XXX
            institutionName:
              description: Institution Name
              type: string
              example: Institution Name
            serviceContext:
              description: Institution Name
              type: string
              example: SEPA
      x-stoplight:
        id: jfrs7mcdcnr0y
    GeneralAccounts:
      description: Sorted and paginated list of general accounts
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              items:
                $ref: '#/components/schemas/Link'
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1?limit=20&offset=40'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1?limit=20&offset=60'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1?limit=20&offset=20'
        - type: object
          properties:
            items:
              type: array
              description: Collection of general accounts
              items:
                $ref: '#/components/schemas/GeneralAccount'
      x-stoplight:
        id: ub7g0d71e0p80
    PaymentNetworkCollection:
      allOf:
        - type: object
          properties:
            items:
              type: array
              description: List of all activated networks configuration
              items:
                $ref: '#/components/schemas/PaymentNetwork'
      x-stoplight:
        id: ldvjmwddggj7j
    PaymentNetwork:
      type: object
      required:
        - name
        - serviceLevel
        - subnetwork
        - activated
        - identificationMode
        - acceptedAddresses
        - interbankRemittance
        - interbankFiles
        - useTransitAccountOnUs
      properties:
        name:
          type: string
          description: Name
          example: Network ABC
        serviceLevel:
          type: string
          description: Service Level
          example: ABC
        subnetwork:
          $ref: ./Subnetwork.yaml
          x-stoplight:
            id: 47oi3kwuy9qi0
          description: Subnetwork
        activated:
          type: boolean
          description: Whether network is enabled or not
          example: true
        identificationMode:
          type: array
          description: Identification methods of the network
          items:
            type: string
            enum:
              - IBAN
              - PHONE
              - ACCOUNT_NUMBER
              - IDENTITY_ID
            example: PHONE
        acceptedAddresses:
          allOf:
            - $ref: '#/components/schemas/PaymentNetworkAcceptedAddresses'
        accounting:
          allOf:
            - $ref: '#/components/schemas/PaymentNetworkAccounting'
        interbankRemittance:
          allOf:
            - $ref: '#/components/schemas/PaymentNetworkInterbankRemittance'
            - {}
        interbankFiles:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              example: true
            integration:
              type: string
        useTransitAccountOnUs:
          type: boolean
          description: 'If true, transfers to internal creditor will be processed through the transit account for outgoing transfers in two separate accounting operations'
          example: true
      x-stoplight:
        id: kgs62cgmpgr40
    UpdatePaymentNetworkConfiguration:
      type: object
      properties:
        acceptedAddresses:
          allOf:
            - $ref: '#/components/schemas/PaymentNetworkAcceptedAddresses'
        accounting:
          allOf:
            - $ref: '#/components/schemas/PaymentNetworkAccounting'
        interbankRemittance:
          allOf:
            - $ref: '#/components/schemas/PaymentNetworkInterbankRemittance'
            - type: object
        useTransitAccountOnUs:
          type: boolean
          description: 'If true, transfers to internal creditor will be processed through the transit account for outgoing transfers in two separate accounting operations'
          example: true
      x-stoplight:
        id: 7g73p921zyeso
    CheckPaymentNetworkReachability:
      type: object
      properties:
        accountId:
          type: object
          required:
            - type
            - value
          properties:
            type:
              type: string
              enum:
                - IBAN
                - PHONE
                - ACCOUNT_NUMBER
                - IDENTITY_ID
            value:
              type: string
              example: FR7630027160211100000853931
        bankId:
          type: object
          properties:
            type:
              type: string
              example: BIC
            value:
              type: string
              example: BNPAFRPP
      x-stoplight:
        id: 6pf1j3x6e4j60
    InternalId:
      type: string
      description: Internal reference of the customer instruction with the platform
      example: '10027'
      x-stoplight:
        id: zoi7ayusxbihx
    PaymentServiceRequest:
      type: object
      required:
        - identityId
        - productId
      properties:
        identityId:
          $ref: '#/components/schemas/IdentityId'
        productId:
          $ref: '#/components/schemas/ProductId'
      x-stoplight:
        id: pyzcr30l1a5b1
    PaymentServiceReference:
      title: PaymentServiceReference
      x-stoplight:
        id: arqcchpy33tsf
      type: string
      description: Reference of the payment service
      example: REF42
    ClosePaymentServiceContractRequest:
      type: object
      required:
        - reason
      properties:
        reason:
          type: string
          description: Closed reason
          example: Account Inactivity
      x-stoplight:
        id: vd5lkg7vrjabq
    ContractStatus:
      type: string
      description: Status value
      enum:
        - OPENED
        - EXPIRED
        - CLOSED
      x-stoplight:
        id: v72whbc8a9nwu
    PaymentServiceResponse:
      type: object
      required:
        - reference
        - creationDate
        - status
        - productId
      properties:
        reference:
          $ref: '#/components/schemas/PaymentServiceReference'
        creationDate:
          type: string
          format: date-time
          description: Contract creation date
          example: '2024-04-22T17:09:10+02:00'
        status:
          $ref: '#/components/schemas/ContractStatus'
        productId:
          $ref: '#/components/schemas/ProductId'
      x-stoplight:
        id: ua8cvgqsxcirl
    GetPaymentServiceContractResponse:
      type: object
      required:
        - creditTransferReception
        - creditTransferEmission
      properties:
        creditTransferReception:
          items:
            $ref: '#/components/schemas/PaymentServiceContract'
        creditTransferEmission:
          items:
            $ref: '#/components/schemas/PaymentServiceContract'
      x-stoplight:
        id: f9c9tx3c07t30
    PaymentServiceContract:
      type: object
      required:
        - serviceLevel
        - productId
        - contractId
        - contractReference
        - subscriptionDate
        - expirationDate
      properties:
        serviceLevel:
          $ref: '#/components/schemas/ServiceLevel'
        productId:
          $ref: '#/components/schemas/ProductId'
        contractId:
          type: string
          description: ID of the contract
          example: '5492'
        contractReference:
          type: string
          description: Reference of the contract
          example: '18000054926'
        subscriptionDate:
          type: string
          format: date
          description: Payment service contract subscription date. Format Y-m-d
          example: '2024-04-22'
        expirationDate:
          type: string
          format: date
          description: Payment service contract expiration date. Format Y-m-d
          example: '2024-08-25'
      x-stoplight:
        id: o0g4x001v3q63
    CustomerInstructionInternalStatusValue:
      type: string
      description: Status value
      enum:
        - INI_STARTED
        - INI_IS_VALID
        - INI_NOT_IS_VALID
        - INI_INT_CTRL_FAILED
        - INI_INT_CTRL_PASSED
        - INI_UPDATED
        - INITIATED
        - SUB_REQUIRED
        - SUB_STARTED
        - SUB_NOT_IS_VALID
        - SUB_IS_VALID
        - SUB_INT_CTRL_PASSED
        - SUB_INT_CTRL_FAILED
        - SUB_STRONG_AUTH_REQUIRED
        - VALIDATED
        - SUBMITTED
        - READY_FOR_PROCESSING
        - WAREHOUSED
        - P_TRN_SUB_NOT_PASSED
        - PRO_STARTED
        - PRO_INT_CTRL_PASSED
        - PRO_INT_CTRL_FAILED
        - PRO_START_ERROR
        - PRO_DEBIT_HOLD
        - PROCESSED
        - P_TRN_PRO_FAILED
      example: INITIATED
      x-stoplight:
        id: bkjh6omki3t8v
    CustomerInstructionUserFriendlyGroupStatusValue:
      type: string
      description: User friendly Status value
      enum:
        - INITIATED
        - PENDING
        - IN_PROGRESS
        - PROCESSED
        - PARTIALLY_PROCESSED
        - FAILED
      example: INITIATED
      x-stoplight:
        id: bns7uma7jeol8
    CustomerInstructionReference:
      type: string
      description: Customer Instruction Reference set by the initiating party
      example: CINSTR001
      maxLength: 35
      x-stoplight:
        id: 5d89amhcphlof
    ViewCreditTransferCustomerInstructionResponse:
      type: object
      x-stoplight:
        id: cb28ifll7bnuo
      required:
        - id
        - status
        - history
        - customerInstructionInformation
        - customerInstructionOrderingParties
        - links
      properties:
        id:
          $ref: '#/components/schemas/InternalId'
        status:
          $ref: '#/components/schemas/InternalStatus'
        groupStatus:
          $ref: '#/components/schemas/UserFriendlyGroupStatus'
        history:
          $ref: '#/components/schemas/CustomerInstructionUserTransitionArray'
        statusReasonInformation:
          $ref: '#/components/schemas/StatusReasonInformation'
        calculatedNbPaymentTransactions:
          $ref: '#/components/schemas/CalculatedNbPaymentTransactions'
        calculatedAmount:
          type: array
          description: 'Customer instruction can have one or many currencies. If there is only one currency, this property is an object Calculated Amount. In case of multiple currencies, this property will be an array of objects Calculated Amount corresponding with each currency.'
          items:
            $ref: '#/components/schemas/CalculatedAmount'
          example:
            - value: 2000
              currency: EUR
            - value: 1000
              currency: USD
        paymentTransactionsStatus:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransactionsStatus'
        customerInstructionInformation:
          type: object
          description: Customer Instruction informations provided at initiation
          required:
            - paymentInstrument
            - batchBooking
            - customerInstructionReference
            - requestedNbPaymentTransactions
            - requestedTotalAmount
            - requestedExecutionDate
          properties:
            paymentInstrument:
              $ref: '#/components/schemas/CompletePaymentInstrument'
            paymentService:
              $ref: '#/components/schemas/PaymentService'
            batchBooking:
              $ref: '#/components/schemas/BatchBooking'
            customerInstructionReference:
              $ref: '#/components/schemas/CustomerInstructionReference'
            requestedNbPaymentTransactions:
              $ref: '#/components/schemas/NbPaymentTransactions'
            requestedTotalAmount:
              type: array
              description: 'Customer instruction can have one or many currencies. If there is only one currency, this property is an object Total Amount. In case of multiple currencies, it will be an array of objects Total Amount corresponding with each currency.'
              items:
                $ref: '#/components/schemas/TotalAmount'
              example:
                - value: 2000
                  currency: EUR
                - value: 1000
                  currency: USD
            requestedExecutionDate:
              $ref: '#/components/schemas/RequestedExecutionDate'
            customerInstructionTypeInformation:
              $ref: '#/components/schemas/CustomerInstructionTypeInformation'
            foreignAmount:
              $ref: '#/components/schemas/ForeignAmount'
              x-stoplight:
                id: d1f7y68llfdjl
              description: Foreign amount of a forex operation
        customerInstructionOrderingParties:
          type: object
          required:
            - initiatingParty
          description: Customer Instruction ordering parties informations
          properties:
            initiatingParty:
              allOf:
                - $ref: '#/components/schemas/InitiatingParty'
                - required:
                    - name
                    - id
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
                - required:
                    - name
            creditor:
              allOf:
                - $ref: '#/components/schemas/Creditor'
                - required:
                    - name
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
    ViewDirectDebitCustomerInstructionResponse:
      type: object
      x-stoplight:
        id: efyxvd5b6n9g4
      required:
        - id
        - status
        - history
        - customerInstructionInformation
        - customerInstructionOrderingParties
      properties:
        id:
          $ref: '#/components/schemas/InternalId'
        status:
          $ref: '#/components/schemas/InternalStatus'
        groupStatus:
          $ref: '#/components/schemas/UserFriendlyGroupStatus'
        history:
          $ref: '#/components/schemas/CustomerInstructionUserTransitionArray'
        statusReasonInformation:
          $ref: '#/components/schemas/StatusReasonInformation'
        calculatedNbPaymentTransactions:
          $ref: '#/components/schemas/CalculatedNbPaymentTransactions'
        calculatedAmount:
          description: 'Customer instruction can have one or many currencies. If there is only one currency, this property is an object Calculated Amount. In case of multiple currencies, this property will be an array of objects Calculated Amount corresponding with each currency.'
          allOf:
            - $ref: '#/components/schemas/CalculatedAmount'
          example: '[{value: 1337, currency: ''EUR''}, {value: 1000, currency: ''USD''}]'
        paymentTransactionsStatus:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransactionsStatus'
        customerInstructionInformation:
          type: object
          description: Customer Instruction informations provided at initiation
          required:
            - paymentInstrument
            - batchBooking
            - customerInstructionReference
            - requestedNbPaymentTransactions
            - requestedTotalAmount
            - requestedCollectionDate
          properties:
            paymentInstrument:
              $ref: '#/components/schemas/CompletePaymentInstrument'
            paymentService:
              $ref: '#/components/schemas/PaymentService'
            batchBooking:
              $ref: '#/components/schemas/BatchBooking'
            customerInstructionReference:
              $ref: '#/components/schemas/CustomerInstructionReference'
            requestedNbPaymentTransactions:
              $ref: '#/components/schemas/NbPaymentTransactions'
            requestedTotalAmount:
              type: array
              description: 'Customer instruction can have one or many currencies. If there is only one currency, this property is an object Total Amount. In case of multiple currencies, it will be an array of objects Total Amount corresponding with each currency.'
              items:
                $ref: '#/components/schemas/TotalAmount'
              example:
                - value: 2000
                  currency: EUR
                - value: 1000
                  currency: USD
            requestedCollectionDate:
              $ref: '#/components/schemas/requestedCollectionDate'
              x-stoplight:
                id: 3hmb88g6cghrw
            customerInstructionTypeInformation:
              $ref: '#/components/schemas/CustomerInstructionTypeInformation'
        customerInstructionOrderingParties:
          type: object
          description: Customer Instruction ordering parties informations
          required:
            - initiatingParty
            - creditor
          properties:
            initiatingParty:
              allOf:
                - $ref: '#/components/schemas/InitiatingParty'
                - {}
            creditor:
              allOf:
                - $ref: '#/components/schemas/Creditor'
                - {}
              x-stoplight:
                id: j41tf7mnrqptn
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
    CustomerInstructionAfterInitiationLinks:
      type: object
      properties:
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `updateCustomerInstruction` [PATCH] Update customer instruction
              * `deleteCustomerInstruction` [DELETE] Delete customer instruction
              * `getCustomerInstruction` [GET] View customer instruction details
              * `getPaymentTransactionsList` [GET] View list of payment transactions associated to customer instruction
              * `initiatePaymentTransaction` [POST] Initiate a payment transaction associated to the customer instruction
              * `submitCustomerInstruction` [POST] Submit customer instruction
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: updateCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/credit-transfers/1395'
            - rel: deleteCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/credit-transfers/1395'
            - rel: getCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/1395'
            - rel: getPaymentTransactionsList
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/1395/payment-transactions'
            - rel: initiatePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1customer-instructions/credit-transfers/1395/payment-transactions'
            - rel: submitCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/credit-transfers/1395/submit'
      x-stoplight:
        id: 79d1rv3y5b16j
    DirectDebitCustomerInstructionAfterInitiationLinks:
      type: object
      properties:
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `updateCustomerInstruction` [PATCH] Update customer instruction
              * `deleteCustomerInstruction` [DELETE] Delete customer instruction
              * `getCustomerInstruction` [GET] View customer instruction details
              * `getPaymentTransactionsList` [GET] View list of payment transactions associated to customer instruction
              * `initiatePaymentTransaction` [POST] Initiate a payment transaction associated to the customer instruction
              * `submitCustomerInstruction` [POST] Submit customer instruction
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: updateCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/direct-debits/1395'
            - rel: deleteCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/direct-debits/1395'
            - rel: getCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/1395'
            - rel: getPaymentTransactionsList
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/1395/payment-transactions'
            - rel: initiatePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/direct-debits/1395/payment-transactions'
            - rel: submitCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/direct-debits/1395/submit'
      x-stoplight:
        id: pjnu3q578gm8c
    InitiateCreditTransferCustomerInstructionRequest:
      type: object
      required:
        - customerInstructionInformation
        - customerInstructionOrderingParties
      properties:
        customerInstructionInformation:
          description: Customer Instruction information provided at initiation
          type: object
          required:
            - paymentInstrument
            - requestedNbPaymentTransactions
            - requestedTotalAmount
            - requestedExecutionDate
          properties:
            paymentInstrument:
              $ref: '#/components/schemas/PaymentInstrument'
            paymentService:
              $ref: '#/components/schemas/PaymentService'
            batchBooking:
              $ref: '#/components/schemas/BatchBooking'
            customerInstructionReference:
              $ref: '#/components/schemas/CustomerInstructionReference'
            requestedNbPaymentTransactions:
              $ref: '#/components/schemas/NbPaymentTransactions'
            requestedTotalAmount:
              type: array
              description: 'Customer instruction can have one or many currencies. If there is only one currency, this property is an object Total Amount. In case of multiple currencies, it will be an array of objects Total Amount corresponding with each currency.'
              items:
                $ref: '#/components/schemas/TotalAmount'
              example:
                - value: 2000
                  currency: EUR
                - value: 1000
                  currency: USD
            requestedExecutionDate:
              $ref: '#/components/schemas/RequestedExecutionDate'
            customerInstructionTypeInformation:
              $ref: '#/components/schemas/CustomerInstructionTypeInformation'
            foreignAmount:
              $ref: '#/components/schemas/ForeignAmount'
              x-stoplight:
                id: mgilesdnfk3c1
        customerInstructionOrderingParties:
          type: object
          required:
            - debtor
          description: Customer Instruction ordering parties informations
          properties:
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
                - required:
                    - name
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: e36ba1fqnq9eu
    InitiateDirectDebitCustomerInstructionRequest:
      type: object
      x-stoplight:
        id: w8y99w6gqwqyd
      required:
        - customerInstructionInformation
        - customerInstructionOrderingParties
      properties:
        customerInstructionInformation:
          description: Customer Instruction information provided at initiation
          type: object
          required:
            - paymentInstrument
            - requestedNbPaymentTransactions
            - requestedTotalAmount
            - requestedCollectionDate
          properties:
            paymentInstrument:
              $ref: '#/components/schemas/PaymentInstrument'
            paymentService:
              $ref: '#/components/schemas/PaymentService'
            batchBooking:
              $ref: '#/components/schemas/BatchBooking'
            customerInstructionReference:
              $ref: '#/components/schemas/CustomerInstructionReference'
            requestedNbPaymentTransactions:
              $ref: '#/components/schemas/NbPaymentTransactions'
            requestedTotalAmount:
              type: array
              description: 'Customer instruction can have one or many currencies. If there is only one currency, this property is an object Total Amount. In case of multiple currencies, it will be an array of objects Total Amount corresponding with each currency.'
              items:
                $ref: '#/components/schemas/TotalAmount'
              example:
                - value: 2000
                  currency: EUR
                - value: 1000
                  currency: USD
            requestedCollectionDate:
              $ref: '#/components/schemas/requestedCollectionDate'
              x-stoplight:
                id: 265cqr0wisxtk
            customerInstructionTypeInformation:
              $ref: '#/components/schemas/CustomerInstructionTypeInformation'
        customerInstructionOrderingParties:
          type: object
          description: Customer Instruction ordering parties informations
          required:
            - creditor
          properties:
            creditor:
              allOf:
                - $ref: '#/components/schemas/Creditor'
                - {}
              x-stoplight:
                id: 03pmedplum4lj
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
    CustomerInstructionAfterSubmissionLinks:
      type: object
      properties:
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getCustomerInstruction` [GET] View customer instruction details
              * `getPaymentTransactionsList` [GET] View list of payment transactions associated to customer instruction
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: getCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/1395'
            - rel: getPaymentTransactionsList
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/1395/payment-transactions'
      x-stoplight:
        id: v98pzfxfhrt40
    PaymentTransactionInternalId:
      type: string
      description: Internal reference of the payment transaction with the platform
      example: '10028'
      x-stoplight:
        id: 0hu307mhtkb10
    PaymentTransactionInternalStatus:
      type: object
      description: Status of the payment transaction within the platform
      required:
        - value
        - label
      properties:
        value:
          type: string
          description: Status value
          enum:
            - INI_STARTED
            - INI_IS_VALID
            - INI_NOT_IS_VALID
            - INI_INT_CTRL_FAILED
            - INI_INT_CTRL_PASSED
            - INI_UPDATED
            - INITIATED
            - SUB_STARTED
            - SUB_IS_VALID
            - SUB_NOT_IS_VALID
            - SUB_INT_CTRL_PASSED
            - SUB_INT_CTRL_FAILED
            - SUBMITTED
            - VALIDATED
            - READY_FOR_PROCESSING
            - C_INSTRUCTION_SUB_NOT_PASSED
            - P_INSTRUCTION_SUB_NOT_PASSED
            - WAREHOUSED
            - PRO_STARTED
            - PRO_INT_CTRL_PASSED
            - PRO_INT_CTRL_FAILED
            - PRO_DEBIT_HOLD
            - PRO_DEBIT_HOLD_FAILED
            - PRO_ROUTING_FAILED
            - PRO_WAIT_SETTLEMENT_DATE
            - PRO_SETTLEMENT_FAILED
            - SETTLED
            - C_INSTRUCTION_PRO_FAILED
            - C_INSTRUCTION_PRO_START_ERROR
            - READY_FOR_EXCHANGE
            - DEBIT_HOLD_CANCEL_FAILED
            - EXT_REFUSED
            - EXCHANGED
            - EXCHANGE_ERROR
          example: INITIATED
        label:
          type: string
          description: Status label
          example: Initiated
      x-stoplight:
        id: hbebf2i9ybqfe
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: The error numeric code
        message:
          type: string
          description: The error's localized message
        hint:
          type: string
          description: 'On certain types of error, a localized message will be sent to indicate a way to solve the error'
      example:
        code: 1337
        message: Something went wrong because requirement X was not met.
        hint: Field X does not match the field requirements
      x-stoplight:
        id: e8j7ldrxvsf7g
    UpdateCreditTransferCustomerInstructionRequest:
      type: object
      properties:
        customerInstructionInformation:
          description: Customer Instruction informations provided at initiation
          type: object
          properties:
            paymentService:
              $ref: '#/components/schemas/PaymentService'
            batchBooking:
              $ref: '#/components/schemas/BatchBooking'
            customerInstructionReference:
              $ref: '#/components/schemas/CustomerInstructionReference'
            requestedNbPaymentTransactions:
              $ref: '#/components/schemas/NbPaymentTransactions'
            requestedTotalAmount:
              $ref: '#/components/schemas/TotalAmount'
            requestedExecutionDate:
              $ref: '#/components/schemas/RequestedExecutionDate'
            customerInstructionTypeInformation:
              $ref: '#/components/schemas/CustomerInstructionTypeInformation'
            foreignAmount:
              $ref: '#/components/schemas/ForeignAmount'
              x-stoplight:
                id: u124wy5epkjpy
        customerInstructionOrderingParties:
          type: object
          description: Customer Instruction ordering parties informations
          properties:
            debtor:
              $ref: '#/components/schemas/Debtor'
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: rsqzqpjhz8sj9
    UpdateDirectDebitCustomerInstructionRequest:
      type: object
      properties:
        customerInstructionInformation:
          description: Customer Instruction information provided at initiation
          type: object
          properties:
            paymentService:
              $ref: '#/components/schemas/PaymentService'
            batchBooking:
              $ref: '#/components/schemas/BatchBooking'
            customerInstructionReference:
              $ref: '#/components/schemas/CustomerInstructionReference'
            requestedNbPaymentTransactions:
              $ref: '#/components/schemas/NbPaymentTransactions'
            requestedTotalAmount:
              $ref: '#/components/schemas/TotalAmount'
            requestedExecutionDate:
              $ref: '#/components/schemas/RequestedExecutionDate'
            customerInstructionTypeInformation:
              $ref: '#/components/schemas/CustomerInstructionTypeInformation'
        customerInstructionOrderingParties:
          type: object
          description: Customer Instruction ordering parties information
          properties:
            creditor:
              $ref: '#/components/schemas/Creditor'
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: 3bvxdd32sq09f
    SubmitCustomerInstructionCreditTransferRequest:
      type: object
      required:
        - customerInstructionInformation
        - customerInstructionOrderingParties
        - paymentTransaction
      properties:
        customerInstructionInformation:
          description: Customer Instruction information provided at initiation
          type: object
          required:
            - paymentInstrument
            - requestedExecutionDate
          properties:
            paymentInstrument:
              $ref: '#/components/schemas/CPaymentInstrument'
            batchBooking:
              $ref: '#/components/schemas/BatchBooking'
            customerInstructionReference:
              $ref: '#/components/schemas/CustomerInstructionReference'
            requestedExecutionDate:
              $ref: '#/components/schemas/RequestedExecutionDate'
            customerInstructionTypeInformation:
              $ref: '#/components/schemas/CustomerInstructionTypeInformation'
        customerInstructionOrderingParties:
          type: object
          required:
            - initiatingParty
            - debtor
          description: Customer Instruction ordering parties information
          properties:
            initiatingParty:
              allOf:
                - $ref: '#/components/schemas/InitiatingParty'
                - required:
                    - name
                    - id
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
                - required:
                    - name
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
        paymentTransaction:
          allOf:
            - description: Information on the payment transaction
            - $ref: '#/components/schemas/CreditTransferPaymentTransactionsPostDetails'
      x-stoplight:
        id: bj1nt79bw6aav
    SubmitCustomerCreditTransferInstructionCreatedResponse:
      allOf:
        - $ref: '#/components/schemas/ViewCreditTransferCustomerInstructionResponse'
        - $ref: '#/components/schemas/CustomerInstructionAfterSubmissionLinks'
        - type: object
          required:
            - paymentTransaction
          properties:
            paymentTransaction:
              allOf:
                - description: Information on the payment transaction
                - $ref: '#/components/schemas/ViewCreditTransferPaymentTransactionResponse'
                - $ref: '#/components/schemas/CreditTransferPaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks'
      x-stoplight:
        id: q6uxkgg9qnk9a
    SubmitCustomerCreditTransferInstructionAcceptedResponse:
      allOf:
        - type: object
          required:
            - id
            - status
            - strongAuthenticationReference
          properties:
            id:
              $ref: '#/components/schemas/PaymentTransactionInternalId'
            status:
              $ref: '#/components/schemas/PaymentTransactionInternalStatus'
            strongAuthenticationReference:
              description: Strong authentication reference
              type: string
        - $ref: '#/components/schemas/CustomerInstructionAfterSubmissionLinks'
      x-stoplight:
        id: 3i9pgjsd7mgrd
    UpdateCreditTransferPaymentTransactionRequest:
      type: object
      description: Informations on the recipient
      properties:
        paymentTransactionInformation:
          $ref: '#/components/schemas/PaymentTransactionInformation'
        paymentTransactionAmountInformation:
          type: object
          description: Information related to the transferred amount
          properties:
            instructedAmount:
              $ref: '#/components/schemas/InstructedAmount'
            chargeBearer:
              $ref: '#/components/schemas/ChargeBearer'
            chargesAmount:
              $ref: '#/components/schemas/ChargesAmount'
            foreignAmount:
              $ref: '#/components/schemas/ForeignAmount'
              x-stoplight:
                id: 8lo6py9ebabnl
        paymentTransactionParties:
          type: object
          description: recipient parties information
          properties:
            creditor:
              $ref: '#/components/schemas/Creditor'
            ultimateCreditor:
              $ref: '#/components/schemas/UltimateCreditor'
        paymentTransactionDedicatedInformations:
          type: object
          description: dedicated information related to the payment transaction
          properties:
            remittanceInformation:
              $ref: '#/components/schemas/RemittanceInformation'
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: n3lf0np0hmlav
    ViewCreditTransferPaymentTransactionResponse:
      type: object
      x-stoplight:
        id: jlix3wxyvgtim
      required:
        - paymentTransactionInternalInformation
        - paymentTransactionDateInformation
        - paymentTransactionAmountInformation
        - paymentTransactionParties
        - links
      properties:
        paymentTransactionInformation:
          $ref: '#/components/schemas/PaymentTransactionInformation'
        paymentTransactionInternalInformation:
          $ref: '#/components/schemas/PaymentTransactionInternalInformation'
        paymentTransactionDateInformation:
          type: object
          description: Payment Transaction date informations
          required:
            - instructedDate
            - creationDate
          properties:
            creationDate:
              allOf:
                - $ref: '#/components/schemas/CreationDate'
                - readOnly: true
            instructedDate:
              $ref: '#/components/schemas/InstructedDate'
            settlementDate:
              $ref: '#/components/schemas/SettlementDate'
        paymentTransactionAmountInformation:
          type: object
          description: Payment Transaction amount informations
          required:
            - instructedAmount
            - chargeBearer
          properties:
            instructedAmount:
              allOf:
                - $ref: '#/components/schemas/InstructedAmount'
                - required:
                    - currency
                    - value
            chargeBearer:
              $ref: '#/components/schemas/ChargeBearer'
            chargesAmount:
              $ref: '#/components/schemas/ChargesAmount'
            foreignAmount:
              $ref: '#/components/schemas/ForeignAmount'
              x-stoplight:
                id: 2ugbzm85blfy5
              description: Foreign amount of a forex operation
            exchangeRate:
              $ref: '#/components/schemas/ExchangeRate'
              x-stoplight:
                id: 09yn13ezow6ri
        paymentTransactionParties:
          type: object
          description: Payment Transaction parties informations
          required:
            - initiatingParty
          properties:
            initiatingParty:
              allOf:
                - $ref: '#/components/schemas/InitiatingParty'
                - required:
                    - name
                    - id
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
                - required:
                    - name
            creditor:
              allOf:
                - $ref: '#/components/schemas/Creditor'
                - required:
                    - name
            ultimateCreditor:
              $ref: '#/components/schemas/UltimateCreditor'
        paymentTransactionDedicatedInformations:
          type: object
          description: Payment Transaction dedicated informations
          properties:
            remittanceInformation:
              $ref: '#/components/schemas/RemittanceInformation'
        customerInstructionId:
          type: string
          description: Internal id of the customer instruction
          example: '1234'
        paymentInstructionId:
          type: string
          description: Internal id of the payment instruction
          example: '1234'
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
    ViewDirectDebitPaymentTransactionResponse:
      type: object
      x-stoplight:
        id: 8z4f24yapu7iw
      required:
        - paymentTransactionInternalInformation
        - paymentTransactionDateInformation
        - paymentTransactionAmountInformation
        - paymentTransactionParties
        - links
      properties:
        paymentTransactionInformation:
          $ref: '#/components/schemas/PaymentTransactionInformation'
        paymentTransactionInternalInformation:
          $ref: '#/components/schemas/PaymentTransactionInternalInformation'
        paymentTransactionDateInformation:
          type: object
          description: Payment Transaction date informations
          required:
            - instructedDate
            - creationDate
          properties:
            creationDate:
              allOf:
                - $ref: '#/components/schemas/CreationDate'
                - readOnly: true
            instructedDate:
              $ref: '#/components/schemas/InstructedDate'
            settlementDate:
              $ref: '#/components/schemas/SettlementDate'
        paymentTransactionAmountInformation:
          type: object
          description: Payment Transaction amount informations
          required:
            - instructedAmount
            - chargeBearer
          properties:
            instructedAmount:
              allOf:
                - $ref: '#/components/schemas/InstructedAmount'
                - required:
                    - currency
                    - value
            chargeBearer:
              $ref: '#/components/schemas/ChargeBearer'
            chargesAmount:
              $ref: '#/components/schemas/ChargesAmount'
        paymentTransactionParties:
          type: object
          description: Payment Transaction parties informations
          required:
            - initiatingParty
            - debtor
            - creditor
          properties:
            initiatingParty:
              allOf:
                - $ref: '#/components/schemas/InitiatingParty'
                - required:
                    - name
                    - id
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
                - required:
                    - name
            creditor:
              allOf:
                - $ref: '#/components/schemas/Creditor'
                - required:
                    - name
            ultimateDebtor:
              $ref: '#/components/schemas/UltimateDebtor'
        paymentTransactionDedicatedInformations:
          type: object
          description: Payment Transaction dedicated informations
          properties:
            remittanceInformation:
              $ref: '#/components/schemas/RemittanceInformation'
        customerInstructionId:
          type: string
          description: Internal id of the customer instruction
          example: '1234'
        paymentInstructionId:
          type: string
          description: Internal id of the payment instruction
          example: '1234'
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
    ViewCreditTransferPaymentTransactionWithMandateResponse:
      allOf:
        - $ref: '#/components/schemas/ViewCreditTransferPaymentTransactionResponse'
        - type: object
          properties:
            paymentTransactionInformation:
              $ref: '#/components/schemas/PaymentTransactionWithMandateInformation'
      x-stoplight:
        id: a0fyatuvhzt3g
    ViewDirectDebitPaymentTransactionWithMandateResponse:
      allOf:
        - $ref: '#/components/schemas/ViewDirectDebitPaymentTransactionResponse'
        - type: object
          properties:
            paymentTransactionInformation:
              $ref: '#/components/schemas/PaymentTransactionWithMandateInformation'
      x-stoplight:
        id: gr8udliwhea2r
    CreditTransferPaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks:
      type: object
      x-stoplight:
        id: 0srfc60s8vwfe
      properties:
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `updatePaymentTransaction` [PATCH] Update payment transaction
              * `deletePaymentTransaction` [DELETE] Delete payment transaction
              * `getPaymentTransaction` [GET] View payment transaction details
              * `initiatePaymentTransaction` [POST] Initiate a payment transaction associated to the customer instruction
              * `submitCustomerInstruction` [POST] Submit customer instruction
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: updatePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/credit-transfers/payment-transactions/1395'
            - rel: deletePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/credit-transfers/payment-transactions/1395'
            - rel: getPaymentTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/payment-transactions/1395'
            - rel: initiatePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1customer-instructions/credit-transfers/1395/payment-transactions'
            - rel: submitCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/credit-transfers/1395/submit'
    DirectDebitPaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks:
      type: object
      x-stoplight:
        id: c1bbglpjeluhq
      properties:
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `updatePaymentTransaction` [PATCH] Update payment transaction
              * `deletePaymentTransaction` [DELETE] Delete payment transaction
              * `getPaymentTransaction` [GET] View payment transaction details
              * `initiatePaymentTransaction` [POST] Initiate a payment transaction associated to the customer instruction
              * `submitCustomerInstruction` [POST] Submit customer instruction
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: updatePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/direct-debits/payment-transactions/1395'
            - rel: deletePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/direct-debits/payment-transactions/1395'
            - rel: getPaymentTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/payment-transactions/1395'
            - rel: initiatePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1customer-instructions/direct-debits/1395/payment-transactions'
            - rel: submitCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/direct-debits/1395/submit'
    InitiateCreditTransferPaymentTransactionAssociatedToCustomerInstructionRequest:
      allOf:
        - $ref: '#/components/schemas/CreditTransferPaymentTransactionsPostDetails'
      x-stoplight:
        id: mt90w3gn2acph
    InitiateDirectDebitPaymentTransactionAssociatedToCustomerInstructionRequest:
      allOf:
        - $ref: '#/components/schemas/DirectDebitPaymentTransactionsPostDetails'
      x-stoplight:
        id: aceohgkkx56mk
    InstructedDate:
      type: string
      description: Instructed date of the payment transaction. Format Y-m-d
      format: date
      x-stoplight:
        id: z3iw05mz1l7vx
    ServiceLevel:
      type: string
      enum:
        - XCT
        - SEPA
        - SCT_INST
        - ON_US
        - BACI
        - KNGA
      description: Network code
      example: XCT
      x-stoplight:
        id: 7pk5czbtswps3
    ExternalTransactionId:
      type: string
      description: External transaction id
      example: '12223133113'
      maxLength: 105
      x-stoplight:
        id: o6hos6lnn1vrh
    PaymentRTransactionInternalId:
      type: string
      description: Internal reference of the payment R transaction with the platform
      example: '10028'
      x-stoplight:
        id: tukrkii5ilhv3
    PaymentRTransactionInternalStatusValue:
      type: string
      description: Status of the payment R transaction within the platform
      enum:
        - INI_STARTED
        - INI_IS_VALID
        - INI_NOT_IS_VALID
        - INI_INT_CTRL_FAILED
        - INI_INT_CTRL_PASSED
        - INITIATED
        - SUB_STARTED
        - SUB_IS_VALID
        - SUB_NOT_IS_VALID
        - SUB_INT_CTRL_PASSED
        - SUB_INT_CTRL_FAILED
        - SUBMITTED
        - PRO_DEBIT_HOLD
        - PRO_DEBIT_HOLD_FAILED
        - PRO_ROUTING_FAILED
        - SETTLED
        - PRO_SETTLEMENT_FAILED
        - PRO_WAIT_SETTLEMENT_DATE
        - PRO_INT_CTRL_FAILED
        - PRO_INT_CTRL_PASSED
        - READY_FOR_EXCHANGE
        - EXCHANGE_ERROR
        - EXCHANGED
        - EXT_REFUSED
        - DEBIT_HOLD_CANCEL_FAILED
        - WAITING_FOR_RESPONSE
        - POSITIVE_RESPONSE_TO_RECALL
        - NEGATIVE_RESPONSE_TO_RECALL
        - C_INSTRUCTION_SUB_NOT_PASSED
        - P_INSTRUCTION_SUB_NOT_PASSED
      example: INITIATED
      x-stoplight:
        id: dr52sjrdn1i0m
    PaymentRTransactionInstructedDate:
      type: string
      description: Instructed date of the payment R transaction. Format Y-m-d
      format: date
      x-stoplight:
        id: gr2e547ter49t
    CreationDate:
      type: string
      description: Creation date of the payment transaction. Format Y-m-d
      format: date
      x-stoplight:
        id: wphdz3n1mqyt0
    SettlementDate:
      type: string
      description: Settlement date of the payment transaction. Format Y-m-d
      format: date
      x-stoplight:
        id: lay8ams0t1ik0
    SubmitCustomerInstructionRCreditTransferRequest:
      type: object
      required:
        - customerInstructionInformation
        - paymentRTransaction
      properties:
        customerInstructionInformation:
          description: Customer Instruction information provided at initiation
          type: object
          required:
            - paymentInstrument
          properties:
            paymentInstrument:
              $ref: '#/components/schemas/RPaymentInstrument'
            batchBooking:
              $ref: '#/components/schemas/BatchBooking'
            customerInstructionReference:
              $ref: '#/components/schemas/CustomerInstructionReference'
            customerInstructionTypeInformation:
              $ref: '#/components/schemas/CustomerInstructionTypeInformation'
        externalData:
          $ref: '#/components/schemas/PaymentEngineExternalData'
        paymentRTransaction:
          $ref: '#/components/schemas/OutwardPaymentRTransaction'
      x-stoplight:
        id: 0tbyntlm53pap
    ViewRCustomerInstructionResponse:
      type: object
      required:
        - id
        - status
        - history
        - customerInstructionInformation
        - customerInstructionOrderingParties
        - links
      properties:
        id:
          $ref: '#/components/schemas/InternalId'
        status:
          $ref: '#/components/schemas/InternalStatus'
        groupStatus:
          $ref: '#/components/schemas/UserFriendlyGroupStatus'
        history:
          $ref: '#/components/schemas/CustomerInstructionUserTransitionArray'
        statusReasonInformation:
          $ref: '#/components/schemas/StatusReasonInformation'
        calculatedNbPaymentTransactions:
          $ref: '#/components/schemas/CalculatedNbPaymentTransactions'
        calculatedAmount:
          $ref: '#/components/schemas/CalculatedAmount'
        paymentTransactionsStatus:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransactionsStatus'
        customerInstructionInformation:
          type: object
          description: Customer Instruction informations provided at initiation
          required:
            - paymentInstrument
            - batchBooking
            - customerInstructionReference
            - requestedNbPaymentTransactions
            - requestedTotalAmount
            - requestedExecutionDate
          properties:
            paymentInstrument:
              $ref: '#/components/schemas/RPaymentInstrument'
            paymentService:
              $ref: '#/components/schemas/PaymentService'
            batchBooking:
              $ref: '#/components/schemas/BatchBooking'
            customerInstructionReference:
              $ref: '#/components/schemas/CustomerInstructionReference'
            requestedNbPaymentTransactions:
              $ref: '#/components/schemas/NbPaymentTransactions'
            requestedTotalAmount:
              $ref: '#/components/schemas/TotalAmount'
            requestedExecutionDate:
              $ref: '#/components/schemas/RequestedExecutionDate'
            customerInstructionTypeInformation:
              $ref: '#/components/schemas/CustomerInstructionTypeInformation'
        customerInstructionOrderingParties:
          type: object
          required:
            - initiatingParty
            - debtor
          description: Customer Instruction ordering parties informations
          properties:
            initiatingParty:
              allOf:
                - $ref: '#/components/schemas/InitiatingParty'
                - required:
                    - name
                    - id
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
                - required:
                    - name
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: onc2lwii27uo3
    PaymentRTransactionCreditTransferResponseData:
      type: object
      description: Payment R transaction
      required:
        - paymentRTransactionInternalInformation
        - paymentRTransactionAmountInformation
        - paymentRTransactionDateInformation
        - paymentRTransactionInformation
        - paymentRTransactionParties
        - customerInstructionId
        - paymentInstructionId
        - links
      properties:
        paymentRTransactionInternalInformation:
          $ref: '#/components/schemas/PaymentRTransactionInternalInformation'
        paymentRTransactionAmountInformation:
          $ref: '#/components/schemas/AmountInformation'
        paymentRTransactionDateInformation:
          $ref: '#/components/schemas/DateInformation'
        paymentRTransactionInformation:
          $ref: '#/components/schemas/Information'
        paymentRTransactionParties:
          $ref: '#/components/schemas/Parties'
        originalPaymentTransactionParties:
          $ref: '#/components/schemas/OriginalPaymentTransactionParties'
        customerInstructionId:
          $ref: '#/components/schemas/InternalId'
        paymentInstructionId:
          $ref: '#/components/schemas/PaymentInstructionId'
        links:
          $ref: '#/components/schemas/CreditTransferAvailableActions'
      x-stoplight:
        id: 2gqdtqj6xu7dj
    PaymentRTransactionDirectDebitResponseData:
      type: object
      description: Payment R transaction
      required:
        - paymentRTransactionInternalInformation
        - paymentRTransactionAmountInformation
        - paymentRTransactionDateInformation
        - paymentRTransactionInformation
        - paymentRTransactionParties
        - customerInstructionId
        - paymentInstructionId
        - links
      properties:
        paymentRTransactionInternalInformation:
          $ref: '#/components/schemas/PaymentRTransactionInternalInformation'
        paymentRTransactionAmountInformation:
          $ref: '#/components/schemas/AmountInformation'
        paymentRTransactionDateInformation:
          $ref: '#/components/schemas/DateInformation'
        paymentRTransactionInformation:
          $ref: '#/components/schemas/Information'
        paymentRTransactionParties:
          $ref: '#/components/schemas/Parties'
        originalPaymentTransactionParties:
          $ref: '#/components/schemas/OriginalPaymentTransactionParties'
        customerInstructionId:
          $ref: '#/components/schemas/InternalId'
        paymentInstructionId:
          $ref: '#/components/schemas/PaymentInstructionId'
        links:
          $ref: '#/components/schemas/DirectDebitAvailableActions'
      x-stoplight:
        id: jera0reyt5lvs
    PaymentInstructionCreditTransferRequest:
      type: object
      x-stoplight:
        id: i1w07cfmx3q2x
      description: Payment instruction
      required:
        - paymentInstructionInformation
      properties:
        paymentInstructionInformation:
          $ref: '#/components/schemas/CreditTransferPaymentInstructionInformationRequest'
        paymentInstructionInterbankingParties:
          $ref: '#/components/schemas/PaymentInstructionInterbankingPartiesRequest'
        externalData:
          $ref: '#/components/schemas/PaymentEngineExternalData'
    PaymentInstructionDirectDebitRequest:
      type: object
      x-stoplight:
        id: i9x1eys4a7zyj
      description: Payment instruction
      required:
        - paymentInstructionInformation
      properties:
        paymentInstructionInformation:
          $ref: '#/components/schemas/DirectDebitPaymentInstructionInformationRequest'
        paymentInstructionInterbankingParties:
          $ref: '#/components/schemas/PaymentInstructionInterbankingPartiesRequest'
        externalData:
          $ref: '#/components/schemas/PaymentEngineExternalData'
    UpdatePaymentInstructionRequest:
      type: object
      properties:
        paymentInstructionInformation:
          type: object
          description: Payment instruction information
          properties:
            requestedNbPaymentTransactions:
              $ref: '#/components/schemas/NbPaymentTransactions'
            settlementAmount:
              type: object
              description: Settlement amount
              properties:
                value:
                  $ref: '#/components/schemas/AmountValue'
                currency:
                  description: Currency alpha code (ISO 4217)
                  type: string
                  minLength: 3
                  maxLength: 3
                  example: EUR
            settlementDate:
              $ref: '#/components/schemas/PaymentInstructionSettlementDate'
            paymentInstructionReference:
              $ref: '#/components/schemas/PaymentInstructionReference'
            paymentInstructionTypeInformation:
              type: object
              description: Payment instruction type information
              properties:
                serviceLevel:
                  $ref: '#/components/schemas/ServiceLevel'
                categoryPurpose:
                  $ref: '#/components/schemas/CategoryPurpose'
            responseCreationDateTime:
              $ref: '#/components/schemas/PaymentInstructionResponseCreationDateTime'
            requestedCollectionDate:
              $ref: '#/components/schemas/requestedCollectionDate'
              x-stoplight:
                id: jcby4ykmi820t
            foreignAmount:
              $ref: '#/components/schemas/ForeignAmount'
              x-stoplight:
                id: 77xtmr3zi3fgo
              description: Foreign amount of a forex operation
        paymentInstructionInterbankingParties:
          type: object
          description: Payment instruction interbanking parties
          properties:
            instructingAgent:
              type: object
              description: Payment's instructing agent
              properties:
                financialId:
                  type: string
                  description: Financial ID of the agent. Must be a valid BIC
                  example: GAILFRP1XXX
                name:
                  type: string
                  description: Agent's name
                  maxLength: 128
            instructedAgent:
              type: object
              description: Payment's instructed agent
              properties:
                financialId:
                  type: string
                  description: Financial ID of the agent. Must be a valid BIC
                  example: GAILFRP1XXX
                name:
                  type: string
                  description: Agent's name
                  maxLength: 128
        externalData:
          $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: rda1pp67hkqa9
    PaymentInstructionId:
      type: string
      example: '1234'
      description: Payment instruction id
      x-stoplight:
        id: f7v4az0ubck9n
    PayloadId:
      type: string
      example: '4321'
      description: Payload id of the file in which the Payment Instruction is sent
      x-stoplight:
        id: zr8etgvzqf9jf
    InitiatePaymentTransactionRequest:
      type: object
      x-stoplight:
        id: 76be2upwi0n9r
      description: Payment transaction
      required:
        - paymentTransactionAmountInformation
        - paymentTransactionParties
        - paymentTransactionInformation
      properties:
        paymentTransactionAmountInformation:
          type: object
          description: Information related to the transferred amount
          required:
            - instructedAmount
          properties:
            instructedAmount:
              allOf:
                - $ref: '#/components/schemas/InstructedAmount'
                - required:
                    - currency
                    - value
            chargeBearer:
              $ref: '#/components/schemas/ChargeBearer'
            chargesAmount:
              $ref: '#/components/schemas/ChargesAmount'
            foreignAmount:
              $ref: '#/components/schemas/ForeignAmount'
              x-stoplight:
                id: h4d1hd93isw63
              description: Foreign amount of a forex operation
            exchangeRate:
              $ref: '#/components/schemas/ExchangeRate'
              x-stoplight:
                id: ss9e3x43exyei
        paymentTransactionParties:
          type: object
          description: recipient parties information
          required:
            - creditor
            - debtor
          properties:
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
                - required:
                    - name
            creditor:
              allOf:
                - $ref: '#/components/schemas/Creditor'
                - required:
                    - name
            ultimateCreditor:
              $ref: '#/components/schemas/UltimateCreditor'
        paymentTransactionDedicatedInformations:
          type: object
          description: dedicated information related to the payment transaction
          properties:
            remittanceInformation:
              $ref: '#/components/schemas/RemittanceInformation'
        paymentTransactionInformation:
          $ref: '#/components/schemas/PaymentTransactionCreditTransferInformationRequest'
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
      title: ''
    UpdatePaymentTransactionRequest:
      type: object
      description: Payment transaction
      properties:
        paymentTransactionAmountInformation:
          type: object
          description: Information related to the transferred amount
          properties:
            instructedAmount:
              $ref: '#/components/schemas/InstructedAmount'
            chargeBearer:
              $ref: '#/components/schemas/ChargeBearer'
            chargesAmount:
              $ref: '#/components/schemas/ChargesAmount'
            foreignAmount:
              $ref: '#/components/schemas/ForeignAmount'
              x-stoplight:
                id: r8gp4nhwf4q2q
              description: Foreign amount of a forex operation
        paymentTransactionParties:
          type: object
          description: recipient parties information
          properties:
            debtor:
              $ref: '#/components/schemas/Debtor'
            creditor:
              $ref: '#/components/schemas/Creditor'
            ultimateCreditor:
              $ref: '#/components/schemas/UltimateCreditor'
        paymentTransactionDedicatedInformations:
          type: object
          description: dedicated information related to the payment transaction
          properties:
            remittanceInformation:
              $ref: '#/components/schemas/RemittanceInformation'
        paymentTransactionInformation:
          $ref: '#/components/schemas/PaymentTransactionInformation'
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: ctjr8p0jz36yj
    UpdateDirectDebitPaymentTransactionRequest:
      title: UpdateDirectDebitPaymentTransactionRequest
      x-stoplight:
        id: kiewoms3ozsig
      allOf:
        - $ref: '#/components/schemas/UpdatePaymentTransactionRequest'
        - x-stoplight:
            id: 65070d3c4bd3
          type: object
          properties:
            paymentTransactionInformation:
              $ref: '#/components/schemas/UpdatePaymentTransactionWithMandateInformation'
    UpdateCustomerDirectDebitPaymentTransactionRequest:
      title: UpdateCustomerDirectDebitPaymentTransactionRequest
      type: object
      description: Payment transaction for customer direct debit
      properties:
        paymentTransactionAmountInformation:
          type: object
          description: Information related to the transferred amount
          properties:
            instructedAmount:
              $ref: '#/components/schemas/InstructedAmount'
            chargeBearer:
              $ref: '#/components/schemas/ChargeBearer'
            chargesAmount:
              $ref: '#/components/schemas/ChargesAmount'
        paymentTransactionParties:
          type: object
          description: recipient parties information
          properties:
            debtor:
              $ref: '#/components/schemas/Debtor'
            ultimateDebtor:
              $ref: '#/components/schemas/UltimateDebtor'
        paymentTransactionDedicatedInformations:
          type: object
          description: dedicated information related to the payment transaction
          properties:
            remittanceInformation:
              $ref: '#/components/schemas/RemittanceInformation'
        paymentTransactionInformation:
          $ref: '#/components/schemas/UpdatePaymentTransactionWithMandateInformation'
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: at359guw4k32t
    InitiatePaymentRTransactionRequest:
      type: object
      description: Payment r transaction
      required:
        - paymentRTransactionAmountInformation
        - paymentRTransactionParties
        - paymentRTransactionInformation
      properties:
        paymentRTransactionAmountInformation:
          type: object
          description: Information related to the transferred amount
          required:
            - originalInstructedAmount
          properties:
            originalInstructedAmount:
              allOf:
                - $ref: '#/components/schemas/OriginalInstructedAmount'
                - required:
                    - value
                    - currency
            returnedAmount:
              allOf:
                - $ref: '#/components/schemas/ReturnedAmount'
                - required:
                    - value
                    - currency
            chargeBearer:
              $ref: '#/components/schemas/ChargeBearer'
            foreignAmount:
              $ref: '#/components/schemas/ForeignAmount'
              x-stoplight:
                id: a1nar27cydzyz
        paymentRTransactionParties:
          type: object
          description: Parties information
          required:
            - debtor
            - creditor
          properties:
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
                - required:
                    - name
            creditor:
              allOf:
                - $ref: '#/components/schemas/Creditor'
                - required:
                    - name
            ultimateCreditor:
              $ref: '#/components/schemas/UltimateCreditor'
            ultimateDebtor:
              $ref: '#/components/schemas/UltimateDebtor'
        paymentRTransactionInformation:
          type: object
          description: Information of the payment r transaction
          required:
            - paymentRTransactionIdentification
            - paymentRTransactionReturnInformation
          properties:
            paymentRTransactionIdentification:
              type: object
              description: Information regarding the original payment transaction
              required:
                - originalTransactionId
                - originalMessageId
                - originalMessageNameId
                - externalTransactionId
              properties:
                originalTransactionId:
                  $ref: '#/components/schemas/OriginalTransactionId'
                relatedTransactionInternalId:
                  $ref: '#/components/schemas/RelatedTransactionInternalId'
                messageId:
                  $ref: '#/components/schemas/MessageId'
                  x-stoplight:
                    id: d9s2xd3kalers
                originalEndToEndId:
                  $ref: '#/components/schemas/OriginalEndToEndId'
                originalMessageId:
                  $ref: '#/components/schemas/OriginalMessageId'
                originalMessageNameId:
                  $ref: '#/components/schemas/OriginalMessageNameId'
                externalTransactionId:
                  $ref: '#/components/schemas/ExternalTransactionId'
                originalInstructionId:
                  $ref: '#/components/schemas/OriginalInstructionId'
                originalInterbankingSettlementDate:
                  $ref: '#/components/schemas/OriginalInterbankingSettlementDate'
            paymentRTransactionReturnInformation:
              $ref: '#/components/schemas/PaymentRTransactionReturnInformation'
        externalData:
          $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: sss5bntp8j6kw
    UpdatePaymentRTransactionRequest:
      type: object
      description: Payment r transaction
      properties:
        paymentRTransactionAmountInformation:
          type: object
          description: Information related to the transferred amount
          properties:
            originalInstructedAmount:
              allOf:
                - $ref: '#/components/schemas/OriginalInstructedAmount'
            returnedAmount:
              allOf:
                - $ref: '#/components/schemas/ReturnedAmount'
            chargeBearer:
              $ref: '#/components/schemas/ChargeBearer'
            foreignAmount:
              $ref: '#/components/schemas/ForeignAmount'
              x-stoplight:
                id: 4lc6oi5i1480t
        paymentRTransactionParties:
          type: object
          description: Parties information
          properties:
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
            creditor:
              allOf:
                - $ref: '#/components/schemas/Creditor'
            ultimateCreditor:
              $ref: '#/components/schemas/UltimateCreditor'
            ultimateDebtor:
              $ref: '#/components/schemas/UltimateDebtor'
        paymentRTransactionInformation:
          type: object
          description: Information of the payment r transaction
          properties:
            paymentRTransactionIdentification:
              type: object
              description: Information regarding the original payment transaction
              properties:
                originalTransactionId:
                  $ref: '#/components/schemas/OriginalTransactionId'
                relatedTransactionInternalId:
                  $ref: '#/components/schemas/RelatedTransactionInternalId'
                messageId:
                  $ref: '#/components/schemas/MessageId'
                  x-stoplight:
                    id: rybu1vw8im32v
                originalEndToEndId:
                  $ref: '#/components/schemas/OriginalEndToEndId'
                originalMessageId:
                  $ref: '#/components/schemas/OriginalMessageId'
                originalMessageNameId:
                  $ref: '#/components/schemas/OriginalMessageNameId'
                externalTransactionId:
                  $ref: '#/components/schemas/ExternalTransactionId'
                originalInstructionId:
                  $ref: '#/components/schemas/OriginalInstructionId'
            paymentRTransactionReturnInformation:
              $ref: '#/components/schemas/PaymentRTransactionReturnInformation'
        externalData:
          $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: vzjidmnq7flia
    SubmitPaymentInstructionWithSinglePaymentTransactionRequest:
      type: object
      description: Payment instruction
      required:
        - paymentInstructionInformation
        - paymentTransaction
      properties:
        paymentInstructionInformation:
          $ref: '#/components/schemas/SinglePaymentInstructionInformationRequest'
        paymentInstructionInterbankingParties:
          $ref: '#/components/schemas/PaymentInstructionInterbankingPartiesRequest'
        paymentTransaction:
          $ref: '#/components/schemas/InitiatePaymentTransactionRequest'
        externalData:
          $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: z4lnck397f397
    SubmitPaymentInstructionWithSinglePaymentRTransactionRequest:
      type: object
      description: Payment instruction
      required:
        - paymentInstructionInformation
        - paymentRTransaction
      properties:
        paymentInstructionInformation:
          $ref: '#/components/schemas/SinglePaymentInstructionInformationRequest'
        paymentInstructionInterbankingParties:
          $ref: '#/components/schemas/PaymentInstructionInterbankingPartiesRequest'
        paymentRTransaction:
          $ref: '#/components/schemas/InitiatePaymentRTransactionRequest'
        externalData:
          $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: ugngrkkppx4kt
    RefusePaymentInstructionRequest:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Refusal code
          maxLength: 32
          example: ERR1234
        message:
          type: string
          description: Refusal message
          maxLength: 1024
          example: Something went wrong
      x-stoplight:
        id: 99xhq2tl83lsu
    SettleOrExchangePaymentInstructionRequest:
      type: object
      properties:
        interbankingSettlementDate:
          $ref: '#/components/schemas/PaymentInstructionInterbankingSettlementDate'
      x-stoplight:
        id: 8fuqnkv3n00ct
    PaymentInstructionStatusValue:
      type: string
      description: Status value
      enum:
        - CREATED
        - SUB_IS_NOT_VALID
        - SUB_IS_VALID
        - SUB_REQUIRED
        - SUBMITTED
        - REFUSAL_REQUIRED
        - REFUSED
        - EXCHANGE_REQUIRED
        - EXCHANGED
        - SETTLED
        - ACCOUNTING_ERROR
        - INI_STARTED
        - INI_IS_NOT_VALID
        - INI_IS_VALID
        - INITIATED
        - INITIATION_COMPLETED
        - P_TRN_SUB_NOT_PASSED
      example: CREATED
      x-stoplight:
        id: gc18772iocipv
    SubmitCustomerCreditTransferInstructionRequest:
      type: object
      required:
        - customerInstructionInformation
        - customerInstructionOrderingParties
        - paymentTransaction
      properties:
        customerInstructionInformation:
          description: Customer Instruction information provided at initiation
          type: object
          required:
            - paymentInstrument
            - customerInstructionReference
            - requestedExecutionDate
          properties:
            paymentInstrument:
              $ref: '#/components/schemas/StandardCreditTransferPaymentInstrument'
            paymentService:
              $ref: '#/components/schemas/PaymentService'
            batchBooking:
              $ref: '#/components/schemas/BatchBooking'
            customerInstructionReference:
              $ref: '#/components/schemas/CustomerInstructionReference'
            requestedExecutionDate:
              $ref: '#/components/schemas/RequestedExecutionDate'
            customerInstructionTypeInformation:
              description: specific information related to type of payment. The criteria will apply to all transactions unless a dedicated information is also indicated at transaction level
              type: object
              properties:
                categoryPurpose:
                  $ref: '#/components/schemas/CategoryPurpose'
        customerInstructionOrderingParties:
          type: object
          required:
            - initiatingParty
            - debtor
          description: Customer Instruction ordering parties information
          properties:
            initiatingParty:
              allOf:
                - $ref: '#/components/schemas/InitiatingParty'
                - required:
                    - name
                    - id
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
                - required:
                    - name
        paymentTransaction:
          allOf:
            - description: Information on the payment transaction
            - $ref: '#/components/schemas/CreditTransferPaymentTransactionsPostDetails'
      x-stoplight:
        id: 5ob9zqw0ta13u
    GeneratePdfFromTemplate:
      type: object
      required:
        - templateType
        - userType
        - locale
        - date
        - variables
      properties:
        templateType:
          description: The type of the template.
          type: string
          enum:
            - invoice
            - accountStatement
            - rib
            - feeStatement
            - creditOffer
            - savingsOffer
            - transactionSlip
        userType:
          description: The type of user. Some templates may work only for a specific type of user.
          type: string
          enum:
            - agent
            - merchant
            - client
            - company
            - distributor
            - legalEntity
            - naturalPerson
        locale:
          description: The locale of the template.
          $ref: '#/components/schemas/Lang'
        date:
          description: Date of the template to be used for generation.
          format: date-time
          example: '2022-11-30T11:33:22Z'
          type: string
        variables:
          description: 'A list of variables and their associated values to generate the PDF with. Key is the variable name, while value is the variable value.'
          type: object
          additionalProperties:
            type: object
            properties:
              variable:
                type: string
              value:
                type: string
            example:
              foo: value1
              bar: value2
      x-stoplight:
        id: iftg9o68w2rq1
    SubmitCustomerCreditTransferInstructionResponse:
      type: object
      required:
        - id
        - status
        - paymentOperator
        - paymentService
        - batchBooking
        - customerInstructionReference
        - requestedNbPaymentTransactions
        - requestedTotalAmount
        - requestedExecutionDate
        - initiatingParty
        - debtor
      properties:
        id:
          $ref: '#/components/schemas/InternalId'
        status:
          $ref: '#/components/schemas/InternalStatus'
        groupStatus:
          $ref: '#/components/schemas/UserFriendlyGroupStatus'
        paymentInstrument:
          $ref: '#/components/schemas/StandardCreditTransferPaymentInstrument'
        paymentOperator:
          $ref: '#/components/schemas/PaymentOperator'
        paymentService:
          $ref: '#/components/schemas/PaymentService'
        batchBooking:
          $ref: '#/components/schemas/BatchBooking'
        customerInstructionReference:
          $ref: '#/components/schemas/CustomerInstructionReference'
        requestedNbPaymentTransactions:
          $ref: '#/components/schemas/NbPaymentTransactions'
        requestedTotalAmount:
          $ref: '#/components/schemas/TotalAmount'
        requestedExecutionDate:
          $ref: '#/components/schemas/RequestedExecutionDate'
        initiatingParty:
          allOf:
            - $ref: '#/components/schemas/InitiatingParty'
            - required:
                - name
                - id
        debtor:
          allOf:
            - $ref: '#/components/schemas/Debtor'
            - required:
                - name
        additional:
          $ref: '#/components/schemas/Additional'
      x-stoplight:
        id: 6ivo84hz7y2w0
    ProfileCollection:
      description: Sorted and paginated list of Identities
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of Profiles
              items:
                $ref: '#/components/schemas/UserProfile'
      x-stoplight:
        id: 8qwe2kb71oz30
    MandatesCollection:
      description: Sorted and paginated list of mandates
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              items:
                $ref: '#/components/schemas/Link'
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/mandates/identity/42?limit=20&offset=40&sort=example_sorting_parameter'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/mandates/identity/42?limit=20&offset=60&sort=example_sorting_parameter'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/mandates/identity/42?limit=20&offset=20&sort=example_sorting_parameter'
        - type: object
          properties:
            items:
              type: array
              description: collection of mandates
              items:
                $ref: '#/components/schemas/Mandate'
            sort:
              default: +reference
      x-stoplight:
        id: ylmdyw5g3xwsl
    MandateId:
      type: string
      example: '1234'
      description: Mandate id
      x-stoplight:
        id: kwmkabamvmdrr
    MandateRef:
      type: string
      example: DAL59891
      description: Mandate reference
      x-stoplight:
        id: eqs4pywhi4byp
    Mandate:
      type: object
      description: Mandate
      required:
        - id
        - reference
      properties:
        id:
          $ref: '#/components/schemas/MandateId'
        reference:
          $ref: '#/components/schemas/MandateRef'
        creditorRef:
          $ref: '#/components/schemas/MandateCreditorReference'
          description: Creditor's reference
        debtorRef:
          $ref: '#/components/schemas/MandateDebtorReference'
          x-stoplight:
            id: 44n1zyikwqig8
        signatureDate:
          $ref: '#/components/schemas/MandateSignatureDate'
        type:
          $ref: '#/components/schemas/MandateType'
          description: Mandate type
        recurrent:
          $ref: '#/components/schemas/MandateRecurrent'
          description: Is mandate recurrent
        originalMandate:
          $ref: '#/components/schemas/OriginalMandate'
        creditorName:
          $ref: '#/components/schemas/MandateCreditorName'
        isRevoked:
          type: boolean
          default: true
          description: Is mandate revoked
          readOnly: true
        status:
          type: string
          enum:
            - ACTIVE
            - CONSUMED
            - REVOKED
            - OPPOSED
            - CREDITOR_OPPOSED
            - OBSOLETE
          example: REVOKED
          description: Mandate status
        lastCollectionDate:
          $ref: '#/components/schemas/DateAtom'
          x-stoplight:
            id: a4prslkegrdpd
          description: Last date on which the mandate was used for a direct debit
      x-stoplight:
        id: g18guj0rzae57
    OriginalMandate:
      type: object
      description: Original mandate
      properties:
        reference:
          $ref: '#/components/schemas/MandateRef'
        creditorRef:
          $ref: '#/components/schemas/MandateCreditorReference'
          description: Creditor's reference
        type:
          $ref: '#/components/schemas/MandateType'
          description: Original mandate's type
        debtorIban:
          type: string
          description: Debtor's iban
          example: FR7616808000011000000009075
        debtorBic:
          type: string
          description: Debtor's bic
          example: GAILFRP1XXX
        debtorName:
          type: string
          description: Debtor's name
          example: John Doe
        debtorCountry:
          type: string
          description: Debtor's country. ISO alpha 2 code
          example: FR
        debtorAddress:
          type: string
          description: Debtor's address
          example: 1 route de la République
        debtorZipCode:
          type: string
          description: Debtor's zip code
          example: '75000'
      x-stoplight:
        id: vxk1ddko656qd
    CardItemWithLinks:
      type: object
      allOf:
        - $ref: '#/components/schemas/CardItem'
        - type: object
          properties:
            links:
              $ref: '#/components/schemas/CardLinksCollection'
      x-stoplight:
        id: nx98r6za7yn6k
    CardExternalId:
      type: string
      description: External Card identifier (Partner).
      example: EXT123456789
      x-stoplight:
        id: ur4f50kqwvv7m
    CardStatus:
      type: string
      enum:
        - ACTIVE
        - BLOCKED
        - EXPIRED
        - NEW
        - OPPOSED
        - PENDING
        - REMOVED
      x-stoplight:
        id: tcmv6yeml7iz9
    CardCollection:
      description: Sorted and paginated list of cards
      allOf:
        - type: object
          properties:
            items:
              type: array
              description: collection of cards
              items:
                allOf:
                  - $ref: '#/components/schemas/CardItem'
                  - type: object
                    properties:
                      links:
                        $ref: '#/components/schemas/CardLinksCollection'
        - type: object
          properties:
            sort:
              type: string
              description: Default Order By Creation Date Desc
              default: '-creationDate'
        - $ref: '#/components/schemas/Collection'
      x-stoplight:
        id: vy3hjt4w88xoq
    CardSelfLink:
      type: object
      required:
        - links
      properties:
        links:
          type: array
          items:
            type: object
            required:
              - rel
              - href
            properties:
              rel:
                type: string
                description: Action identifier
                enum:
                  - getCard
              href:
                type: string
                description: Action endpoint url
                example: 'https://sandbox.skaleet.com/api/service-domain/v1/cards/42'
      x-stoplight:
        id: o4nkn6qnibhg8
    CardManagementOperationType:
      type: string
      description: Operation type
      example: REFABRICATION
      enum:
        - CARD_ACTIVATION
        - CARD_BLOCKING
        - CARD_CODE_REISSUING
        - CARD_CREATION
        - CARD_FEATURES_UPDATE
        - CARD_LIMITS_UPDATE
        - CARD_OPPOSITION
        - CARD_RENEW
        - CARD_SUPPRESSION
        - CARD_UNBLOCKING
        - REFABRICATION
      x-stoplight:
        id: f567bvf2a6c2u
    CardManagementOperationState:
      type: string
      description: Operation state
      example: ACCEPTED
      enum:
        - INITIATED
        - CTRL_PASSED
        - CTRL_FAILED
        - ACCEPTED
        - EXECUTED
        - SETTLED
        - EXT_ACCEPTED
        - ERR_EXECUTED
        - EXT_PENDING
        - EXT_REFUSED
        - ERR_EXT
        - CANCELED
        - IS_VALID
        - IS_NOT_VALID
        - REFUSED
        - ERR_FEES_RESERVATION
        - ERR_SETTLED
      x-stoplight:
        id: gh5vch8odi7dc
    CardManagementOperationCollection:
      description: Collection of card management operation
      allOf:
        - type: object
          properties:
            items:
              type: array
              description: Collection of card management operation
              items:
                $ref: '#/components/schemas/CardManagementOperation'
        - $ref: '#/components/schemas/Collection'
      x-stoplight:
        id: vbz2l4q2roank
    Outstanding:
      type: object
      required:
        - id
        - maximumAmount
        - currentAmount
        - duration
      properties:
        id:
          $ref: '#/components/schemas/OutstandingId'
        maximumAmount:
          $ref: '#/components/schemas/Amount'
        currentAmount:
          $ref: '#/components/schemas/Amount'
        duration:
          $ref: '#/components/schemas/Duration'
        termDay:
          type: integer
          minimum: 1
          maximum: 31
        period:
          type: object
          required:
            - startDate
            - endDate
          properties:
            startDate:
              $ref: '#/components/schemas/DateAtom'
            endDate:
              $ref: '#/components/schemas/DateAtom'
      x-stoplight:
        id: bfnjj2oufx2wl
    Code:
      type: string
      description: 'The code is a unique identifier. It must contain only capital letters, digits and underscores and cannot be longer than 64 characters.'
      example: ABC_42
      x-stoplight:
        id: i0qrdc83m114z
    ConfigurationBody:
      type: object
      description: External system configuration body
      required:
        - config
      properties:
        config:
          type: object
      example:
        config:
          key1: value1
          key2: value2
      x-stoplight:
        id: cozxy6z8d0976
    CustomerActionInitiationRequest:
      type: object
      required:
        - targetPartyId
      properties:
        targetPartyId:
          type: string
          description: The identity id of the customer for whom the action is being initiated
          example: '42'
      x-stoplight:
        id: 5xr7pnna3svzj
    CustomerActionBusinessProcessId:
      type: string
      example: '42'
      x-stoplight:
        id: urpvt2adykx84
    CustomerActionUpdateRequest:
      type: object
      properties:
        email:
          type: string
          description: 'Customer''s new email. Required when updating an `email_change` Customer Action, ignored otherwise.'
          example: email@domain.com
      x-stoplight:
        id: 2p2eaa1v13i60
    PostingRequest:
      allOf:
        - required:
            - accounting
          properties:
            accounting:
              type: array
              description: Source and destination accounts of the transaction
              items:
                $ref: '#/components/schemas/AccountingRequest'
            operation:
              type: string
              description: Type of the operation
            externalId:
              type: string
              description: Client custom data (external) for TransactionId
              example: EXT123456789
            externalData:
              type: object
              description: Set of key-value pairs that you can attach to an object. This can be useful for storing your additional information about the object in a structured format.
            ignoreStatus:
              type: boolean
              x-stoplight:
                id: hejkdt81r3snm
              default: false
              description: 'When true, the transaction will ignore accounts in blocked status. This can be only used by administrators with a specific right.'
            mode:
              type: string
              enum:
                - PREAUTH
                - TRANSACTION
                - MIGRATION
              description: "* `PREAUTH`: Run only a preauthorization. Transaction won't be made.\r\n* `TRANSACTION`: Make the transaction.\r\n* `MIGRATION`: Make the transaction, while allowing you to use `creationDate` setting. Migration mode must be enabled on the system for this to work. Note that `creationDate` becomes mandatory if you use this mode."
            creationDate:
              type: string
              x-stoplight:
                id: mxepfyndlum2u
              format: date-time
              description: Can only be used when `mode` is set to `MIGRATION`. Allows you to specify when this transaction occurred.
            valueDate:
              type: string
              format: date
              description: Value date of the transaction. Format Y-m-d
            srcSupportId:
              type: string
              x-stoplight:
                id: jl531umqjcmjg
              description: The source support id to associate with the contribution for the source account
            dstSupportId:
              type: string
              x-stoplight:
                id: wzg7m2z06rcmu
              description: The recipient support id to associate with the contribution for the recipient account
      type: object
      x-stoplight:
        id: hsxm422gamxio
    TransactionDetails:
      allOf:
        - type: object
          required:
            - accountingEntries
            - contributions
          properties:
            accountingEntries:
              type: array
              items:
                $ref: '#/components/schemas/AccountingEntry'
            contributions:
              type: array
              items:
                $ref: '#/components/schemas/Contribution'
        - $ref: '#/components/schemas/Transaction'
      x-stoplight:
        id: 0hotpauu20yfw
    AuthenticationProcessStatus:
      type: string
      description: Status of the authentication setting
      enum:
        - ACTIVE
        - INACTIVE
      x-stoplight:
        id: 157avzk3k9qbg
    AuthenticationProcessCodeReadOnly:
      allOf:
        - $ref: '#/components/schemas/AuthenticationProcessCode'
        - readOnly: true
      x-stoplight:
        id: h8u4w7vw5xtx8
    AuthenticationProcess:
      type: object
      required:
        - code
        - status
        - links
      properties:
        code:
          $ref: '#/components/schemas/AuthenticationProcessCodeReadOnly'
        status:
          $ref: '#/components/schemas/AuthenticationProcessStatus'
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `self` [GET] Load the current authentication process
              * `methods` [GET] Load the associated authentication methods
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: self
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/authentications/processes/AUTH_POSTING'
            - rel: methods
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/authentications/processes/AUTH_POSTING/methods'
      x-stoplight:
        id: lvi3lm6c3i00w
    AuthenticationProcessMethodCode:
      type: string
      description: Unique code for the method
      example: SMS_METHOD_001
      x-stoplight:
        id: xu5pav4sv1sel
    AuthenticationProcessMethod:
      oneOf:
        - $ref: '#/components/schemas/AuthenticationMethodSMS'
        - $ref: '#/components/schemas/AuthenticationMethodEmail'
        - $ref: '#/components/schemas/AuthenticationMethodPincode'
      discriminator:
        propertyName: type
        mapping:
          SMS: '#/components/schemas/AuthenticationMethodSMS'
          EMAIL: '#/components/schemas/AuthenticationMethodEmail'
          PINCODE: '#/components/schemas/AuthenticationMethodPincode'
      x-stoplight:
        id: qdz1mfw3ml8e8
    InitiateNewAuthenticationSessionParam:
      type: object
      required:
        - authenticationProcessCode
        - identityIdentifier
        - externalId
      properties:
        authenticationProcessCode:
          $ref: '#/components/schemas/AuthenticationProcessCodeEnum'
        identityIdentifier:
          $ref: '#/components/schemas/IdentityIdentifier'
        externalIdentifier:
          $ref: '#/components/schemas/ExternalIdentifier'
        data:
          type: object
          description: Object containing data to persist into session
      x-stoplight:
        id: 50im6d3b9u3xx
    AuthenticationSessionInitiated:
      type: object
      required:
        - token
        - id
        - status
        - identityIdentifier
        - externalId
      properties:
        id:
          $ref: '#/components/schemas/AuthenticationSessionId'
        token:
          $ref: '#/components/schemas/AuthenticationSessionToken'
        expiredAt:
          $ref: '#/components/schemas/DateAtom'
        status:
          $ref: '#/components/schemas/AuthenticationSessionStatus'
        identityIdentifier:
          $ref: '#/components/schemas/IdentityIdentifier'
        externalIdentifier:
          $ref: '#/components/schemas/ExternalIdentifier'
        data:
          type: object
          description: Object containing data to persist into session
        identityId:
          type: string
          description: Identity Id of the authentication session
        links:
          $ref: '#/components/schemas/AuthenticationSessionLinks'
      x-stoplight:
        id: p9wgjhfc2djra
    AuthenticationSessionToken:
      type: string
      description: Authentication session identification token
      example: gregergrthtr4274grgr
      x-stoplight:
        id: fq131yyp4ined
    AuthenticationSessionId:
      type: string
      description: Authentication session identification id
      example: '669'
      x-stoplight:
        id: aysij4yin55r3
    AuthenticationSession:
      type: object
      required:
        - token
        - id
        - status
        - identityIdentifier
        - externalId
        - isSuspicious
      properties:
        id:
          $ref: '#/components/schemas/AuthenticationSessionId'
        token:
          $ref: '#/components/schemas/AuthenticationSessionToken'
        expiredAt:
          $ref: '#/components/schemas/DateAtom'
        status:
          $ref: '#/components/schemas/AuthenticationSessionStatus'
        identityIdentifier:
          $ref: '#/components/schemas/IdentityIdentifier'
        externalIdentifier:
          $ref: '#/components/schemas/ExternalIdentifier'
        data:
          type: object
          description: Object containing data to persist into session
        identityId:
          type: string
          description: Identity Id of the authentication session
        links:
          $ref: '#/components/schemas/AuthenticationSessionLinks'
        isSuspicious:
          type: boolean
          description: To identify authentication session as suspicious or not
        suspiciousComment:
          type: string
          description: Comment to identify the reason for marking the authentication session as suspicious
      x-stoplight:
        id: xsm4cnoyv2zyp
    AuthenticationSessionAuthResponse:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/AuthenticationSessionStatus'
        links:
          $ref: '#/components/schemas/AuthenticationSessionLinks'
      x-stoplight:
        id: u04rc1u7xrwcp
    AuthenticateAuthenticationSessionMethodSmsParam:
      type: object
      description: Code required to authenticate by Sms authentication method
      required:
        - code
      properties:
        code:
          $ref: '#/components/schemas/AuthenticationCode'
      x-stoplight:
        id: ruo9v8bj6uk67
    AuthenticateAuthenticationSessionMethodEmailParam:
      type: object
      description: Code required to authenticate by Email authentication method
      required:
        - code
      properties:
        code:
          $ref: '#/components/schemas/AuthenticationCode'
      x-stoplight:
        id: klklxsx65cqyd
    PincodeKeyboardData:
      type: object
      required:
        - id
        - value
      properties:
        id:
          $ref: '#/components/schemas/PincodeKeyboardId'
        images:
          type: array
          description: 'an array of 16 images, each representing either nothing or a digit'
          minItems: 16
          maxItems: 16
          example:
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjK/v78/Pz9fX1+fn5/f399/f38fHx////9xjtetAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACfSURBVDiN7dQ/C4JQFAXwq4k8N/sSkltrW6ub4KJb0OQWbW0iRLRF2ovzbbtvDM6davSsPx7v/oErsubJxY5l0SI/y633LZUEmj2TXZCJSYfNFU8m535wgFGbgzdkxMwlBk5cUrxpP0Fw5OJWwMArkAq1IXccDMnwIKIzMN6UOugL/afCpIvYEonDFl6sH1eq1EwkKXwjVL6zyP/FvHwfnhou18ClDQkAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjIfHx+/v79fX19/f3/f39+fn58/Pz////++JpndAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACDSURBVDiNY2AQxA4EGHADXHKMozIUy3CUTavALhM5c+bMAGwyLECJmVOwybDNnMIycxo2mc6ZBQyVMxuwyEQCRTsRFiHJWM5UYNCcaYBFJhMsk4BFZuZMBgZOPDITyJDBZhpuF+B2dSVOn3riDB3cIYo7FnDHHJ7YRgWjMtSXwVnyAQB+9zaCVQB/9wAAAABJRU5ErkJggg==
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjJ/f38/Pz8fHx+fn5/f39+/v79fX1////+aYKOoAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACoSURBVDiN7dQxDwFBEAXg51w4Hf9Aq9ModNuhU0i0EkSmU2i2u1YnESvv35qrkLytKG/aLzP7ZooFRrqGyFfOOq38LFVMGyllJDlV0nfgXcmV+yWfSqKPmrzHfYgRWHEshC4DnmVP8J6dfKf2FEo8W9d4E9Jr9pFSGpnkNBR2XGhBk3qdEb3p1oJfJ8h9LhUfEDJvQh+UFA4pKMHMTjWkfFcr/5fsz/cCMz82BjZhFdsAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjKfn58/Pz/f399fX18fHx9/f3+/v7////+7iz3EAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAABkSURBVDiN7dShDcAwDERRt8ByWDtOF4gUFppRukUU5m0rtaQgnxnm0wdPOpFz3iEc2bYkQMw7yE2iTmIojUS9gJhfIG2kuahnEPMK0obMRUsG2b2CJH/rMfIp7RMr/5bECz7fA5etMI9vuUYuAAAAAElFTkSuQmCC
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjLf39+fn58/Pz9fX1+/v79/f38fHx/////bxromAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACkSURBVDiN7ZShDoMwFEUfCSTMwR8gENTN4rA4LI7MENzsHMEsc8vCxP3bvdbAkvvUJrmyp6+9p6IiOU8mdiwWHeRncp8wzowk0KyMtJ6gIaRGGTucCXG6v0VBCCBywpOQKcwMtIG/hzXQZaCkpgvwsk3f3NS6p0YnPe3m1OdhmM5KmKkLp7GZW2hwJWTxrTehHUn9G1TMR5ILRqHkOwf5PzF/vg/NyDgAvn+1IQAAAABJRU5ErkJggg==
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjKfn58/Pz8fHx9/f3/f39+/v79fX1////+j2q/UAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACbSURBVDiN7dQ9CoNAEAXgCRGjnd7ALqRLm24rwc7WTrDaAySwXdp0ISGBd1v/ml15U2nptB+P2ZmBFcl5ZaKXZoddVkvywN0wiSyAjkk8AP6GSIPuaFETcXjKDS2RszWS4q28uqKZuVfBJQKuXEp82DzTrC2XEjBcHL5C5eT1D+XiR3xJgki4659weY1XoHtzqlhVFrXL9qL+fD2XjjDB7uM8UwAAAABJRU5ErkJggg==
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjK/v78/Pz9fX1+fn59/f3/f398fHx////9YH2UiAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAB+SURBVDiN7dQhD0BQFMXxa8ZofANVUzVVUzVVU19TNTM259sy6d3tnkT0r7/t7bwXnkhulwmPWfDLW8HT+pHcJQ6DLREOsq3FRMShsiX2DtOy4CQyoiPiMNsSYhNbIuxEUn+AkhoFETVNSY+GSOm9jRZ1HSWAENH98r3Qn+8C+nQomSj77pIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjKfn59fX1/f39+/v79/f38/Pz8fHx////8Pkci4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACWSURBVDiNY2AQxA4EGHADXHKMozKUynDMBAFsMuw4ZdhwyrDOTMBhDwtOmc6ZBjhkLGeqerphlckEOcADm0wkSGYqNhkVF4vmmQi70EInc6YCDpnOmQ44ZDhnTiBZpnNmABaZEM8GoAsSsMhoznRnnjmzAYtMJ8inkxmwyLB7AmUSsMkwtEVOUWfAKoMKRmWoL4Oz5AMA6wcwRTqhe+MAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAG1BMVEUAAAAyMjK/v7+fn58/Pz/f398fHx9fX1////9tbpBCAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAABMSURBVDiNY2AQxA4EGHADXHKMozJUkKnowCHDFoFLJrUDhwxLBA4ZFosOHDIcHbhlQnDJNCXgkGEqYMDlNoZRGbwyyGBUhvoyOEs+AJjIIDEL67UJAAAAAElFTkSuQmCC
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjJ/f38fHx8/Pz+fn5/f39+/v79fX1////9VClHYAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAClSURBVDiN7dQtD8IwEMbxI10gOPgGWBwCSOpm51AkOMJLyDkSDHNzCw7V9fm23CTJcwrkzv7S9H8VFZnzmYk/no0G+V1avZZUtgAyk6AmKIlMkEONHZGIhcQbkyVWTtshedXabfTEJVnamUnfjMTlUigaKo28cGf3WHXEkUgNkSnezqb8TGWvU9F7xshr3lb0+3RsH0sGHlTCHk+h8j2D/F/cn+8DWgo2STo2HycAAAAASUVORK5CYII=
          items:
            type: string
            format: binary
            description: a transparent image representing a digit or empty (PNG)
      x-stoplight:
        id: 34vpjo0xrynvg
    AuthenticateAuthenticationSessionMethodPincodeParam:
      type: object
      required:
        - pincode
      properties:
        pincode:
          $ref: '#/components/schemas/PincodeSubmission'
      x-stoplight:
        id: sx97hsrlg0g5c
    WriteOnlySpendingCategoryId:
      allOf:
        - $ref: '#/components/schemas/SpendingCategoryId'
        - writeOnly: true
      x-stoplight:
        id: 3fzdvk1a5vq5e
    SpendingDetailId:
      type: string
      description: Spending detail unique identifier
      readOnly: true
      example: SPD123
      x-stoplight:
        id: 7qdb9mshmsa2f
    TransactionAttachmentId:
      type: string
      description: Transaction attachment unique identifier
      readOnly: true
      example: TRXATT123
      x-stoplight:
        id: cwof2ow5ttthq
    Settings:
      type: object
      properties:
        default_language:
          type: string
          description: The default language for platform
          example: en_US
        default_currency:
          type: string
          description: The default currency for platform
          example: USD
        enabled_languages:
          type: array
          description: The enabled languages for platform
          items:
            type: string
            example: fr_FR
        enabled_currencies:
          type: array
          description: The enabled currencies for platform
          items:
            type: string
            example: EUR
      x-stoplight:
        id: 5gcqr2lflkchx
    ExchangeRateEditionRequest:
      type: object
      required:
        - exchangeRates
      properties:
        exchangeRates:
          type: object
          required:
            - buyRate
            - sellRate
          properties:
            buyRate:
              description: Exchange rate for buying the foreign currency
              type: number
              format: float
              example: 1.0941
            sellRate:
              description: Exchange rate for selling the foreign currency
              type: number
              format: float
              example: 1.131
      x-stoplight:
        id: veryjerhchfuv
    CreateExchangeRateHistoryResponse:
      type: object
      properties:
        id:
          type: string
          example: EURUSD20240123
          description: The id of the exchange rate between Euro and US Dollar on the specified date
        historyId:
          type: string
          description: The id of the history of the exchange rate between Euro and US Dollar
          example: EURUSD
      x-stoplight:
        id: yg70demffm34i
    Envelope:
      type: object
      required:
        - subject
        - documents
        - signers
      properties:
        subject:
          type: string
          description: The subject of the documents to be signed
          example: subject of documents
        documents:
          description: List of documents to be signed
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/DocumentNotStored'
              - $ref: '#/components/schemas/DocumentStored'
        signers:
          description: List of signers for the documents
          type: array
          items:
            $ref: '#/components/schemas/Signer'
        callbackUrl:
          description: The callback URL to be called when the signing process is completed with method POST and json body. See (/docusign/envelopes/receive) for more information.
          type: string
          example: 'https://example.com/callback'
      x-stoplight:
        id: 488rbp1qrhb16
    ReceiveEnvelope:
      type: object
      properties:
        event:
          type: string
          example: envelope-voided
        apiVersion:
          type: string
          example: v2.1
        uri:
          type: string
          example: /restapi/v2.1/accounts/f8476a70-416d-4fc2-bbc0-90bb081d5994/envelopes/f8476a70-416d-4fc2-bbc0-90bb081d5994
        retryCount:
          type: integer
          example: 0
        configurationId:
          type: integer
          example: 0
        generatedDateTime:
          type: string
          format: date-time
          example: '2024-02-06T16:32:00.7656563Z'
        data:
          type: object
          properties:
            accountId:
              type: string
              example: f8476a70-416d-4fc2-bbc0-90bb081d5994
            userId:
              type: string
              example: f8476a70-416d-4fc2-bbc0-90bb081d5994
            envelopeId:
              type: string
              example: f8476a70-416d-4fc2-bbc0-90bb081d5994
            envelopeSummary:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - voided
                    - completed
                    - declined
                    - delivered
                    - sent
                  example: voided
                documentsUri:
                  type: string
                  example: /envelopes/f8476a70-416d-4fc2-bbc0-90bb081d5994/documents
                recipientsUri:
                  type: string
                  example: /envelopes/f8476a70-416d-4fc2-bbc0-90bb081d5994/recipients
                attachmentsUri:
                  type: string
                  example: /envelopes/f8476a70-416d-4fc2-bbc0-90bb081d5994/attachments
                envelopeUri:
                  type: string
                  example: /envelopes/f8476a70-416d-4fc2-bbc0-90bb081d5994
                emailSubject:
                  type: string
                  example: Offre d'epargne
                envelopeId:
                  type: string
                  example: d569ddcb-8aa5-48dd-b5fe-048d879e9aeb
                signingLocation:
                  type: string
                  example: online
                customFieldsUri:
                  type: string
                  example: /envelopes/f8476a70-416d-4fc2-bbc0-90bb081d5994/custom_fields
                notificationUri:
                  type: string
                  example: /envelopes/f8476a70-416d-4fc2-bbc0-90bb081d5994/notification
                enableWetSign:
                  type: boolean
                  example: true
                allowMarkup:
                  type: boolean
                  example: false
                allowReassign:
                  type: boolean
                  example: true
                createdDateTime:
                  type: string
                  format: date-time
                  example: '2024-02-06T16:31:37.44Z'
                lastModifiedDateTime:
                  type: string
                  format: date-time
                  example: '2024-02-06T16:32:00.733Z'
                initialSentDateTime:
                  type: string
                  format: date-time
                  example: '2024-02-06T16:31:38.38Z'
                sentDateTime:
                  type: string
                  format: date-time
                  example: '2024-02-06T16:31:38.38Z'
                voidedDateTime:
                  type: string
                  format: date-time
                  example: '2024-02-06T16:32:00.733Z'
                voidedReason:
                  type: string
                  example: failure
                statusChangedDateTime:
                  type: string
                  format: date-time
                  example: '2024-02-06T16:32:00.733Z'
                documentsCombinedUri:
                  type: string
                  example: /envelopes/f8476a70-416d-4fc2-bbc0-90bb081d5994/documents/combined
                certificateUri:
                  type: string
                  example: /envelopes/f8476a70-416d-4fc2-bbc0-90bb081d5994/documents/certificate
                templatesUri:
                  type: string
                  example: /envelopes/f8476a70-416d-4fc2-bbc0-90bb081d5994/templates
                expireEnabled:
                  type: boolean
                  example: true
                expireDateTime:
                  type: string
                  format: date-time
                  example: '2024-06-05T16:31:38.38Z'
                expireAfter:
                  type: string
                  example: '120'
                sender:
                  type: object
                  properties:
                    userName:
                      type: string
                      example: John Doe
                    userId:
                      type: string
                      example: f8476a70-416d-4fc2-bbc0-90bb081d5994
                    accountId:
                      type: string
                      example: f8476a70-416d-4fc2-bbc0-90bb081d5994
                    email:
                      type: string
                      example: john.doe@sample.com
                    ipAddress:
                      type: string
                      example: 54.36.133.155
                envelopeDocuments:
                  type: array
                  items:
                    type: object
                    properties:
                      documentId:
                        type: string
                        example: '42'
                      documentIdGuid:
                        type: string
                        example: f8476a70-416d-4fc2-bbc0-90bb081d5994
                      name:
                        type: string
                        example: File.pdf
                      type:
                        type: string
                        example: content
                      uri:
                        type: string
                        example: /envelopes/f8476a70-416d-4fc2-bbc0-90bb081d5994/documents/42
                      order:
                        type: string
                        example: '1'
                      pages:
                        type: array
                        items:
                          type: object
                          properties:
                            pageId:
                              type: string
                              example: f8476a70-416d-4fc2-bbc0-90bb081d5994
                            sequence:
                              type: string
                              example: '1'
                            height:
                              type: string
                              example: '842'
                            width:
                              type: string
                              example: '596'
                            dpi:
                              type: string
                              example: '72'
                      display:
                        type: string
                        example: inline
                      includeInDownload:
                        type: boolean
                        example: true
                      signerMustAcknowledge:
                        type: string
                        example: no_interaction
                      templateRequired:
                        type: boolean
                        example: false
                      authoritativeCopy:
                        type: boolean
                        example: false
                      PDFBytes:
                        type: string
                        example: RU9G
      x-stoplight:
        id: u48sxe8mctxr6
    ProductCollection:
      description: Sorted and paginated list of products
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              items:
                $ref: '#/components/schemas/Link'
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/cheque-products?limit=20&offset=40'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/cheque-products?limit=20&offset=60'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/cheque-products?limit=20&offset=20'
        - type: object
          properties:
            items:
              type: array
              description: Collection of product
              items:
                $ref: '#/components/schemas/ProductCollectionItem'
      x-stoplight:
        id: vj1188l779s09
    ProductCollectionItem:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for the product.
        name:
          type: string
          description: The name of the product.
        generalAttributes:
          type: object
          properties:
            productType:
              type: string
              description: The type of the product.
              example: Commissions account
            dependency:
              type: string
              description: The dependency of the product.
              example: Autonomous
            management:
              type: string
              description: The management of the product.
              example: Managed
            supportType:
              type: string
              description: The support type of the product.
              example: Account
          description: An array of product attibutes associated with the product.
      x-stoplight:
        id: hehrkif81qe00
    ChequeProductCollection:
      description: Sorted and paginated list of cheque products
      allOf:
        - properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            links:
              type: array
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/cheque-products?limit=20&offset=40'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/cheque-products?limit=20&offset=60'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/cheque-products?limit=20&offset=20'
              items:
                $ref: '#/components/schemas/Link'
              readOnly: true
        - properties:
            items:
              type: array
              description: Collection of cheque products
              items:
                $ref: '#/components/schemas/ChequeProduct'
      type: object
      x-stoplight:
        id: 8w81lezmpdeeh
    CreateChequeProductRequest:
      type: object
      required:
        - name
        - numberOfCheques
      properties:
        name:
          type: string
          description: Product name. Must be unique.
        code:
          type: string
          description: A unique code identifying the cheque product.
        numberOfCheques:
          type: integer
          description: The total number of cheques within the cheque product.
          minLength: 1
          maxLength: 3
          example: 42
        profileIds:
          type: array
          description: An array of profile IDs associated with the cheque product.
          example:
            - 123
            - 456
          items:
            type: integer
        relatedProductIds:
          type: array
          description: An array of related product IDs for the cheque product. Can only be CURRENT account product types.
          example:
            - 123
            - 456
          items:
            type: integer
        externalData:
          type: object
          description: Set of key-value pairs that you can attach to an object. This can be useful for storing your additional information about the object in a structured format.
          example:
            key1: value1
            key2: value2
      x-stoplight:
        id: u4cdyehxds4yt
    ChequeProduct:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the product.
        code:
          type: string
          description: A unique code identifying the product.
        name:
          type: string
          description: The name of the product.
        numberOfCheques:
          type: integer
          description: The total number of cheques within the cheque product.
          minLength: 1
          maxLength: 3
          example: 42
        profileIds:
          type: array
          description: An array of profile IDs associated with the cheque product.
          example:
            - '123'
            - '456'
          items:
            type: string
        relatedProductsIds:
          type: array
          description: An array of allowed related product IDs for the cheque product. Can only be of SAVINGS or CURRENT product types.
          example:
            - '123'
            - '456'
          items:
            type: string
        externalData:
          type: object
          description: Set of key-value pairs that you can attach to an object. This can be useful for storing your additional information about the object in a structured format.
          example:
            key1: value1
            key2: value2
        links:
          type: array
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `ReadChequeProduct` [GET] Read cheque product
              * `UpdateChequeProduct` [PATCH] Update cheque product
              * `DeleteChequeProduct` [DELETE] Delete cheque product
          example:
            - rel: ReadChequeProduct
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/cheque-products/42'
            - rel: UpdateChequeProduct
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/cheque-products/42'
            - rel: DeleteChequeProduct
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/cheque-products/42'
          items:
            $ref: '#/components/schemas/Link'
          readOnly: true
      x-stoplight:
        id: a354oj9ivceju
    UpdateChequeProductRequest:
      type: object
      properties:
        numberOfCheques:
          type: integer
          description: The total number of cheques within the cheque product.
          minLength: 1
          maxLength: 3
          example: 42
        profileIds:
          type: array
          description: An array of profile IDs associated with the cheque product.
          example:
            - 123
            - 456
          items:
            type: integer
        relatedProductsIds:
          type: array
          description: An array of related product IDs for the cheque product. Can only be CURRENT account product types.
          example:
            - 123
            - 456
          items:
            type: integer
        externalData:
          type: object
          description: Set of key-value pairs that you can attach to an object. This can be useful for storing your additional information about the object in a structured format.
          example:
            key1: value1
            key2: value2
      x-stoplight:
        id: ldghqcauiy5bs
    OperationAwaitingDecisionProcessId:
      type: string
      x-stoplight:
        id: 3g1riqch04y70
      description: Operation awaiting decision identifier
      example: '123'
      title: ''
    OperationAwaitingDecisionStatus:
      type: string
      x-stoplight:
        id: ecmvojd0voayn
      description: Status of the operation awaiting decision
      enum:
        - PENDING
        - VALIDATED
        - REFUSED
    OperationAwaitingDecisionProcess:
      type: object
      x-stoplight:
        id: 00fbgtg32zatb
      required:
        - status
        - reason
        - operation
        - createdAt
      properties:
        id:
          $ref: '#/components/schemas/OperationAwaitingDecisionProcessId'
        status:
          $ref: '#/components/schemas/OperationAwaitingDecisionStatus'
        reason:
          $ref: '#/components/schemas/OperationAwaitingDecisionReason'
        operation:
          $ref: '#/components/schemas/OperationAwaitingDecisionOperation'
        creationTransactionId:
          type: string
          description: Transaction id associated with the creation of the operation awaiting decision
        createdAt:
          $ref: '#/components/schemas/DateAtom'
          description: The creation date of the operation awaiting decision
        expiredAt:
          $ref: '#/components/schemas/DateAtom'
          description: 'If exists, the expiration date of the operation awaiting decision'
        decisionTransactionId:
          type: string
          description: Transaction id associated with the decision of the operation awaiting decision
        decisionBy:
          type: string
          description: The approval/refusal user of the operation awaiting decision
        decisionAt:
          $ref: '#/components/schemas/DateAtom'
          description: The approval/refusal date of the operation awaiting decision
        decisionComment:
          type: string
          description: The approval/refusal comment of the operation awaiting decision
      description: ''
    InputCollectionUpdate:
      type: object
      description: Form values associated to the corresponding input id
      additionalProperties:
        oneOf:
          - type: string
          - type: number
          - type: integer
          - type: boolean
          - type: array
            items: {}
          - $ref: '#/components/schemas/InputCollectionUpdate'
      example:
        id1: value1
        id2: value2
        id3:
          - value3-1
          - value3-2
        collectionId4:
          id5: value4
      x-stoplight:
        id: 9vozojuseb1il
    ExternalData:
      type: object
      description: Set of key-value pairs that you can attach to an object. This can be useful for storing your additional information about the object in a structured format.
      example:
        key1: value1
        key2: value2
      x-stoplight:
        id: cshdg6iv2gn7z
    UserProfile:
      description: User habilitation profile
      type: object
      required:
        - id
        - name
        - description
        - role
      properties:
        id:
          $ref: '#/components/schemas/ReadOnlyUserProfileId'
        name:
          type: string
          description: The user Profile name
          example: User Profile 42
        description:
          type: string
          description: The user Profile description
          example: User Profile 42 description
        role:
          $ref: '#/components/schemas/IdentityRole'
        ownerId:
          $ref: '#/components/schemas/WriteOnlyIdentityId'
        owner:
          $ref: '#/components/schemas/UserProfileOwner'
      x-stoplight:
        id: gw3ua8da31y4l
    UserProfileId:
      type: string
      description: User habilitation profile unique identifier
      example: '42'
      x-stoplight:
        id: h9d1eldle70qb
    Limits:
      type: object
      description: Card's limits
      properties:
        LIMIT_CASHOUT_DAY:
          type: integer
          example: 100
          description: Cashout per day limit
        LIMIT_CASHOUT_WEEK:
          type: integer
          example: 100
          description: Cashout per week limit
        LIMIT_CASHOUT_MONTH:
          type: integer
          example: 100
          description: Cashout per month limit
        LIMIT_CASHOUT_YEAR:
          type: integer
          example: 100
          description: Cashout per year limit
        LIMIT_CASHOUT_ALL:
          type: integer
          example: 100
          description: Total cashout limit
        LIMIT_PAYMENT_DAY:
          type: integer
          example: 100
          description: Payment per day limit
        LIMIT_PAYMENT_WEEK:
          type: integer
          example: 100
          description: Payment per week limit
        LIMIT_PAYMENT_MONTH:
          type: integer
          example: 100
          description: Payment per month limit
        LIMIT_PAYMENT_YEAR:
          type: integer
          example: 100
          description: Payment per year limit
        LIMIT_PAYMENT_ALL:
          type: integer
          example: 100
          description: Total payment limit
      x-stoplight:
        id: vd90zrn3pjaei
    CreateCardFeaturesProperty:
      type: object
      properties:
        cashOperation:
          type: boolean
          example: true
          description: Are cash operation available ?
        foreignPayment:
          type: boolean
          example: false
          description: Is foreign payment available ?
        onlinePayment:
          type: boolean
          example: true
          description: Is online payment available ?
        nfc:
          type: boolean
          example: false
          description: Is NFC payment allowed ?
        paymentAuthorized:
          type: boolean
          example: false
          description: Is payment authorized ?
        foreignWithdrawal:
          type: boolean
          example: true
          description: Is foreign withdrawal allowed ?
        foreignOnlinePayment:
          type: boolean
          example: true
          description: Is foreign online payment allowed ?
        foreignAll:
          type: boolean
          example: true
          description: Are foreign payment and withdrawal allowed ?
          readOnly: true
        eurWithdrawal:
          type: boolean
          example: true
          description: Is withdrawal allowed in the European zone ?
          readOnly: true
        eurPayment:
          type: boolean
          example: true
          description: Is payment allowed in the European zone ?
          readOnly: true
      x-stoplight:
        id: rw2nxkgt2v02y
    CardFeatureId:
      type: string
      description: |
        Feature Identitifier - Depends on product configuration
        - `NFC` : card can be used for contactless payment
        - `CASH_OPERATION` : card can be used to withdraw cash
        - `EUR_WITHDRAWAL` : card can be used to withdraw cash in euro zone
        - `FOREIGN_WITHDRAWAL` : card can be used to withdraw cash in foreign countries
        - `PAYMENT_AUTHORIZED` : card can be used to pay
        - `EUR_PAYMENT` : card can be used to pay in euro zone
        - `FOREIGN_PAYMENT` : card can be used to pay in foreign countries
        - `FOREIGN_ALL` : card can be used to pay or withdraw cash in foreign countries
        - `ONLINE_PAYMENT` : card can be used to pay online
        - `FOREIGN_ONLINE_PAYMENT` : card can be used to pay online in foreign countries
      enum:
        - NFC
        - CASH_OPERATION
        - EUR_WITHDRAWAL
        - FOREIGN_WITHDRAWAL
        - PAYMENT_AUTHORIZED
        - EUR_PAYMENT
        - FOREIGN_PAYMENT
        - FOREIGN_ALL
        - ONLINE_PAYMENT
        - FOREIGN_ONLINE_PAYMENT
      x-stoplight:
        id: vjntwf53c00mk
    Limit:
      type: object
      required:
        - limit
        - amount
      properties:
        limit:
          $ref: '#/components/schemas/CardLimit'
        amount:
          description: Limit amount (in cents)
          type: integer
      x-stoplight:
        id: 4qv0s3758bw0u
    PinSendingChannelType:
      type: string
      description: The channel used to send the pincode
      enum:
        - MAIL
        - SMS
        - APP
      x-stoplight:
        id: uncpd9gy5r4e2
    AuthenticationProcessCodeWriteOnly:
      allOf:
        - $ref: '#/components/schemas/AuthenticationProcessCode'
        - writeOnly: true
      x-stoplight:
        id: b7o1s6abrhs8n
    SpendingsAdditionalDataKey:
      type: string
      description: Additional data key
      x-stoplight:
        id: a7j3iyt74le7s
    SpendingDetailUpdate:
      type: object
      description: Spending details
      properties:
        id:
          $ref: '#/components/schemas/SpendingDetailId'
        amount:
          $ref: '#/components/schemas/Amount'
        category:
          $ref: '#/components/schemas/BaseSpendingCategory'
        categoryId:
          $ref: '#/components/schemas/WriteOnlySpendingCategoryId'
        subcategory:
          $ref: '#/components/schemas/BaseSpendingCategory'
        subcategoryId:
          $ref: '#/components/schemas/WriteOnlySpendingCategoryId'
        label:
          type: string
          description: Description of the spending detail
        additionalData:
          type: array
          items:
            type: object
            properties:
              key:
                $ref: '#/components/schemas/SpendingsAdditionalDataKey'
              value:
                type: string
                description: additional data value we want to update
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `updateSpendingDetail` [PATCH] Update this spending detail
              * `deleteSpendingDetail` [DELETE] Delete this spending detail
              * `addSpendingOnSameTransaction` [POST] Add another spending on the same transaction
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: updateSpendingDetail
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/transactions/42/spendings/43'
            - rel: deleteSpendingDetail
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/transactions/42/spendings/43'
            - rel: addSpendingOnSameTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/transactions/42/spendings'
      x-stoplight:
        id: zqca62o5lpl7d
    AddAttachTransactionSchema:
      type: object
      required:
        - transactionId
        - content
      properties:
        transactionId:
          $ref: '#/components/schemas/TransactionId'
        content:
          type: string
          format: byte
          writeOnly: true
          description: 'Document content, base64 encoded'
        description:
          type: string
          description: Description of the document type and content
      x-stoplight:
        id: 8zane4y0bz2gt
    TransactionAttachment:
      type: object
      required:
        - transactionId
        - id
        - content
        - importDate
        - links
      properties:
        transactionId:
          $ref: '#/components/schemas/TransactionId'
        id:
          $ref: '#/components/schemas/TransactionAttachmentId'
        content:
          type: string
          format: byte
          writeOnly: true
          description: 'Document content, base64 encoded'
        description:
          type: string
          description: Description of the document type and content
        importDate:
          type: string
          format: date-time
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getContent` [GET] Get document content
              * `getPreview` [GET] Get document content thumbnail
              * `deleteAttachment` [DELETE] Delete this attachment
              * `addAttachmentOnSameTransaction` [POST] Add another attachment on the same transaction
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: getContent
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/transactions/42/attachments/43/content'
            - rel: getPreview
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/transactions/42/attachments/43/preview'
            - rel: deleteAttachment
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/transaction/42/attachments/43'
            - rel: addAttachmentOnSameTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/transaction/42/attachments'
      x-stoplight:
        id: 9btkauciahjir
    InvalidRequestError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 0
            message: Invalid value for parameter "parameter_name"
      x-stoplight:
        id: tozxl7gcrnorw
    ForbiddenError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 12345
            message: Client is not allowed to make this action
      x-stoplight:
        id: ktbibx3qvr2nn
    RefreshToken:
      type: string
      description: Refresh token that can be used to refresh this Access Token
      example: |
        def50200d8b0199b7c7362bade48fb6d2e52fed4ef6d4270bbb9260365c17392ad009c1d1e1a8c7bf760281df2e1eeb176ad83332bc00eba386bb67fb6a47b6fb225251f23e8be728727d075288b84c2f54823d6c526b7746d1089918f8fbbada4e14d18df9a9f58c0386aa09bff54803218777e337570699e7b07859096897658d90f9b646029b0c4e054f007766716f25744b2195c05552ed299733a2444fd4461c7d74f88f6dae3842977f3880670f9847beba5d96045b4f21e9d642248b87a213ef3eb5bfb62a743ae457fb8c6e711a733e9f06680f9448e1d57c0ba7fb72dc92f83c815ca79fc0ff9fccd9d8a4bb5bbbd557f0af1643fcaa5564794efa2e9804d2e068ffdfcfe9a03573103a1e3b8ffe51fdaf161d53e677488a9a254f22a5a5ca54099697b83fcf1769130d408094a104740cea7942f7b39ea3a85de1accdb36ac2f0ae0c765ee98f5e5eff28e181a30ee1be198a08723d82c1b9823b71018baae1fb4cfa16589b986cef219e88367eb565a38131a02b2b91cef8c4b57e90412d212c532e4a900797b0ebca5dba43bb40a8bb5ea0d5c909c113b730cbfbc50138699c546a379a62a84fdfba297b84c1c30191c20f9378e7d3b27f9697094a314db2205c2809a74b5c18144f58ec9be66a1c8bd7ca9eb06f338d119538582f29aef67ecc17e8d7e08ea5da39975c3628446283d1f3d5a9fba86c98a8466394065db64aff2e6caaf3ce39dd5d50a6fc75fcb123f09fe42121097f2f72e67d8faaf27b714f712e358fdb8da306615c70a1fbbc73a8df96978785acce47bf76256d338e5bf0078c83f4d81b991e050bc1c65a501cf2fefb793fdffeb18580147170c7894e559ef422d8782344e866c909fd578539588707509b6431773ae227a506d9bee11a7fb50b061fc1534c9e345e6eee5d25b00452f147c5b7f308b412100eae597114966f3aa68837ca24e85168655dddcd3313f5cd7b563429e15a5bd9e383acd7ae22515ffb2d87d6f7a03e08590a4937f6cae3510d39debdd16096215f9241bf5ff7745a6afbb959cb82ec3615962c36c
      x-stoplight:
        id: cm9t7ugwaz9nq
    UnauthorizedError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 9
            message: You don't have access to this ressource
      x-stoplight:
        id: r2rwx02l5omvi
    NotFoundError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 0
            message: Resource has not been found
      x-stoplight:
        id: kvkb4rlkhqz50
    AuditEntryCollection:
      description: Paginated list of audit entries
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              items:
                $ref: '#/components/schemas/Link'
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/audits?limit=20&offset=40&sort=example_sorting_parameter'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/audits?limit=20&offset=60&sort=example_sorting_parameter'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/audits?limit=20&offset=20&sort=example_sorting_parameter'
        - type: object
          properties:
            items:
              type: array
              description: Collection of Audit trails
              items:
                $ref: '#/components/schemas/Audit'
            sort:
              type: string
              description: Field to define sort order
              default: id
              enum:
                - id
                - makerLogin
                - targetIdentityId
      x-stoplight:
        id: l24eid0pyh56l
    ExternalRequestCreated:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the saved screening request
      x-stoplight:
        id: ozkp7xkxbv7vs
    ConflictError:
      oneOf:
        - $ref: '#/components/schemas/Error'
        - $ref: '#/components/schemas/EmbeddedError'
      x-stoplight:
        id: czys7rovu7jjq
    VelocityBatchWithRulesAndValuesCollection:
      type: object
      properties:
        items:
          type: array
          description: Collection of VelocityBatchWithRules and current values for given Identity
          items:
            $ref: '#/components/schemas/VelocityBatchWithRulesAndValues'
      x-stoplight:
        id: g394tr3mabsjz
    RelationCollection:
      description: Sorted and paginated list of relations
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: Collection of relations
              items:
                $ref: '#/components/schemas/Relation'
      x-stoplight:
        id: gxnhasz63qdpq
    Relation:
      type: object
      required:
        - relationId
        - nature
        - associatedParty
        - self
        - links
      properties:
        relationId:
          $ref: '#/components/schemas/RelationId'
        self:
          $ref: '#/components/schemas/RelationSide'
        nature:
          $ref: '#/components/schemas/RelationNature'
        associatedParty:
          $ref: '#/components/schemas/AssociatedIdentity'
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `self` [GET] Get the party informations
              * `getAssociatedParty` [GET] Load associated party
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: self
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/company-relations?id=42'
            - rel: getAssociatedParty
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/identities/42'
      x-stoplight:
        id: vjdeyntw6iq2a
    OperationCollection:
      description: Sorted and paginated list of operations
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: Collection of operations
              items:
                $ref: '#/components/schemas/Operation'
            notBefore:
              type: string
              format: date-time
              description: Transaction date range start
            notAfter:
              type: string
              format: date-time
              description: Transaction date range end
      x-stoplight:
        id: 3pabtvy4tkxko
    OnboardingFile:
      type: object
      description: Onboarding file content
      required:
        - status
        - form
      properties:
        status:
          $ref: '#/components/schemas/OnboardingStatus'
        form:
          $ref: '#/components/schemas/InputCollection'
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `self` [GET] Load the current onboarding file
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: self
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/identities/42/onboarding-file'
        termsOfService:
          type: string
          example: 'https://sandbox.skaleet.com/termsOfService/'
          description: URL to terms and conditions
      x-stoplight:
        id: svw130bjzyf9k
    Link:
      type: object
      readOnly: true
      required:
        - rel
        - href
      properties:
        rel:
          type: string
          description: Link relation
        href:
          type: string
          format: uri
          description: Location URI
      x-stoplight:
        id: fvoye45ctm33i
    PartyExternalReferences:
      description: A collection of PartyExternalReference objects.
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/PartyExternalReference'
      x-stoplight:
        id: 0dw58j70ggdo4
    GetScoreLinkToResults:
      type: object
      description: All Score codes and ScoreResult ids related to a user
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ScoreLinkToScoreResult'
      x-stoplight:
        id: m2t4elipfva9i
    InstructedAmount:
      type: object
      description: Amount of the transfer initially requested by the initiating party
      properties:
        value:
          type: integer
          description: Amount without separator and symbol
          example: 1337
        currency:
          type: string
          description: Alphabetic iso code of associated currency (3 digits)
          minLength: 3
          maxLength: 3
          example: EUR
      x-stoplight:
        id: zdga8lh94c9pf
    PaymentRTransactionInternalStatus:
      type: object
      description: Status (with label) of the payment R transaction within the platform
      required:
        - value
        - label
      properties:
        value:
          $ref: '#/components/schemas/PaymentRTransactionInternalStatusValue'
        label:
          type: string
          description: Status label
          example: Initiated
      x-stoplight:
        id: ijhttiydpntvw
    ReturnedAmount:
      type: object
      description: Returned amount. Mandatory for every payment instrument other than CREDIT_TRANSFER_RECALL_POSITIVE_RESPONSE. Not necessary for this payment instrument.
      required:
        - value
        - currency
      properties:
        value:
          type: integer
          description: Amount without separator and symbol (optional for negative response to credit transfer recall)
          example: 1337
        currency:
          type: string
          description: Alphabetic iso code of associated currency (3 digits) (optional for negative response to credit transfer recall)
          minLength: 3
          maxLength: 3
          example: EUR
      x-stoplight:
        id: fxxmi0jgtwtd3
    PaymentRTransactionAssociatedToPaymentInstructionAfterInitiationLinks:
      type: object
      properties:
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `updatePaymentRTransaction` [PATCH] Update payment R transaction
              * `deletePaymentRTransaction` [DELETE] Delete payment R transaction
              * `initiatePaymentRTransaction` [POST] Initiate a payment R transaction associated to the payment instruction
              * `submitPaymentInstruction` [POST] Submit payment instruction
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: updatePaymentRTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/credit-transfers/payment-r-transactions/1395'
            - rel: deletePaymentRTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/credit-transfers/payment-r-transactions/1395'
            - rel: initiatePaymentRTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1inward-payment-instructions/credit-transfers/1395/payment-R-transactions'
            - rel: submitPaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/1395/submit'
      x-stoplight:
        id: z2q5mmh7aexjw
    PaymentInstructionCreditTransferResponseData:
      type: object
      x-stoplight:
        id: byxuwcu3b9bw0
      required:
        - paymentInstructionInformation
        - paymentInstructionInternalInformation
        - links
      properties:
        paymentInstructionInformation:
          $ref: '#/components/schemas/PaymentInstructionInformationCreditTransferResponse'
        paymentInstructionInternalInformation:
          $ref: '#/components/schemas/PaymentInstructionInternalInformation'
        paymentInstructionInterbankingParties:
          $ref: '#/components/schemas/PaymentInstructionInterbankingParties'
        externalData:
          $ref: '#/components/schemas/PaymentEngineExternalData'
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getPaymentInstruction` [GET] Get this payment instruction
              * `submitPaymentInstruction` [POST] Submit this payment instruction
              * `refusePaymentInstruction` [PATCH] Refuse this payment instruction
              * `exchangePaymentInstruction` [PATCH] Exchange this payment instruction
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: getPaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/payment-instructions/42'
            - rel: submitPaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/payment-instructions/42/submit'
            - rel: refusePaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/payment-instructions/42/refuse'
            - rel: exchangePaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/payment-instructions/42/exchange'
      title: ''
    PaymentInstructionDirectDebitResponseData:
      type: object
      x-stoplight:
        id: 16lgx9f3luamr
      required:
        - paymentInstructionInformation
        - paymentInstructionInternalInformation
        - links
      properties:
        paymentInstructionInformation:
          $ref: '#/components/schemas/PaymentInstructionInformationDirectDebitResponse'
        paymentInstructionInternalInformation:
          $ref: '#/components/schemas/PaymentInstructionInternalInformation'
        paymentInstructionInterbankingParties:
          $ref: '#/components/schemas/PaymentInstructionInterbankingParties'
        externalData:
          $ref: '#/components/schemas/PaymentEngineExternalData'
        links:
          type: array
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getPaymentInstruction` [GET] Get this payment instruction
              * `submitPaymentInstruction` [POST] Submit this payment instruction
              * `refusePaymentInstruction` [PATCH] Refuse this payment instruction
              * `exchangePaymentInstruction` [PATCH] Exchange this payment instruction
          example:
            - rel: getPaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/payment-instructions/42'
            - rel: submitPaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/payment-instructions/42/submit'
            - rel: refusePaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/payment-instructions/42/refuse'
            - rel: exchangePaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/payment-instructions/42/exchange'
          items:
            $ref: '#/components/schemas/Link'
          readOnly: true
    CreditTransferPaymentTransaction:
      type: object
      required:
        - paymentTransactionInternalInformation
        - paymentTransactionDateInformation
        - paymentTransactionAmountInformation
        - paymentTransactionParties
        - links
      properties:
        paymentTransactionInformation:
          $ref: '#/components/schemas/PaymentTransactionInformation'
        paymentTransactionInternalInformation:
          $ref: '#/components/schemas/PaymentTransactionInternalInformation'
        paymentTransactionDateInformation:
          type: object
          description: Payment Transaction date informations
          required:
            - instructedDate
            - creationDate
          properties:
            creationDate:
              allOf:
                - $ref: '#/components/schemas/CreationDate'
                - readOnly: true
            instructedDate:
              $ref: '#/components/schemas/InstructedDate'
            settlementDate:
              $ref: '#/components/schemas/SettlementDate'
        paymentTransactionAmountInformation:
          type: object
          description: Payment Transaction amount information
          required:
            - instructedAmount
            - chargeBearer
          properties:
            instructedAmount:
              allOf:
                - $ref: '#/components/schemas/InstructedAmount'
                - required:
                    - currency
                    - value
            chargeBearer:
              $ref: '#/components/schemas/ChargeBearer'
            chargesAmount:
              $ref: '#/components/schemas/ChargesAmount'
            foreignAmount:
              $ref: '#/components/schemas/ForeignAmount'
              x-stoplight:
                id: 6y8tr959otagf
              description: Foreign amount of a forex operation
            exchangeRate:
              $ref: '#/components/schemas/ExchangeRate'
              x-stoplight:
                id: tyq375rvxj357
        paymentTransactionParties:
          type: object
          description: Payment Transaction parties informations
          required:
            - debtor
            - creditor
          properties:
            initiatingParty:
              allOf:
                - $ref: '#/components/schemas/InitiatingParty'
                - required:
                    - name
                    - id
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
                - required:
                    - name
            creditor:
              allOf:
                - $ref: '#/components/schemas/Creditor'
                - required:
                    - name
            ultimateCreditor:
              $ref: '#/components/schemas/UltimateCreditor'
        paymentTransactionDedicatedInformations:
          type: object
          description: Payment Transaction dedicated informations
          properties:
            remittanceInformation:
              $ref: '#/components/schemas/RemittanceInformation'
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
        links:
          $ref: '#/components/schemas/CreditTransferPaymentTransactionAssociatedToPaymentInstructionAfterInitiationLinks'
      x-stoplight:
        id: jnriz5pkwwyjq
    DirectDebitPaymentTransaction:
      type: object
      required:
        - paymentTransactionInternalInformation
        - paymentTransactionDateInformation
        - paymentTransactionAmountInformation
        - paymentTransactionParties
        - links
      properties:
        paymentTransactionInformation:
          $ref: '#/components/schemas/PaymentTransactionInformation'
        paymentTransactionInternalInformation:
          $ref: '#/components/schemas/PaymentTransactionInternalInformation'
        paymentTransactionDateInformation:
          type: object
          description: Payment Transaction date informations
          required:
            - instructedDate
            - creationDate
          properties:
            creationDate:
              allOf:
                - $ref: '#/components/schemas/CreationDate'
                - readOnly: true
            instructedDate:
              $ref: '#/components/schemas/InstructedDate'
            settlementDate:
              $ref: '#/components/schemas/SettlementDate'
        paymentTransactionAmountInformation:
          type: object
          description: Payment Transaction amount information
          required:
            - instructedAmount
            - chargeBearer
          properties:
            instructedAmount:
              allOf:
                - $ref: '#/components/schemas/InstructedAmount'
                - required:
                    - currency
                    - value
            chargeBearer:
              $ref: '#/components/schemas/ChargeBearer'
            chargesAmount:
              $ref: '#/components/schemas/ChargesAmount'
        paymentTransactionParties:
          type: object
          description: Payment Transaction parties informations
          required:
            - debtor
            - creditor
          properties:
            initiatingParty:
              allOf:
                - $ref: '#/components/schemas/InitiatingParty'
                - required:
                    - name
                    - id
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
                - required:
                    - name
            creditor:
              allOf:
                - $ref: '#/components/schemas/Creditor'
                - required:
                    - name
            ultimateCreditor:
              $ref: '#/components/schemas/UltimateCreditor'
        paymentTransactionDedicatedInformations:
          type: object
          description: Payment Transaction dedicated informations
          properties:
            remittanceInformation:
              $ref: '#/components/schemas/RemittanceInformation'
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
        links:
          $ref: '#/components/schemas/DirectDebitPaymentTransactionAssociatedToPaymentInstructionAfterInitiationLinks'
      x-stoplight:
        id: qrgbog89rtp24
    CreditTransferPaymentTransactionAssociatedToPaymentInstructionAfterInitiationLinks:
      type: object
      properties:
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `updatePaymentTransaction` [PATCH] Update payment transaction
              * `deletePaymentTransaction` [DELETE] Delete payment transaction
              * `initiatePaymentTransaction` [POST] Initiate a payment transaction associated to the payment instruction
              * `submitPaymentInstruction` [POST] Submit payment instruction
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: updatePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/credit-transfers/payment-transactions/1395'
            - rel: deletePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/credit-transfers/payment-transactions/1395'
            - rel: initiatePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1inward-payment-instructions/credit-transfers/1395/payment-transactions'
            - rel: submitPaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/1395/submit'
      x-stoplight:
        id: cpjxl8emdgss2
    DirectDebitPaymentTransactionAssociatedToPaymentInstructionAfterInitiationLinks:
      type: object
      properties:
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `updatePaymentTransaction` [PATCH] Update payment transaction
              * `deletePaymentTransaction` [DELETE] Delete payment transaction
              * `initiatePaymentTransaction` [POST] Initiate a payment transaction associated to the payment instruction
              * `submitPaymentInstruction` [POST] Submit payment instruction
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: updatePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/direct-debits/payment-transactions/1395'
            - rel: deletePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/direct-debits/payment-transactions/1395'
            - rel: initiatePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1inward-payment-instructions/direct-debits/1395/payment-transactions'
            - rel: submitPaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/1395/submit'
      x-stoplight:
        id: t7rg67seu57hp
    DelegatedAccess:
      type: object
      description: Delegated access to another Party
      required:
        - delegatePartyId
        - ownerPartyId
        - profileId
        - links
      properties:
        delegatePartyId:
          $ref: '#/components/schemas/ReadOnlyIdentityId'
        ownerPartyId:
          $ref: '#/components/schemas/IdentityId'
        profileId:
          $ref: '#/components/schemas/UserProfileId'
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getDelegatePartyDetails` [GET] Fetch full representation of party with delegation
              * `getOwnerPartyDetails` [GET] Fetch full representation of owner party
              * `getProfileDetails` [GET] Fetch details of delegation habilitation profile
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: getDelegatePartyDetails
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/identities/42'
            - rel: getOwnerPartyDetails
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/identities/16'
            - rel: getProfileDetails
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/profiles/104'
      x-stoplight:
        id: 4xdvga9vwrzbk
    CustomerActionsCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CustomerAction'
        count:
          type: integer
          example: 1
      x-stoplight:
        id: af6lya8uxtfyz
    CustomerActionBusinessProcess:
      type: object
      required:
        - id
        - actionCode
        - status
        - links
      properties:
        id:
          $ref: '#/components/schemas/CustomerActionBusinessProcessId'
        actionCode:
          type: string
          example: email_change
        status:
          type: string
          example: INITIATED
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `self` [GET] Get ongoing customer action business process
              * `updateAction` [PATCH] Update customer action business process
              * `submitForValidation` [POST] Submit customer action business process for validation
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: self
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-actions/ongoing-actions/142'
            - rel: updateAction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-actions/ongoing-actions/142'
            - rel: submitForValidation
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-actions/ongoing-actions/142/submit'
      x-stoplight:
        id: obaf8vim7n9ea
    InputCollection:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            inputs:
              type: array
              items:
                $ref: '#/components/schemas/Input'
      x-stoplight:
        id: q9ot0fjlbn6ql
    AuthenticationProcessMethods:
      type: array
      readOnly: true
      items:
        $ref: '#/components/schemas/AuthenticationProcessMethod'
      x-stoplight:
        id: zk3j7wvzqz5o0
    SpendingCategoryArray:
      type: array
      items:
        $ref: '#/components/schemas/SpendingCategory'
      x-stoplight:
        id: yxdoq6uw0p9vf
    SpendingsAdditionalData:
      type: array
      description: Used to define additionnal expense data
      items:
        type: object
        readOnly: true
        required:
          - key
          - label
        properties:
          key:
            $ref: '#/components/schemas/SpendingsAdditionalDataKey'
          label:
            type: string
      example:
        - key: TVA_20
          label: TVA 20%
        - key: TVA_55
          label: TVA 5.5%
        - key: ZONEGEO
          label: Zone géographique
        - key: TVA_AUTRE_PC
          label: TVA Autre (pourcentage)
        - key: TVA_AUTRE_MON
          label: TVA Autre (montant)
      x-stoplight:
        id: 036v58k3xnehj
    SpendingDetailsWithTransactionList:
      type: array
      description: List of spending details
      items:
        $ref: '#/components/schemas/SpendingDetailWithTransaction'
      x-stoplight:
        id: zwmp8ica5mh1b
    SpendingDetail:
      type: object
      description: Spending detail
      properties:
        id:
          $ref: '#/components/schemas/SpendingDetailId'
        amount:
          $ref: '#/components/schemas/Amount'
        category:
          $ref: '#/components/schemas/BaseSpendingCategory'
        subcategory:
          $ref: '#/components/schemas/BaseSpendingCategory'
        label:
          type: string
          description: Description of the spending detail
        additionalData:
          type: array
          items:
            type: object
            properties:
              key:
                $ref: '#/components/schemas/SpendingsAdditionalDataKey'
              label:
                type: string
                description: locale of additional-key in platform config
              value:
                type: string
      x-stoplight:
        id: 7zoaui35mybb9
    TransactionAttachmentsList:
      type: array
      description: List of transaction's attached documents
      items:
        $ref: '#/components/schemas/TransactionAttachment'
      x-stoplight:
        id: x9cxznaqav1fk
    OAuth2PasswordAccessTokenRequest:
      allOf:
        - $ref: '#/components/schemas/OAuth2AccessTokenRequestWithScope'
        - type: object
          required:
            - client_secret
            - username
            - password
          properties:
            username:
              type: string
              description: the ressource owner login or username
            password:
              type: string
              description: the ressource owner password associated to the username
      x-stoplight:
        id: udxkg3cobg37v
    OAuth2AuthCodeAccessTokenRequest:
      allOf:
        - $ref: '#/components/schemas/BaseOAuth2AccessTokenRequest'
        - type: object
          required:
            - code
            - redirect_uri
          properties:
            redirect_uri:
              type: string
              format: uri
              description: one registered redirect URI for the used client_id
              example: 'https://mywebsite.com/oauth-redirect'
            code:
              type: string
              description: the Authorization Code
            code_verifier:
              type: string
              description: The code verifier matching the challenge transmitted on authorization initiation
      x-stoplight:
        id: o4c5m4zmwoyoo
    OAuth2ClientCredentialsAccessTokenRequest:
      allOf:
        - $ref: '#/components/schemas/OAuth2AccessTokenRequestWithScope'
        - type: object
          required:
            - client_id
            - client_secret
      x-stoplight:
        id: rlb9idghr4n9y
    Collection:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
        count:
          type: integer
          description: the total count of objects in collection
          minimum: 0
        offset:
          type: integer
          description: Pagination start (from 0)
          minimum: 0
          default: 0
        limit:
          type: integer
          description: Number of results to display (default 20)
          minimum: 0
          maximum: 100
          default: 20
        sort:
          type: string
          description: Field to define sort order
          default: id
      x-stoplight:
        id: hed8jebfpm8qd
    CardAuthorizationHold:
      type: object
      required:
        - id
        - date
        - cardId
        - label
        - operationType
        - amount
      properties:
        id:
          $ref: '#/components/schemas/CardAuthorizationHoldId'
        state:
          $ref: '#/components/schemas/CardAuthorizationHoldState'
        date:
          type: string
          format: date-time
        cardId:
          $ref: '#/components/schemas/CardId'
        label:
          type: string
        operation:
          type: string
          description: Operation value is used to indicate more details about the type of operation (custom or predefined operation name)
        type:
          deprecated: true
          description: 'old field, use operationType instead'
        operationType:
          $ref: '#/components/schemas/CardAuthorizationHoldType'
        amount:
          $ref: '#/components/schemas/Amount'
        creatorTransactionId:
          $ref: '#/components/schemas/OperationId'
        externalId:
          type: string
          description: External id (from the calling system)
        additionalData:
          $ref: '#/components/schemas/TransactionAdditionalData'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        spendingDetails:
          type: array
          description: List of spending details
          items:
            $ref: '#/components/schemas/CardAuthorizationHoldSpendingDetail'
      x-stoplight:
        id: vcao8og3c6e59
    JobStateType:
      type: string
      description: job status
      enum:
        - enabled
        - disabled
        - error
        - pending
        - running
        - suspended
      x-stoplight:
        id: y8s5rtkixlkha
    ExecutionJob:
      type: object
      properties:
        id:
          type: string
          example: '20220315143826'
          description: id of the last execution
        output:
          type: array
          description: outputs
          items:
            type: string
            example: log
            description: name of output
      x-stoplight:
        id: 2cbn95fcrgb7t
    ExternalProduct:
      allOf:
        - $ref: '#/components/schemas/ProductBase'
        - type: object
          properties:
            type:
              type: string
              description: Type
              enum:
                - CURRENT
                - SAVINGS
                - COMMISSIONS
                - DEDICATED
                - POOL
                - MONEYPOT
                - DEBIT_CARD
                - GUARANTEE_ACCOUNT
                - ACCEPTOR_QRCODE_PAYMENT
                - BEARER_QRCODE_PAYMENT
                - TECHNICAL
                - CREDIT
                - CHEQUE
              example: CREDIT
      x-stoplight:
        id: r5tggpii5nn5a
    EmissionProduct:
      type: object
      properties:
        criteria:
          type: object
          description: Information related to the criteria
          properties:
            amountRanges:
              type: object
              description: Information related to min amount and max amount of the multiple currencies for payment services
              example:
                EUR:
                  minAmount: 0
                  maxAmount: 10000
                USD:
                  minAmount: 0
                  maxAmount: 10000
                GBP:
                  minAmount: 120
                  maxAmount: 1800000
            specificPaymentObject:
              type: array
              description: Specific Payment Object
              example:
                - BONU
                - CASH
              items:
                type: string
                enum:
                  - BONU
                  - CASH
                  - CBLK
                  - CCRD
                  - CORT
                  - DIVI
                  - DVPM
                  - EPAY
                  - FCIN
                  - FCOL
                  - GP2P
                  - GOVT
                  - HEDG
                  - ICCP
                  - IDCP
                  - INTC
                  - INTE
                  - LBOX
                  - LOAN
                  - MP2B
                  - MP2P
                  - OTHR
                  - PENS
                  - RPRE
                  - RRCT
                  - RVPM
                  - SALA
                  - SECU
                  - SSBE
                  - SUPP
                  - TAXS
                  - TRAD
                  - TREA
                  - VATX
                  - WHLD
                  - SWEP
                  - TOPG
                  - ZABA
                  - VOST
                  - FCDT
                  - CIPC
                  - CONC
                  - 'NULL'
            authorizedExchangeCountries:
              type: array
              description: Authorized exchange countries
              example:
                - ID
              items:
                type: string
                example: 'AC,AD,AE,AF,AG,AI,ID,AT,AW,BE,BD'
            blockedBICs:
              type: array
              description: Blocked BIC
              example:
                - CCFRFRPP
              items:
                type: string
        processing:
          type: object
          description: Information related to the processing
          properties:
            bulkPaymentAllowed:
              type: boolean
              description: Authorize bulk payments
              example: true
            strongAuth:
              type: object
              description: Information related to the strong authentication
              properties:
                isRequired:
                  description: Enable or disable the strong authentication
                  example: true
                amountLimit:
                  type: integer
                  description: Minimum amount of the transaction to request for a strong authentication
                  example: 100
                authenticationMethodType:
                  type: string
                  enum:
                    - SMS_OTP
                    - PINCODE
                  description: How to the strong authentication will be requested
                  example: SMS_OTP
                maximumAttempts:
                  type: integer
                  description: Number of failed attempts before the transaction is rejected
                  example: 3
            screening:
              type: object
              description: Information related to the filtering
              properties:
                enabled:
                  type: boolean
                  description: Activate screening
                  example: true
                koStrategies:
                  type: object
                  description: Information related to the screening
                  properties:
                    outwardCreditTransferScreeningRefusedAction:
                      type: string
                      description: Outward transfer fail
                      enum:
                        - CREDIT_BACK_CLIENT
                        - CREDIT_SUSPENSE_ACCOUNT
                      example: CREDIT_SUSPENSE_ACCOUNT
      x-stoplight:
        id: qxh00udb5fbcc
    ReceptionProduct:
      type: object
      properties:
        criteria:
          type: object
          description: Information related to the criteria
          properties:
            amountRanges:
              type: object
              description: Information related to min amount and max amount of the multiple currencies for payment services
              example:
                EUR:
                  minAmount: 0
                  maxAmount: 10000
                USD:
                  minAmount: 0
                  maxAmount: 10000
                GBP:
                  minAmount: 120
                  maxAmount: 1800000
            authorizedExchangeCountries:
              type: array
              description: Authorized exchange countries
              example:
                - ID
              items:
                type: string
                example: 'AC,AD,AE,AF,AG,AI,ID,AT,AW,BE,BD'
            blockedBICs:
              type: array
              description: Blocked BIC
              example:
                - CCFRFRPP
              items:
                type: string
        processing:
          type: object
          description: Information related to the processing
          properties:
            regulatoryControls:
              type: object
              description: Information related to the regulatory controls
              properties:
                nameControlEnabled:
                  type: boolean
                  description: Activate name similarity check
                  example: true
                amountActivationThreshold:
                  type: integer
                  description: 'Amount threshold of an interbanking operation above which similarity check is made, value between minimumAmount and maximumAmount'
                  example: 100000
                minimumSimilarityThreshold:
                  type: number
                  description: Intolerance threshold to be defined between 0 and 1 (1 meaning that names must be exactly the same to accept instruction)
                  example: 0.5
            screening:
              type: object
              description: Information related to the filtering
              properties:
                enabled:
                  type: boolean
                  description: Activate screening
                  example: true
                koStrategies:
                  type: object
                  description: Information related to the screening
                  properties:
                    inwardCreditTransferScreeningRefusedAction:
                      type: string
                      description: Outward transfer fail
                      enum:
                        - CREDIT_SUSPENSE_ACCOUNT
                      example: CREDIT_SUSPENSE_ACCOUNT
      x-stoplight:
        id: 7zj3mq8a783d1
    CreditEmissionProduct:
      allOf:
        - $ref: '#/components/schemas/ProductBase'
        - $ref: '#/components/schemas/EmissionProduct'
        - type: object
          properties:
            type:
              type: string
              description: Type
              example: CREDIT_TRANSFER_EMISSION
      x-stoplight:
        id: ssynufrucqu7l
    CreditReceptionProduct:
      allOf:
        - $ref: '#/components/schemas/ProductBase'
        - $ref: '#/components/schemas/ReceptionProduct'
        - type: object
          properties:
            type:
              type: string
              description: Type
              example: CREDIT_TRANSFER_RECEPTION
      x-stoplight:
        id: 3hhuy8i0u23fj
    DirectEmissionProduct:
      allOf:
        - $ref: '#/components/schemas/ProductBase'
        - $ref: '#/components/schemas/EmissionProduct'
        - type: object
          properties:
            type:
              type: string
              description: Type
              example: DIRECT_DEBIT_EMISSION
      x-stoplight:
        id: fssjpd4bqj45p
    DirectReceptionProduct:
      allOf:
        - $ref: '#/components/schemas/ProductBase'
        - $ref: '#/components/schemas/ReceptionProduct'
        - type: object
          properties:
            type:
              type: string
              description: Type
              example: DIRECT_DEBIT_RECEPTION
      x-stoplight:
        id: m9l8tb8t8x707
    UpdateProductRequest:
      type: object
      properties:
        code:
          type: string
          description: Product code
          example: OCTP
        familyId:
          type: integer
          description: Family id
          example: 1234
        associatedProfileIds:
          type: array
          description: Associated profiles
          example:
            - '1'
            - '2'
          items:
            type: string
        type:
          type: string
          description: this property is used for the request body switching purpose. Please don't put it into the request.
          example: CREDIT
        name:
          type: string
          x-stoplight:
            id: 7t4xm4arlxi5i
      description: ''
      x-stoplight:
        id: wlht1xecr4us7
    UpdateEmissionProductRequest:
      type: object
      properties:
        code:
          type: string
          description: Product code
          example: OCTP
        familyId:
          type: integer
          description: Family id
          example: 1234
        associatedProfileIds:
          type: array
          description: Associated profiles
          items:
            type: string
          example:
            - '1'
            - '2'
            - '3'
        defaultProfileIds:
          type: array
          description: Ids of the profiles for which the product will be automatically created. Need to be in 'associatedProfileIds' first.
          items:
            type: string
          example:
            - '1'
            - '2'
        associableAccountType:
          type: array
          description: Associated profiles
          example:
            - SUB_ACCOUNT
          items:
            type: string
            enum:
              - CURRENT
              - SUB_ACCOUNT
              - DEDICATED
              - COMMISSIONS
              - GUARANTEE_ACCOUNT
              - MONEYPOT
              - TRANSIT
              - POOL
              - ADJUSTMENT
              - GENERAL
              - TECHNICAL
              - SAVINGS
        criteria:
          type: object
          description: Information related to the criteria
          properties:
            amountRanges:
              type: object
              description: Information related to min amount and max amount of the multiple currencies for payment services
              example:
                EUR:
                  minAmount: 0
                  maxAmount: 10000
                USD:
                  minAmount: 0
                  maxAmount: 10000
                GBP:
                  minAmount: 120
                  maxAmount: 1800000
            specificPaymentObject:
              type: array
              description: Specific Payment Object
              example:
                - BONU
                - CASH
              items:
                type: string
                enum:
                  - BONU
                  - CASH
                  - CBLK
                  - CCRD
                  - CORT
                  - DIVI
                  - DVPM
                  - EPAY
                  - FCIN
                  - FCOL
                  - GP2P
                  - GOVT
                  - HEDG
                  - ICCP
                  - IDCP
                  - INTC
                  - INTE
                  - LBOX
                  - LOAN
                  - MP2B
                  - MP2P
                  - OTHR
                  - PENS
                  - RPRE
                  - RRCT
                  - RVPM
                  - SALA
                  - SECU
                  - SSBE
                  - SUPP
                  - TAXS
                  - TRAD
                  - TREA
                  - VATX
                  - WHLD
                  - SWEP
                  - TOPG
                  - ZABA
                  - VOST
                  - FCDT
                  - CIPC
                  - CONC
                  - 'NULL'
            authorizedExchangeCountries:
              type: array
              description: Authorized exchange countries
              example:
                - ID
              items:
                type: string
                example: 'AC,AD,AE,AF,AG,AI,ID,AT,AW,BE,BD'
            blockedBICs:
              type: array
              description: Blocked BIC
              example:
                - CCFRFRPP
              items:
                type: string
        processing:
          type: object
          description: Information related to the processing
          properties:
            bulkPaymentAllowed:
              type: boolean
              description: Authorize bulk payments
              example: true
            strongAuth:
              type: object
              description: Information related to the strong authentication
              properties:
                isRequired:
                  type: boolean
                  description: Enable or disable the strong authentication
                  example: true
                amountLimit:
                  type: integer
                  description: Minimum amount of the transaction to request for a strong authentication
                  example: 100
                authenticationMethodType:
                  type: string
                  enum:
                    - SMS_OTP
                    - PINCODE
                  description: How to the strong authentication will be requested
                  example: SMS_OTP
                maximumAttempts:
                  type: integer
                  description: Number of failed attempts before the transaction is rejected
                  example: 3
            screening:
              type: object
              description: Information related to the screening
              properties:
                enabled:
                  type: boolean
                  description: Activate screening
                  example: true
                koStrategies:
                  type: object
                  description: Information related to the screening
                  properties:
                    outwardCredit:
                      type: string
                      description: 'Outward transfer fail, required if filtering enabled'
                      enum:
                        - CREDIT_BACK_CLIENT
                        - CREDIT_SUSPENSE_ACCOUNT
                      example: CREDIT_SUSPENSE_ACCOUNT
      x-stoplight:
        id: 3looelesc6neq
    UpdateReceptionProductRequest:
      type: object
      properties:
        code:
          type: string
          description: Product code
          example: OCTP
        familyId:
          type: integer
          description: Family id
          example: 1234
        associatedProfileIds:
          type: array
          description: Associated profiles
          items:
            type: string
          example:
            - '1'
            - '2'
            - '3'
        defaultProfileIds:
          type: array
          description: Ids of the profiles for which the product will be automatically created. Need to be in 'associatedProfileIds' first.
          items:
            type: string
          example:
            - '1'
            - '2'
        associableAccountType:
          type: array
          description: Associated profiles
          example:
            - SUB_ACCOUNT
          items:
            type: string
            enum:
              - CURRENT
              - SUB_ACCOUNT
              - DEDICATED
              - COMMISSIONS
              - GUARANTEE_ACCOUNT
              - MONEYPOT
              - TRANSIT
              - POOL
              - ADJUSTMENT
              - GENERAL
              - TECHNICAL
              - SAVINGS
        criteria:
          type: object
          description: Information related to the criteria
          properties:
            amountRanges:
              type: object
              description: Information related to min amount and max amount of the multiple currencies for payment services
              example:
                EUR:
                  minAmount: 0
                  maxAmount: 10000
                USD:
                  minAmount: 0
                  maxAmount: 10000
                GBP:
                  minAmount: 120
                  maxAmount: 1800000
            authorizedExchangeCountries:
              type: array
              description: Authorized exchange countries
              example:
                - ID
              items:
                type: string
                example: 'AC,AD,AE,AF,AG,AI,ID,AT,AW,BE,BD'
            blockedBICs:
              type: array
              description: Blocked BIC
              example:
                - CCFRFRPP
              items:
                type: string
        processing:
          type: object
          description: Information related to the processing
          properties:
            regulatoryControls:
              type: object
              description: Information related to the regulatory controls
              properties:
                nameControlEnabled:
                  type: boolean
                  description: Activate name similarity check
                  example: true
                amountActivationThreshold:
                  type: integer
                  description: 'Amount threshold of an interbanking operation above which similarity check is made, value between minimumAmount and maximumAmount'
                  example: 100000
                minimumSimilarityThreshold:
                  type: number
                  description: Intolerance threshold to be defined between 0 and 1 (1 meaning that names must be exactly the same to accept instruction)
                  example: 0.5
            screening:
              type: object
              description: Information related to the screening
              properties:
                enabled:
                  type: boolean
                  description: Activate screening
                  example: true
                koStrategies:
                  type: object
                  description: Information related to the screening
                  properties:
                    inwardCredit:
                      type: string
                      description: 'Inward transfer fail, required if filtering enabled'
                      enum:
                        - CREDIT_SUSPENSE_ACCOUNT
                      example: CREDIT_SUSPENSE_ACCOUNT
      x-stoplight:
        id: jps2q4vsueb7g
    CardActivationMode:
      type: string
      enum:
        - BY_PROCESSOR_ONLY
        - BY_PLATFORM_WITH_CODE
        - BY_PLATFORM_WITHOUT_CODE
      x-stoplight:
        id: skd8xlmi7ybaf
    DebitCardProductFeature:
      type: string
      description: |
        Handled features by partner
        - `CARD_FEATURE_NFC` : card can be used for contactless payment
        - `CARD_FEATURE_CASHOUT_LOC` : card can be used to withdraw cash
        - `CARD_FEATURE_CASHOUT_EUR` : card can be used to withdraw cash in euro zone
        - `CARD_FEATURE_CASHOUT_INT` : card can be used to withdraw cash in foreign countries
        - `CARD_FEATURE_PAYMENT_LOC` : card can be used to pay
        - `CARD_FEATURE_PAYMENT_EUR` : card can be used to pay in euro zone
        - `CARD_FEATURE_PAYMENT_INT` : card can be used to pay in foreign countries
        - `CARD_FEATURE_TRANSAC_INT` : card can be used to pay or withdraw cash in foreign countries
        - `CARD_FEATURE_PAYMENT_WEB` : card can be used to pay online
        - `CARD_FEATURE_PAYMENT_WEB_INT` : card can be used to pay online in foreign countries
      enum:
        - CARD_FEATURE_CASHOUT_LOC
        - CARD_FEATURE_CASHOUT_EUR
        - CARD_FEATURE_CASHOUT_INT
        - CARD_FEATURE_PAYMENT_LOC
        - CARD_FEATURE_PAYMENT_EUR
        - CARD_FEATURE_PAYMENT_INT
        - CARD_FEATURE_TRANSAC_INT
        - CARD_FEATURE_PAYMENT_WEB
        - CARD_FEATURE_PAYMENT_WEB_INT
        - CARD_FEATURE_NFC
      x-stoplight:
        id: 5p4dlt0ha1j0f
    CardLimit:
      type: string
      description: |
        Handled limits by partner
      enum:
        - LIMIT_CASHOUT_DAY
        - LIMIT_CASHOUT_WEEK
        - LIMIT_CASHOUT_MONTH
        - LIMIT_CASHOUT_YEAR
        - LIMIT_CASHOUT_ALL
        - LIMIT_CASHOUT_TRANSACTION
        - LIMIT_FOREIGN_CASHOUT_TRANSACTION
        - LIMIT_FOREIGN_CASHOUT_DAY
        - LIMIT_FOREIGN_CASHOUT_MONTH
        - LIMIT_PAYMENT_TRANSACTION
        - LIMIT_PAYMENT_DAY
        - LIMIT_PAYMENT_WEEK
        - LIMIT_PAYMENT_MONTH
        - LIMIT_PAYMENT_YEAR
        - LIMIT_PAYMENT_ALL
        - LIMIT_CARD_TO_CARD_BASE_SHARING_TRANSACTION
        - LIMIT_CARD_TO_CARD_BASE_SHARING_DAY
        - LIMIT_CARD_TO_CARD_BASE_SHARING_MONTH
      x-stoplight:
        id: 5de5kx6ma6ftf
    ScreeningRequest:
      type: object
      description: A screening request
      properties:
        id:
          type: string
          example: '1234'
          description: Internal id of the screening request
        type:
          $ref: '#/components/schemas/ScreeningRequestType'
        state:
          $ref: '#/components/schemas/ScreeningRequestState'
        authorization:
          $ref: '#/components/schemas/ScreeningRequestAuthorization'
        partyId:
          type: string
        successTransactionId:
          type: string
        failTransactionId:
          type: string
        failToSuccessTransactionId:
          type: string
        lastUpdateDate:
          type: string
        externalReference:
          $ref: '#/components/schemas/ExternalRequestCreated'
      x-stoplight:
        id: a9bzt1bzngw4u
    Kyc:
      type: object
      description: the KYC
      x-stoplight:
        id: k8wtoz0kd92yv
    DistributorId:
      type: string
      description: Distributor identity Id
      example: '125'
      x-stoplight:
        id: c5f49bvq9qhnr
    CreateIdentityRelationCollection:
      type: array
      description: |
        Depending of the type of relation you want to create, provide only one of `toIdentityId` and `fromIdentity` fields.

        The Identity to-be-created will be used for the empty side of the relation.
      items:
        $ref: '#/components/schemas/IdentityRelation'
      x-stoplight:
        id: c93y644grwpdj
    Recipient:
      type: object
      description: at least one of phone or iban is required
      required:
        - id
        - name
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/RecipientId'
            - readOnly: true
        name:
          type: string
          description: 'Recipient alias, if any'
          example: John Doe
        iban:
          $ref: '#/components/schemas/IBAN'
        accountReference:
          type: string
          description: External account reference. BIC is optional when using accountReference.
        bic:
          $ref: '#/components/schemas/BIC'
        bankName:
          type: string
          description: Name of the recipient bank
        phone:
          $ref: '#/components/schemas/Phone'
        externalData:
          allOf:
            - $ref: '#/components/schemas/ExternalData'
            - type: object
              description: Additional information on recipient
              example:
                firstname: John
                lastname: Doe
                countryCode: FR
        counterparty:
          type: boolean
          description: Indicate if the Recipient is an External Counterparty for the owner
        state:
          type: string
          enum:
            - Pending
            - Opened
      x-stoplight:
        id: 40xfdheiz4t1f
    IdentityStatus:
      type: object
      description: Identity's operational status
      required:
        - id
        - label
      properties:
        id:
          $ref: '#/components/schemas/IdentityStatusEnum'
        label:
          type: string
          description: |
            a displayable label translated in the platform default language or the first available language in `Accept-Language` HTTP header
      x-stoplight:
        id: m0bcej6lp5n6p
    TaxProfile:
      type: object
      properties:
        id:
          type: string
          description: TaxProfile id
          example: '42'
        name:
          type: string
          description: TaxProfile's Name
          example: name
        description:
          type: string
          description: Short description of Tax Profile
          example: description
        currency:
          type: string
          description: Code of currency (ISO 4217)
          example: EUR
        formulas:
          type: array
          description: list of formulas
          items:
            type: object
            description: Formula Calculation "rate * X + fixedAmount" where X is the amount of the transaction
            properties:
              threshold:
                $ref: '#/components/schemas/AmountDetail'
              rate:
                type: number
                description: Rate
                example: 0.2
              fixedAmount:
                $ref: '#/components/schemas/AmountDetail'
        collectedAccountId:
          type: string
          description: General Account Id where the tax is collected
      x-stoplight:
        id: 9kxilarrdbof8
    Population:
      type: object
      properties:
        identifier:
          type: string
          description: Population identifier
          example: CDD
        label:
          type: string
          description: Population label
          example: Fixed term
      x-stoplight:
        id: hi3pomc8ywnu4
    Employers:
      type: object
      properties:
        id:
          type: string
          description: Employer id
          example: '42'
        name:
          type: string
          description: Employer Name
          example: name
      x-stoplight:
        id: o5vn5uz79lrzq
    ReadOnlyDocumentId:
      allOf:
        - $ref: '#/components/schemas/DocumentId'
        - readOnly: true
      x-stoplight:
        id: 2bvj5npyf0nmd
    ReadOnlyIdentityId:
      allOf:
        - $ref: '#/components/schemas/IdentityId'
        - readOnly: true
          example: '42'
      x-stoplight:
        id: 9397xc2o7ptny
    DocumentStatus:
      type: string
      readOnly: true
      enum:
        - NEW
        - PENDING
        - VALIDATED
        - REFUSED
        - UNKNOWN
      x-stoplight:
        id: jg829ynotj28w
    IncorporationCertificateMetadata:
      type: object
      description: Document metadatas for INCORPORATION_CERTIFICATE documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        country:
          type: string
        deliveryDate:
          type: string
          format: date
        denomination:
          type: string
        legalForm:
          type: string
        numberOfEmployees:
          type: string
        registrationDate:
          type: string
          format: date
        registrationNumber:
          type: string
        registrationPlace:
          type: string
        shareCapital:
          type: string
        zipcode:
          type: string
      x-stoplight:
        id: uymt3oukh93yo
    PortraitMetadata:
      type: object
      description: Document metadatas for PORTRAIT documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        identityPhotoMatch:
          type: string
      x-stoplight:
        id: 3bzki858enghw
    ProofOfActivityMetadata:
      type: object
      description: Document metadatas for PROOF_OF_ACTIVITY documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        grossSalary:
          type: string
        lastName:
          type: string
        netSalary:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
      x-stoplight:
        id: cruc6d75hwrnr
    ProofOfBankDomiciliationMetadata:
      type: object
      description: Document metadatas for PROOF_OF_BANK_DOMICILIATION documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        bic:
          type: string
        firstName:
          type: string
        iban:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
      x-stoplight:
        id: 7mw9jkordqsj8
    ProofOfIdentityMetadata:
      type: object
      description: Document metadatas for PROOF_OF_IDENTITY documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        addressLine1:
          type: string
        addressLine2:
          type: string
        birthDate:
          type: string
          format: date
        birthPlace:
          type: string
        city:
          type: string
        country:
          type: string
        deliveryDate:
          type: string
          format: date
        expirationDate:
          type: string
          format: date
        firstName:
          type: string
        idNumber:
          type: string
        issuingAuthority:
          type: string
        issuingCountry:
          type: string
        lastName:
          type: string
        mrz:
          type: string
        nationality:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        zipcode:
          type: string
      x-stoplight:
        id: sz2evvj8v2wgw
    ProofOfResidenceMetadata:
      type: object
      description: Document metadatas for PROOF_OF_RESIDENCE documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        contractNumber:
          type: string
        contractType:
          type: string
        country:
          type: string
        emissionDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        zipcode:
          type: string
      x-stoplight:
        id: 7me4njb7k8eje
    ProofOfResourcesMetadata:
      type: object
      description: Document metadatas for PROOF_OF_RESOURCES documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        resourceAmount:
          type: string
      x-stoplight:
        id: r96tcbwpxss28
    ProofOfTaxationMetadata:
      type: object
      description: Document metadatas for PROOF_OF_TAXATION documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        taxAmount:
          type: string
        taxNumber:
          type: string
      x-stoplight:
        id: r7s7aoufm9nix
    SignatureMetadata:
      type: object
      description: Document metadatas for SIGNATURE documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        identitySignatureMatch:
          type: string
      x-stoplight:
        id: 72ykac2tjyyg4
    OtherMetadata:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
      x-stoplight:
        id: cmxfm520d32fc
    AdditionalDataPackageField:
      type: object
      required:
        - id
        - isMandatory
        - isProtected
        - displayOrder
        - kyc
      properties:
        id:
          type: string
          description: Identifier of the additional data package field
          example: '1'
        isMandatory:
          type: boolean
          example: true
        isProtected:
          type: boolean
          example: false
        displayOrder:
          type: integer
          example: 1
        kyc:
          type: string
          description: Identifier of the additional data / Kyc
          example: '1'
      x-stoplight:
        id: vk0p2el5rt45s
    Name:
      type: object
      description: Name translated in a language supported by the system
      additionalProperties:
        type: string
        description: The locale of the name
      example:
        fr_FR: nom français
        en_US: english name
      x-stoplight:
        id: ijvspxsnshk6g
    Step:
      type: object
      required:
        - min
        - max
        - name
      properties:
        min:
          type: integer
          example: 0
          description: Min must be inferior to max
        max:
          type: integer
          example: 150
          description: Max must be superior to min
        name:
          $ref: '#/components/schemas/Name'
        color:
          type: string
          description: Hexadecimal color of the step
          example: '#338AFF'
          pattern: '#[0-9A-F]{6}'
        externalCode:
          type: string
          example: STEP01
      x-stoplight:
        id: 0g2l7dukevtqc
    Variable:
      type: object
      required:
        - code
        - name
        - type
        - values
      properties:
        code:
          type: string
          example: MARITAL_STATUS
        name:
          $ref: '#/components/schemas/Name'
        type:
          type: string
          enum:
            - boolean
            - list
            - integer
            - float
            - duration
          description: The variable's type. `boolean` is a yes/no choice. `list` is a free text localized choices list. `integer` is a range of integers. `float` is a range of floats. `duration` is a range of periods.
          example: list
        values:
          type: array
          description: The values the variable can get. The values you pass should match the variable's type. Each value has a rating which influences the score calculation. Ranges' values have a lower and an upper bound.
          items:
            $ref: '#/components/schemas/Value'
      x-stoplight:
        id: ld05qm4um6nis
    ScoreResultId:
      type: string
      format: UUID
      description: The id of the calculation result
      example: 5a1b5ca6-5a3f-4194-82a4-d0a1cc7a4298
      readOnly: true
      x-stoplight:
        id: aohnl44gg9okg
    ScoreFinalValue:
      type: string
      description: The final score of the calculation
      example: '350'
      x-stoplight:
        id: k9a65mzmey11d
    VelocityBatchWithRules:
      allOf:
        - $ref: '#/components/schemas/BaseVelocityBatchWithRules'
        - type: object
          properties:
            rules:
              type: array
              description: Array of VelocityRule
              items:
                $ref: '#/components/schemas/VelocityRule'
      x-stoplight:
        id: olr9l9v8iw4cb
    InputType:
      type: string
      enum:
        - TEXT
        - COLLECTION
        - AMOUNT
        - BOOL
        - DATE
        - DATE_TIME
        - DURATION
        - EMAIL
        - FILE
        - FILE_CONTENT
        - IMAGE
        - INT
        - IP
        - MULTI_SELECT
        - NUMBER
        - PASSWORD
        - PERCENT
        - PHONE
        - PINCODE
        - RATE
        - SELECT
        - SELECT_WITH_AMOUNT
      x-stoplight:
        id: 4il6lvz2xdi64
    FormConfigurationInputData:
      type: object
      example:
        values:
          keyItem1: labelItem1
          keyItem2: labelItem2
      x-stoplight:
        id: m6wmcy07ye152
    RelationNature:
      type: object
      required:
        - id
        - label
        - relationLabelForTarget
        - relationLabelForOriginator
      properties:
        id:
          $ref: '#/components/schemas/RelationNatureId'
        label:
          type: string
          description: Relation nature's label
          example: Board Member
        relationLabelForTarget:
          type: string
          description: Relation nature's target label
          example: is board member of
        relationLabelForOriginator:
          type: string
          description: Relation nature's originator label
          example: has as board member
      x-stoplight:
        id: br5cedqgd5vg2
    BIC:
      type: string
      description: 'BIC (Beneficiary Bank Identifier Code), e.g. FRGAILP1'
      example: FRGAILP1
      x-stoplight:
        id: hw3a7ebuk7oz4
    Iso20022AccountBalances:
      type: array
      description: Collection of balance
      items:
        $ref: '#/components/schemas/AccountBalance'
      x-stoplight:
        id: 5hdra1db1a6qc
    AccountAdditionalData:
      type: object
      description: Additional information associated with the account.
      example:
        key1: value1
        key2: value2
      x-stoplight:
        id: h6zjp45ntgt51
    AccountStatement:
      type: object
      required:
        - id
        - fromDate
        - toDate
        - generatedDate
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/AccountStatementId'
            - readOnly: true
        fromDate:
          type: string
          format: date-time
          description: the begin date of the period of time covered by this statement
        toDate:
          type: string
          format: date-time
          description: the end date of the period of time covered by this statement
        generatedDate:
          type: string
          format: date-time
          description: the date of generation of the statement
        label:
          type: string
          description: a displayable label for this document
      x-stoplight:
        id: pcb2ff7s746cl
    GeoLocation:
      type: object
      properties:
        latitude:
          type: number
          example: 48.831362
        longitude:
          type: number
          example: 2.2441641
        mode:
          $ref: '#/components/schemas/GeoLocationMode'
      x-stoplight:
        id: hceai3a1twmdu
    AccountingEntry:
      type: object
      required:
        - id
        - accountId
        - description
        - amount
        - balance
        - type
      properties:
        id:
          $ref: '#/components/schemas/AccountingEntryId'
        date:
          type: string
          format: date-time
          deprecated: true
          description: replaced byBookingDate
        bookingDate:
          type: string
          format: date-time
          x-stoplight:
            id: vd2p5bd3n0tfv
        valueDate:
          type: string
          format: date-time
          x-stoplight:
            id: pp8ht9hs8m0m3
        accountId:
          $ref: '#/components/schemas/AccountId'
        description:
          type: string
          example: Transfer of 13.37 € from John Doe to Jane Dae
        amount:
          $ref: '#/components/schemas/Amount'
        balance:
          $ref: '#/components/schemas/Amount'
        type:
          $ref: '#/components/schemas/AccountingEntryType'
      x-stoplight:
        id: okf5gah8ppvhl
    GeneralAccount:
      type: object
      required:
        - id
        - currency
        - ledger
        - isCumulativeExport
        - balance
        - number
        - label
        - assignments
      properties:
        id:
          type: string
          description: The general account id
          example: '1'
          readOnly: true
        iban:
          $ref: '#/components/schemas/IBAN'
        currency:
          $ref: '#/components/schemas/Currency'
        ledger:
          type: string
          description: Ledger account
          example: '700000'
          readOnly: true
        isCumulativeExport:
          type: boolean
          example: true
          readOnly: true
        balance:
          $ref: '#/components/schemas/Iso20022AccountBalances'
        number:
          $ref: '#/components/schemas/AccountNumber'
        label:
          type: string
          description: The account label
          example: 'Current account #123546'
          readOnly: true
        assignments:
          type: array
          description: List of account statements
          items:
            type: string
          example:
            - loans
            - pricing
      x-stoplight:
        id: 9sz9534w2q6fb
    PaymentNetworkAcceptedAddresses:
      type: string
      description: Address format accepted by the network
      enum:
        - STRUCTURED
        - UNSTRUCTURED
        - BOTH
        - NO_ADDRESS
      example: STRUCTURED
      x-stoplight:
        id: inqkq22xuxl5q
    PaymentNetworkCreditTransferAccounting:
      type: object
      x-stoplight:
        id: ke77gwufa4na3
      description: 'Transit, suspense and pool accounts used by a credit transfer network'
      title: CREDIT_TRANSFER
      properties:
        inwardCreditTransferTransitAccountNumber:
          type: array
          items:
            $ref: '#/components/schemas/PaymentNetworkAccount'
        inwardCreditTransferSuspenseAccountNumber:
          type: array
          items:
            $ref: '#/components/schemas/PaymentNetworkAccount'
        inwardCreditTransferPoolAccountNumber:
          type: array
          items:
            $ref: '#/components/schemas/PaymentNetworkAccount'
        inwardCreditTransferCounterValueAccountNumber:
          type: array
          x-stoplight:
            id: u4qeja0fitvuf
          items:
            $ref: '#/components/schemas/PaymentNetworkAccount'
            x-stoplight:
              id: udyp1pfi7vx35
        inwardCreditTransferForeignPositionExchangeAccountNumber:
          type: array
          x-stoplight:
            id: 81qaavk1romp7
          items:
            $ref: '#/components/schemas/PaymentNetworkAccount'
            x-stoplight:
              id: yqyz3rt6s6xcg
        outwardCreditTransferTransitAccountNumber:
          type: array
          items:
            $ref: '#/components/schemas/PaymentNetworkAccount'
        outwardCreditTransferSuspenseAccountNumber:
          type: array
          items:
            $ref: '#/components/schemas/PaymentNetworkAccount'
        outwardCreditTransferPoolAccountNumber:
          type: array
          items:
            $ref: '#/components/schemas/PaymentNetworkAccount'
        outwardCreditTransferCounterValueAccountNumber:
          type: array
          x-stoplight:
            id: r4i4zsbnq4o6i
          items:
            $ref: '#/components/schemas/PaymentNetworkAccount'
            x-stoplight:
              id: 6un75tykaodtm
        outwardCreditTransferForeignPositionExchangeAccountNumber:
          type: array
          x-stoplight:
            id: y11w9he0zsmfd
          items:
            $ref: '#/components/schemas/PaymentNetworkAccount'
            x-stoplight:
              id: ed9robh2tdkmr
    PaymentNetworkDirectDebitAccounting:
      type: object
      x-stoplight:
        id: 76msf5zs4mvql
      description: 'Transit, suspense and pool accounts used by a direct debit network'
      properties:
        inwardDirectDebitTransitAccountNumber:
          type: array
          items:
            $ref: '#/components/schemas/PaymentNetworkAccount'
        inwardDirectDebitSuspenseAccountNumber:
          type: array
          items:
            $ref: '#/components/schemas/PaymentNetworkAccount'
        inwardDirectDebitPoolAccountNumber:
          type: array
          items:
            $ref: '#/components/schemas/PaymentNetworkAccount'
        outwardDirectDebitTransitAccountNumber:
          type: array
          items:
            $ref: '#/components/schemas/PaymentNetworkAccount'
        outwardDirectDebitSuspenseAccountNumber:
          type: array
          items:
            $ref: '#/components/schemas/PaymentNetworkAccount'
        outwardDirectDebitPoolAccountNumber:
          type: array
          items:
            $ref: '#/components/schemas/PaymentNetworkAccount'
      title: DIRECT_DEBIT
    PaymentNetworkInterbankRemittance:
      type: object
      description: Remittance options
      properties:
        grouping:
          type: string
          description: Grouping
          enum:
            - BULK
            - UNITARY
          example: BULK
        outgoingManagement:
          type: string
          description: Outgoing management
          enum:
            - DEFERRED
            - INSTANT
          example: INSTANT
        maxOperationsNumber:
          type: number
          description: Maximum operations by batch
          example: 100
        cutOff:
          type: array
          description: List of cutt off
          items:
            type: object
            description: Cutt off
            properties:
              weekDay:
                type: string
                description: Day
                enum:
                  - MONDAY
                  - TUESDAY
                  - WEDNESDAY
                  - THURSDAY
                  - FRIDAY
                  - SATURDAY
                  - SUNDAY
                example: MONDAY
              hour:
                type: string
                description: Hour
                example: '15'
                pattern: '^([0-1]?[0-9]|2[0-3])$'
              minute:
                type: string
                description: Minute
                example: '30'
                pattern: '^([0-5]?[0-9])$'
        closedDayCalendar:
          type: array
          description: List of closed days regarding the cutt off
          items:
            type: string
            description: Date off the day off
            format: date
            example: '2023-07-14'
      x-stoplight:
        id: j3vdwkno9foxl
    InternalStatus:
      type: object
      description: Status of the customer instruction within the platform
      required:
        - value
        - label
      properties:
        value:
          $ref: '#/components/schemas/CustomerInstructionInternalStatusValue'
        label:
          type: string
          description: Status label
          example: Initiated
      x-stoplight:
        id: 8av9ty1ar3g2o
    UserFriendlyGroupStatus:
      type: object
      description: A simplified representation of the status for easy comprehension by end users.
      required:
        - value
        - label
      properties:
        value:
          $ref: '#/components/schemas/CustomerInstructionUserFriendlyGroupStatusValue'
        label:
          type: string
          description: Status label
          example: Initiated
      x-stoplight:
        id: a4jsx26m1zpyc
    UserTransitionArray:
      type: array
      description: History of process status transitions
      items:
        $ref: '#/components/schemas/UserTransition'
      x-stoplight:
        id: v0qf3jc8iz8w3
    CustomerInstructionUserTransitionArray:
      type: array
      description: History of process status transitions
      items:
        $ref: '#/components/schemas/CustomerInstructionUserUserTransition'
      x-stoplight:
        id: mysm0k6n5s58x
    StatusReasonInformation:
      type: object
      description: Reason information if error status
      required:
        - originator
        - reason
      properties:
        originator:
          type: string
          description: Originator of error status
          enum:
            - SYSTEM
            - CUSTOMER
            - ADMIN
        reason:
          type: object
          required:
            - code
            - message
          description: Reason of error status
          properties:
            code:
              type: string
              maxLength: 32
            message:
              type: string
              maxLength: 1024
      x-stoplight:
        id: 8kv2gdoj9fbb0
    CalculatedNbPaymentTransactions:
      type: integer
      description: number of transaction the system has identified within the customer instruction
      example: 3
      x-stoplight:
        id: 1njnnt6y8bl6w
    CalculatedAmount:
      type: object
      description: Total amount of transactions actually managed in platform
      required:
        - value
        - currency
      properties:
        value:
          type: integer
          description: Amount without separator and symbol
          example: 1337
        currency:
          type: string
          description: Alphabetic iso code of associated currency (3 digits)
          minLength: 3
          maxLength: 3
          example: EUR
      x-stoplight:
        id: 5u0ezz7wjmjmd
    PaymentTransactionsStatus:
      type: object
      description: Informations on the recipient
      required:
        - groupStatus
        - nbTransactions
        - totalAmount
      properties:
        groupStatus:
          type: string
          enum:
            - PROCESSABLE
            - NOTPROCESSABLE
        nbTransactions:
          type: integer
          description: number of transaction the system has identified as processable / not processable
          example: 3
        totalAmount:
          type: object
          description: Total Amount of transactions processable / not processable
          required:
            - value
            - currency
          properties:
            value:
              type: integer
              description: Amount without separator and symbol
              example: 1337
            currency:
              type: string
              description: Alphabetic iso code of associated currency (3 digits)
              minLength: 3
              maxLength: 3
              example: EUR
      x-stoplight:
        id: 7w4dz5oimmme2
    CreditTransferPaymentInstrument:
      type: string
      x-stoplight:
        id: v09s42ndkz0ep
      description: 'Define the mean of payment (credit transfer, credit transfer return,...).'
      example: CreditTransferReturn
      enum:
        - CreditTransfer
        - CreditTransferInst
        - CreditTransferReturn
        - CreditTransferRecall
        - CreditTransferRecallPositiveResponse
        - CreditTransferRecallNegativeResponse
        - CreditTransferClaimNonReceipt
        - CreditTransferClaimNonReceiptResponse
      title: CreditTransferPaymentInstrument
    DirectDebitPaymentInstrument:
      type: string
      description: 'Define the mean of payment (direct debit, direct debit recall,...).'
      example: DirectDebit
      enum:
        - DirectDebit
        - DirectDebitReject
        - DirectDebitRefund
        - DirectDebitReturn
        - DirectDebitReversal
      title: DirectDebitPaymentInstrument
      x-stoplight:
        id: 8rg556xxy3ceh
    PaymentService:
      type: string
      description: Define if instruction is single payment or bulk
      enum:
        - PAYMENTS
        - BULK_PAYMENTS
      x-stoplight:
        id: yqjwi0m8akat7
    BatchBooking:
      type: boolean
      description: Indicate if transaction within the customer instruction will be processed by batch or unitary
      x-stoplight:
        id: rrxehap3g2qzd
    NbPaymentTransactions:
      type: integer
      description: Number of credit transfer transaction within the customer instruction
      example: 3
      x-stoplight:
        id: wm2ssucdstpn7
    TotalAmount:
      type: object
      description: Declared total Amount without separator and symbol
      required:
        - value
        - currency
      properties:
        value:
          $ref: '#/components/schemas/AmountValue'
        currency:
          description: Currency alpha code (ISO 4217)
          type: string
          minLength: 3
          maxLength: 3
          example: EUR
      x-stoplight:
        id: ahogtwan8rhyx
    RequestedExecutionDate:
      type: string
      description: Date at which the customer instruction should be controlled in order to ensure an immediate execution. Effective execution date (cf ExecutionDate) will be determined according to Cut-Off parameters for the product concerned
      format: date
      x-stoplight:
        id: hlc1qva0zjgnw
    CustomerInstructionTypeInformation:
      description: specific information related to type of payment. The criteria will apply to all transactions unless a dedicated information is also indicated at transaction level
      type: object
      properties:
        categoryPurpose:
          $ref: '#/components/schemas/CategoryPurpose'
        serviceLevel:
          $ref: '#/components/schemas/ServiceLevel'
      x-stoplight:
        id: xwb1i20iza8dx
    InitiatingParty:
      type: object
      description: 'Information on the party who sends the customer instruction, to debit its account or on behalf of a debtor'
      properties:
        name:
          type: string
          example: TOTAL ENERGIES
          maxLength: 140
        id:
          $ref: '#/components/schemas/PartyIdentification'
      x-stoplight:
        id: 5z8klvarkb5vx
    Debtor:
      type: object
      description: 'Information on the owner of account to debit, need an id or accountId'
      properties:
        name:
          type: string
          example: TOTAL ENERGIES TREASURY
          maxLength: 140
        id:
          description: 'Identification of a party (ordering, beneficiary,...)'
          type: object
          properties:
            value:
              type: string
              example: '331234567889'
              maxLength: 75
            type:
              type: string
              description: Identify the type of party Id provided
              example: phone
              enum:
                - phone
                - identityId
        accountId:
          type: object
          description: 'AccountId of a party (ordering, beneficiary,...)'
          properties:
            value:
              type: string
              description: Account Id according to the system holding the account. It is associated with an account type.
              example: FR7630001007941234567890185
              maxLength: 34
            type:
              type: string
              description: Identify the type of account Id provided
              example: IBAN
              enum:
                - IBAN
                - other
            bankId:
              $ref: '#/components/schemas/BankId'
        postalAddress:
          $ref: '#/components/schemas/PostalAddress'
      x-stoplight:
        id: mae00yp7yxfk1
    PaymentEngineExternalData:
      type: object
      description: Set of key-value pairs that you can attach to an object. This can be useful for storing your additional information about the object in a structured format.
      maxLength: 1024
      example:
        externalDataKey: externalDataValue
        externalDataArray:
          - 1
          - 2
          - 3
        externalDataBool: true
      x-stoplight:
        id: j0831x35qn9sx
    PaymentInstrument:
      type: string
      description: 'Define the mean of payment (credit transfer, direct debit,...).'
      example: CreditTransfer
      enum:
        - CreditTransfer
        - CreditTransferInst
        - DirectDebit
      x-stoplight:
        id: xwn84wsqkypie
    CPaymentInstrument:
      type: string
      description: 'Define the mean of payment (credit transfer, direct debit,...). It is defined at customer instruction level for all transactions.'
      example: CreditTransfer
      enum:
        - CreditTransfer
        - CreditTransferInst
      x-stoplight:
        id: d2ybextc71ww9
    CreditTransferPaymentTransactionsPostDetails:
      allOf:
        - $ref: '#/components/schemas/CreditTransferPaymentTransactionsPostDetailsCommonData'
        - type: object
          properties:
            paymentTransactionInformation:
              $ref: '#/components/schemas/PaymentTransactionInformation'
        - type: object
          properties:
            externalData:
              $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: okjlekl1j77c3
    DirectDebitPaymentTransactionsPostDetails:
      allOf:
        - $ref: '#/components/schemas/DirectDebitPaymentTransactionsPostDetailsCommonData'
        - type: object
          properties:
            paymentTransactionInformation:
              $ref: '#/components/schemas/PaymentTransactionWithMandateInformation'
      x-stoplight:
        id: h3ayswgqpbvo4
    PaymentTransactionInformation:
      type: object
      description: Payment transaction information
      properties:
        paymentInstrument:
          allOf:
            - $ref: '#/components/schemas/PaymentInstrument'
            - readOnly: true
        paymentTransactionIdentification:
          $ref: '#/components/schemas/PaymentTransactionIdentification'
        paymentTransactionTypeInformation:
          allOf:
            - $ref: '#/components/schemas/PaymentTransactionTypeInformation'
            - readOnly: true
        direction:
          type: string
          description: Direction of the payment
          example: OUTWARD
          readOnly: true
          enum:
            - OUTWARD
            - INWARD
        transactionType:
          type: string
          description: |
            Type of the transaction that will be performed.

            For outward credit transfers:
            - Must inherit from ACCOUNT_TO_EXTERNAL
            - If not given, an ACCOUNT_TO_EXTERNAL will be performed

            For inward credit transfers:
            - Must inherit from EXTERNAL_TO_ACCOUNT
            - If not given, an EXTERNAL_TO_ACCOUNT will be performed
          x-stoplight:
            id: w4v8ky7n2x3g9
      x-stoplight:
        id: fvcgb7dhgq02n
    UpdatePaymentTransactionWithMandateInformation:
      allOf:
        - $ref: '#/components/schemas/PaymentTransactionInformation'
        - type: object
          properties:
            sequenceType:
              $ref: '#/components/schemas/sequenceType'
      x-stoplight:
        id: 4dy60b3s7459p
    PaymentTransactionWithMandateInformation:
      allOf:
        - $ref: '#/components/schemas/PaymentTransactionInformation'
        - type: object
          properties:
            mandateRelatedInformation:
              $ref: '#/components/schemas/mandateRelatedInformation'
            sequenceType:
              $ref: '#/components/schemas/sequenceType'
            creditorSchemeId:
              $ref: '#/components/schemas/creditorSchemeId'
            creditorSchemeName:
              $ref: '#/components/schemas/creditorSchemeName'
            localInstrument:
              $ref: '#/components/schemas/localInstrument'
      x-stoplight:
        id: q5sp9fu0apifd
    ChargeBearer:
      type: string
      description: Specifies which party/parties will bear the charges.
      enum:
        - SLEV
        - DEBT
        - CRED
        - SHAR
      x-stoplight:
        id: jn6p1olyc2mwk
    Creditor:
      type: object
      description: Information on the beneficiary counterparty
      properties:
        name:
          type: string
          example: John Doe
          maxLength: 140
        id:
          description: 'Identification of a party (ordering, beneficiary,...)'
          type: object
          properties:
            value:
              type: string
              example: '331234567889'
              maxLength: 75
            type:
              type: string
              description: Identify the type of party Id provided
              example: phone
              enum:
                - identityId
                - phone
        accountId:
          type: object
          properties:
            value:
              type: string
              description: Account Id according to the system holding the account. It is associated with an account type.
              example: FR7630001007941234567890185
              maxLength: 34
            type:
              type: string
              description: Identify the type of account Id provided
              example: IBAN
              enum:
                - IBAN
                - other
            bankId:
              $ref: '#/components/schemas/BankId'
        postalAddress:
          $ref: '#/components/schemas/PostalAddress'
      x-stoplight:
        id: b8kv6dnj1lgjv
    UltimateCreditor:
      type: object
      description: Information on the ultimate beneficiary counterparty
      properties:
        name:
          type: string
          example: John Doe
          maxLength: 140
        id:
          description: 'Identification of a party (ordering, beneficiary,...)'
          type: object
          required:
            - type
            - value
          properties:
            value:
              type: string
              example: '331234567889'
              maxLength: 75
            type:
              type: string
              description: Identify the type of party Id provided
              example: phone
              enum:
                - identityId
                - phone
                - anybic
                - other
        postalAddress:
          $ref: '#/components/schemas/PostalAddress'
      x-stoplight:
        id: 7xesv0o4i045d
    UltimateDebtor:
      type: object
      x-stoplight:
        id: 6j6f8qhzn4s0q
      description: Information on the ultimate beneficiary counterparty
      properties:
        name:
          type: string
          example: John Doe
          maxLength: 140
        id:
          description: 'Identification of a party (ordering, beneficiary,...)'
          type: object
          required:
            - type
            - value
          properties:
            value:
              type: string
              example: '331234567889'
              maxLength: 75
            type:
              type: string
              description: Identify the type of party Id provided
              example: phone
              enum:
                - identityId
                - phone
                - anybic
                - other
        postalAddress:
          $ref: '#/components/schemas/PostalAddress'
    RemittanceInformation:
      type: object
      description: commercial reference related to the payment (ie invoice reference)
      required:
        - value
        - type
      properties:
        value:
          type: string
          example: payment billing reference No1234556
        type:
          type: string
          example: UNSTRUCTURED
          enum:
            - UNSTRUCTURED
      x-stoplight:
        id: sfz4h9yuqz859
    PaymentTransactionInternalInformation:
      type: object
      required:
        - id
        - status
        - history
      properties:
        id:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
        status:
          $ref: '#/components/schemas/PaymentTransactionInternalStatus'
        history:
          $ref: '#/components/schemas/UserTransitionArray'
        statusReasonInformation:
          $ref: '#/components/schemas/StatusReasonInformation'
        contractId:
          type: string
          description: ID of the contract
          example: '1002883102221'
      x-stoplight:
        id: l1uotyews7ll3
    RPaymentInstrument:
      type: string
      description: 'Define the mean of payment (credit transfer, direct debit,...).'
      example: CreditTransferReturn
      enum:
        - CreditTransferReturn
        - CreditTransferRecall
        - CreditTransferRecallPositiveResponse
        - CreditTransferRecallNegativeResponse
        - CreditTransferClaimNonReceipt
        - DirectDebitReject
        - DirectDebitReversal
      x-stoplight:
        id: xrpw0oxfushwg
    OutwardPaymentRTransaction:
      type: object
      required:
        - paymentRTransactionAmountInformation
        - paymentRTransactionInformation
      properties:
        paymentRTransactionAmountInformation:
          type: object
          description: Payment R transaction amount information
          properties:
            returnedAmount:
              $ref: '#/components/schemas/ReturnedAmount'
            chargeBearer:
              $ref: '#/components/schemas/ChargeBearer'
            chargesAmount:
              $ref: '#/components/schemas/ChargesAmount'
            foreignAmount:
              $ref: '#/components/schemas/ForeignAmount'
              x-stoplight:
                id: 4rgcjhh7qv1k1
        paymentRTransactionInformation:
          type: object
          description: Payment R transaction information
          required:
            - paymentRTransactionIdentification
            - paymentRTransactionReturnInformation
          properties:
            paymentRTransactionIdentification:
              type: object
              description: Payment R transaction identification information
              required:
                - originalTransactionId
                - relatedTransactionInternalId
              properties:
                originalTransactionId:
                  $ref: '#/components/schemas/OriginalTransactionId'
                relatedTransactionInternalId:
                  $ref: '#/components/schemas/RelatedTransactionInternalId'
                messageId:
                  $ref: '#/components/schemas/MessageId'
                  x-stoplight:
                    id: 4blov4z4o78yx
                originalMessageNameId:
                  $ref: '#/components/schemas/OriginalMessageNameId'
                originalMessageId:
                  $ref: '#/components/schemas/OriginalMessageId'
                originalEndToEndId:
                  $ref: '#/components/schemas/OriginalEndToEndId'
                originalInterbankingSettlementDate:
                  type: string
                  description: Original payment instruction interbanking settlement date
                  format: date
            paymentRTransactionReturnInformation:
              $ref: '#/components/schemas/PaymentRTransactionReturnInformation'
        externalData:
          $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: w7veom4uxk0uz
    PaymentRTransactionInternalInformation:
      type: object
      required:
        - id
        - status
        - history
      properties:
        id:
          $ref: '#/components/schemas/PaymentRTransactionInternalId'
        status:
          $ref: '#/components/schemas/PaymentRTransactionInternalStatus'
        history:
          $ref: '#/components/schemas/UserTransitionArray'
        statusReasonInformation:
          $ref: '#/components/schemas/StatusReasonInformation'
        decisionStatus:
          type: string
          description: ACNR or RJNR
          example: ACNR
        externalProcessingDate:
          type: string
          format: date
          description: Date the original payment transaction was processed by the external bank. It is provided in the claim non receipt response file.
          example: '2023-11-20'
      x-stoplight:
        id: 349173vjzpjf3
    AmountInformation:
      type: object
      description: Payment R transaction amount information
      required:
        - originalInstructedAmount
        - chargeBearer
      properties:
        originalInstructedAmount:
          $ref: '#/components/schemas/OriginalInstructedAmount'
        returnedAmount:
          $ref: '#/components/schemas/ReturnedAmount'
        chargeBearer:
          $ref: '#/components/schemas/ChargeBearer'
        chargesAmount:
          $ref: '#/components/schemas/ChargesAmount'
        foreignAmount:
          $ref: '#/components/schemas/ForeignAmount'
          x-stoplight:
            id: yus2b96soh0pm
          description: Foreign amount of a forex operation
      x-stoplight:
        id: 4000wn2j4h3xq
    DateInformation:
      type: object
      description: Instructed and Settlement date of the payment R transaction
      required:
        - creationDate
        - instructedDate
        - settlementDate
      properties:
        creationDate:
          type: string
          format: date-time
          description: Creation date of the payment R transaction
          readOnly: true
        instructedDate:
          type: string
          format: date
          description: Instructed date of the payment R transaction
          example: '2023-11-09'
        settlementDate:
          type: string
          format: date
          description: Settlement date of the payment R transaction
          example: '2023-11-10'
      x-stoplight:
        id: 8xqswbid10lgf
    Information:
      type: object
      description: Payment R transaction information
      required:
        - paymentRTransactionIdentification
        - paymentInstrument
        - paymentRTransactionReturnInformation
        - direction
      properties:
        paymentRTransactionIdentification:
          $ref: '#/components/schemas/Identification'
        paymentInstrument:
          $ref: '#/components/schemas/RPaymentInstrument'
        paymentRTransactionTypeInformation:
          type: object
          description: Payment R transaction type information
          properties:
            serviceLevel:
              $ref: '#/components/schemas/ServiceLevel'
        paymentRTransactionReturnInformation:
          $ref: '#/components/schemas/PaymentRTransactionReturnInformation'
        direction:
          $ref: '#/components/schemas/Direction'
        rOperationType:
          $ref: '#/components/schemas/ROperationType'
      x-stoplight:
        id: ye3d9evm6lzfi
    Parties:
      type: object
      description: Payment R transaction parties
      required:
        - debtor
        - creditor
      properties:
        initiatingParty:
          $ref: '#/components/schemas/InitiatingParty'
        debtor:
          $ref: '#/components/schemas/Debtor'
        creditor:
          $ref: '#/components/schemas/Creditor'
        ultimateCreditor:
          $ref: '#/components/schemas/UltimateCreditor'
        ultimateDebtor:
          $ref: '#/components/schemas/UltimateDebtor'
      x-stoplight:
        id: zsoiyfa12s2az
    OriginalPaymentTransactionParties:
      type: object
      description: Original payment transaction parties
      required:
        - originalDebtor
        - originalCreditor
      properties:
        originalDebtor:
          $ref: '#/components/schemas/Debtor'
        originalCreditor:
          $ref: '#/components/schemas/Creditor'
      x-stoplight:
        id: iynl5kxt0tsr5
    CreditTransferAvailableActions:
      type: object
      properties:
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getCustomerInstruction` []
              * `getPaymentInstruction` []
              * `exchangePaymentInstruction` []
              * `refusePaymentInstruction` []
              * `updatePaymentRTransaction` []
              * `deletePaymentRTransaction` []
              * `initiatePaymentRTransaction` []
              * `submitPaymentInstruction` []
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: getCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/1042'
            - rel: getPaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/payment-instructions/2042'
            - rel: exchangePaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/outward-payment-instructions/1042/exchange'
            - rel: refusePaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/outward-payment-instructions/1042/refuse'
            - rel: updatePaymentRTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/credit-transfers/payment-r-transactions/3044'
            - rel: deletePaymentRTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/credit-transfers/payment-r-transactions/3044'
            - rel: initiatePaymentRTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/credit-transfers/1043/payment-r-transactions'
            - rel: submitPaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/credit-transfers/1043/submit'
      x-stoplight:
        id: y4lvo5uab4a2o
    DirectDebitAvailableActions:
      type: object
      properties:
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getCustomerInstruction` []
              * `getPaymentInstruction` []
              * `exchangePaymentInstruction` []
              * `refusePaymentInstruction` []
              * `updatePaymentRTransaction` []
              * `deletePaymentRTransaction` []
              * `initiatePaymentRTransaction` []
              * `submitPaymentInstruction` []
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: getCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/customer-instructions/1042'
            - rel: getPaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/payment-instructions/2042'
            - rel: exchangePaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/outward-payment-instructions/1042/exchange'
            - rel: refusePaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/outward-payment-instructions/1042/refuse'
            - rel: updatePaymentRTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/direct-debits/payment-r-transactions/3044'
            - rel: deletePaymentRTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/direct-debits/payment-r-transactions/3044'
            - rel: initiatePaymentRTransaction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/direct-debits/1043/payment-r-transactions'
            - rel: submitPaymentInstruction
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/inward-payment-instructions/direct-debits/1043/submit'
      x-stoplight:
        id: q7mdwqh4msy6n
    CreditTransferPaymentInstructionInformationRequest:
      allOf:
        - $ref: '#/components/schemas/CreditTransferPaymentInstructionInformation'
      x-stoplight:
        id: icwvcd49sy8i5
      title: ''
    DirectDebitPaymentInstructionInformationRequest:
      allOf:
        - $ref: '#/components/schemas/DirectDebitPaymentInstructionInformation'
      x-stoplight:
        id: 014c5322vnenw
      title: ''
    PaymentInstructionInterbankingPartiesRequest:
      allOf:
        - $ref: '#/components/schemas/PaymentInstructionInterbankingParties'
      x-stoplight:
        id: 8rzi683da0avh
    PaymentInstructionSettlementDate:
      type: string
      description: 'Settlement date. If not given during initiation, will be set to initiation''s date'
      format: date
      x-stoplight:
        id: ldavazo2ol6pn
    PaymentInstructionReference:
      type: string
      example: '1234'
      description: Payment instruction reference
      maxLength: 35
      x-stoplight:
        id: ss0g6dycwfmbl
    CategoryPurpose:
      type: string
      description: purpose of the payment. The code is used to trigger specific behavior and identify product and operations
      enum:
        - BONU
        - CASH
        - CBLK
        - CCRD
        - CORT
        - DIVI
        - DVPM
        - EPAY
        - FCIN
        - FCOL
        - GP2P
        - GOVT
        - HEDG
        - ICCP
        - IDCP
        - INTC
        - INTE
        - LBOX
        - LOAN
        - MP2B
        - MP2P
        - OTHR
        - PENS
        - RPRE
        - RRCT
        - RVPM
        - SALA
        - SECU
        - SSBE
        - SUPP
        - TAXS
        - TRAD
        - TREA
        - VATX
        - WHLD
        - SWEP
        - TOPG
        - ZABA
        - VOST
        - FCDT
        - CIPC
        - CONC
      example: SALA
      maxLength: 4
      x-stoplight:
        id: oqyyqp8pbcwz1
    PaymentInstructionResponseCreationDateTime:
      type: string
      description: Response creation date time
      format: date-time
      x-stoplight:
        id: smt999g7wx69a
    PaymentTransactionCreditTransferInformationRequest:
      type: object
      x-stoplight:
        id: dmxww4p1fw2qj
      description: Payment transaction information
      required:
        - paymentTransactionIdentification
      properties:
        paymentInstrument:
          allOf:
            - $ref: '#/components/schemas/PaymentInstrument'
            - readOnly: true
        paymentTransactionIdentification:
          $ref: '#/components/schemas/PaymentTransactionIdentificationRequest'
        paymentTransactionTypeInformation:
          allOf:
            - $ref: '#/components/schemas/PaymentTransactionTypeInformation'
            - readOnly: true
        transactionType:
          type: string
          description: |
            Type of the transaction that will be performed.

            For outward credit transfers:
            - Must inherit from ACCOUNT_TO_EXTERNAL
            - If not given, an ACCOUNT_TO_EXTERNAL will be performed

            For inward credit transfers:
            - Must inherit from EXTERNAL_TO_ACCOUNT
            - If not given, an EXTERNAL_TO_ACCOUNT will be performed
          x-stoplight:
            id: t3m6fb1r5p7dq
      title: ''
    mandateRelatedInformation:
      type: object
      x-stoplight:
        id: hxvlmwba0env6
      required:
        - mandateIdentification
        - dateOfSignature
      properties:
        mandateIdentification:
          type: string
          x-stoplight:
            id: wm3o6x1kfr15x
          description: Reference of the mandate
          example: mandateRef
        dateOfSignature:
          type: string
          x-stoplight:
            id: rqfgjno6y57kn
          description: Signature date of the mandate
          format: date-time
    sequenceType:
      x-stoplight:
        id: tm1mmel9m95f0
      description: Sequence of the current direct debit
      enum:
        - RCUR
        - OOFF
        - FRST
        - FNAL
    creditorSchemeId:
      type: string
      x-stoplight:
        id: 83dtn171nro8h
      description: Reference of the creditor
      example: creditorRef
    creditorSchemeName:
      type: string
      x-stoplight:
        id: j3w3a25ccrwaf
      description: Name of the creditor
      example: Creditor Name
    requestedCollectionDate:
      type: string
      x-stoplight:
        id: 409mex8sc8sqb
      description: Requested date to execute the direct debit
      format: date
    localInstrument:
      x-stoplight:
        id: wocqqkwlk2pje
      description: Type of the direct debit
      enum:
        - B2B
        - CORE
    PaymentTransactionDirectDebitInformationRequest:
      type: object
      x-stoplight:
        id: nhmhdlgcepgid
      description: Payment transaction information
      required:
        - paymentTransactionIdentification
        - mandateRelatedInformation
        - sequenceType
        - creditorSchemeId
        - requestedCollectionDate
        - localInstrument
      properties:
        paymentInstrument:
          allOf:
            - $ref: '#/components/schemas/DirectDebitPaymentInstrument'
            - readOnly: true
        paymentTransactionIdentification:
          $ref: '#/components/schemas/PaymentTransactionIdentificationRequest'
        paymentTransactionTypeInformation:
          allOf:
            - $ref: '#/components/schemas/PaymentTransactionTypeInformation'
            - readOnly: true
        mandateRelatedInformation:
          $ref: '#/components/schemas/mandateRelatedInformation'
        sequenceType:
          $ref: '#/components/schemas/sequenceType'
        creditorSchemeId:
          $ref: '#/components/schemas/creditorSchemeId'
        creditorSchemeName:
          $ref: '#/components/schemas/creditorSchemeName'
        requestedCollectionDate:
          type: string
          x-stoplight:
            id: ell9kb5izpi0q
          description: Requested date to execute the direct debit
          format: date-time
        localInstrument:
          x-stoplight:
            id: puijza0y6i4dc
          description: Type of the direct debit
          enum:
            - B2B
            - CORE
    OriginalInstructedAmount:
      type: object
      description: Instructed amount of the original payment transaction
      required:
        - value
        - currency
      properties:
        value:
          type: integer
          description: Amount without separator and symbol
          example: 1337
        currency:
          type: string
          description: 'Three-letter ISO currency code, in uppercase. Read more at https://fr.wikipedia.org/wiki/ISO_4217. Only if limit is an amount.'
          minLength: 3
          maxLength: 3
          example: EUR
      x-stoplight:
        id: drgyfeua7sngc
    OriginalTransactionId:
      type: string
      description: Id of the original payment transaction
      example: '1234'
      x-stoplight:
        id: 2y14tnbn639h4
    RelatedTransactionInternalId:
      type: string
      description: |
        Internal reference of the transaction to which the R transaction is associated

        Mandatory for payment instruments CreditTransferReturn, CreditTransferRecallPositiveResponse, CreditTransferRecallNegativeResponse, CreditTransferClaimNonReceiptResponse
      example: '10030'
      x-stoplight:
        id: g36tswf8xqla1
    OriginalEndToEndId:
      type: string
      description: Original client reference
      maxLength: 35
      example: TransactionRef-End2EndId-001
      x-stoplight:
        id: nachvhdo89g9w
    OriginalMessageId:
      type: string
      description: Original payment instruction reference
      maxLength: 35
      example: A133133
      x-stoplight:
        id: 7sv788fqunbgr
    MessageId:
      type: string
      x-stoplight:
        id: jawx6e6g7m4jz
      description: Payment Instruction MessageId
      maxLength: 35
      example: A133133
      title: ''
    OriginalMessageNameId:
      type: string
      description: Original payment instruction technical name
      maxLength: 35
      example: Pacs.008.001.02
      x-stoplight:
        id: breuaqagymrgh
    OriginalInstructionId:
      type: string
      description: Original instruction id
      maxLength: 35
      example: B244244
      x-stoplight:
        id: 0cqgmepg8s3l2
    OriginalInterbankingSettlementDate:
      type: string
      description: Original interbanking settlement date
      format: date
      x-stoplight:
        id: xc6q7g4jonv17
    PaymentRTransactionReturnInformation:
      type: object
      description: Return information
      required:
        - originator
      properties:
        originator:
          type: object
          description: Return originator
          required:
            - value
            - type
          properties:
            value:
              type: string
              description: Originator identification value
              example: John Doe
              maxLength: 128
            type:
              type: string
              description: Originator identification type
              enum:
                - name
                - anybic
              example: name
        reason:
          type: string
          description: 'Return reason. Mandatory for every payment instrument other than CREDIT_TRANSFER_RECALL_NEGATIVE_RESPONSE, optional for this payment instrument'
          example: AC05
          enum:
            - AC01
            - AC03
            - AC04
            - AC05
            - AC06
            - AG01
            - AG02
            - AM04
            - AM05
            - AM09
            - ARDT
            - BE04
            - CNOR
            - CUST
            - DNOR
            - DUPL
            - FF01
            - FOCR
            - FRAD
            - LEGL
            - MD07
            - MS02
            - MS03
            - NOAS
            - NOOR
            - RC01
            - RR01
            - RR02
            - RR03
            - RR04
            - TECH
            - TM01
        decisionStatus:
          type: string
          description: Decision status
          enum:
            - ACNR
            - RJNR
        externalProcessingDate:
          type: string
          format: date
          description: Date the original payment transaction was processed by the external bank. It is provided in the claim non receipt response file.
          example: '2023-11-20'
        inquiryInformation:
          $ref: '#/components/schemas/InquiryInformation'
      x-stoplight:
        id: dq0m9cg8ftg25
    SinglePaymentInstructionInformationRequest:
      allOf:
        - $ref: '#/components/schemas/PaymentInstructionInformation'
      required:
        - paymentInstrument
        - paymentInstructionReference
        - direction
        - paymentInstructionInternalIdentification
        - requestedNbPaymentTransactions
        - settlementAmount
        - paymentInstructionTypeInformation
        - settlementInformation
      properties:
        paymentInstrument:
          type: string
          description: 'Define the mean of payment (credit transfer, direct debit,...).'
          example: CreditTransfer
          enum:
            - CreditTransfer
      x-stoplight:
        id: x8hisce97fka6
    PaymentInstructionInterbankingSettlementDate:
      type: string
      description: The acknowledgment date sent by PSP
      format: date
      example: '2023-11-20'
      x-stoplight:
        id: l0nj6ycqgws0v
    StandardCreditTransferPaymentInstrument:
      type: string
      description: 'Define the mean of payment (credit transfer, direct debit,...). It is defined at customer instruction level for all transactions.'
      example: StandardCreditTransfer
      enum:
        - StandardCreditTransfer
      x-stoplight:
        id: lhit1evhdsagf
    PaymentOperator:
      type: string
      description: Indicates the interbanking operator through which the transaction(s) has passed.
      example: StdOperator
      x-stoplight:
        id: mwod8qnugl7et
    Additional:
      type: object
      description: Some additional data
      properties:
        endToEndId:
          type: string
          example: RefXX12
      x-stoplight:
        id: 7houyur65pjya
    CardItem:
      type: object
      required:
        - id
        - accountId
        - productId
        - productName
        - type
        - status
      properties:
        id:
          $ref: '#/components/schemas/CardId'
        accountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - readOnly: true
        productId:
          $ref: '#/components/schemas/ProductId'
        productName:
          type: string
          description: The card product Name
        type:
          $ref: '#/components/schemas/CardType'
        status:
          type: string
          enum:
            - NEW
            - PENDING
            - ACTIVE
            - EXPIRED
            - REMOVED
            - BLOCKED
            - OPPOSED
          readOnly: true
        description:
          type: string
        embossedName:
          type: string
          description: The card holder name (upper case only)
          example: JOHN DOE
        embossedReference:
          type: string
          description: 'Reference at the back of the card, if any'
        panDisplay:
          type: string
          example: 5119 77XX XXXX 4431
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Card creation date (date in ATOM format)
          example: '2022-01-20T01:23:45+02:00'
          readOnly: true
        expirationDate:
          type: string
          description: Card expiration date (YYYY-MM)
          example: 2022-12
          readOnly: true
        lastUsageDate:
          type: string
          format: date-time
          description: Card last usage date (date in ATOM format)
          example: '2022-01-20T01:23:45+02:00'
          readOnly: true
        limits:
          type: object
          description: Card's limits
        features:
          type: array
          description: Available card features
          items:
            $ref: '#/components/schemas/CardFeature'
          readOnly: true
        externalId:
          $ref: '#/components/schemas/CardExternalId'
        userId:
          $ref: '#/components/schemas/IdentityId'
        contractId:
          type: string
          description: Card contract associated with the card. Leave empty to create a card in a new contract.
        currency:
          type: string
          description: Card and account currency
          example: EUR
          readOnly: true
        productCode:
          type: string
          description: Product Code
          example: PRD1
          readOnly: true
        profileId:
          allOf:
            - $ref: '#/components/schemas/UserProfileId'
            - readOnly: true
        image:
          type: string
          description: URL used to retrieve image associated with card product
          example: 'https://sandbox.skaleet.com/api/service-domain/v1/cards/42/image'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        pendingManagementOperation:
          $ref: '#/components/schemas/PendingManagementOperation'
        anonymous:
          type: boolean
          description: Is this an anonymous card ? Anonymous cards don't have customer's name embossed on the physical card
        externalStatus:
          $ref: '#/components/schemas/CardExternalStatus'
        replacedBy:
          description: collection of cards that replaced this card
          type: array
          items:
            description: Test
            type: object
            properties:
              cardId:
                example: 1234
                type: integer
              replacementReason:
                $ref: '#/components/schemas/CardRefabricateReason'
        replacementFor:
          type: string
          description: Id of the card that this card replaced
          example: CARD789
        replacementReason:
          $ref: '#/components/schemas/CardRefabricateReason'
        virtual:
          type: boolean
          description: Is this a virtual card ?
        label:
          type: string
          description: Label of the card
        oppositionReason:
          x-stoplight:
            id: rrp3drx5fnaoq
          enum:
            - ABUSE
            - LOST
            - STOLEN
            - NOT_DISTRIBUTED
            - COUNTERFEIT
          description: Opposition reason
      x-stoplight:
        id: 77fwn289zf06g
    CardLinksCollection:
      type: array
      description: Card's available actions
      items:
        type: object
        properties:
          rel:
            type: string
            description: Action identifier
            enum:
              - refabricateCard
              - reissueCardCode
              - opposeCard
              - blockCard
              - unblockCard
              - activateCard
              - activateCardWithCode
              - updateCardFeatures
              - updateCardLimits
              - deactivateCard
              - getOutstandings
          href:
            type: string
            description: Action endpoint url
            example: 'https://sandbox.skaleet.com/api/service-domain/v1/cards/94280/_actions/activate'
      x-stoplight:
        id: a2zgnt3h2fag0
    CardManagementOperation:
      type: object
      required:
        - cardId
        - operationId
        - operationType
        - operationState
        - createdAt
        - updatedAt
      properties:
        cardId:
          $ref: '#/components/schemas/CardId'
        operationId:
          $ref: '#/components/schemas/CardManagementOperationId'
        operationType:
          $ref: '#/components/schemas/CardManagementOperationType'
        operationState:
          $ref: '#/components/schemas/CardManagementOperationState'
        createdAt:
          $ref: '#/components/schemas/DateAtom'
        updatedAt:
          $ref: '#/components/schemas/DateAtom'
      x-stoplight:
        id: xxhv9nk2y5wi9
    OutstandingId:
      type: string
      example: OUT1
      x-stoplight:
        id: 0obksjcg3crji
    Duration:
      type: object
      properties:
        value:
          type: integer
          example: 42
        unit:
          $ref: '#/components/schemas/Periodicity'
      x-stoplight:
        id: hqtukb7gvgkhw
    AccountingRequest:
      type: object
      required:
        - srcAccount
        - dstAccount
        - amount
      properties:
        srcAccount:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: source Account ID to be debited
        dstAccount:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: destination Account ID to be credited
        amount:
          $ref: '#/components/schemas/Amount'
      x-stoplight:
        id: 88fpie5izyw2u
    Contribution:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/ContributionId'
        role:
          type: string
          enum:
            - INITIATOR
            - RECIPIENT
            - INTERMEDIARY
            - ACCOUNT_OWNER
        device:
          type: string
          example: '12345'
        contributor:
          $ref: '#/components/schemas/UserId'
        name:
          $ref: '#/components/schemas/UserName'
        externalId:
          $ref: '#/components/schemas/UserExternalId'
        userRole:
          $ref: '#/components/schemas/Role'
        employee:
          type: string
          example: '12345'
        supportId:
          type: string
          x-stoplight:
            id: 3pd56yjwnlwy6
          description: Support Id associated with the contribution
      x-stoplight:
        id: 7ofiqx70k9llo
    AuthenticationProcessCode:
      type: string
      description: Authentication process identification code
      example: AUTH_POSTING
      x-stoplight:
        id: vsl91yh7cdmba
    AuthenticationMethodSMS:
      allOf:
        - $ref: '#/components/schemas/BaseAuthenticationProcessMethod'
        - type: object
          required:
            - parameter
          properties:
            parameter:
              type: object
              description: SMS Auth Method Params
              required:
                - tryNumber
                - defaultLang
                - codeLength
                - templates
              properties:
                tryNumber:
                  type: number
                  description: Allowed fail number
                  default: 3
                  example: 3
                codeLength:
                  type: number
                  description: Length of the generated code sent by sms
                  default: 6
                  example: 6
                defaultLang:
                  $ref: '#/components/schemas/Lang'
                templates:
                  $ref: '#/components/schemas/TemplateLangs'
      x-stoplight:
        id: jbqfdrc0v4v86
    AuthenticationMethodEmail:
      allOf:
        - $ref: '#/components/schemas/BaseAuthenticationProcessMethod'
        - type: object
          required:
            - parameter
          properties:
            parameter:
              type: object
              description: Email Auth Method Param
              required:
                - tryNumber
                - defaultLang
                - codeLength
                - templates
              properties:
                tryNumber:
                  type: number
                  description: Allowed fail number
                  default: 3
                  example: 3
                codeLength:
                  type: number
                  description: Length of the generated code sent by email
                  default: 6
                  example: 6
                defaultLang:
                  $ref: '#/components/schemas/Lang'
                templates:
                  $ref: '#/components/schemas/TemplateLangs'
      x-stoplight:
        id: 5s5l0sjqxunod
    AuthenticationMethodPincode:
      allOf:
        - $ref: '#/components/schemas/BaseAuthenticationProcessMethod'
        - type: object
          required:
            - parameter
          properties:
            parameter:
              type: object
              description: Pincode Auth Method Param
              required:
                - tryNumber
              properties:
                tryNumber:
                  type: number
                  description: Allowed fail number
                  default: 3
                  example: 3
      x-stoplight:
        id: 4pcjl23xhgzya
    AuthenticationProcessCodeEnum:
      type: string
      description: 'Temporary : Authentication Processes Codes availables'
      enum:
        - SCAP_SMS_OTP
        - SCAP_PINCODE
        - SCAP_SMS_PINCODE_OTP
        - SAE_PAY_3DS
        - SCAP_CLIENT_API_CARDS_UPDATE_LIMITS
        - SCAP_CLIENT_API_CARDS_CREATE
        - SCAP_CLIENT_API_CARDS_CREATE_VIRTUAL
        - SCAP_CLIENT_API_CARDS_ACTIVATE
        - SCAP_CLIENT_API_CARDS_PINCODE_REISSUING
        - SCAP_CLIENT_API_CARDS_REFABRICATE
        - SCAP_CLIENT_API_CARDS_DETAILS
      x-stoplight:
        id: 0yun2a7ccejzp
    IdentityIdentifier:
      type: object
      description: Something to identify the identity that must be authenticated.
      required:
        - value
        - type
      properties:
        value:
          type: string
          example: '+33000000000'
        type:
          type: string
          enum:
            - PHONE_NUMBER
            - IDENTITY_ID
            - LOGIN
            - CARD_ID
          example: PHONE_NUMBER
      x-stoplight:
        id: eazm8lvj45nm8
    ExternalIdentifier:
      type: object
      description: 'Something to identify the calling business process. [type, value] uniqueness is verify'
      required:
        - value
        - type
      properties:
        value:
          type: string
          example: PRO123
          description: identifier of the calling business process
        type:
          type: string
          description: the kind of calling business process
          example: OUTGOING_CREDIT_TRANSFER
      x-stoplight:
        id: zwpxjb8x4b5ch
    AuthenticationSessionStatus:
      type: string
      example: INITIATED
      enum:
        - INITIATED
        - STARTED
        - DONE
        - CANCELLED
        - FAILED
        - REFUSED
      x-stoplight:
        id: i0lumnil6tqw5
    AuthenticationSessionLinks:
      type: array
      readOnly: true
      description: |
        Can contain the following actions (identified by their `rel` attribute):
          * `self` [GET] Retrieve information about the authentication session
          * `authenticationSessionCancel` [POST] Cancel the authentication session
          * `authenticationSessionSendSMSOTP` [POST] Send information to authenticate the SMS authentication method, if available
          * `authenticationSessionVerifySMSOTP` [POST] Authenticate with information for the SMS authentication method, if needed
          * `authenticationSessionVerifyPincode` [POST] Authenticate with information for the secret code authentication method
      items:
        $ref: '#/components/schemas/Link'
      example:
        - rel: self
          href: 'https://sandbox.skaleet.com/api/service-domain/v1/authentications/sessions/gregergrthtr4274grgr'
        - rel: authenticationSessionCancel
          href: 'https://sandbox.skaleet.com/api/service-domain/v1/authentications/sessions/gregergrthtr4274grgr/cancel'
        - rel: authenticationSessionSendSMSOTP
          href: 'https://sandbox.skaleet.com/api/service-domain/v1/authentications/sessions/gregergrthtr4274grgr/methods/sms/send'
        - rel: authenticationSessionVerifySMSOTP
          href: 'https://sandbox.skaleet.com/api/service-domain/v1/authentications/sessions/gregergrthtr4274grgr/methods/sms/verify'
        - rel: authenticationSessionVerifyPincode
          href: 'https://sandbox.skaleet.com/api/service-domain/v1/authentications/sessions/gregergrthtr4274grgr/methods/pincode/verify'
      x-stoplight:
        id: b5c9bz9isnmgy
    AuthenticationCode:
      type: string
      description: Authentication code specified by user to authenticate
      example: 007Sky
      x-stoplight:
        id: 8zfryu9vjqcdt
    PincodeKeyboardId:
      type: string
      description: Pincode keyboard identifier
      example: 16fd2706-8baf-433b-82eb-8c7fada847da
      x-stoplight:
        id: cceoqo1q71njv
    PincodeSubmission:
      type: object
      required:
        - id
        - value
      properties:
        id:
          $ref: '#/components/schemas/PincodeKeyboardId'
        value:
          $ref: '#/components/schemas/PincodeArray'
      x-stoplight:
        id: qj1nufblvessr
    SpendingCategoryId:
      type: string
      description: Spending category identifier
      example: FOOD
      x-stoplight:
        id: azfs6vf560u50
    DocumentNotStored:
      type: object
      properties:
        name:
          type: string
          description: Name of the file
          example: savings offer.pdf
        content:
          type: string
          description: Base64-encoded file content
          format: base64
          example: JVBERi0xLjQKJeLjz9MKMyAwIG9iago8PC9MZW5ndGggMjIgMCBSL0ZpbHRlci9GbGF0ZURlY29kZT4+CnN0cmVhbQp4nI2zW2bMBCF4X3z
        externalId:
          type: string
          description: External ID of the file
          example: '1337'
      x-stoplight:
        id: 97xm5hmkvh45s
    DocumentStored:
      type: object
      properties:
        documentId:
          type: string
          description: The unique identifier for the document
          example: '42'
      x-stoplight:
        id: c39hpjk40choc
    Signer:
      type: object
      required:
        - id
        - name
        - email
      description: A user should be able to sign a document
      properties:
        id:
          type: string
          description: The unique identifier for the user
          example: '21'
        name:
          type: string
          description: The name of the user
          example: John Doe
        email:
          type: string
          description: The email of the user
          example: john.doe@mail.com
        anchors:
          type: array
          items:
            $ref: '#/components/schemas/Anchor'
      x-stoplight:
        id: b9f4c2bpml54s
    OperationAwaitingDecisionReason:
      type: string
      x-stoplight:
        id: 9cpjxvrlikr1l
      description: Reason of the operation awaiting decision
      enum:
        - INSUFFICIENT_BALANCE
    OperationAwaitingDecisionOperation:
      type: object
      x-stoplight:
        id: 437e3x7n3sgmb
      required:
        - amount
        - executionDate
        - externalType
        - identityId
        - externalId
        - accountNumber
      properties:
        externalId:
          type: string
          description: Business Process Id
        externalType:
          type: string
          description: External party definition Id
        identityId:
          type: string
          description: Identity targeted by the Operation
        accountNumber:
          type: string
          description: Account Number targeted by the Operation
        amount:
          $ref: '#/components/schemas/AmountDetail'
        executionDate:
          $ref: '#/components/schemas/DateAtom'
          description: Execution date
        adminLink:
          type: string
          example: /admin/xxxx/yy
          description: Link to the display of the business process screen
        additionalData:
          type: object
          description: Operation additional data
    ReadOnlyUserProfileId:
      allOf:
        - $ref: '#/components/schemas/UserProfileId'
        - readOnly: true
      x-stoplight:
        id: pfgcmalzrk061
    WriteOnlyIdentityId:
      allOf:
        - $ref: '#/components/schemas/IdentityId'
        - writeOnly: true
          example: '42'
      x-stoplight:
        id: 6gk9bdzes5u5q
    UserProfileOwner:
      type: object
      readOnly: true
      description: Identity owner of the profile
      required:
        - id
        - role
      properties:
        id:
          $ref: '#/components/schemas/ReadOnlyIdentityId'
        role:
          $ref: '#/components/schemas/IdentityRole'
      x-stoplight:
        id: aqds8t8dv0jc8
    BaseSpendingCategory:
      type: object
      readOnly: true
      required:
        - id
        - label
      properties:
        id:
          $ref: '#/components/schemas/ReadOnlySpendingCategoryId'
        label:
          type: string
          readOnly: true
      x-stoplight:
        id: 2emcq26rqbjjl
    EmbeddedError:
      type: object
      required:
        - success
        - error
      properties:
        success:
          type: boolean
          description: Always false
        error:
          $ref: '#/components/schemas/Error'
      example:
        success: false
        error:
          code: 76000
          message: The request could not be processed because the current version does not match the specified version
      x-stoplight:
        id: fkdiza4mcyfqd
    VelocityBatchWithRulesAndValues:
      allOf:
        - $ref: '#/components/schemas/BaseVelocityBatchWithRules'
        - type: object
          properties:
            rules:
              type: array
              description: Array of VelocityRuleWithValue
              items:
                $ref: '#/components/schemas/VelocityRuleWithValue'
      x-stoplight:
        id: dxr2rb00i03cc
    RelationId:
      type: string
      readOnly: true
      description: Identifier of a relation between parties
      x-stoplight:
        id: cnliqu2oyddrq
    RelationSide:
      description: Indicates if identity is target or originator in relation to associated party
      type: string
      enum:
        - originator
        - target
      x-stoplight:
        id: oe1iub1dwvbfq
    AssociatedIdentity:
      type: object
      readOnly: true
      required:
        - id
        - name
        - legalType
      properties:
        id:
          $ref: '#/components/schemas/IdentityId'
        name:
          type: string
          description: Displayable name of the associated party
        legalType:
          $ref: '#/components/schemas/LegalType'
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getAssociatedPartyKycRequirements` [GET] Get the associated party informations
              * `getAssociatedPartyDocumentsRequirements` [GET] Get the associated party documents requirements
              * `updateAssociatedParty` [PATCH] Update the associated party informations
              * `addDocumentToAssociatedParty` [POST] Add a new document to associated party
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: getAssociatedPartyKycRequirements
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/kyc?legalType=NATURAL_PERSON'
            - rel: getAssociatedPartyDocumentsRequirements
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/kyc/documents?legalType=NATURAL_PERSON'
            - rel: updateAssociatedParty
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/identities/42'
            - rel: addDocumentToAssociatedParty
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/identities/42/documents'
      x-stoplight:
        id: fjf79zy4f9e2d
    Operation:
      type: object
      required:
        - id
        - type
        - date
      properties:
        id:
          $ref: '#/components/schemas/OperationId'
        type:
          $ref: '#/components/schemas/OperationType'
        label:
          type: string
          readOnly: true
          description: Operation displayable short description
        date:
          type: string
          format: date-time
          readOnly: true
          description: 'Operation execution date and time, ISO formatted'
        amount:
          $ref: '#/components/schemas/Amount'
        description:
          type: string
          description: Operation displayable long description
        media:
          $ref: '#/components/schemas/Media'
        location:
          $ref: '#/components/schemas/GeoLocation'
        contributions:
          $ref: '#/components/schemas/Contributions'
        accounting:
          $ref: '#/components/schemas/AccountingEntries'
        externalId:
          $ref: '#/components/schemas/ExternalId'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        additional:
          description: Additional information on transaction
          type: string
      x-stoplight:
        id: ac0ks9xq65a10
    OnboardingStatus:
      type: string
      readOnly: true
      description: Onboarding status
      enum:
        - INITIATED
        - COMPLETION_PENDING
        - READY_TO_SUBMIT
        - SUBMITTED
      x-stoplight:
        id: pted5ybp2v37f
    PartyExternalReference:
      type: object
      description: 'external reference, partner id, party identity id'
      properties:
        externalReference:
          type: string
        partnerId:
          type: string
        partyId:
          $ref: '#/components/schemas/IdentityId'
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getIdentity` [GET] Load party by partyId
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: getIdentity
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/identities/42'
      x-stoplight:
        id: 1w0mqxptf20u6
    PaymentInstructionInformationCreditTransferResponse:
      allOf:
        - $ref: '#/components/schemas/PaymentInstructionInformation'
        - type: object
          properties:
            payloadId:
              $ref: '#/components/schemas/PayloadId'
      x-stoplight:
        id: tudm2oslpkaeh
    PaymentInstructionInformationDirectDebitResponse:
      allOf:
        - $ref: '#/components/schemas/PaymentInstructionInformation'
        - type: object
          x-stoplight:
            id: fe0pfx5xa2qh9
          properties:
            payloadId:
              $ref: '#/components/schemas/PayloadId'
            requestedCollectionDate:
              $ref: '#/components/schemas/requestedCollectionDate'
              x-stoplight:
                id: meyd4q4mtf4kt
      x-stoplight:
        id: uwbjr94m167d6
    ScoreLinkToScoreResult:
      type: object
      description: score code and score result id
      properties:
        id:
          $ref: '#/components/schemas/ScoreResultId'
        scoreCode:
          $ref: '#/components/schemas/ScoreCode'
        finalScore:
          $ref: '#/components/schemas/ScoreFinalValue'
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getScore` [GET] Load the associated Score for the given scoreCode
              * `getScoreResult` [GET] Load the associated ScoreResult for the given scoreResultId
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: getScore
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/scores/331'
            - rel: getScoreResult
              href: 'https://sandbox.skaleet.com/api/service-domain/v1/score-results/1056'
      x-stoplight:
        id: yjd4pgeydb1e2
    PaymentInstructionInternalInformation:
      type: object
      description: Payment instruction internal information
      required:
        - id
        - status
        - history
      properties:
        id:
          $ref: '#/components/schemas/PaymentInstructionId'
        status:
          $ref: '#/components/schemas/PaymentInstructionStatus'
        history:
          $ref: '#/components/schemas/UserTransitionArray'
        statusReasonInformation:
          $ref: '#/components/schemas/StatusReasonInformation'
      x-stoplight:
        id: ckhiag3696xbh
    PaymentInstructionInterbankingParties:
      type: object
      description: Payment instruction interbanking parties
      properties:
        instructingAgent:
          allOf:
            - $ref: '#/components/schemas/Agent'
            - description: Payment's instructing agent
        instructedAgent:
          allOf:
            - $ref: '#/components/schemas/Agent'
            - description: Payment's instructed agent
      x-stoplight:
        id: 3xh2whuq3pct4
    CustomerAction:
      type: object
      properties:
        label:
          type: string
          example: Email change
        actionCode:
          type: string
          example: email_change_np
        legalType:
          $ref: '#/components/schemas/LegalType'
      x-stoplight:
        id: fx10cldzoxgph
    AbstractInput:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          description: the identification key of the Input. Use that ID as object key in form submission.
          example: lastName
        type:
          $ref: '#/components/schemas/InputType'
        label:
          type: string
          description: Displayable Input label
          example: Last Name
        description:
          type: string
          description: A potentially long description of the input content
          example: Enter your last name
        required:
          type: boolean
          description: 'If true, an input value must be provided on form submission'
        validators:
          type: array
          items:
            $ref: '#/components/schemas/Validator'
        disabled:
          type: boolean
          default: false
          description: 'If true, this input cannot be change'
      x-stoplight:
        id: s6kr0hd8jvf36
    Input:
      oneOf:
        - $ref: '#/components/schemas/TextInput'
        - $ref: '#/components/schemas/AmountInput'
        - $ref: '#/components/schemas/BoolInput'
        - $ref: '#/components/schemas/DateInput'
        - $ref: '#/components/schemas/DateTimeInput'
        - $ref: '#/components/schemas/DurationInput'
        - $ref: '#/components/schemas/EmailInput'
        - $ref: '#/components/schemas/FileInput'
        - $ref: '#/components/schemas/ImageInput'
        - $ref: '#/components/schemas/FileContentInput'
        - $ref: '#/components/schemas/InputCollection'
        - $ref: '#/components/schemas/IntInput'
        - $ref: '#/components/schemas/IpInput'
        - $ref: '#/components/schemas/SelectInput'
        - $ref: '#/components/schemas/MultiSelectInput'
        - $ref: '#/components/schemas/NumberInput'
        - $ref: '#/components/schemas/PercentInput'
        - $ref: '#/components/schemas/PasswordInput'
        - $ref: '#/components/schemas/PhoneInput'
        - $ref: '#/components/schemas/RateInput'
        - $ref: '#/components/schemas/SelectWithAmountInput'
      discriminator:
        propertyName: type
        mapping:
          TEXT: '#/components/schemas/TextInput'
          COLLECTION: '#/components/schemas/InputCollection'
          AMOUNT: '#/components/schemas/AmountInput'
          BOOL: '#/components/schemas/BoolInput'
          DATE: '#/components/schemas/DateInput'
          DATE_TIME: '#/components/schemas/DateTimeInput'
          DURATION: '#/components/schemas/DurationInput'
          EMAIL: '#/components/schemas/EmailInput'
          FILE: '#/components/schemas/FileInput'
          FILE_CONTENT: '#/components/schemas/FileContentInput'
          IMAGE: '#/components/schemas/ImageInput'
          INT: '#/components/schemas/IntInput'
          IP: '#/components/schemas/IpInput'
          MULTI_SELECT: '#/components/schemas/MultiSelectInput'
          NUMBER: '#/components/schemas/NumberInput'
          PASSWORD: '#/components/schemas/PasswordInput'
          PERCENT: '#/components/schemas/PercentInput'
          PHONE: '#/components/schemas/PhoneInput'
          RATE: '#/components/schemas/RateInput'
          SELECT: '#/components/schemas/SelectInput'
          SELECT_WITH_AMOUNT: '#/components/schemas/SelectWithAmountInput'
          COMPLIANCE: '#/components/schemas/SelectInput'
      x-stoplight:
        id: ghjdzrrp0nfju
    SpendingCategory:
      allOf:
        - $ref: '#/components/schemas/BaseSpendingCategory'
        - type: object
          properties:
            subCategories:
              type: array
              items:
                $ref: '#/components/schemas/BaseSpendingCategory'
      x-stoplight:
        id: xwcrxefdksq57
    SpendingDetailWithTransaction:
      type: object
      description: Spending detail
      properties:
        id:
          $ref: '#/components/schemas/SpendingDetailId'
        amount:
          $ref: '#/components/schemas/Amount'
        category:
          $ref: '#/components/schemas/BaseSpendingCategory'
        subcategory:
          $ref: '#/components/schemas/BaseSpendingCategory'
        label:
          type: string
          description: Description of the spending detail
        additionalData:
          type: array
          items:
            type: object
            properties:
              key:
                $ref: '#/components/schemas/SpendingsAdditionalDataKey'
              value:
                type: string
              label:
                type: string
        transaction:
          $ref: '#/components/schemas/SpendingTransaction'
      x-stoplight:
        id: v97g0t5tjhdia
    OAuth2AccessTokenRequestWithScope:
      allOf:
        - $ref: '#/components/schemas/BaseOAuth2AccessTokenRequest'
        - type: object
          properties:
            scope:
              $ref: '#/components/schemas/Scope'
      x-stoplight:
        id: 3lq3hdyzc3vb6
    BaseOAuth2AccessTokenRequest:
      type: object
      required:
        - grant_type
        - client_id
      properties:
        grant_type:
          $ref: '#/components/schemas/OAuth2GrantType'
        client_id:
          $ref: '#/components/schemas/ApiClientId'
        client_secret:
          $ref: '#/components/schemas/ApiClientSecret'
      x-stoplight:
        id: zi2lyqfe9i2nw
    CardAuthorizationHoldType:
      type: string
      enum:
        - CASHOUT
        - PAYMENT
        - EXTERNAL_TO_ACCOUNT
        - ACCOUNT_TO_EXTERNAL
        - EXTERNAL_FROM_ACCOUNT
        - ACCOUNT_RECHARGE
      x-stoplight:
        id: 7edbsq2sjsiru
    TransactionAdditionalData:
      type: object
      description: Set of key-value pairs that you can attach to an object. This can be useful for storing your additional information about the object in a structured format.
      example:
        key1: value1
        key2: value2
      x-stoplight:
        id: k36xkqti44oc0
    CardAuthorizationHoldSpendingDetail:
      type: object
      description: Spending detail
      properties:
        id:
          $ref: '#/components/schemas/SpendingDetailId'
        label:
          type: string
          description: Description of the spending detail
        amount:
          $ref: '#/components/schemas/Amount'
        category:
          $ref: '#/components/schemas/BaseSpendingCategory'
        subcategory:
          $ref: '#/components/schemas/BaseSpendingCategory'
      x-stoplight:
        id: yujfre06q3cb2
    ProductBase:
      type: object
      properties:
        id:
          type: string
          description: Product id
          example: '1234'
        name:
          type: string
          description: Name
          example: Consumer credit
        code:
          type: string
          description: Code
          example: CONS
        family:
          $ref: '#/components/schemas/Family'
        partner:
          $ref: '#/components/schemas/ProductPartnerName'
        associatedProfileIds:
          type: array
          description: Associated profiles
          items:
            type: string
          example:
            - '1'
            - '2'
        associableAccountType:
          type: array
          description: Associated profiles
          example:
            - SUB_ACCOUNT
          items:
            type: string
            enum:
              - CURRENT
              - SUB_ACCOUNT
              - DEDICATED
              - COMMISSIONS
              - GUARANTEE_ACCOUNT
              - MONEYPOT
              - TRANSIT
              - POOL
              - ADJUSTMENT
              - GENERAL
              - TECHNICAL
              - SAVINGS
      x-stoplight:
        id: fedcq3zuwrl85
    ScreeningRequestType:
      type: object
      description: Screening requests Filtering type
      properties:
        id:
          type: integer
        code:
          type: string
        label:
          type: string
        targetType:
          $ref: '#/components/schemas/ObjectToScreenTargets'
        complianceFieldId:
          type: string
      x-stoplight:
        id: fswkxokn7upsz
    ScreeningRequestState:
      type: string
      description: The state of the screening request
      enum:
        - INITIATED
        - PREPARED
        - PENDING_DECISION
        - NOK
        - OK
        - ERROR
      x-stoplight:
        id: c4vi1o0jh42ur
    ScreeningRequestAuthorization:
      type: object
      description: Screening request Authorizations
      properties:
        availableStates:
          type: array
          items:
            $ref: '#/components/schemas/ScreeningRequestState'
        canRequestNewScreening:
          type: boolean
      x-stoplight:
        id: nw85fpcahqfgi
    IdentityRelation:
      type: object
      description: A relation between Identities
      required:
        - type
      properties:
        fromIdentityId:
          $ref: '#/components/schemas/IdentityId'
        toIdentityId:
          $ref: '#/components/schemas/IdentityId'
        nature:
          $ref: '#/components/schemas/IdentityRelationNature'
      x-stoplight:
        id: 3vh8r6prly9z7
    AmountDetail:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/AmountValue'
        currency:
          $ref: '#/components/schemas/Currency'
        display:
          description: Amount with separator and symbol
          type: string
          example: '2,50 €'
      x-stoplight:
        id: y1n78jmbowoc7
    Value:
      type: object
      anyOf:
        - type: object
          title: List value
          properties:
            code:
              type: string
              example: MARRIED
            value:
              type: object
              additionalProperties:
                type: string
                description: the locale of the value
              example:
                fr_FR: Married
                en_US: Marié
            rating:
              type: integer
              example: 200
        - type: object
          title: Boolean value
          properties:
            value:
              type: boolean
              example: true
            rating:
              type: integer
              example: -10
        - type: object
          title: Integer value
          properties:
            min:
              type: integer
              example: -50
            max:
              type: integer
              example: 150
            rating:
              type: integer
              example: 20
        - type: object
          title: Float value
          properties:
            min:
              type: number
              format: float
              example: 12.5
            max:
              type: number
              format: float
              example: 15.9
            rating:
              type: integer
              example: 25
        - type: object
          title: Duration value
          properties:
            min:
              type: integer
              minimum: 0
              example: 5
            max:
              type: integer
              minimum: 0
              example: 25
            duration_type:
              type: string
              enum:
                - day
                - month
                - year
            rating:
              type: integer
              example: -20
      x-stoplight:
        id: 73csqgdge9hq8
    BaseVelocityBatchWithRules:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/VelocityBatchId'
        label:
          type: string
          example: Client velocity batch
        userProfiles:
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/ReadOnlyUserProfileId'
              name:
                type: string
                example: Client profile name
              profileType:
                type: string
                enum:
                  - Client
                  - Agent
                  - Merchant
                  - Distributor
                  - Company
        rules:
          type: array
          items:
            type: object
      x-stoplight:
        id: azoep02eechyg
    VelocityRule:
      oneOf:
        - $ref: '#/components/schemas/VelocityRuleWithAmountLimit'
        - $ref: '#/components/schemas/VelocityRuleWithTransactionNumberLimit'
      discriminator:
        propertyName: limitType
        mapping:
          amount: '#/components/schemas/VelocityRuleWithAmountLimit'
          transactions: '#/components/schemas/VelocityRuleWithTransactionNumberLimit'
      x-stoplight:
        id: ur4tj3yzuu5z4
    AccountBalance:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/AmountValue'
        currency:
          $ref: '#/components/schemas/Currency'
        display:
          type: string
          example: '13,37 €'
        balanceType:
          $ref: '#/components/schemas/BalanceType'
      x-stoplight:
        id: xtb7mh2kxswji
    AccountBalancesByDate:
      type: object
      x-stoplight:
        id: 2oqhcjc02o0qi
      required:
        - accountId
        - balance
        - balanceByValueDate
      properties:
        accountId:
          $ref: ./AccountId.yaml
        balance:
          allOf:
            - $ref: '#/components/schemas/Amount'
            - readOnly: true
            - description: Account's balance
        balanceByValueDate:
          allOf:
            - $ref: '#/components/schemas/Amount'
            - readOnly: true
            - description: 'Account''s balance, calculated by value date'
    AccountBalancesHistory:
      type: object
      x-stoplight:
        id: 8abalt52sl6dq
      required:
        - accountId
        - balance
        - balanceByValueDate
      properties:
        accountId:
          $ref: ./AccountId.yaml
        balance:
          allOf:
            - $ref: '#/components/schemas/Amount'
            - readOnly: true
            - description: Account's balance
        balanceByValueDate:
          allOf:
            - $ref: '#/components/schemas/Amount'
            - readOnly: true
            - description: 'Account''s balance, minus all reserved funds'
    GeoLocationMode:
      type: object
      properties:
        value:
          type: string
        label:
          type: string
      x-stoplight:
        id: h26e0ezs8h14u
    AccountingEntryId:
      type: string
      description: accounting entry id
      example: ACO4
      x-stoplight:
        id: 5mo4t91dwx46o
    AccountingEntryType:
      type: string
      enum:
        - TRANSFER
        - FEE
        - COMMISSION
        - TAX
        - DISCOUNT
        - INTEREST
        - ACCOUNT_BALANCES_OFFSET
        - ACCOUNT_BALANCES_REVERSAL
      x-stoplight:
        id: slygtqd4wflbk
    PaymentNetworkAccount:
      type: object
      properties:
        currency:
          description: Currency alpha code (ISO 4217)
          type: string
          minLength: 3
          maxLength: 3
          example: EUR
        number:
          type: string
          description: Account number
          example: '13017319001'
      x-stoplight:
        id: uz5d4gc1gj5sm
    UserTransition:
      type: object
      description: Process status transition
      required:
        - status
        - date
      properties:
        status:
          type: object
          description: Status the process transitioned to
          properties:
            value:
              type: string
              description: Status value
              example: INITIATED
            label:
              type: string
              description: Status label
              example: Initiated
        date:
          type: string
          format: date-time
          description: Date of the transition
          example: '2021-04-20T10:29:44+00:00'
        userId:
          $ref: '#/components/schemas/UserId'
        comment:
          type: string
          description: Comment on the transition
        previousTransitionId:
          type: string
          description: Id of the previous transition if not the first
          example: '1234'
      x-stoplight:
        id: im9z6zdxdjh3f
    CustomerInstructionUserUserTransition:
      type: object
      description: Extended process status transition with additional group status
      allOf:
        - $ref: '#/components/schemas/UserTransition'
        - type: object
          properties:
            groupStatus:
              type: object
              description: User friendly status the process transitioned to
              properties:
                value:
                  type: string
                  description: Status value
                  example: INITIATED
                label:
                  type: string
                  description: Status label
                  example: Initiated
      x-stoplight:
        id: mld11w74evmxn
    PartyIdentification:
      description: 'Identification of a party (ordering, beneficiary,...)'
      type: object
      required:
        - type
        - value
      properties:
        value:
          type: string
          description: Party Id according to the system it belongs. It is associated with an party id type.
          example: '123456'
          maxLength: 75
        type:
          type: string
          description: Identify the type of party Id provided
          example: identityId
          enum:
            - phone
            - identityId
      x-stoplight:
        id: 5k70d77upgceq
    PostalAddress:
      type: object
      description: Postal address of the party
      properties:
        addressLines:
          type: string
          description: Address in an unformatted format. You must define either this or the structured address
          maxLength: 140
        structuredAddress:
          type: object
          description: Address in a formatted format. You must define either this or the address lines
          properties:
            streetName:
              type: string
              description: Street name
              maxLength: 70
            buildingNumber:
              type: string
              description: Building number
              maxLength: 16
            postCode:
              type: string
              description: Town's post code
              maxLength: 16
            townName:
              type: string
              description: Town's name
              maxLength: 70
        country:
          type: string
          minLength: 3
          maxLength: 3
          description: ISO numeric country code
          example: '826'
      x-stoplight:
        id: 4slriaanqsw62
    BankId:
      type: object
      description: BankId of a party
      properties:
        value:
          type: string
          description: Value of the bankId. It is associated with a bankId type.
          example: BNPAFRPP
        type:
          type: string
          description: Identify the type of bankId provided
          example: BIC
          enum:
            - BIC
            - other
      x-stoplight:
        id: 5rklh7q2eecaa
    CreditTransferPaymentTransactionsPostDetailsCommonData:
      type: object
      x-stoplight:
        id: d089xf1lb3vlh
      description: Information on the recipient
      required:
        - paymentTransactionAmountInformation
        - paymentTransactionParties
      properties:
        paymentTransactionAmountInformation:
          type: object
          description: Information related to the transferred amount
          required:
            - instructedAmount
          properties:
            instructedAmount:
              allOf:
                - $ref: '#/components/schemas/InstructedAmount'
                - required:
                    - currency
                    - value
            chargeBearer:
              $ref: '#/components/schemas/ChargeBearer'
            chargesAmount:
              $ref: '#/components/schemas/ChargesAmount'
            foreignAmount:
              $ref: '#/components/schemas/ForeignAmount'
              x-stoplight:
                id: gr6ipw1m4e56z
        paymentTransactionParties:
          type: object
          description: recipient parties information
          required:
            - creditor
          properties:
            creditor:
              allOf:
                - $ref: '#/components/schemas/Creditor'
                - required:
                    - name
            ultimateCreditor:
              $ref: '#/components/schemas/UltimateCreditor'
        paymentTransactionDedicatedInformations:
          type: object
          description: dedicated information related to the payment transaction
          properties:
            remittanceInformation:
              $ref: '#/components/schemas/RemittanceInformation'
    DirectDebitPaymentTransactionsPostDetailsCommonData:
      type: object
      x-stoplight:
        id: i9gqhswch8fn5
      description: Information on the recipient
      required:
        - paymentTransactionAmountInformation
        - paymentTransactionParties
      properties:
        paymentTransactionAmountInformation:
          type: object
          description: Information related to the transferred amount
          required:
            - instructedAmount
          properties:
            instructedAmount:
              allOf:
                - $ref: '#/components/schemas/InstructedAmount'
                - required:
                    - currency
                    - value
            chargeBearer:
              $ref: '#/components/schemas/ChargeBearer'
            chargesAmount:
              $ref: '#/components/schemas/ChargesAmount'
        paymentTransactionParties:
          type: object
          description: recipient parties information
          required:
            - debtor
          properties:
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
                - required:
                    - name
            ultimateDebtor:
              $ref: '#/components/schemas/UltimateDebtor'
        paymentTransactionDedicatedInformations:
          type: object
          description: dedicated information related to the payment transaction
          properties:
            remittanceInformation:
              $ref: '#/components/schemas/RemittanceInformation'
    PaymentTransactionIdentification:
      type: object
      description: Payment transaction identification
      required:
        - id
      properties:
        messageId:
          $ref: '#/components/schemas/MessageId'
          x-stoplight:
            id: reakm7jjhsbw9
        instructionId:
          $ref: '#/components/schemas/InstructionId'
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        externalTransactionId:
          allOf:
            - $ref: '#/components/schemas/ExternalTransactionId'
            - readOnly: true
        customerInstructionId:
          type: string
          description: Internal reference of the client instruction
          readOnly: true
        id:
          allOf:
            - $ref: '#/components/schemas/PaymentTransactionInternalId'
            - readOnly: true
        clearingChannel:
          type: string
          example: BOOK
          readOnly: true
      x-stoplight:
        id: 8bh1kgpv2ea96
    PaymentTransactionTypeInformation:
      type: object
      description: Payment transaction type information
      required:
        - paymentInstrument
      properties:
        serviceLevel:
          $ref: '#/components/schemas/ServiceLevel'
      x-stoplight:
        id: pr8rjpx00oxl3
    ChargesAmount:
      type: object
      description: Amount of the charges to be paid by the charge bearer(s)
      required:
        - value
        - currency
      properties:
        value:
          type: integer
          description: 'Amount without separator and symbol, must be smaller or equal to original transaction amount'
          example: 136
        currency:
          type: string
          description: 'Alphabetic iso code of associated currency (3 digits), must be same as original transaction currency'
          minLength: 3
          maxLength: 3
          example: EUR
      x-stoplight:
        id: bam2l4c1o6jeo
    Identification:
      type: object
      description: Payment R transaction identification information
      required:
        - originalTransactionId
        - relatedTransactionInternalId
      properties:
        originalTransactionId:
          $ref: '#/components/schemas/OriginalTransactionId'
        messageId:
          $ref: '#/components/schemas/MessageId'
          x-stoplight:
            id: csmzdf3qa437s
        relatedTransactionInternalId:
          $ref: '#/components/schemas/RelatedTransactionInternalId'
        originalEndToEndId:
          $ref: '#/components/schemas/OriginalEndToEndId'
        originalMessageId:
          $ref: '#/components/schemas/OriginalMessageId'
        originalMessageNameId:
          $ref: '#/components/schemas/OriginalMessageNameId'
        externalTransactionId:
          $ref: '#/components/schemas/ExternalTransactionId'
        originalInstructionId:
          $ref: '#/components/schemas/OriginalInstructionId'
        originalInterbankingSettlementDate:
          $ref: '#/components/schemas/OriginalInterbankingSettlementDate'
        clearingChannel:
          $ref: '#/components/schemas/ClearingChannel'
      x-stoplight:
        id: l5a5dvze3kmih
    Direction:
      type: string
      description: Direction of the payment
      example: OUTWARD
      enum:
        - OUTWARD
        - INWARD
      x-stoplight:
        id: rnz1d7ybxb0ys
    ROperationType:
      type: string
      description: R-operation type
      enum:
        - RECALL
        - RFRO
      example: RECALL
      x-stoplight:
        id: w9obt3rmp2w47
    PaymentInstructionInformation:
      type: object
      description: Payment instruction information
      properties:
        paymentInstrument:
          $ref: '#/components/schemas/CompletePaymentInstrument'
        paymentService:
          $ref: '#/components/schemas/PaymentService'
        direction:
          $ref: '#/components/schemas/Direction'
        paymentInstructionInternalIdentification:
          allOf:
            - readOnly: true
            - $ref: '#/components/schemas/PaymentInstructionId'
        paymentInstructionReference:
          $ref: '#/components/schemas/PaymentInstructionReference'
        requestedNbPaymentTransactions:
          type: integer
          description: Number of payment transactions associated to the payment instruction
          example: 1
        settlementAmount:
          allOf:
            - $ref: '#/components/schemas/TotalAmount'
            - description: Settlement amount
        settlementDate:
          $ref: '#/components/schemas/PaymentInstructionSettlementDate'
        interbankingSettlementDate:
          $ref: '#/components/schemas/PaymentInstructionInterbankingSettlementDate'
        paymentInstructionTypeInformation:
          $ref: '#/components/schemas/PaymentInstructionTypeInformation'
        settlementInformation:
          $ref: '#/components/schemas/SettlementInformation'
        responseCreationDateTime:
          $ref: '#/components/schemas/PaymentInstructionResponseCreationDateTime'
        foreignAmount:
          $ref: '#/components/schemas/ForeignAmount'
          x-stoplight:
            id: r3etx5h4f33wv
          description: Foreign amount of a forex operation
      title: ''
      x-stoplight:
        id: uu9mj4ky2g46e
    CreditTransferPaymentInstructionInformation:
      x-stoplight:
        id: eba60sm63sosn
      description: Credit transfer payment instruction information
      allOf:
        - $ref: '#/components/schemas/PaymentInstructionInformation'
          x-stoplight:
            id: 0l2ms02xzgb7w
        - type: object
          x-stoplight:
            id: 8ydsxcmjdximh
          properties:
            paymentInstrument:
              $ref: '#/components/schemas/CreditTransferPaymentInstrument'
              x-stoplight:
                id: buvg3nosrbkwv
    DirectDebitPaymentInstructionInformation:
      description: Credit transfer payment instruction information
      x-stoplight:
        id: 6chcxhrnc32py
      allOf:
        - $ref: '#/components/schemas/PaymentInstructionInformation'
        - type: object
          properties:
            paymentInstrument:
              $ref: '#/components/schemas/DirectDebitPaymentInstrument'
        - type: object
          x-stoplight:
            id: dklf8byani6eb
          required:
            - requestedCollectionDate
          properties:
            requestedCollectionDate:
              $ref: '#/components/schemas/requestedCollectionDate'
              x-stoplight:
                id: odyfejtfa2o1v
    PaymentTransactionIdentificationRequest:
      type: object
      description: Payment transaction identification
      required:
        - externalTransactionId
      properties:
        messageId:
          $ref: '#/components/schemas/MessageId'
          x-stoplight:
            id: 9strx0j3kq0x3
        instructionId:
          $ref: '#/components/schemas/InstructionId'
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        externalTransactionId:
          $ref: '#/components/schemas/ExternalTransactionId'
      x-stoplight:
        id: pea0nqyosb4j6
    InquiryInformation:
      type: string
      description: Inquiry information
      maxLength: 140
      example: inquiry information
      x-stoplight:
        id: pmewtr0gtirqd
    CardType:
      type: string
      description: Card Type
      enum:
        - DEBIT_CARD
      x-stoplight:
        id: qoxg8lblccs15
    CardFeature:
      type: object
      required:
        - id
        - enabled
      properties:
        id:
          $ref: '#/components/schemas/CardFeatureId'
        enabled:
          type: boolean
          description: Is feature enabled ?
      x-stoplight:
        id: 9kq3rzchkc905
    PendingManagementOperation:
      type: object
      required:
        - operationType
      properties:
        operationType:
          $ref: '#/components/schemas/OperationType'
        featureId:
          $ref: '#/components/schemas/CardFeatureId'
      x-stoplight:
        id: wv8l2gt4tujp3
    DebitCardExternalStatus:
      type: string
      description: Debit card external status
      enum:
        - NEW
        - PENDING_REQUESTED
        - ACTIVATION_REQUESTED
        - OPPOSITION_REQUESTED
        - ASSOCIATION_ERROR
        - ACTIVE
        - BLOCKED
        - ERROR
        - PENDING
        - OPPOSED
        - DELIVERED_TO_CLIENT
        - DELIVERED_TO_RECEIVING_ENTITY
        - RECEIVED_BY_DISTRIBUTION_ENTITY
        - CREATION_SUBMITTED
        - CREATION_IN_PROGRESS
        - EXPIRED
        - CANCELLED
        - REMOVED
        - IN_MANUFACTURING
      x-stoplight:
        id: 5n4zg0rinia3z
    CardExternalStatus:
      type: object
      required:
        - value
      properties:
        value:
          type: string
          readOnly: true
          description: Status value
        creationDate:
          type: string
          readOnly: true
          format: date-time
          description: Status creation date
          example: '2022-01-20T01:23:45+02:00'
        confirmationDate:
          type: string
          readOnly: true
          format: date-time
          description: Status confirmation date
          example: '2022-01-20T01:23:45+02:00'
      x-stoplight:
        id: 1ksbm16e9qfnd
    CardRefabricateReason:
      type: string
      description: |
        Card remanufacturing reason
      enum:
        - ABUSE
        - DAMAGED
        - EXPIRED
        - OPPOSED
        - LOST
        - STOLEN
      x-stoplight:
        id: wyism3j71rugr
    CardManagementOperationId:
      type: string
      description: Card operation id
      example: '123'
      x-stoplight:
        id: bheprcf7omeum
    Periodicity:
      description: Available periodicities
      type: string
      enum:
        - HOUR
        - WEEK
        - DAY
        - MONTH
        - YEAR
      example: DAY
      x-stoplight:
        id: 4gfwms6cop2i4
    ContributionId:
      type: string
      description: Contribution id
      example: CON4
      x-stoplight:
        id: eyc9ypbdety0y
    UserName:
      type: string
      description: User's firstname and lastname or legal name
      example: John Doe
      x-stoplight:
        id: s662zo4vozix1
    UserExternalId:
      type: string
      description: Client custom data for UserId
      example: EXT123456789
      x-stoplight:
        id: ostjrh0xqf37z
    Role:
      type: string
      description: 'A user can be a CLIENT, a COMPANY, a MERCHANT, an AGENT, a DISTRIBUTOR, a DELEGATE_USER or a NON_CUSTOMER'
      enum:
        - CLIENT
        - COMPANY
        - MERCHANT
        - AGENT
        - NON_CUSTOMER
        - DISTRIBUTOR
        - DELEGATE_USER
      x-stoplight:
        id: ino482t2kdm5w
    BaseAuthenticationProcessMethod:
      type: object
      required:
        - code
        - order
        - type
      properties:
        code:
          $ref: '#/components/schemas/AuthenticationProcessMethodCode'
        order:
          $ref: '#/components/schemas/AuthenticationProcessMethodOrder'
        type:
          $ref: '#/components/schemas/AuthenticationMethodType'
      x-stoplight:
        id: zun5vbx1bhkq2
    TemplateLangs:
      type: array
      items:
        $ref: '#/components/schemas/TemplateLang'
      x-stoplight:
        id: bkeayhjeic413
    PincodeArray:
      type: array
      description: ordered list of positions selected by final client on virtual keyboard
      items:
        type: integer
      example:
        - 1
        - 12
        - 14
        - 3
      x-stoplight:
        id: 4hfesj1el2uuc
    Anchor:
      type: object
      description: The anchors in document where the user should be signed
      required:
        - string
      properties:
        id:
          type: string
          description: The unique identifier for the anchor in documents
          example: anchor_1
        unit:
          type: string
          description: The unit of offest anchor
          example: pixel
          default: pixel
        offset:
          type: object
          properties:
            x:
              type: string
              description: The x offset of the anchor (horizontal)
              example: '0'
              default: '0'
            'y':
              type: string
              description: The y offset of the anchor (vertical)
              example: '10'
              default: '10'
      x-stoplight:
        id: b5leth2vsnkbf
    ReadOnlySpendingCategoryId:
      allOf:
        - $ref: '#/components/schemas/SpendingCategoryId'
        - readOnly: true
      x-stoplight:
        id: bl6hpm99bogfu
    VelocityRuleWithValue:
      oneOf:
        - $ref: '#/components/schemas/VelocityRuleWithAmountLimitAndValue'
        - $ref: '#/components/schemas/VelocityRuleWithTransactionNumberLimitAndValue'
      discriminator:
        propertyName: limitType
        mapping:
          amount: '#/components/schemas/VelocityRuleWithAmountLimitAndValue'
          transactions: '#/components/schemas/VelocityRuleWithTransactionNumberLimitAndValue'
      x-stoplight:
        id: hprajxv991ymv
    OperationType:
      type: object
      readOnly: true
      properties:
        id:
          $ref: '#/components/schemas/OperationTypeId'
        label:
          type: string
          description: Operation type displayable label
      x-stoplight:
        id: arp9q8zjduhks
    Contributions:
      type: array
      description: List of the operation's contributions
      items:
        $ref: '#/components/schemas/Contribution'
      x-stoplight:
        id: tetp2k1wq43o6
    AccountingEntries:
      type: array
      items:
        $ref: '#/components/schemas/AccountingEntry'
      x-stoplight:
        id: mhibe0qg9phyd
    PaymentInstructionStatus:
      type: object
      description: Status of the payment instruction within the platform
      required:
        - value
        - label
      properties:
        value:
          $ref: '#/components/schemas/PaymentInstructionStatusValue'
        label:
          type: string
          description: Status label
          example: Created
      x-stoplight:
        id: b41oiltv150jy
    Agent:
      type: object
      required:
        - financialId
        - name
      properties:
        financialId:
          type: string
          description: Financial ID of the agent. Must be a valid BIC
          example: GAILFRP1XXX
        name:
          type: string
          description: Agent's name
          maxLength: 140
      x-stoplight:
        id: jo47uz4x9orwx
    Validator:
      oneOf:
        - $ref: '#/components/schemas/AmountValidator'
        - $ref: '#/components/schemas/MinValidator'
        - $ref: '#/components/schemas/MaxValidator'
        - $ref: '#/components/schemas/BetweenValidator'
        - $ref: '#/components/schemas/BlacklistValidator'
        - $ref: '#/components/schemas/WhitelistValidator'
        - $ref: '#/components/schemas/LengthValidator'
        - $ref: '#/components/schemas/MaxLengthValidator'
        - $ref: '#/components/schemas/MinLengthValidator'
        - $ref: '#/components/schemas/PasswordValidator'
        - $ref: '#/components/schemas/RegexValidator'
      discriminator:
        propertyName: type
        mapping:
          AMOUNT: '#/components/schemas/AmountValidator'
          MIN: '#/components/schemas/MinValidator'
          MAX: '#/components/schemas/MaxValidator'
          BETWEEN: '#/components/schemas/BetweenValidator'
          BLACKLIST: '#/components/schemas/BlacklistValidator'
          WHITELIST: '#/components/schemas/WhitelistValidator'
          LENGTH: '#/components/schemas/LengthValidator'
          MAX_LENGTH: '#/components/schemas/MaxLengthValidator'
          MIN_LENGTH: '#/components/schemas/MinLengthValidator'
          PASSWORD: '#/components/schemas/PasswordValidator'
          REGEX: '#/components/schemas/RegexValidator'
      x-stoplight:
        id: wvdblu621jnxk
    TextInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
      x-stoplight:
        id: vwhylludu1gf4
    AmountInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/Amount'
            currencies:
              type: array
              items:
                $ref: '#/components/schemas/Currency'
      x-stoplight:
        id: e09pkv0yeru96
    BoolInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: boolean
      x-stoplight:
        id: ig8xi70dt11hq
    DateInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: '20180717'
            format:
              type: string
              description: 'Possible formats are the ones accepted by the [date function (php)](https://php.net/manual/en/function.date.php)'
              example: Ymd
      x-stoplight:
        id: f4hrxaugvew5q
    DateTimeInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: '20180717162042'
            format:
              type: string
              description: 'Possible formats are the ones accepted by the [date function (php)](https://php.net/manual/en/function.date.php)'
              example: YmdHis
      x-stoplight:
        id: 5w40lwvcm0f43
    DurationInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/Duration'
            periodicities:
              type: array
              items:
                $ref: '#/components/schemas/Periodicity'
      x-stoplight:
        id: t9tzhdxzca6f9
    EmailInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
              format: email
      x-stoplight:
        id: t398cdz1d6brq
    FileInput:
      allOf:
        - $ref: '#/components/schemas/AbstractFileInput'
        - type: object
          properties:
            value:
              type: object
              readOnly: true
              properties:
                content:
                  type: string
                  description: 'File content, Base64 encoded'
                  format: byte
                name:
                  type: string
                  description: Original file name and extension
                  example: fileName.txt
                type:
                  type: string
                  description: File MIME type
                  example: text/plain
                size:
                  type: integer
                  description: 'File size, in bytes'
      x-stoplight:
        id: vvmo1fl6cr8ko
    ImageInput:
      allOf:
        - $ref: '#/components/schemas/AbstractFileInput'
        - type: object
          properties:
            value:
              type: string
              description: Image content base64 encoded
      x-stoplight:
        id: ug1kbwmpbhf4g
    FileContentInput:
      allOf:
        - $ref: '#/components/schemas/AbstractFileInput'
        - type: object
          properties:
            value:
              oneOf:
                - type: object
                  properties:
                    documentId:
                      $ref: '#/components/schemas/ReadOnlyDocumentId'
                - type: string
                  description: File content as Base64 encoded string
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getDocument` [GET] Load the document details linked to this input
                  * `getDocumentContent` [GET] Load the document content
                  * `getDocumentPreview` [GET] Get a small sized preview of the document content
              items:
                $ref: '#/components/schemas/Link'
              example:
                - rel: getDocument
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/documents/42'
                - rel: getDocumentContent
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/documents/42/content'
                - rel: getDocumentPreview
                  href: 'https://sandbox.skaleet.com/api/service-domain/v1/documents/42/preview'
      x-stoplight:
        id: vden4ok1n940g
    IntInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: integer
      x-stoplight:
        id: hevglun5b82bf
    IpInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
      x-stoplight:
        id: cs008y21p4tnj
    SelectInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: someValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/Option'
      x-stoplight:
        id: 6ey8simxw9cvq
    MultiSelectInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: array
              items:
                type: string
              example:
                - someValue
                - anotherValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/Option'
      x-stoplight:
        id: puk88a9fjiq26
    NumberInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: number
              format: float
      x-stoplight:
        id: 4f0vvrwo2ja03
    PercentInput:
      allOf:
        - $ref: '#/components/schemas/NumberInput'
      x-stoplight:
        id: 4wb06ou7eg1ro
    PasswordInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
      x-stoplight:
        id: tul5i8rt7xgdx
    PhoneInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
              example: '33612345678'
              description: Phone number in international format (MSISDN)
      x-stoplight:
        id: xjgwmsee5c9ku
    RateInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            inputs:
              type: object
              required:
                - value
                - periodicity
              properties:
                value:
                  $ref: '#/components/schemas/NumberInput'
                periodicity:
                  $ref: '#/components/schemas/SelectInput'
      x-stoplight:
        id: ql3i6rtbkb70j
    SelectWithAmountInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: someValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/OptionWithAmount'
      x-stoplight:
        id: s1sjxd6zna5fh
    SpendingTransaction:
      type: object
      required:
        - id
        - date
        - type
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        date:
          type: string
          format: date-time
        type:
          type: object
          required:
            - value
            - label
          properties:
            value:
              $ref: '#/components/schemas/TransactionType'
            label:
              type: string
              example: Transfer to account
        externalId:
          $ref: '#/components/schemas/TransactionExternalId'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        label:
          description: User defined transaction label
          type: string
        description:
          description: Transaction description
          type: string
        shortDescription:
          description: Transaction short description
          type: string
        amount:
          $ref: '#/components/schemas/Amount'
        additional:
          description: Additional information on transaction
          type: string
        locked:
          type: boolean
          description: 'If true, spendings details of this transaction can no longer be updated'
        qualified:
          description: Whether the transaction's amount is fully qualified or not.
          type: boolean
          example: false
        justified:
          description: Whether the transaction has at least one attachment to justify it.
          type: boolean
          example: false
        contributors:
          type: array
          description: List of the contributors of the transaction
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              role:
                type: string
      x-stoplight:
        id: wyi132g4zuorh
    OAuth2GrantType:
      type: string
      description: OAuth2 authorization grant type
      enum:
        - authorization_code
        - password
        - client_credentials
      x-stoplight:
        id: rieo0fmqjllkp
    ApiClientSecret:
      type: string
      description: API client secret
      example: 8349dd16bcd6d192a18b885e11bc8d28503a0abbef698e40540f54d3b30ae49e
      x-stoplight:
        id: ld4ae04ap70l5
    Family:
      type: object
      properties:
        id:
          type: string
          description: Family id
          example: '1234'
        name:
          type: string
          description: Name
          example: My product family
      x-stoplight:
        id: 7hopvuecezqgj
    IdentityRelationNature:
      type: string
      description: Nature of the relation between Identities
      example: BOARD_MEMBER
      x-stoplight:
        id: ks156o0uvqprz
    VelocityRuleWithAmountLimit:
      allOf:
        - $ref: '#/components/schemas/VelocityRuleBase'
        - type: object
          properties:
            limitValue:
              type: integer
              description: Maximum amount configured for the rule
              example: 100
            currency:
              description: Alpha iso code of associated currency (3 characters)
              type: string
              minLength: 3
              maxLength: 3
              example: '978'
      x-stoplight:
        id: 4uid6rshr45q1
    VelocityRuleWithTransactionNumberLimit:
      allOf:
        - $ref: '#/components/schemas/VelocityRuleBase'
        - type: object
          properties:
            limitValue:
              type: integer
              description: Maximum transaction limit configured for the rule
              example: 100
      x-stoplight:
        id: v5odquw5sv9mt
    BalanceType:
      type: string
      description: Balance type
      enum:
        - AvailableBalance
        - SettlementPositionBalance
      x-stoplight:
        id: dyr09ozx9xxpz
    InstructionId:
      type: string
      description: Payment Transaction Id set by the initiating party system. This Id is used for transaction level reporting.
      example: TransactionInstrId-001
      maxLength: 35
      x-stoplight:
        id: ffk3lsyygjguk
    EndToEndId:
      type: string
      description: Payment Transaction reference set by the initiating party to be transported to the recipient without any modification
      example: TransactionRef-End2EndId-001
      maxLength: 35
      x-stoplight:
        id: os8n3id0c6972
    ClearingChannel:
      type: string
      description: Clearing method used for the payment
      example: RTNS
      enum:
        - BOOK
        - MPNS
        - RTGS
        - RTNS
      x-stoplight:
        id: 745glln4wjkwm
    PaymentInstructionTypeInformation:
      type: object
      description: Payment instruction type information
      required:
        - serviceLevel
      properties:
        priority:
          $ref: '#/components/schemas/Priority'
        clearingChannel:
          $ref: '#/components/schemas/ClearingChannel'
        serviceLevel:
          $ref: '#/components/schemas/ServiceLevel'
        categoryPurpose:
          $ref: '#/components/schemas/CategoryPurpose'
      x-stoplight:
        id: ren3f8jsl1hnd
    SettlementInformation:
      type: object
      description: Settlement information
      required:
        - settlementMethod
      properties:
        settlementMethod:
          $ref: '#/components/schemas/SettlementMethod'
      x-stoplight:
        id: 7ck3ht3zl3hjq
    AuthenticationProcessMethodOrder:
      type: number
      description: Order of the authentication method
      example: 1
      x-stoplight:
        id: cwv56nlc1nryb
    AuthenticationMethodType:
      type: string
      description: Method of the authentication
      enum:
        - SMS
        - PINCODE
      example: SMS
      x-stoplight:
        id: goeoueuurewl7
    TemplateLang:
      type: object
      required:
        - lang
        - template
      properties:
        lang:
          $ref: '#/components/schemas/Lang'
        template:
          type: string
          description: ' Template sms with parameters which will be replacing by param given when initiating default parameter: [[code]], [[fullname]] '
          example: 'Hello [[fullname]], here is your confirmation code for adding a new beneficiary : [[code]]'
      x-stoplight:
        id: hmbdsb0zdhz5c
    VelocityRuleWithAmountLimitAndValue:
      allOf:
        - $ref: '#/components/schemas/VelocityRuleWithAmountLimit'
        - type: object
          properties:
            currentValue:
              type: integer
              example: 100
              description: Current amount limit value for given Identity
      x-stoplight:
        id: sg84qq3o1q4uh
    VelocityRuleWithTransactionNumberLimitAndValue:
      allOf:
        - $ref: '#/components/schemas/VelocityRuleWithTransactionNumberLimit'
        - type: object
          properties:
            transactionNumber:
              type: integer
              description: Current transaction number limit value for given Identity
              example: 10
      x-stoplight:
        id: b6drkhawiv0t5
    AmountValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - currencies
          properties:
            currencies:
              type: array
              items:
                $ref: '#/components/schemas/Currency'
      x-stoplight:
        id: 96n7nxb1l1mwz
    MinValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - min
          properties:
            min:
              type: number
      x-stoplight:
        id: jfdxpfbvzo8f0
    MaxValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - max
          properties:
            max:
              type: number
      x-stoplight:
        id: n8gwg3tmua3bb
    BetweenValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - min
            - max
          properties:
            min:
              type: number
            max:
              type: number
      x-stoplight:
        id: d4avrxmdmbcrd
    BlacklistValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - blacklist
          properties:
            blacklist:
              type: array
              items:
                type: string
      x-stoplight:
        id: hlh05m6owxk23
    WhitelistValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - whitelist
          properties:
            whitelist:
              type: array
              items:
                type: string
      x-stoplight:
        id: pc3al5vvhbzmg
    LengthValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - length
          properties:
            length:
              type: integer
      x-stoplight:
        id: 8dv07tlie9dxy
    MaxLengthValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - maxLength
          properties:
            maxLength:
              type: integer
      x-stoplight:
        id: pksqk74cl5obz
    MinLengthValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - minLength
          properties:
            minLength:
              type: integer
      x-stoplight:
        id: wvbhlflrylvr1
    PasswordValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          properties:
            minLength:
              type: integer
            regexp:
              type: string
              description: regexp in PCRE format. Password must match this regexp
            forbidRegex:
              type: string
              description: regexp in PCRE format. Password must not match this regexp
            forbidDates:
              type: boolean
              description: 'if true, you cannot choose a date as a password'
            blacklist:
              type: array
              description: list of forbidden passwords
              example:
                - azerty
                - qwerty
                - '123456'
                - password
              items:
                type: string
      x-stoplight:
        id: x3pk75rqu27av
    RegexValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - regex
          properties:
            regex:
              type: string
              description: regexp in PCRE format. Value must match this regexp
      x-stoplight:
        id: 0stkx24kfaswv
    AbstractFileInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            maxSize:
              type: integer
              description: 'Maximum allowed file size, in bytes'
            acceptedTypes:
              type: array
              description: Accepted file types list as MIME types
              items:
                type: string
              example:
                - text/plain
                - text/csv
                - application/vnd.ms-excel
                - image/png
            minimumPageCount:
              type: integer
              description: Expected minimum page count
            maximumPageCount:
              type: integer
              description: Expected maximum page count
      x-stoplight:
        id: 6uegw5fpkeecx
    Option:
      type: object
      required:
        - id
        - label
      properties:
        id:
          type: string
          example: someValue
        label:
          type: string
          example: Label for someValue
      x-stoplight:
        id: 2zrk37nlte2y0
    OptionWithAmount:
      allOf:
        - $ref: '#/components/schemas/Option'
        - type: object
          required:
            - amount
          properties:
            amount:
              $ref: '#/components/schemas/Amount'
      x-stoplight:
        id: 3l10pka3w5t2m
    VelocityRuleBase:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/VelocityRuleId'
        description:
          type: string
          example: Velocity rule description
        transaction:
          type: array
          items:
            type: string
            enum:
              - ACCOUNT_TO_ACCOUNT
              - ACCOUNT_TO_DEDICATED
              - CASHOUT
              - CASHIN
              - ACCOUNT_TO_TRANSIT
              - PAYMENT
              - CASHOUT_FROM_TRANSIT
              - SALARY_TO_ACCOUNT
              - ONLINE_PAYMENT
              - CASHIN_TO_TRANSIT
              - SELL_DEPOSIT
              - BUY_DEPOSIT
              - ACCOUNT_TO_EXTERNAL_TRF
              - EXTERNAL_TRF_TO_ACCOUNT
              - CASHOUT_FROM_EXTERNAL_TRF
              - EXTERNAL_TRF_WITHDRAW
              - PAYBILL_ACCOUNT
              - PAYBILL_CASH
              - TRANSIT_TO_ACCOUNT
              - WALLET_TO_BANK
              - BANK_TO_WALLET
              - SALARY_TO_CASH
              - TRANSFER_DEPOSIT
              - STANDING_ORDER_PAYMENT
              - RECHARGE_CREDIT_CARD
              - AID_PAYMENT
              - AGIOS_PAYMENT
              - EXTERNAL_TO_MONEYPOT
              - EXTERNAL_FROM_MONEYPOT
              - POSTING
              - ON_US_CREDIT_TRANSFER
              - DISTRIBUTOR_POSTING
              - CREDIT_TRANSFER_OUT
              - CREDIT_TRANSFER_IN
              - EXTERNAL_TO_ACCOUNT
              - ACCOUNT_TO_EXTERNAL
              - DIRECT_DEBIT_OUT
              - ACCOUNT_FROM_EXTERNAL
              - PAYMENT_FUNDS_RESERVATION
              - CASHOUT_FUNDS_RESERVATION
              - EXT_TO_ACCOUNT_FUNDS_RESERVATION
              - ACCOUNT_TO_EXT_FUNDS_RESERVATION
              - ON_US_CREDIT_FUNDS_RESERVATION
              - DIRECT_DEBIT_IN
              - EXTERNAL_FROM_ACCOUNT
              - ETM_SCREENING
              - ETM_SCREENING_SUCCESS
              - ETM_SCREENING_FAIL
              - ETM_SCREENING_FAIL_TO_SUCCESS
              - VISA_PAYMENT_TO_EXTERNAL_SYSTEM
              - VISA_CASHOUT_TO_EXTERNAL_SYSTEM
              - VISA_CASHIN_TO_EXTERNAL_SYSTEM
              - VISA_ACCOUNT_TO_EXTERNAL_SYSTEM
              - VISA_PAYMENT_FROM_VISA_ON_MOBILE
              - VISA_CASHIN_FROM_VISA_ON_MOBILE
              - VISA_CASHOUT_FROM_VISA_ON_MOBILE
              - ACCOUNT_RECHARGE
        media:
          type: array
          items:
            type: string
            enum:
              - SMS
              - USSD
              - POS
              - WEB
              - BANK
              - IVR
              - API
              - APP
              - ONLINE
        direction:
          type: string
          enum:
            - debit
            - credit
        role:
          type: string
          enum:
            - CLIENT
            - COMPANY
            - AGENT
            - MERCHANT
            - DISTRIBUTOR
        status:
          type: string
          enum:
            - INITIATED
            - PENDING
            - OPENED
        period:
          $ref: '#/components/schemas/VelocityRulePeriod'
        limitType:
          type: string
          enum:
            - amount
            - transactions
      x-stoplight:
        id: lmlczshn95e6y
    Priority:
      type: string
      description: Operation's treatment priority
      example: NORM
      enum:
        - HIGH
        - NORM
      x-stoplight:
        id: 0hvol4dp14rc5
    SettlementMethod:
      type: string
      description: Interbanking settlement method used
      example: CLRG
      enum:
        - CLRG
        - COVE
        - INDA
        - INGA
      x-stoplight:
        id: 5665imbyewpwo
    AbstractValidator:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
      x-stoplight:
        id: x613o8hkb7an9
    VelocityRulePeriod:
      oneOf:
        - $ref: '#/components/schemas/VelocityCalendarPeriod'
        - $ref: '#/components/schemas/VelocityRollingPeriod'
      discriminator:
        propertyName: type
        mapping:
          calendar1: '#/components/schemas/VelocityCalendarPeriod'
          calendar2: '#/components/schemas/VelocityCalendarPeriod'
          calendar3: '#/components/schemas/VelocityCalendarPeriod'
          rolling1: '#/components/schemas/VelocityRollingPeriod'
          rolling2: '#/components/schemas/VelocityRollingPeriod'
          rolling3: '#/components/schemas/VelocityRollingPeriod'
      x-stoplight:
        id: o2pto6c3ukscl
    ValidatorType:
      type: string
      enum:
        - AMOUNT
        - MIN
        - MAX
        - BETWEEN
        - BLACKLIST
        - LENGTH
        - MAX_LENGTH
        - MIN_LENGTH
        - PASSWORD
        - REGEX
        - WHITELIST
      x-stoplight:
        id: g13pd807ht3i0
    VelocityCalendarPeriod:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/VelocityRuleType'
        periodicity:
          $ref: '#/components/schemas/VelocityCalendarPeriodicity'
        startDayOfWeek:
          type: integer
          example: 1
          description: Only present if `periodicity=WEEK`
        startDayOfMonth:
          type: integer
          example: 1
          description: Only present if `periodicity=MONTH`
        startMonth:
          type: integer
          example: 1
          description: Only present if `periodicity=YEAR` or `periodicity=TRIMESTER` or `periodicity=SEMESTER`
      x-stoplight:
        id: 53hvz3dqoovw2
    VelocityRollingPeriod:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/VelocityRuleType'
        duration:
          type: integer
          example: 1
          description: Period duration in days
      x-stoplight:
        id: ns1n5uqjy53w4
    VelocityRuleType:
      type: string
      enum:
        - calendar1
        - calendar2
        - calendar3
        - rolling1
        - rolling2
        - rolling3
      x-stoplight:
        id: co6ww1oymn809
    VelocityCalendarPeriodicity:
      type: string
      enum:
        - DAY
        - WEEK
        - MONTH
        - YEAR
        - SEMESTER
        - TRIMESTER
      x-stoplight:
        id: tj8hd4lzukr6h
    CustomerInstructionCollection:
      allOf:
        - type: object
          properties:
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
        - type: object
          properties:
            items:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/ViewCreditTransferCustomerInstructionResponse'
                  - $ref: '#/components/schemas/CustomerInstructionAfterInitiationLinks'
      description: Sorted and paginated list of customer instructions
      x-stoplight:
        id: mfkhsjmy31qwf
    MinifiedPaymentTransactionsAssociatedToCustomerInstructionCollection:
      description: Sorted and paginated list of payment transactions associated to the customer instruction
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                allOf:
                  - type: object
                    description: Payment transaction summary
                    required:
                      - id
                      - status
                      - instructedDate
                      - instructedAmount
                      - links
                    properties:
                      id:
                        $ref: '#/components/schemas/PaymentTransactionInternalId'
                      status:
                        $ref: '#/components/schemas/PaymentTransactionInternalStatus'
                      instructedDate:
                        $ref: '#/components/schemas/InstructedDate'
                      instructedAmount:
                        allOf:
                          - $ref: '#/components/schemas/InstructedAmount'
                          - required:
                              - currency
                              - value
                  - $ref: '#/components/schemas/CreditTransferPaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks'
      x-stoplight:
        id: d8qcqywgd8vx7
    DetailedPaymentTransactionsAssociatedToCustomerInstructionCollection:
      description: Sorted and paginated list of detailed payment transactions associated to the customer instruction
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/ViewCreditTransferPaymentTransactionResponse'
                  - $ref: '#/components/schemas/CreditTransferPaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks'
      x-stoplight:
        id: s0jbgb0pag9ib
    MinifiedPaymentRTransactionsCollection:
      description: Sorted and paginated list of minified payment R transactions
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                allOf:
                  - type: object
                    description: Payment R transaction summary
                    required:
                      - id
                      - status
                      - instructedDate
                      - returnedAmount
                      - links
                    properties:
                      id:
                        $ref: '#/components/schemas/PaymentRTransactionInternalId'
                      status:
                        $ref: '#/components/schemas/PaymentRTransactionInternalStatus'
                      instructedDate:
                        $ref: '#/components/schemas/PaymentRTransactionInstructedDate'
                      returnedAmount:
                        $ref: '#/components/schemas/ReturnedAmount'
                  - $ref: '#/components/schemas/PaymentRTransactionAssociatedToPaymentInstructionAfterInitiationLinks'
      x-stoplight:
        id: 5lgknuww7m3os
    DetailedPaymentRTransactionsCollection:
      description: Sorted and paginated list of detailed payment R transactions
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/PaymentRTransactionCreditTransferResponseData'
      x-stoplight:
        id: o3rexxrtwlfa5
    DetailedPaymentTransactionsCollection:
      description: Sorted and paginated list of detailed payment transactions
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/ViewCreditTransferPaymentTransactionWithMandateResponse'
                  - $ref: '#/components/schemas/CreditTransferPaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks'
      x-stoplight:
        id: pa3m85y0p3gfu
    PaymentInstructionCollection:
      description: Sorted and paginated list of payment instructions
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/PaymentInstructionDirectDebitResponseData'
      x-stoplight:
        id: g5bokcnr0nnwh
    MinifiedPaymentTransactionsAssociatedToPaymentInstructionCollection:
      description: Sorted and paginated list of payment transactions associated to the payment instruction
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                allOf:
                  - type: object
                    description: Payment transaction summary
                    required:
                      - id
                      - status
                      - instructedDate
                      - instructedAmount
                      - links
                    properties:
                      id:
                        $ref: '#/components/schemas/PaymentTransactionInternalId'
                      status:
                        $ref: '#/components/schemas/PaymentTransactionInternalStatus'
                      instructedDate:
                        $ref: '#/components/schemas/InstructedDate'
                      instructedAmount:
                        allOf:
                          - $ref: '#/components/schemas/InstructedAmount'
                          - required:
                              - currency
                              - value
                  - $ref: '#/components/schemas/CreditTransferPaymentTransactionAssociatedToPaymentInstructionAfterInitiationLinks'
      x-stoplight:
        id: x0ccz4ctu95j0
    DetailedPaymentTransactionsAssociatedToPaymentInstructionCollection:
      description: Sorted and paginated list of payment transactions associated to the payment instruction
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/CreditTransferPaymentTransaction'
                  - $ref: '#/components/schemas/CreditTransferPaymentTransactionAssociatedToPaymentInstructionAfterInitiationLinks'
      x-stoplight:
        id: yjknti4xxleo9
    OperationAwaitingDecisionsCollection:
      description: Operations awaiting decision listed
      x-stoplight:
        id: jcpo6dwhu7wxg
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
        - type: object
          properties:
            items:
              type: array
              description: collection of operations awaiting decision
              items:
                $ref: '#/components/schemas/OperationAwaitingDecisionProcess'
    Chequebook:
      type: object
      x-examples:
        Example 1:
          id: 761
          status: ACTIVE
          clientId: 7027
          accountNumber: 10000163724
          productId: '54321'
          orderDate: '2022-11-30T11:33:22Z'
          externalData:
            channel: Back office
            formNumber: 1234
      description: A chequebook
      examples:
        - id: '54321'
          status: REQUESTED
          clientId: string
          accountNumber: '10000000157'
          productId: '12345'
          numberOfCheques: 42
          orderDate: '2019-08-24T14:15:22Z'
          externalData:
            key1: value1
            key2: value2
        - id: '54321'
          status: DESTROYED
          clientId: string
          accountNumber: '10000000157'
          productId: '12345'
          numberOfCheques: 42
          orderDate: '2019-08-24T14:15:22Z'
          destroyReason: DEFECT
          externalData:
            key1: value1
            key2: value2
      required:
        - id
        - status
        - clientId
        - accountNumber
        - productId
        - numberOfCheques
        - orderDate
      properties:
        id:
          type: string
          x-stoplight:
            id: 90ocwpiapjvk8
          readOnly: true
        status:
          $ref: '#/components/schemas/ChequebookStatus'
        clientId:
          type: string
          readOnly: true
        accountNumber:
          $ref: '#/components/schemas/AccountNumber'
        productId:
          type: string
          readOnly: true
        numberOfCheques:
          type: integer
          x-stoplight:
            id: tmuk9gqyybvbu
        orderDate:
          type: string
          format: date-time
          x-stoplight:
            id: adc7nd7h1rl1v
          readOnly: true
        destroyReason:
          type: string
          x-stoplight:
            id: zs4hwpmn3qadt
        externalData:
          $ref: '#/components/schemas/ExternalData'
      x-stoplight:
        id: tl8y4g24tr0zf
    Cheque:
      type: object
      x-stoplight:
        id: dlthkbtpbjr78
      examples:
        - id: '54321'
          number: 42
          status: REQUESTED
          clientId: '12345'
          accountNumber: '10000000157'
          chequebookId: '1337'
          chequeProductId: '3210'
      title: Cheque
      required:
        - id
        - number
        - status
        - clientId
        - accountNumber
        - chequebookId
        - chequeProductId
      properties:
        id:
          type: string
          readOnly: true
        number:
          type: integer
          x-stoplight:
            id: ipnxefnqcjxwz
        status:
          $ref: '#/components/schemas/ChequeStatus'
        clientId:
          type: string
          readOnly: true
        accountNumber:
          $ref: '#/components/schemas/AccountNumber'
        chequebookId:
          type: string
          x-stoplight:
            id: w88usodlumsfu
          readOnly: true
        chequeProductId:
          type: string
          x-stoplight:
            id: n0wbg68km048k
    ChequebookCollection:
      x-stoplight:
        id: awoyn9wipmt9c
      title: ChequebookCollection
      description: List of chequebooks
      x-internal: false
      type: object
      properties:
        items:
          type: array
          description: Collection of chequebooks
          items:
            $ref: '#/components/schemas/Chequebook'
        count:
          type: integer
          description: The total count of objects in the collection
          minimum: 0
        offset:
          type: integer
          description: Pagination start (from 0)
          minimum: 0
          default: 0
        limit:
          type: integer
          description: Number of results to display
          minimum: 0
          maximum: 100
          default: 20
        sort:
          type: string
          description: Field to define sort order
          default: id
    ChequeCollection:
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              number:
                type: integer
              status:
                type: string
              clientId:
                type: string
              accountNumber:
                type: string
              chequebookId:
                type: string
              chequeProductId:
                type: string
        count:
          type: integer
        offset:
          type: integer
        limit:
          type: integer
        sort:
          type: string
      allOf:
        - properties:
            items:
              type: array
              description: collection of cheques
              items:
                $ref: '#/components/schemas/Cheque'
            count:
              type: integer
              description: The total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
      x-examples:
        Example 1:
          items:
            - id: '54321'
              number: 42
              status: REQUESTED
              clientId: '12345'
              accountNumber: '10000000157'
              chequebookId: '1337'
              chequeProductId: '3210'
          count: 1
          offset: 0
          limit: 20
          sort: id
        x-stoplight:
          id: 246369a6e7a24
      type: object
      x-stoplight:
        id: cfhuezan3t3xs
    ChequebookStatus:
      title: ChequebookStatus
      x-stoplight:
        id: gaeccpn2uhce5
      enum:
        - APPROVAL_REQUIRED
        - REQUESTED
        - REFUSED
        - APPROVED
        - ORDERED
        - PENDING_DELIVERY
        - RECEIVED
        - AVAILABLE
        - ACTIVE
        - DESTROYED
      readOnly: true
      description: Status of the chequebook
    ChequeStatus:
      title: ChequeStatus
      x-stoplight:
        id: s31gp42p3urf9
      enum:
        - PENDING
        - ACTIVE
        - DESTROYED
        - INACTIVE
        - REFUSED
        - BLOCK_REQUESTED
        - BLOCKED
        - PAID
        - LATE_REJECT
      description: Status of a cheque
      readOnly: true
    Discount:
      type: object
      required:
        - code
        - accountNumber
        - rate
      properties:
        code:
          type: string
          description: Discount code
          example: 13000057730_PRICING01
        accountNumber:
          type: string
          description: Client account number on which the discount will be applied
          example: '13000057730'
        rate:
          type: integer
          description: Rate of the discount
          example: 75
        pricingCode:
          type: string
          description: Pricing on which the discount will be applied (will be applied globally if not specified)
          example: PRICING01
      x-stoplight:
        id: hoqzto26kjzta
    CustomerBillingPricingBody:
      type: object
      required:
        - code
        - name
        - currency
        - type
        - profileIds
        - accountNumber
      properties:
        code:
          type: string
          example: PRICING01
          description: Unique ID of the pricing
        name:
          type: object
          description: 'Locale as key, name translated as value. The translated name is required for the default lang'
          example:
            fr_FR: PRICING01 name in fr
            en_US: PRICING01 name in US
            es_ES: PRICING01 name in ES
        operationIds:
          type: array
          description: Array of operation types
          items:
            type: string
            example: ACCOUNT_TO_ACCOUNT
        comment:
          type: string
          description: Note on pricing
          example: comment of the pricing
        currency:
          type: string
          example: EUR
          description: Currency of the pricing
        vatType:
          type: string
          description: ID of the tax profile
          example: '49'
        type:
          type: string
          enum:
            - AMOUNT
            - FORMULA
          example: AMOUNT
        amount:
          $ref: '#/components/schemas/AmountForAmount'
        baseAmount:
          $ref: '#/components/schemas/AmountForFormula'
        rate:
          type: number
          description: Required if type is FORMULA
        minimumAmount:
          $ref: '#/components/schemas/AmountForFormula'
        maximumAmount:
          $ref: '#/components/schemas/AmountForFormula'
        productIds:
          type: array
          x-stoplight:
            id: 508h08ct5h8p4
          description: Array of product IDs defining the products for which the pricing will be made applicable
          items:
            x-stoplight:
              id: e0oeup21xddmi
            type: string
            example: '10'
        profileIds:
          type: array
          description: Array of user profile IDs. Define to which user profiles the pricing is available.
          items:
            type: string
            example: '1'
        accountNumber:
          type: string
          description: Account number where the money will be credited
          example: '13000057730'
        threshold:
          $ref: '#/components/schemas/Threshold'
        direction:
          $ref: '#/components/schemas/CustomerBillingDirection'
          x-stoplight:
            id: mjxt98ao7u81f
          description: 'Direction of the customer billing, indicating the party on which fees will be applied'
      x-stoplight:
        id: 6gl9b0n9dlgxr
    CustomerBillingPricing:
      type: object
      required:
        - code
        - name
        - currency
        - type
        - profileIds
        - accountNumber
      properties:
        code:
          type: string
          example: PRICING01
          description: Unique ID of the pricing
        name:
          type: object
          description: 'Locale as key, name translated as value. The translated name is required for the default lang'
          example:
            fr_FR: PRICING01 name in fr
            en_US: PRICING01 name in US
            es_ES: PRICING01 name in ES
        operations:
          $ref: '#/components/schemas/Operations'
        comment:
          type: string
          description: Note on pricing
          example: comment of the pricing
        currency:
          type: string
          example: EUR
          description: Currency of the pricing
        vatType:
          type: string
          description: ID of the tax profile
          example: '49'
        type:
          type: string
          enum:
            - AMOUNT
            - FORMULA
          example: AMOUNT
        amount:
          $ref: '#/components/schemas/AmountForAmount'
        baseAmount:
          $ref: '#/components/schemas/AmountForFormula'
        rate:
          type: number
          description: Required if type is FORMULA
        minimumAmount:
          $ref: '#/components/schemas/AmountForFormula'
        maximumAmount:
          $ref: '#/components/schemas/AmountForFormula'
        productIds:
          type: array
          x-stoplight:
            id: 1obucr090b23f
          description: Array of product IDs defining the products for which the pricing will be made applicable
          items:
            x-stoplight:
              id: oqt1obeyvslqx
            type: string
            example: '10'
            readOnly: true
        profileIds:
          type: array
          description: Array of user profile IDs. Define to which user profiles the pricing is available.
          items:
            type: string
            example: '1'
        accountNumber:
          type: string
          description: Account number where the money will be credited
          example: '13000057730'
        threshold:
          $ref: '#/components/schemas/Threshold'
        direction:
          $ref: '#/components/schemas/CustomerBillingDirection'
          x-stoplight:
            id: hjv8ajuik9flm
          description: 'Direction of the customer billing, indicating the party on which fees will be applied'
      x-stoplight:
        id: pkoc6dpumvd6r
    PricingCollection:
      description: Sorted and paginated list of Pricing
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: Collection of Pricing
              items:
                $ref: '#/components/schemas/CustomerBillingPricing'
      x-stoplight:
        id: xozc6px9j3bhq
    ModifiablePricingFields:
      type: object
      required:
        - name
        - currency
        - type
        - profileIds
        - accountNumber
      properties:
        name:
          type: object
          description: 'Locale as key, name translated as value. The translated name is required for the default lang'
          example:
            fr_FR: PRICING01 name in fr
            en_US: PRICING01 name in US
            es_ES: PRICING01 name in ES
        operationIds:
          type: array
          description: Array of operation types
          items:
            type: string
            example: ACCOUNT_TO_ACCOUNT
        comment:
          type: string
          description: Note on pricing
          example: comment of the pricing
        currency:
          type: string
          example: EUR
          description: Currency of the pricing
        vatType:
          type: string
          description: ID of the tax profile
          example: '49'
        type:
          type: string
          enum:
            - AMOUNT
            - FORMULA
          example: AMOUNT
        amount:
          $ref: '#/components/schemas/AmountForAmount'
        baseAmount:
          $ref: '#/components/schemas/AmountForFormula'
        rate:
          type: number
          description: Required if type is FORMULA
        minimumAmount:
          $ref: '#/components/schemas/AmountForFormula'
        maximumAmount:
          $ref: '#/components/schemas/AmountForFormula'
        productIds:
          type: array
          x-stoplight:
            id: ari2hi5m0qd7c
          description: Array of product IDs defining the products for which the pricing will be made applicable
          items:
            x-stoplight:
              id: 6bpczkdfbqk8h
            type: string
            example: '10'
        profileIds:
          type: array
          description: Array of user profile IDs. Define to which user profiles the pricing is available.
          items:
            type: string
            example: '1'
        accountNumber:
          type: string
          description: Account number where the money will be credited
          example: '13000057730'
        threshold:
          $ref: '#/components/schemas/Threshold'
        direction:
          $ref: '#/components/schemas/CustomerBillingDirection'
          x-stoplight:
            id: jx9jy4k6yxmfy
          description: 'Direction of the customer billing, indicating the party on which fees will be applied'
      x-stoplight:
        id: wyrjfnsxonmfg
    CustomerBillingPricingClientConsumption:
      type: object
      properties:
        items:
          type: array
          description: Collection of ClientConsumption
          items:
            $ref: '#/components/schemas/ClientConsumption'
      x-stoplight:
        id: 4hrhctrvzkitv
    CalculateFeesPricing:
      type: object
      required:
        - amount
        - profileId
        - operationId
      properties:
        amount:
          $ref: '#/components/schemas/AmountRequest'
        profileId:
          type: string
          description: Id of the profile of the user
          example: '1'
        operationId:
          type: string
          description: Operation type (technical name)
          example: POSTING_INTERNATIONAL
        productId:
          type: string
          x-stoplight:
            id: 0mg892kj5ag35
          description: Product Id associated to pricing
          example: '1'
      x-stoplight:
        id: zya3318jzncwb
    CalculateFeesList:
      type: array
      items:
        $ref: '#/components/schemas/CustomerBillingFees'
      x-stoplight:
        id: nuqufzs5kpaht
    PricingForClientAccountCollection:
      description: Sorted and paginated list of Pricing for client account display
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: Collection of Pricing for client account display
              items:
                $ref: '#/components/schemas/CustomerBillingPricingForClientAccount'
      x-stoplight:
        id: qcf4yfosdz2yu
    CustomerBillingSubscriptionBody:
      type: object
      required:
        - code
        - name
        - currency
        - frequency
        - amount
        - profileIds
        - accountNumber
      properties:
        code:
          type: string
          example: SUBSCRIPTION01
          description: Unique ID of the subscription
        name:
          type: object
          description: 'Locale as key, name translated as value. The translated name is required for the default lang'
          example:
            fr_FR: SUBSCRIPTION01 name in fr
            en_US: SUBSCRIPTION01 name in US
            es_ES: SUBSCRIPTION01 name in ES
        comment:
          type: string
          description: Note on subscription
          example: comment of the subscription
        currency:
          type: string
          example: EUR
          description: Currency of the subscription
        frequency:
          type: string
          enum:
            - DAILY
            - WEEKLY
            - MONTHLY
            - QUARTERLY
            - SEMESTER
            - YEARLY
          example: WEEKLY
          description: Frequency of the subscription
        firstPaymentOffsetValue:
          type: integer
          example: 5
          description: Offset value of the first payment
        firstPaymentOffsetUnit:
          type: string
          enum:
            - DAY
            - WEEK
            - MONTH
            - QUARTER
            - SEMESTER
            - YEAR
          example: MONTH
          description: Offset unit of the first payment
        vatType:
          type: string
          description: ID of the tax profile
          example: '49'
        amount:
          $ref: '#/components/schemas/Amount'
        operationIds:
          type: array
          description: Array of operation types. Each operation type will trigger a new subscription.
          items:
            type: string
            example: ACCOUNT_TO_ACCOUNT
        cancelOperationIds:
          type: array
          description: Array of cancelled operation types. Each operation type will end existing subscriptions.
          items:
            type: string
            example: ACCOUNT_TO_ACCOUNT
        productIds:
          type: array
          x-stoplight:
            id: xovi3h65nqgdz
          description: Array of product IDs defining the products for which the subscription will be made applicable
          items:
            x-stoplight:
              id: 5k1ct7cmnl3hw
            type: string
            example: '10'
        profileIds:
          type: array
          description: Array of user profile IDs. Define to which user profiles the subscription is available.
          items:
            type: string
            example: '1'
        accountNumber:
          type: string
          description: Account number where the money will be credited
          example: '13000057730'
        reductions:
          $ref: '#/components/schemas/ReductionCollection'
      x-stoplight:
        id: xfk5y51hyrkqx
    CustomerBillingSubscription:
      type: object
      required:
        - code
        - name
        - currency
        - frequency
        - amount
        - profileIds
        - accountNumber
      properties:
        code:
          type: string
          example: SUBSCRIPTION01
          description: Unique ID of the subscription
        name:
          type: object
          description: 'Locale as key, name translated as value. The translated name is required for the default lang'
          example:
            fr_FR: SUBSCRIPTION01 name in fr
            en_US: SUBSCRIPTION01 name in US
            es_ES: SUBSCRIPTION01 name in ES
        comment:
          type: string
          description: Note on subscription
          example: comment of the subscription
        currency:
          type: string
          example: EUR
          description: Currency of the subscription
        frequency:
          type: string
          enum:
            - DAILY
            - WEEKLY
            - MONTHLY
            - QUARTERLY
            - SEMESTER
            - YEARLY
          example: WEEKLY
          description: Frequency of the subscription
        firstPaymentOffsetValue:
          type: integer
          example: 5
          description: Offset value of the first payment
        firstPaymentOffsetUnit:
          type: string
          enum:
            - DAY
            - WEEK
            - MONTH
            - QUARTER
            - SEMESTER
            - YEAR
          example: MONTH
          description: Offset unit of the first payment
        vatType:
          type: number
          description: ID of the tax profile
          example: 49
        amount:
          $ref: '#/components/schemas/Amount'
        operationIds:
          type: array
          description: Array of operation types
          items:
            type: string
            example: ACCOUNT_TO_ACCOUNT
        cancelOperationIds:
          type: array
          description: Array of cancelled operation types
          items:
            type: string
            example: ACCOUNT_TO_ACCOUNT
        productIds:
          type: array
          x-stoplight:
            id: yss2g4wnwlk6m
          items:
            x-stoplight:
              id: kkob44nb5nbc2
            type: string
            example: '10'
        profileIds:
          type: array
          description: Array of user profile IDs. Define to which user profiles the subscription is available.
          items:
            type: string
            example: '1'
        accountNumber:
          type: string
          description: Account number where the money will be credited
          example: '13000057730'
        reductions:
          $ref: '#/components/schemas/ReductionCollection'
      x-stoplight:
        id: zo8sj6ik7jbwd
    CustomerBillingSubsriptionCollection:
      description: Sorted and paginated list of Pricing
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: Collection of Pricing
              items:
                $ref: '#/components/schemas/CustomerBillingSubscription'
      x-stoplight:
        id: ktu832waealmw
    ModifiableSubscriptionFields:
      type: object
      required:
        - name
        - frequency
        - amount
        - profileIds
        - accountNumber
      properties:
        name:
          type: object
          description: 'Locale as key, name translated as value. The translated name is required for the default lang'
          example:
            fr_FR: SUBSCRIPTION01 name in fr
            en_US: SUBSCRIPTION01 name in US
            es_ES: SUBSCRIPTION01 name in ES
        comment:
          type: string
          description: Note on subscription
          example: comment of the subscription
        frequency:
          type: string
          enum:
            - DAILY
            - WEEKLY
            - MONTHLY
            - QUARTERLY
            - SEMESTER
            - YEARLY
          example: WEEKLY
          description: Frequency of the subscription
        firstPaymentOffsetValue:
          type: integer
          example: 5
          description: Offset value of the first payment
        firstPaymentOffsetUnit:
          type: string
          enum:
            - DAY
            - WEEK
            - MONTH
            - QUARTER
            - SEMESTER
            - YEAR
          example: MONTH
          description: Offset unit of the first payment
        vatType:
          type: number
          description: ID of the tax profile
          example: 49
        amount:
          $ref: '#/components/schemas/Amount'
        operationIds:
          type: array
          description: Array of operation types
          items:
            type: string
            example: ACCOUNT_TO_ACCOUNT
        cancelOperationIds:
          type: array
          description: Array of cancelled operation types
          items:
            type: string
            example: ACCOUNT_TO_ACCOUNT
        productIds:
          type: array
          x-stoplight:
            id: 47h7a1n3v064p
          description: Array of product IDs defining the products for which the subscription will be made applicable
          items:
            x-stoplight:
              id: ksm65d9obnxpz
            type: string
            example: '10'
        profileIds:
          type: array
          description: Array of user profile IDs. Define to which user profiles the subscription is available.
          items:
            type: string
            example: '1'
        accountNumber:
          type: string
          description: Account number where the money will be credited
          example: '13000057730'
        reductions:
          $ref: '#/components/schemas/ReductionCollection'
      x-stoplight:
        id: 2nm7lzb7vp0hp
    ClientSubscription:
      type: object
      properties:
        code:
          type: string
          example: PHONESUBSCRIPTION349ED
          description: code of the client subscription
        customerBillingCode:
          type: string
          example: PHONESUBSCRIPTION
          description: code of the customer billing
        clientId:
          type: number
          example: 349
          description: ID of the client
        reductionCode:
          type: string
          example: RED01
          description: code of the reduction to apply
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          description: status of the client subscription
        activationDate:
          type: string
          format: date
          example: '2023-03-31'
          description: Activation date of the client subscription
        deactivationDate:
          type: string
          format: date
          example: '2024-03-31'
          description: Deactivation date of the client subscription
        installments:
          type: array
          description: Installments of the client subscription
          items:
            $ref: '#/components/schemas/ClientSubscriptionInstallment'
      x-stoplight:
        id: imwjm0duj8dig
    ClientSubscriptionCollection:
      description: Sorted and paginated list of Subscriptions
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: Collection of Subscriptions
              items:
                $ref: '#/components/schemas/ClientSubscription'
      x-stoplight:
        id: gto1ib1dk2nc8
    CustomerBillingCreditPricingBody:
      type: object
      required:
        - code
        - name
        - nature
        - currency
        - isMandatory
        - frequency
        - type
        - aprc
        - operationIds
      properties:
        code:
          type: string
          example: PRICING01
          description: Unique ID of the pricing
        name:
          type: object
          description: 'Locale as key, name translated as value. The translated name is required for the default lang'
          example:
            fr_FR: PRICING01 name in fr
            en_US: PRICING01 name in US
            es_ES: PRICING01 name in ES
        comment:
          type: string
          description: Note on pricing
          example: comment of the pricing
          default: ''
        nature:
          type: string
          enum:
            - FEES
            - INSURANCE
          description: nature of the pricing
        currency:
          type: string
          example: EUR
          description: Currency of the pricing
        isMandatory:
          type: boolean
          description: To indicate whether the credit pricing is mandatory or optional
          default: true
          example: true
        frequency:
          type: string
          enum:
            - SINGLE
            - CONTRACT
            - DAILY
            - WEEKLY
            - MONTHLY
            - QUARTERLY
            - SEMESTER
            - YEARLY
          example: SINGLE
          description: Frequency of the pricing
        vatType:
          type: string
          description: ID of the tax profile
          example: '49'
        aprc:
          type: boolean
          example: false
          default: false
          description: Field indicating whether advanced pricing should be included in the calculation of the APR (Credit specific)
        type:
          type: string
          enum:
            - AMOUNT
            - FORMULA
          example: AMOUNT
        amount:
          $ref: '#/components/schemas/AmountForAmount'
        baseAmount:
          $ref: '#/components/schemas/AmountForFormula'
        calculationBasis:
          type: string
          enum:
            - TRANSACTIONAMOUNT
            - CAPITALINITIALAMOUNT
            - CAPITALCURRENTAMOUNT
          description: Required if type is FORMULA
        rate:
          type: number
          description: Required if type is FORMULA
        minimumAmount:
          $ref: '#/components/schemas/AmountForFormula'
        maximumAmount:
          $ref: '#/components/schemas/AmountForFormula'
        operationIds:
          type: array
          description: Array of operation types
          items:
            type: string
            example: ACCOUNT_TO_ACCOUNT
      x-stoplight:
        id: j4olrqxwsi3cc
    CustomerBillingCreditPricing:
      type: object
      required:
        - code
        - name
        - nature
        - currency
        - isMandatory
        - frequency
        - aprc
        - type
        - operations
      properties:
        code:
          type: string
          example: PRICING01
          description: Unique ID of the credit pricing
        name:
          type: object
          description: 'Locale as key, name translated as value. The translated name is required for the default lang'
          example:
            fr_FR: PRICING01 name in fr
            en_US: PRICING01 name in US
            es_ES: PRICING01 name in ES
        comment:
          type: string
          description: Note on the credit pricing
          example: comment of the credit pricing
          default: ''
        nature:
          type: string
          enum:
            - FEES
            - INSURANCE
          description: nature of the credit pricing
        currency:
          type: string
          example: EUR
          description: Currency of the credit pricing
        isMandatory:
          type: boolean
          description: To indicate whether the credit pricing is mandatory or optional
          default: true
          example: true
        frequency:
          type: string
          enum:
            - SINGLE
            - CONTRACT
            - DAILY
            - WEEKLY
            - MONTHLY
            - QUARTERLY
            - SEMESTER
            - YEARLY
          example: SINGLE
          description: Frequency of the pricing
        vatType:
          type: string
          description: ID of the tax profile
          example: '49'
        aprc:
          type: boolean
          example: false
          default: false
          description: Field indicating whether advanced pricing should be included in the calculation of the APR (Credit specific)
        type:
          type: string
          enum:
            - AMOUNT
            - FORMULA
          example: AMOUNT
        amount:
          $ref: '#/components/schemas/AmountForAmount'
        baseAmount:
          $ref: '#/components/schemas/AmountForFormula'
        calculationBasis:
          type: string
          enum:
            - TRANSACTIONAMOUNT
            - CAPITALINITIALAMOUNT
            - CAPITALCURRENTAMOUNT
          description: Required if type is FORMULA
        rate:
          type: number
          description: Required if type is FORMULA
        minimumAmount:
          $ref: '#/components/schemas/AmountForFormula'
        maximumAmount:
          $ref: '#/components/schemas/AmountForFormula'
        applicableTaxRate:
          type: number
          description: The rate of the first tax specified
          example: 0.2
        operations:
          $ref: '#/components/schemas/Operations'
      x-stoplight:
        id: mcmu5j5bobidl
    CustomerBillingCreditPricingCollection:
      description: Sorted and paginated list of Credit Pricing
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: Collection of Credit Pricing
              items:
                $ref: '#/components/schemas/CustomerBillingCreditPricing'
      x-stoplight:
        id: xhlmoetycj598
    ModifiableCreditPricingFields:
      type: object
      required:
        - name
        - frequency
        - type
        - aprc
        - isMandatory
        - operationIds
      properties:
        name:
          type: object
          description: 'Locale as key, name translated as value. The translated name is required for the default lang'
          example:
            fr_FR: PRICING01 name in fr
            en_US: PRICING01 name in US
            es_ES: PRICING01 name in ES
        comment:
          type: string
          description: Note on pricing
          example: comment of the pricing
          default: ''
        isMandatory:
          type: boolean
          description: To indicate whether the pricing is mandatory or optional
          default: true
          example: true
        frequency:
          type: string
          enum:
            - SINGLE
            - CONTRACT
            - DAILY
            - WEEKLY
            - MONTHLY
            - QUARTERLY
            - SEMESTER
            - YEARLY
          example: SINGLE
          description: Frequency of the pricing
        vatType:
          type: string
          description: ID of the tax profile
          example: '49'
        aprc:
          type: boolean
          example: false
          default: false
          description: Field indicating whether advanced pricing should be included in the calculation of the APR (Credit specific)
        type:
          type: string
          enum:
            - AMOUNT
            - FORMULA
          example: AMOUNT
        amount:
          $ref: '#/components/schemas/AmountForAmount'
        baseAmount:
          $ref: '#/components/schemas/AmountForFormula'
        calculationBasis:
          type: string
          enum:
            - TRANSACTIONAMOUNT
            - CAPITALINITIALAMOUNT
            - CAPITALCURRENTAMOUNT
          description: Required if type is FORMULA
        rate:
          type: number
          description: Required if type is FORMULA
        minimumAmount:
          $ref: '#/components/schemas/AmountForFormula'
        maximumAmount:
          $ref: '#/components/schemas/AmountForFormula'
        operationIds:
          type: array
          description: Array of operation types
          items:
            type: string
            example: ACCOUNT_TO_ACCOUNT
      x-stoplight:
        id: xtgr2negbn8i4
    FeeBody:
      type: object
      required:
        - srcAccountNumber
        - pricingCode
        - amount
      properties:
        srcAccountNumber:
          type: string
          description: Client account number from which the money will be debited
          example: '13000057730'
        pricingCode:
          type: string
          description: Unique ID of the core banking pricing associated to the fee
          example: PRICING01
        amount:
          description: Fee amount
          type: object
          properties:
            value:
              $ref: '#/components/schemas/AmountValue'
            currency:
              $ref: '#/components/schemas/Currency'
        requestComment:
          type: string
          description: Reason for charging a fee
          example: Sending contract by mail
          default: ''
      x-stoplight:
        id: a1oh3g4a8lbwf
    Fee:
      type: object
      required:
        - id
        - srcAccountNumber
        - pricingCode
        - amount
      properties:
        id:
          type: string
          example: '456872'
          description: Unique ID of the fee
          readOnly: true
        status:
          $ref: '#/components/schemas/FeeStatus'
          description: Fee status
        srcAccountNumber:
          type: string
          description: Client account number from which the money will be debited
          example: '13000057730'
        dstAccountNumber:
          type: string
          x-stoplight:
            id: b8st8a7734fxi
          description: General account number to which the money will be credited
        pricingCode:
          type: string
          description: Unique ID of the core banking pricing associated to the fee
          example: PRICING01
        amount:
          $ref: '#/components/schemas/TotalAmount'
          description: Fee amount
        vat:
          $ref: '#/components/schemas/TotalAmount'
          x-stoplight:
            id: witl3mkyqd9lu
          description: VAT amount
        vatAccountNumber:
          type: string
          x-stoplight:
            id: xx6hwylopv0lr
          description: VAT account number
        originalTransactionId:
          type: string
          x-stoplight:
            id: 1n4huh46k724m
          description: ID of the transaction that triggered the payment of this fee (when applicable)
          example: '133033'
        makerId:
          type: string
          description: Maker admin ID (when applicable)
        requestComment:
          type: string
          description: Reason for charging a fee (when applicable)
          example: Sending contract by mail
        creationDate:
          type: string
          format: date-time
          description: Fee creation date
        checkerId:
          type: string
          description: Checker admin ID (when applicable)
        decisionComment:
          type: string
          description: Reason for approving or disapproving the fee (when applicable)
          example: Invalid product
        decisionDate:
          type: string
          format: date-time
          description: Fee check date (when applicable)
          x-stoplight:
            id: 8jdqjces5w396
        abandonmentUserId:
          type: string
          x-stoplight:
            id: 217gtf7bvvhfa
          description: ID of the user that abandoned the fee (when applicable)
        abandonmentComment:
          type: string
          description: Reason for abandoning the fee (when applicable)
          example: Invalid fee assignation
        abandonmentDate:
          x-stoplight:
            id: tb35j0o2r6mfi
          type: string
          format: date-time
          description: Fee abandonment date (when applicable)
        refundMakerId:
          type: string
          x-stoplight:
            id: hbd34ujh40osv
          description: ID of the user who requested a refund for the fee (when applicable)
          readOnly: true
        refundRequestComment:
          type: string
          x-stoplight:
            id: hp656fq2w70bc
          description: Comment for requesting a fee refund (when applicable)
        refundRequestReason:
          $ref: '#/components/schemas/FeeRefundReason'
          x-stoplight:
            id: 6ifkk5f1va71i
        refundRequestDate:
          type: string
          x-stoplight:
            id: 57xprqazu0bcv
          format: date-time
          description: Date where a refund was last requested for the fee (if applicable)
          readOnly: true
        refundRequestAmount:
          $ref: '#/components/schemas/TotalAmount'
          x-stoplight:
            id: w2rsf7qoedpln
          description: Total amount requested for the refund (if applicable)
        refundCheckerId:
          type: string
          x-stoplight:
            id: k56a90jfaeeid
          description: ID of the user who approved or refused the fee refund request (if applicable)
          readOnly: true
        refundDecisionComment:
          type: string
          x-stoplight:
            id: mjoii9yqmndn1
          description: Reason for approving or disapproving the refund (if applicable)
        refundDecisionDate:
          type: string
          x-stoplight:
            id: 3kwiy2ygucdn1
          format: date-time
          description: Refund decision date (when applicable)
        refundTransactionId:
          type: string
          example: '1234'
          description: 'ID of the transaction that refunded, partially or entirely, this fee (when applicable)'
        paymentInitiatorId:
          type: string
          x-stoplight:
            id: 3qkddhihbvon6
          description: ID of the user that initiated the payment
        paymentDate:
          type: string
          x-stoplight:
            id: 6i9bxg41xwi2n
          format: date-time
          description: Fee payment date
        transactionId:
          type: string
          example: '133003'
          description: ID of the payment transaction initiated after applying the fee (when applicable)
      x-stoplight:
        id: b37mze5wb3z37
    FeeCollection:
      description: Sorted and paginated list of fees
      allOf:
        - properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: The total count of objects in the collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            links:
              type: array
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/common/fees?limit=20&offset=40'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/common/fees?limit=20&offset=60'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/common/fees?limit=20&offset=20'
              items:
                $ref: '#/components/schemas/Link'
              readOnly: true
        - properties:
            items:
              type: array
              description: Collection of fees
              items:
                $ref: '#/components/schemas/Fee'
      type: object
      x-stoplight:
        id: nbmnchc9174as
    DiscountsCollection:
      description: Sorted and paginated list of cards
      allOf:
        - type: object
          properties:
            items:
              type: array
              description: collection of discounts
              items:
                allOf:
                  - $ref: '#/components/schemas/Discount'
        - type: object
          properties:
            sort:
              type: string
              description: 'Default order is by code, ascending'
              default: code
        - $ref: '#/components/schemas/Collection'
      x-stoplight:
        id: vxvhpqmvy6xcp
    DiscountBody:
      type: object
      required:
        - accountNumber
        - rate
      properties:
        accountNumber:
          type: string
          description: Client account number on which the discount will be applied
          example: '13000057730'
        rate:
          type: integer
          description: Rate of the discount
          example: 75
        pricingCode:
          type: string
          description: Pricing on which the discount will be applied (will be applied globally if not specified)
          example: PRICING01
      x-stoplight:
        id: p1v897bf4shea
    AmountForAmount:
      type: object
      description: Required if type is AMOUNT
      properties:
        value:
          $ref: '#/components/schemas/AmountValue'
        currency:
          $ref: '#/components/schemas/Currency'
        display:
          type: string
          example: '13,12 €'
      x-stoplight:
        id: r111tv825mio2
    AmountForFormula:
      type: object
      description: Required if type is FORMULA
      properties:
        value:
          $ref: '#/components/schemas/AmountValue'
        currency:
          $ref: '#/components/schemas/Currency'
        display:
          type: string
          example: '13,12 €'
      x-stoplight:
        id: no35n1obsgko7
    Threshold:
      type: object
      description: A threshold
      properties:
        value:
          type: integer
          example: 5
          minimum: 1
          description: Number of times an operation can be used without generating fees
        period:
          type: string
          enum:
            - SLIDING_1
            - SLIDING_2
            - SLIDING_3
            - CALENDAR_1
            - CALENDAR_2
            - CALENDAR_3
          example: SLIDING_1
          description: Period (sliding or calendar) of the threshold
      x-stoplight:
        id: 7dy1lxv4uj5cz
    Operations:
      type: array
      description: Array of operations types.
      items:
        type: object
        properties:
          technicalName:
            type: string
            example: POSTING_INTERNATIONAL_TRANSFER
          type:
            type: string
            example: POSTING
      x-stoplight:
        id: 3m4z1agt7sdaq
    ClientConsumption:
      type: object
      properties:
        pricingCode:
          type: string
          example: PRICING01
          description: Unique ID of the pricing
        clientId:
          type: string
          example: '349'
          description: ID of the client
        period:
          type: object
          properties:
            code:
              type: string
              example: SLIDING_1
              description: Code of the period
            label:
              type: string
              example: 30 days rolling period
              description: Label of the period
        threshold:
          type: integer
          example: 15
          description: Maximum number of operations authorized over the period
        consumption:
          type: integer
          example: 10
          description: Number of operations already consumed
        transactionTypes:
          type: array
          description: List of transaction types linked to the pricing
          items:
            type: string
      x-stoplight:
        id: 83xaj747y75pd
    AmountRequest:
      type: object
      required:
        - value
        - currency
      properties:
        value:
          $ref: '#/components/schemas/AmountValue'
        currency:
          $ref: '#/components/schemas/Currency'
      x-stoplight:
        id: z421220ibycrl
    CustomerBillingFees:
      type: object
      properties:
        code:
          type: string
          example: PRICING01
          description: Unique ID of the pricing
        type:
          type: string
          enum:
            - AMOUNT
            - FORMULA
          example: AMOUNT
        amount:
          $ref: '#/components/schemas/AmountDetail'
      x-stoplight:
        id: ry5uwggwot4jx
    CustomerBillingPricingForClientAccount:
      type: object
      required:
        - code
        - name
        - currency
        - type
      properties:
        code:
          type: string
          example: PRICING01
          description: Unique ID of the pricing
        name:
          type: object
          description: 'Locale as key, name translated as value. The translated name is required for the default lang'
          example:
            fr_FR: PRICING01 name in fr
            en_US: PRICING01 name in US
            es_ES: PRICING01 name in ES
        currency:
          type: string
          example: EUR
          description: ISO code of the pricing currency
        type:
          type: string
          enum:
            - AMOUNT
            - FORMULA
          example: AMOUNT
        amount:
          $ref: '#/components/schemas/AmountForAmount'
        baseAmount:
          $ref: '#/components/schemas/AmountForFormula'
        rate:
          type: number
          description: Required if type is FORMULA
        reduction:
          $ref: '#/components/schemas/DiscountForClientAccount'
      x-stoplight:
        id: lkgg2l0e4qva0
    ReductionCollection:
      type: array
      description: Reductions available for Subscription
      items:
        $ref: '#/components/schemas/Reduction'
      x-stoplight:
        id: 9z2avudftpzov
    ClientSubscriptionInstallment:
      type: object
      properties:
        number:
          type: integer
          example: 1
          description: number of the installment
        clientSubscriptionCode:
          type: string
          example: PHONESUBSCRIPTION349ED
          description: code of the client subscription
        date:
          type: string
          format: date
          example: '2023-04-30'
          description: date of the installment
        status:
          type: string
          enum:
            - SCHEDULED
            - PAID
            - UNPAID
          description: status of the installment
          example: SCHEDULED
        amount:
          $ref: '#/components/schemas/Amount'
        taxAmount:
          $ref: '#/components/schemas/Amount'
        totalAmount:
          $ref: '#/components/schemas/Amount'
          x-stoplight:
            id: b32wd4brhetp8
          description: The total amount of the client installment including tax
      x-stoplight:
        id: 8u387mhdd7fwe
    FeeStatus:
      type: string
      description: Current fee status
      readOnly: true
      enum:
        - PENDING
        - REFUSED
        - CANCELLED
        - PAID
        - UNPAID
        - ABANDONED
        - PENDING_REFUND
        - PARTIAL_REFUND
        - TOTAL_REFUND
        - REFUND_ERROR
      title: ''
      x-stoplight:
        id: p4n2xe5yncoyf
    DiscountForClientAccount:
      type: object
      required:
        - code
        - accountNumber
        - rate
      properties:
        code:
          type: string
          example: 13000057730_PRICING01
          description: Unique code of the discount
        accountNumber:
          type: string
          description: Account to which the discount will be applied
          example: '13000057730'
        rate:
          type: integer
          example: 75
          description: Discount rate to apply
      x-stoplight:
        id: ny9g8s8f07pxz
    Reduction:
      type: object
      required:
        - code
        - names
        - type
        - number
      properties:
        code:
          type: string
          example: REDUCTION_CODE_001
          description: Code must be unique by pricing The allowed characters are upper case alphanumeric and '_'
        names:
          type: object
          description: 'Locale as key, name translated as value. At least one locale is required'
          example:
            fr_FR: PRICING01 name in fr
            en_US: PRICING01 name in US
        type:
          type: string
          enum:
            - FREE_INSTALLMENTS
            - DISCOUNT_INSTALLMENTS
          example: FREE_INSTALLMENTS
        number:
          type: number
          example: 349
          minimum: 1
          description: Number of free/discount installments
        amount:
          $ref: '#/components/schemas/Amount'
          description: Available for DISCOUNT_INSTALLMENTS
      x-stoplight:
        id: yjftd6r36i2f6
    AmountParameters:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/AmountValue'
        currency:
          $ref: '#/components/schemas/Currency'
        display:
          type: string
          example: 100 €
      x-stoplight:
        id: hxfhh0urhrojd
    FeeRefundReason:
      title: FeeRefundReason
      x-stoplight:
        id: jiu60r7318kzc
      enum:
        - COMMERCIAL_GESTURE
        - ADJUSTMENT
        - ERROR
        - OTHER
      examples:
        - COMMERCIAL_GESTURE
      description: Technical reason for fee refund
    SenderSms:
      type: string
      description: 'The SMS sender displayed name. If null, system use the value defined in [Platform config > Communication >  External identity > SMS sender name]'
      maxLength: 160
      x-stoplight:
        id: 7msnf9my71msw
    SenderEmail:
      type: object
      title: Define sender
      description: 'Use below information to map with email template. If null, System use [Platform config > Communication >  External identity] to map with email template'
      required:
        - name
        - brandName
        - emailAddress
        - phoneNumber
      properties:
        name:
          type: string
          example: Skaleet
        brandName:
          type: string
          example: TAGPAY
        emailAddress:
          $ref: '#/components/schemas/EmailText'
        phoneNumber:
          $ref: '#/components/schemas/Phone'
      x-stoplight:
        id: ua4u0cmhvqv5u
    ContentSmsLimited:
      type: string
      description: Content of the SMS message. Limited to 160 characters
      maxLength: 160
      x-stoplight:
        id: 22h0bljewrcet
    ContentEmail:
      type: object
      required:
        - subject
        - body
      properties:
        subject:
          type: string
          example: Subject of the email
        body:
          type: string
          example: Body of the email
      x-stoplight:
        id: 1gbek964hoexa
    SendSmsMessage:
      title: Send SMS
      description: Send messages with type = SMS
      type: object
      required:
        - type
        - content
        - recipient
      properties:
        type:
          type: string
          enum:
            - SMS
        sender:
          $ref: '#/components/schemas/SenderSms'
        content:
          $ref: '#/components/schemas/ContentSmsLimited'
        recipient:
          type: object
          required:
            - identifier
            - value
          properties:
            identifier:
              type: string
              enum:
                - PHONE_NUMBER
            value:
              $ref: '#/components/schemas/Phone'
      x-stoplight:
        id: 6sfsylf2txftt
    SendEmailMessage:
      title: Send EMAIL
      description: Send messages with type = EMAIL
      type: object
      required:
        - type
        - content
        - recipient
      properties:
        type:
          type: string
          enum:
            - EMAIL
        sender:
          $ref: '#/components/schemas/SenderEmail'
        content:
          $ref: '#/components/schemas/ContentEmail'
        recipient:
          type: object
          required:
            - identifier
            - value
          properties:
            identifier:
              type: string
              enum:
                - EMAIL_ADDRESS
            value:
              $ref: '#/components/schemas/EmailText'
      x-stoplight:
        id: 8zmw37rlbdxxp
    CompletePaymentInstrument:
      type: string
      description: 'Define the mean of payment (credit transfer, direct debit,...).'
      title: CompletePaymentInstrument
      x-stoplight:
        id: hkffl4o7soinq
      enum:
        - CreditTransfer
        - CreditTransferInst
        - CreditTransferReturn
        - CreditTransferRecall
        - CreditTransferRecallPositiveResponse
        - CreditTransferRecallNegativeResponse
        - CreditTransferClaimNonReceipt
        - CreditTransferClaimNonReceiptResponse
        - DirectDebit
        - DirectDebitReject
        - DirectDebitReturn
        - DirectDebitRefund
        - DirectDebitReversal
    InitiateDirectDebitPaymentTransactionRequest:
      title: InitiateDirectDebitPaymentTransactionRequest
      x-stoplight:
        id: owu06qnqgs35y
      allOf:
        - $ref: '#/components/schemas/InitiatePaymentTransactionRequest'
        - x-stoplight:
            id: 2y8vvcviat52z
          type: object
          properties:
            paymentTransactionInformation:
              $ref: '#/components/schemas/PaymentTransactionDirectDebitInformationRequest'
              x-stoplight:
                id: rz1u4h7po1xe0
    SmsEvent:
      title: SmsEvent
      description: Sms Event Type
      x-stoplight:
        id: 6tlfsxwjfux5s
      enum:
        - PENDING
        - SENT
        - DELAYED
        - ERROR
        - PARTIAL_SEND
        - RECEIVED_BY_RECIPIENT
        - RECEIVED
        - INVALID_API_CREDENTIALS
        - INVALID_RECIPIENT
        - RECIPIENT_UNAUTHORIZED
        - INVALID_SENDER
        - MESSAGE_NOT_ROUTABLE
        - MESSAGE_TOO_BIG
        - MESSAGE_EMPTY
        - VELOCITY_EXCEEDED
        - CONTENT_BLACKLISTED
        - INSUFFICIENT_FUNDS
        - EXPIRED
        - INVALID_API_REQUEST
        - UNKNOWN
    Translations:
      type: object
      examples:
        - fr_FR: Traduction en français
          en_US: English translation
          es_ES: Traduccion al espanol
      properties:
        fr_FR:
          type: string
        en_US:
          type: string
        es_ES:
          type: string
        other_key:
          type: string
          x-stoplight:
            id: juz35px03kss0
          description: other keys may be available depending on the application configuration
      x-stoplight:
        id: vu7ldu8aqun11
    FieldType:
      title: FieldType
      x-stoplight:
        id: dhww8y3mc5hyi
      enum:
        - TEXT
        - LONG_TEXT
        - INT
        - FLOAT
        - DATE
        - DATE_TIME
        - BOOLEAN
        - SELECT
        - MULTI_SELECT
        - PHONE
        - EMAIL
        - LANG
        - COUNTRY
        - GENDER
        - TITLE
        - BANK_NAME
        - AUTOCOMPLETE_TEXT
        - PREDEFINED_LIST
        - COMPLIANCE
      examples:
        - TEXT
    ChequeBlockReason:
      title: ChequeBlockReason
      enum:
        - LOST_OWNER
        - LOST_BENEFICIARY
        - LOST_BANK
        - STOLEN
        - FRAUD
        - LEGAL
      examples:
        - LEGAL
      x-stoplight:
        id: bn0nvsa22mgod
    AdditionalDataFieldParameters:
      title: AdditionalDataFieldParameters
      x-stoplight:
        id: 11ell79sdakqg
      oneOf:
        - description: if FieldType = `BOOLEAN`
          additionalProperties: false
          properties:
            BOOLEAN_DEFAULT_VALUE:
              type: boolean
              x-stoplight:
                id: apbw3tz5fmpxw
        - x-stoplight:
            id: tpmggucg312gw
          description: if FieldType = `TEXT` or `LONG_TEXT`
          properties:
            MIN_LENGHT:
              type: integer
              x-stoplight:
                id: 2mvvc6p2f7sq7
            MAX_LENGHT:
              type: integer
              x-stoplight:
                id: mi711vrpfrx2e
            REGEX:
              type: string
              x-stoplight:
                id: oqjjs6j1vxdw9
        - x-stoplight:
            id: ddhkcd5fl65ey
          additionalProperties: false
          description: if FieldType = `INT` or `FLOAT`
          properties:
            MIN_VALUE:
              type: integer
              x-stoplight:
                id: b2nikn430c87r
            MAX_VALUE:
              type: integer
              x-stoplight:
                id: kqh81h7z198qn
            REGEX:
              type: string
              x-stoplight:
                id: 556jcvcqy1vdk
        - x-stoplight:
            id: u914xyqshxdxb
          additionalProperties: false
          description: if FieldType = `SELECT`
          properties:
            WHITE_LIST:
              $ref: '#/components/schemas/AdditionalDataWhiteList'
              x-stoplight:
                id: 5pu5ynrdgo6bf
      type: object
    AdditionalDataWhiteList:
      title: AdditionalDataWhiteList
      x-stoplight:
        id: vbl31fyeh60rl
      type: object
      examples:
        - multiple: true
          valueList:
            - VALUE_1
            - VALUE_2
            - VALUE_N
          TRANSLATIONS:
            VALUE_1:
              fr_FR: Traduction en français
              en_US: English translation
              es_ES: Traduccion al espanol
            VALUE_2:
              fr_FR: Traduction en français
              en_US: English translation
              es_ES: Traduccion al espanol
            VALUE_N:
              fr_FR: Traduction en français
              en_US: English translation
              es_ES: Traduccion al espanol
      properties:
        multiple:
          type: boolean
          x-stoplight:
            id: rc55mchmvfqcn
        valueList:
          type: array
          x-stoplight:
            id: dooq50ionipig
          items:
            x-stoplight:
              id: pvrortzpnjv4r
            type: string
            example: VALUE_1
    Autocomplete:
      title: Autocomplete
      x-stoplight:
        id: zacg9ex0a7gvo
      type: object
      properties:
        fieldId:
          type: string
          x-stoplight:
            id: csxaytqltp19p
        value:
          type: string
          x-stoplight:
            id: jn5rlkcsd4wdf
        translation:
          type: string
          x-stoplight:
            id: uptq311v6oc0y
        lang:
          type: string
          x-stoplight:
            id: bcxbqg7qguqz5
    AccountForecastBalance:
      type: object
      properties:
        value:
          type: object
          properties:
            amount:
              type: object
              properties:
                currency:
                  type: string
                display:
                  type: string
                value:
                  type: integer
            date:
              type: string
      x-examples:
        Example 1:
          value:
            amount:
              currency: EUR
              display: '100,00 €'
              value: 10000
            date: '2024-05-18'
      description: Account forecast balance
      x-stoplight:
        id: dvmbgkb6ya06g
    TransactionLogDetails:
      type: object
      properties:
        description:
          type: string
        id:
          $ref: '#/components/schemas/TransactionId'
        date:
          type: string
          format: date-time
        amount:
          $ref: '#/components/schemas/Amount'
        currency:
          type: string
        type:
          type: object
          required:
            - value
            - label
          properties:
            value:
              $ref: '#/components/schemas/TransactionType'
            label:
              type: string
              example: Funds isolation
        media:
          $ref: '#/components/schemas/Media'
        authMode:
          $ref: '#/components/schemas/AuthMode'
        reference:
          type: string
        qualified:
          type: boolean
        locked:
          type: boolean
        justified:
          type: boolean
        accountingEntries:
          type: array
          items:
            $ref: '#/components/schemas/TransactionLogAccountingEntry'
      x-stoplight:
        id: aealtptp78wnk
    AuthMode:
      description: Available authentication modes (bitmask)
      type: object
      properties:
        value:
          type: integer
          example: 80
        label:
          type: string
          example: 'PIN on POS, NSDT'
      x-stoplight:
        id: krwnva1ggk52u
    TransactionLogAccountingEntry:
      type: object
      properties:
        account:
          type: object
          properties:
            number:
              type: string
              example: '10000313725'
            product:
              type: string
              example: Compte courant (€)
            holder:
              $ref: '#/components/schemas/User'
        amount:
          $ref: '#/components/schemas/Amount'
        balance:
          $ref: '#/components/schemas/Amount'
        type:
          $ref: '#/components/schemas/AccountingEntryType'
        date:
          type: string
          format: date-time
      x-stoplight:
        id: bbb0oucrmm8ka
    User:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UserId'
        type:
          type: string
          enum:
            - CLIENT
            - AGENT
            - MERCHANT
            - DISTRIBUTOR
          example: DISTRIBUTOR
        display:
          type: string
          example: P. Dupont
      x-stoplight:
        id: ny8exagrm118m
    PaymentNetworkAccounting:
      title: PaymentNetworkAccounting
      x-stoplight:
        id: 946fuvhjm6sqk
      oneOf:
        - $ref: '#/components/schemas/PaymentNetworkCreditTransferAccounting'
        - $ref: '#/components/schemas/PaymentNetworkDirectDebitAccounting'
          x-stoplight:
            id: s54c6u3j5fb4x
    CustomerBillingDirection:
      type: string
      title: CustomerBillingDirection
      x-stoplight:
        id: eae6mfqw5dw8n
      enum:
        - SOURCE
        - BENEFICIARY
        - BOTH
      x-internal: false
      default: BOTH
      description: 'Direction of the customer billing, indicating the party on which fees will be applied'
    HateoasLinks:
      type: array
      readOnly: true
      required:
        - rel
        - href
      items:
        type: object
        properties:
          rel:
            type: string
            description: Link relation
          href:
            type: string
            format: uri
            description: Location URI
      x-stoplight:
        id: r450zsksrtw1m
    CamtRequestType:
      title: CamtRequestType
      x-stoplight:
        id: uah6jorjv4s00
      enum:
        - CAMT086
    RequestCamtStatementResponseBody:
      title: RequestCamtStatementResponseBody
      type: object
      required:
        - identityId
        - from
        - to
        - camtType
        - id
        - requestedAt
      properties:
        identityId:
          type: string
          description: Third-party identity ID
        from:
          type: string
          format: date
          example: '2023-01-01'
          description: Starting date for the statement generation
        to:
          type: string
          format: date
          example: '2023-12-31'
          description: Ending date for the statement generation
        camtType:
          type: string
          description: CAMT Type
          example: CAMT086
          x-stoplight:
            id: fdnhu331egq13
        accountNumber:
          type: string
          x-stoplight:
            id: b8y77xgl71czi
          description: 'Account number, if passed during statement request'
          example: '10000006162'
        id:
          type: string
          x-stoplight:
            id: nic9p14d3sfgz
          description: CAMT request ID
          example: '1'
        requestedAt:
          $ref: '#/components/schemas/DateAtom'
          x-stoplight:
            id: k3t8bxm8pwino
          description: Date when the statement was requested
      x-stoplight:
        id: w7z8qfkn4dcns
    GetCamtStatementResponseBody:
      title: GetCamtStatementResponseBody
      x-stoplight:
        id: jgdhbch1zdcso
      type: object
      required:
        - identityId
        - from
        - to
        - camtType
        - id
        - requestedAt
        - updatedAt
        - status
      properties:
        identityId:
          type: string
          description: Third-party identity ID
        from:
          type: string
          format: date
          example: '2023-01-01'
          description: Starting date for the statement generation
        to:
          type: string
          format: date
          example: '2023-12-31'
          description: Ending date for the statement generation
        camtType:
          type: string
          description: CAMT type
          example: CAMT086
          x-stoplight:
            id: u8klox0022sw1
        accountNumber:
          type: string
          description: 'Account number, if passed during the statement request'
          example: '10000006162'
        id:
          type: string
          description: CAMT request ID
        requestedAt:
          $ref: '#/components/schemas/DateAtom'
          description: Date when the statement was requested
        updatedAt:
          $ref: '#/components/schemas/DateAtom'
          x-stoplight:
            id: 86xukd7h82bhy
          description: Request status last change date
        status:
          x-stoplight:
            id: 9weg5om3k6tsx
          enum:
            - PENDING
            - PROCESSING
            - FAILED
            - COMPLETED
          description: Current status of the request
        encodedStatement:
          type: string
          x-stoplight:
            id: s3qs8x5sr9ugl
          description: 'XML statement content encoded in base64 format, only if the status is COMPLETED'
          example: PD94bWwgdmVyc2lvbj0i....asd=
    CamtStatementCollection:
      title: CamtStatementCollection
      x-stoplight:
        id: wrrzkcdkvbm3k
      type: object
      description: Collection of CAMT statements
      required:
        - items
        - count
        - offset
        - limit
        - sort
      properties:
        items:
          x-stoplight:
            id: q0fsfht03o0dg
          description: 'List of Camt Statement with Link to get XML content, if the status is COMPLETED'
          type: array
          items:
            $ref: '#/components/schemas/CamtStatementWithHateoasLinksResponseBody'
            x-stoplight:
              id: utpgn19ow3kdy
        count:
          type: integer
          x-stoplight:
            id: tnymav9qhwibh
          description: The total count of objects in the collection
          minimum: 0
        offset:
          type: integer
          x-stoplight:
            id: zm08rbg9vtlys
          description: Pagination start (from 0)
          minimum: 0
          default: 0
        limit:
          type: integer
          x-stoplight:
            id: 83545uhtih71z
          description: Number of results to display
          minimum: 0
          maximum: 100
          default: 20
        sort:
          type: string
          x-stoplight:
            id: aknqa9u8xhe7g
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          default: id
    CamtStatementWithHateoasLinksResponseBody:
      title: CamtStatementWithHateoasLinksResponseBody
      x-stoplight:
        id: 3ks6xmxipibs0
      type: object
      required:
        - identityId
        - from
        - to
        - camtType
        - id
        - requestedAt
        - updatedAt
        - status
        - links
      properties:
        identityId:
          type: string
          description: Third-party identity ID
        from:
          type: string
          format: date
          example: '2023-01-01'
          description: Starting date for the statement generation
        to:
          type: string
          format: date
          example: '2023-12-31'
          description: Ending date for the statement generation
        camtType:
          type: string
          description: CAMT Type
          example: CAMT086
          x-stoplight:
            id: 066hxer6xmm5c
        accountNumber:
          type: string
          description: 'Third-party account number, if passed during the statement request'
          example: '10000006162'
        id:
          type: string
          description: CAMT request ID
          example: '1'
        requestedAt:
          $ref: '#/components/schemas/DateAtom'
          description: Date when the statement was requested
        updatedAt:
          $ref: '#/components/schemas/DateAtom'
          description: Request status last change date
        status:
          enum:
            - PENDING
            - PROCESSING
            - FAILED
            - COMPLETED
          description: Current status of the request
        links:
          $ref: '#/components/schemas/HateoasLinks'
          description: 'XML statement content encoded in base64 format, only if the status is COMPLETED'
          x-stoplight:
            id: 9av9t9l4v0x6e
      description: ''
    FeesStatementCollection:
      description: Paginated list of fees statements
      allOf:
        - type: object
          properties:
            items:
              type: array
              description: collection of statements
              items:
                $ref: '#/components/schemas/FeesStatement'
            count:
              type: integer
              description: the number of elements returned in `items` array
              minimum: 0
            total:
              type: integer
              description: the total number of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
      x-stoplight:
        id: bt59gdfegjve9
    FeesStatementId:
      type: string
      description: Fees statement identifier
      example: ACCSTAT12
      x-stoplight:
        id: v8pv3rcmuzag7
    FeesStatement:
      type: object
      required:
        - id
        - fromDate
        - toDate
        - generatedDate
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/FeesStatementId'
            - readOnly: true
        fromDate:
          type: string
          format: date-time
          description: the begin date of the period of time covered by this statement
        toDate:
          type: string
          format: date-time
          description: the end date of the period of time covered by this statement
        generatedDate:
          type: string
          format: date-time
          description: the date of generation of the statement
      x-stoplight:
        id: ka4e1pan12if2
    TemplateType:
      type: object
      required:
        - id
        - code
        - name
      properties:
        id:
          type: string
          example: '456872'
          description: Unique ID of the template type
        code:
          type: string
          example: TEMPTYPE01
          description: Unique code of the template type
        name:
          type: object
          description: 'Locale as key, name translated as value. The translated name is required for the default lang'
          example:
            fr_FR: TEMPTYPE01 name in fr
            en_US: TEMPTYPE01 name in US
            es_ES: TEMPTYPE01 name in ES
        creationDate:
          type: string
          format: date-time
          example: '2024-02-06T16:32:00.7656563Z'
        deletionDate:
          type: string
          format: date-time
          example: '2024-02-06T16:32:00.7656563Z'
      x-stoplight:
        id: eaan3866txot3
    TemplateTypeBody:
      type: object
      required:
        - code
        - name
      properties:
        code:
          type: string
          example: TEMPTYPE01
          description: Unique code of the template type
        name:
          type: object
          description: 'Locale as key, name translated as value. The translated name is required for the default lang'
          example:
            fr_FR: TEMPTYPE01 name in fr
            en_US: TEMPTYPE01 name in US
            es_ES: TEMPTYPE01 name in ES
        variables:
          type: array
          items:
            $ref: '#/components/schemas/TemplateVariableCategoryBody'
      x-stoplight:
        id: 7nkdrx4l5p8t6
    TemplateBody:
      type: object
      required:
        - code
        - name
      properties:
        name:
          type: string
          example: Invoice template
          description: Name for the template
        templateTypeCode:
          type: string
          example: TEMPTYPE01
          description: Unique code of the template type
        locale:
          type: object
          description: Locale for template
          $ref: '#/components/schemas/Lang'
        partyType:
          type: string
          description: Party type for the template
          example: client
        file:
          type: string
          description: Template file content in base64 format
          example: TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQK
      x-stoplight:
        id: jprz828nzp3kt
    TemplateTypeCreated:
      type: object
      x-stoplight:
        id: x7i4dsevdjlvj
      required:
        - id
        - code
        - name
        - predefined
      properties:
        id:
          type: string
          example: '456872'
          description: Unique ID of the template type
        code:
          type: string
          example: TEMPTYPE01
          description: Unique code of the template type
        name:
          type: object
          description: 'Locale as key, name translated as value. The translated name is required for the default lang'
          example:
            fr_FR: TEMPTYPE01 name in fr
            en_US: TEMPTYPE01 name in US
            es_ES: TEMPTYPE01 name in ES
        predefined:
          type: boolean
          example: true
          description: Boolean value denoting if the type is predefined by the plateform
          x-stoplight:
            id: djm48188dopct
        creationDate:
          type: string
          format: date-time
          example: '2024-02-06T16:32:00.7656563Z'
        deletionDate:
          type: string
          format: date-time
          example: '2024-03-06T16:32:00.7656563Z'
    TemplateTypeCollection:
      title: TemplateTypeCollection
      type: object
      description: Collection of Template Types
      required:
        - items
        - count
        - offset
        - limit
        - sort
      properties:
        items:
          description: List of Template Types
          type: array
          items:
            $ref: '#/components/schemas/TemplateTypeCreated'
        count:
          type: integer
          description: The total count of objects in the collection
          minimum: 0
        offset:
          type: integer
          description: Pagination start (from 0)
          minimum: 0
          default: 0
        limit:
          type: integer
          description: Number of results to display
          minimum: 0
          maximum: 100
          default: 20
        sort:
          type: string
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          default: code
      x-stoplight:
        id: rfk2c4x5xfk90
    TemplateCollection:
      title: TemplateCollection
      x-stoplight:
        id: jd7p44pnuq2yl
      type: object
      description: Collection of Templates
      required:
        - items
        - count
        - offset
        - limit
        - sort
      properties:
        items:
          description: List of Templates
          type: array
          items:
            $ref: '#/components/schemas/TemplateWithHateosLink'
        count:
          type: integer
          description: The total count of objects in the collection
          minimum: 0
        offset:
          type: integer
          description: Pagination start (from 0)
          minimum: 0
          default: 0
        limit:
          type: integer
          description: Number of results to display
          minimum: 0
          maximum: 100
          default: 20
        sort:
          type: string
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          default: uploadDate
    TemplateTypeForUpdate:
      type: object
      required:
        - name
        - variables
        - delete
      properties:
        name:
          type: object
          description: 'Locale as key, name translated as value. The translated name is required for the default lang'
          example:
            fr_FR: TEMPTYPE01 name in fr
            en_US: TEMPTYPE01 name in US
            es_ES: TEMPTYPE01 name in ES
        variables:
          $ref: '#/components/schemas/TemplateVariableCategoryBody'
          description: Template type variables.
        delete:
          type: boolean
          description: Boolean value to specify if the template type should be deleted
          example: true
      x-stoplight:
        id: 3zb20h5tfkgrv
    TemplateVariable:
      type: object
      properties:
        name:
          type: string
          description: Variable name
          example: clientFirstName
        description:
          type: object
          description: 'Locale as key, description translated as value. The translated description is required for the default lang'
          example:
            fr_FR: Variable description in fr
            en_US: Category description in US
            es_ES: Variable description in ES
        required:
          type: boolean
          example: true
      x-stoplight:
        id: v681tloqkopib
    TemplateVariableCategoryBody:
      type: object
      x-stoplight:
        id: fbs48gx4vo4g6
      properties:
        name:
          type: object
          description: 'Locale as key, category name translated as value. The translated name is required for the default lang'
          example:
            fr_FR: Category name in fr
            en_US: Category name in US
            es_ES: Category name in ES
        description:
          type: object
          description: 'Locale as key, category description translated as value. The translated description is required for the default lang'
          example:
            fr_FR: Category description in fr
            en_US: Category description in US
            es_ES: Category description in ES
        vars:
          type: array
          items:
            $ref: '#/components/schemas/TemplateVariable'
    TemplateVariableCategory:
      type: object
      properties:
        id:
          type: string
          description: Category id
          example: '782'
        variables:
          type: array
          items:
            $ref: '#/components/schemas/TemplateVariable'
      x-stoplight:
        id: 0tzlyqclg8pg0
    Template:
      type: object
      required:
        - id
        - templateTypeId
        - partyType
        - locale
        - file
        - uploadDate
      properties:
        id:
          type: string
          example: 0191db32-5561-72b4-ae9b-e87a710aed2d
          description: Unique ID of the template
        templateTypeId:
          type: string
          example: '4050'
          description: Unique id of the template type
        name:
          type: string
          description: Template name
          example: My template
        partyType:
          type: string
          description: Party type for the template
          example: client
        locale:
          type: string
          $ref: '#/components/schemas/Lang'
          description: The locale of the template.
        file:
          type: string
          description: Content of template in base64
          example: TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQK
        uploadDate:
          type: string
          format: date-time
          example: '2024-02-06T16:32:00.7656563Z'
      x-stoplight:
        id: asqraqq9iw30m
    TemplateWithHateosLink:
      type: object
      x-stoplight:
        id: rdkkd0ex8s7no
      required:
        - id
        - templateTypeId
        - partyType
        - locale
        - file
        - uploadDate
      properties:
        id:
          type: string
          example: 0191db32-5561-72b4-ae9b-e87a710aed2d
          description: Unique ID of the template
        templateTypeId:
          type: string
          example: '4050'
          description: Unique id of the template type
        name:
          type: string
          description: Template name
          example: My template
        partyType:
          type: string
          description: Party type for the template
          example: client
        locale:
          type: string
          $ref: '#/components/schemas/Lang'
          description: The locale of the template.
        templateLink:
          $ref: '#/components/schemas/HateoasLinks'
          description: Link to Retrieve the template by Template Id
        uploadDate:
          type: string
          format: date-time
          example: '2024-02-06T16:32:00.7656563Z'
    MandateCreditorReference:
      x-stoplight:
        id: clpu1nbbl302m
      description: Creditor's ICS code
      type: string
      examples:
        - string
      example: FR83ZZZ459654
    MandateCreditorName:
      title: MandateCreditorName
      x-stoplight:
        id: kycokjwdyezea
      type: string
      description: Name of the creditor
      example: Jean-Marc Dupont
    MandateDebtorReference:
      type: object
      $ref: '#/components/schemas/IdentityId'
      x-stoplight:
        id: s72gf2drmkmym
      description: Debtor's identity ID
    MandateRecurrent:
      title: MandateRecurrent
      x-stoplight:
        id: xiexc38hnyt5q
      type: boolean
      description: Is mandate recurrent
    MandateSignatureDate:
      type: object
      $ref: '#/components/schemas/DateAtom'
      x-stoplight:
        id: tn5p71tsceoch
      description: Signature date of the mandate
    MandateType:
      title: MandateType
      x-stoplight:
        id: 78iqpio39tjmw
      description: Mandate type
      enum:
        - CORE
        - B2B
    AccountOwner:
      type: object
      x-examples:
        Example 1:
          userId: '123'
          ownerName: John Doe
          status: ACTIVE
          creationDate: '2024-01-01'
      properties:
        userId:
          type: string
          example: '123'
        ownerName:
          type: string
          example: John Doe
        status:
          type: string
          example: ACTIVE
        creationDate:
          type: string
          example: '2024-01-01'
      x-stoplight:
        id: y8yzllespyuan
    ChequeViewModelForGetAllCheques:
      title: ChequeViewModelForGetAllCheques
      x-stoplight:
        id: p54wtwo9zyb1s
      allOf:
        - $ref: '#/components/schemas/Cheque'
        - x-stoplight:
            id: 2bsbq7hn70mvq
          properties:
            lastStatusChangeDate:
              type: string
              x-stoplight:
                id: lo3y4wvts26a9
              example: '2024-07-24T15:11:27+02:00'
              format: date-time
              description: Date where the status of the cheque was last changed
              readOnly: true
      type: object
    ChequeViewModelForGetAllChequesCollection:
      title: ChequeViewModelForGetAllChequesCollection
      x-stoplight:
        id: 2dinvjwghj5r6
      allOf:
        - properties:
            items:
              x-stoplight:
                id: fnws4ootpf45w
              type: array
              items:
                $ref: '#/components/schemas/ChequeViewModelForGetAllCheques'
                x-stoplight:
                  id: 9y1yvg97toe7r
            count:
              type: integer
              x-stoplight:
                id: gd9x68l3we83t
              minimum: 0
              description: The total count of objects in the collection
            offset:
              type: integer
              x-stoplight:
                id: 9xmvuxjw4wee4
              default: 0
              minimum: 0
              description: Pagination start (from 0)
            limit:
              type: integer
              x-stoplight:
                id: y0kdm8l6hq9o6
              default: 20
              minimum: 0
              maximum: 100
              description: Number of results to display
            sort:
              type: string
              x-stoplight:
                id: 1l2rblaq4nsqs
              description: Field to define sort order
              default: id
      type: object
    ForeignAmount:
      type: object
      x-stoplight:
        id: s4l0g67xp904r
      description: 'Foreign amount of a forex operation. When performing an outward forex operation, both base and foreign currencies must be set but only one value must be set, as the other one will be calculated using the corresponding exchange rate.'
      required:
        - currency
      properties:
        value:
          type: integer
          x-stoplight:
            id: ywqj2h6ibbro5
          description: Amount without separator and symbol
          example: 1337
        currency:
          type: string
          x-stoplight:
            id: s0r8hek00n6lr
          description: Alphabetic iso code of associated currency (3 digits)
          minLength: 3
          maxLength: 3
          example: EUR
    ExchangeRate:
      title: ExchangeRate
      x-stoplight:
        id: fpy1iuoawvjns
      type: string
      description: Exchange rate (forex operation only)
      examples:
        - 1.2
  parameters:
    ObjectToScreenId:
      in: path
      name: otsId
      description: object to screen unique identifier
      required: true
      schema:
        $ref: '#/components/schemas/ObjectToScreenId'
    ScreeningRequestId:
      in: path
      name: srId
      description: screening request unique identifier
      required: true
      schema:
        $ref: '#/components/schemas/ScreeningRequestId'
    DocumentId:
      in: path
      name: documentId
      required: true
      schema:
        $ref: '#/components/schemas/DocumentId'
    IdentityId:
      in: path
      name: identityId
      required: true
      schema:
        $ref: '#/components/schemas/IdentityId'
    CardId:
      in: path
      name: cardId
      required: true
      schema:
        $ref: '#/components/schemas/CardId'
