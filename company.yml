openapi: 3.1.0
x-stoplight:
  id: n9o5zq5w56xcf
servers:
  - url: 'https://sandbox.skaleet.com/api/company/v1'
    description: Skaleet sandbox environment.
info:
  title: Company API
  version: v1.2.0
  description: |-
    Company API |  | 
    ---------|----------|
     User | **Company (Corporate Customer)** |
     Use cases Examples| **Onboarding**<br>- Initiate company onboarding<br>- Update onboarding file<br>- Submit onboarding file<br>**Account Management**<br>- View and download accounts information<br>**Payment**<br>- Manage payment transaction<br>**Identity Management**<br>- Create identities<br>- Update identities<br>- Manage identities lifecycle<br>- Manage identities recipient<br> |

    A company is a legal entity, such as a corporation or limited liability company, engaged in providing financial services or technology solutions. Companies use the system for their payments (such as salary payments) and account management. They have employees and can delegate their access to but cannot manage their own set of customers.

    To use this API, you may create or reuse a company (or use the API to create a new one through onboarding). Each user is attached to a user profile which defines their rights and permissions. The profile configuration of this user will impact the authorization to endpoints.

    API keys are generated by the back-office through their web portal. The authorization mode depends on the method used to generate the API key and its configuration. When creating or editing the API key, the back-office can specify the scopes available for this key, determining whether access to specific endpoints is authorized or not.
  contact:
    name: Skaleet
    url: 'https://www.skaleet.com/en/'
    email: api@skaleet.com
  license:
    name: Proprietary
    url: 'https://www.skaleet.com/'
tags:
  - name: Accounts
  - name: Credentials
  - name: Customer Instructions
  - name: Customers
  - name: Documents management
  - name: Front Configuration
  - name: Identities
  - name: KYC
  - name: Misc.
  - name: OAuth2
  - name: Onboarding
  - name: Others
  - name: Pairing
  - name: Payment Transaction
  - name: Profiles
  - name: Transactions
paths:
  /oauth2/public-keys/latest:
    get:
      security: []
      summary: Get latest public key
      operationId: getLatestPublicKey
      tags:
        - OAuth2
      responses:
        '200':
          description: the latest public key in X.509 format
          content:
            application/x-pem-file:
              schema:
                type: string
                example: |
                  -----BEGIN PUBLIC KEY-----
                  MIICIjANBgkqhkiG9[...]Cb0CAwEAAQ==
                  -----END PUBLIC KEY-----
        '404':
          description: No public key available
      x-stoplight:
        id: p9rgmltw6t4do
  /oauth2/authorize:
    get:
      security: []
      tags:
        - OAuth2
      summary: (AuthCode) Initiate an OAuth2 authorization request
      operationId: InitiateAuthorizationRequest
      parameters:
        - in: query
          required: true
          name: response_type
          schema:
            type: string
            description: OAuth2 authorization request response type. Must be `code`.
        - in: query
          required: true
          name: client_id
          schema:
            $ref: '#/components/schemas/ApiClientId'
        - in: query
          required: true
          name: redirect_uri
          schema:
            $ref: '#/components/schemas/RedirectUri'
        - in: query
          required: true
          name: scope
          schema:
            $ref: '#/components/schemas/Scope'
        - in: query
          required: true
          name: state
          schema:
            $ref: '#/components/schemas/AuthCodeState'
        - in: query
          name: code_challenge
          schema:
            type: string
            description: 'A PKCE code challenge, consisting of hashing a random value with the specified method below.'
            example: cfG0F8j-xP12yjVUJfizBHGZsgKI6ryHHBcF5jo034k
        - in: query
          name: code_challenge_method
          schema:
            type: string
            description: |
              `plain` method should be used only if API client does not support `S256`.

              `S256` means using SHA-256 hashing algorithm.
            enum:
              - S256
              - plain
      responses:
        '302':
          $ref: '#/components/responses/OAuth2AuthRequestResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: kxfrqqzz59czp
  /oauth2/token:
    post:
      security: []
      tags:
        - OAuth2
      summary: Request for a new OAuth2 access token
      operationId: RequestAccessToken
      requestBody:
        required: true
        description: |
          The necessary credentials to request a new Access Token.

          **Note:** Pay attention to which grant flow can be used on this API (see the Authentication section above).
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OAuth2AccessTokenRequest'
      responses:
        '200':
          $ref: '#/components/responses/OAuth2AccessTokenResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 4vs9satmsrskv
  /oauth2/refresh:
    post:
      security: []
      tags:
        - OAuth2
      summary: Refreshing an OAuth2 access token
      operationId: RefreshAccessToken
      requestBody:
        required: true
        description: the necessary credentials to refresh the new Access Token
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OAuth2RefreshAccessTokenRequest'
      responses:
        '200':
          $ref: '#/components/responses/OAuth2AccessTokenResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 94yin40t82874
  /onboarding/initiate:
    post:
      security:
        - OAuth2: []
      tags:
        - Onboarding
      summary: Initiate enrollment
      operationId: InitiateEnrollment
      requestBody:
        required: true
        description: Enrollment initiation request
        content:
          application/json:
            schema:
              type: object
              required:
                - legalName
                - delegateUser
              properties:
                legalName:
                  type: string
                  description: the Company legal name
                delegateUser:
                  type: object
                  description: User to be created to handle Company enrollment
                  required:
                    - login
                    - email
                    - phone
                  properties:
                    login:
                      $ref: '#/components/schemas/Login'
                    email:
                      $ref: '#/components/schemas/Email'
                    phone:
                      $ref: ./Phone.yaml
      responses:
        '201':
          description: |
            Enrollment has been initiated successfully. Confirmation and activation emails has been sent to the address contained in request.
        '403':
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: e80gb0nf12kz4
  /onboarding/submit:
    post:
      security:
        - OAuth2:
            - enrollment-validation-request-submission
      tags:
        - Onboarding
      summary: Request Company validation
      operationId: RequestCompanyValidation
      responses:
        '201':
          description: |
            Company enrollment validation has been requested successfully. Confirmation email has been sent to the company contact email address.
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: hk5tv8lvdh1m4
  /onboarding/file:
    get:
      security:
        - OAuth2:
            - onboarding_view
      tags:
        - Onboarding
      operationId: GetOnboardingFile
      summary: Get Company onboarding file
      description: |
        Returns the Company onboarding file containing the onboarding form, status and possible actions.
      responses:
        '200':
          $ref: '#/components/responses/GetOnboardingFileResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: q7lyikaw50mxw
    patch:
      security:
        - OAuth2:
            - onboarding_update
      tags:
        - Onboarding
      operationId: UpdateOnboardingFile
      summary: Update onboarding file
      description: Update onboarding file content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardingFileUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/OnboardingFileUpdatedResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: rppu7jx4hd3ps
  /onboarding/relation-add-form:
    get:
      security:
        - OAuth2:
            - onboarding_management
      tags:
        - Onboarding
      operationId: GetOnboardingRelationAddForm
      summary: Get relation add form
      description: Returns the full form to fill in order to add a new relation
      parameters:
        - in: query
          name: legalType
          required: true
          schema:
            $ref: ./LegalType.yaml
      responses:
        '200':
          $ref: '#/components/responses/GetRelationAddFormResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: ijv7ys4cnaxuu
  /onboarding/relations:
    get:
      security:
        - OAuth2:
            - onboarding_view
      tags:
        - Onboarding
      operationId: GetOnboardingIdentityRelations
      summary: Get onboarding customer's relations
      responses:
        '200':
          $ref: '#/components/responses/GetOnboardingRelationsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: 1vgi8cajc7avq
    post:
      security:
        - OAuth2:
            - onboarding_management
      tags:
        - Onboarding
      operationId: AddNewOnboardingRelation
      summary: Add a new relation
      description: Adds a relation to a newly-created party with form data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOnboardingRelationRequest'
      responses:
        '201':
          $ref: '#/components/responses/OnboardingRelationAddedResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: tkjqc3vqsgx84
  '/onboarding/relations/{relationId}':
    parameters:
      - name: relationId
        in: path
        schema:
          allOf:
            - $ref: '#/components/schemas/RelationId'
            - readOnly: false
        required: true
    delete:
      security:
        - OAuth2:
            - onboarding_management
      tags:
        - Onboarding
      operationId: DeleteOnboardingRelation
      summary: Delete a relation
      description: Deletes a relation during an ongoing onboarding process
      responses:
        '204':
          description: Relation was successfully deleted
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: w7po0p7hw8qsm
  /profiles:
    get:
      security:
        - OAuth2:
            - profiles_view
      tags:
        - Profiles
      summary: List User Profiles
      description: |
        Returns the list of all accessible User Profiles
      operationId: ListProfiles
      parameters:
        - name: profileId
          in: query
          schema:
            $ref: '#/components/schemas/ProfileId'
        - name: role
          in: query
          schema:
            $ref: ./IdentityRole.yaml
        - name: name
          in: query
          schema:
            type: string
            description: the Profile name
        - name: ownerId
          in: query
          schema:
            $ref: ./IdentityId.yaml
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
      responses:
        '200':
          description: List of usable Profiles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 0pv7eddrl0vtr
  /kyc:
    get:
      security:
        - OAuth2:
            - kyc_view
      tags:
        - KYC
      summary: List KYC fields list
      description: |
        Returns the full list of available KYC fields for the specified filters.

        If no `profileId` is given by parameters, then the fields returned are the awaited KYC for a non-customer identity.
      operationId: GetKyc
      parameters:
        - in: query
          name: legalType
          schema:
            $ref: ./LegalType.yaml
          required: true
        - in: query
          name: profileId
          schema:
            $ref: '#/components/schemas/ProfileId'
          required: true
        - in: query
          name: status
          schema:
            $ref: ./IdentityStatusEnum.yaml
          required: true
        - in: query
          name: includeRenewable
          schema:
            $ref: '#/components/schemas/IncludeRenewableKyc'
          required: false
        - in: query
          name: includeNonRenewable
          schema:
            $ref: '#/components/schemas/IncludeNonRenewableKyc'
          required: false
      responses:
        '200':
          description: the KYC fields to provide when creating an Identity with the provided filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InputCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 081ryuv21xrtn
  /kyc/documents:
    get:
      security:
        - OAuth2:
            - kyc_view
      tags:
        - KYC
      summary: Get KYC documents requirements
      operationId: GetKycDocumentRequirements
      parameters:
        - in: query
          name: legalType
          schema:
            $ref: ./LegalType.yaml
          required: true
        - in: query
          name: profileId
          schema:
            $ref: '#/components/schemas/ProfileId'
          required: true
      responses:
        '200':
          description: List of document requirements for KYC
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentRequirementCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: luzv6vchp00gg
  /identities:
    get:
      security:
        - OAuth2:
            - identity_view
      tags:
        - Identities
      summary: List Identities
      description: |
        List all Identities
      operationId: ListIdentities
      parameters:
        - name: legalType
          in: query
          schema:
            $ref: ./LegalType.yaml
        - name: profileId
          in: query
          schema:
            $ref: '#/components/schemas/ProfileId'
        - name: externalId
          in: query
          schema:
            $ref: '#/components/schemas/ExternalId'
        - name: role
          in: query
          schema:
            $ref: ./IdentityRole.yaml
        - name: startLastUpdateKyc
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: endLastUpdateKyc
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: activitySectorCode
          in: query
          schema:
            type: string
        - name: addressLine1
          in: query
          schema:
            type: string
        - name: addressLine2
          in: query
          schema:
            type: string
        - name: alias
          in: query
          schema:
            type: string
        - name: annualTurnover
          in: query
          schema:
            type: string
        - name: averageSalary
          in: query
          schema:
            type: string
        - name: bankName
          in: query
          schema:
            type: string
        - name: birthCountry
          in: query
          schema:
            $ref: '#/components/schemas/Country'
        - name: birthCounty
          in: query
          schema:
            type: string
        - name: birthDate
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: birthDepartment
          in: query
          schema:
            type: string
        - name: birthPlace
          in: query
          schema:
            type: string
        - name: brandName
          in: query
          schema:
            type: string
        - name: businessDirectory
          in: query
          schema:
            type: string
        - name: city
          in: query
          schema:
            type: string
        - name: closureDate
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: contactPhone
          in: query
          schema:
            type: string
        - name: country
          in: query
          schema:
            $ref: '#/components/schemas/Country'
        - name: cumulativeSalary
          in: query
          schema:
            type: string
        - name: deathDate
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: district
          in: query
          schema:
            type: string
        - name: email
          in: query
          schema:
            type: string
        - name: familyName
          in: query
          schema:
            type: string
        - name: firstName
          in: query
          schema:
            type: string
        - name: gender
          in: query
          schema:
            type: string
            description: 'Expected values are 1 for male, 2 for female and 0 for none'
        - name: givenName
          in: query
          schema:
            type: string
        - name: idNumber
          in: query
          schema:
            type: string
        - name: incomeRange
          in: query
          schema:
            type: string
        - name: information
          in: query
          schema:
            type: string
        - name: jobTitle
          in: query
          schema:
            type: string
        - name: lang
          in: query
          schema:
            $ref: '#/components/schemas/Lang'
        - name: lastName
          in: query
          schema:
            type: string
        - name: legalCategory
          in: query
          schema:
            type: string
        - name: legalForm
          in: query
          schema:
            type: string
        - name: legalName
          in: query
          schema:
            type: string
        - name: maidenName
          in: query
          schema:
            type: string
        - name: marriedName
          in: query
          schema:
            type: string
        - name: nationality
          in: query
          schema:
            type: string
        - name: netIncomeRange
          in: query
          schema:
            type: string
        - name: notTaxResident
          in: query
          schema:
            type: boolean
        - name: numberOfEmployees
          in: query
          schema:
            type: string
        - name: otherNationality
          in: query
          schema:
            type: string
        - name: personTitle
          in: query
          schema:
            $ref: '#/components/schemas/PersonTitle'
        - name: postName
          in: query
          schema:
            type: string
        - name: province
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: registrationCountry
          in: query
          schema:
            $ref: '#/components/schemas/Country'
        - name: registrationDate
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: registrationNumber
          in: query
          schema:
            type: string
        - name: registrationPlace
          in: query
          schema:
            type: string
        - name: requiredAction
          in: query
          schema:
            type: string
        - name: shareCapital
          in: query
          schema:
            type: string
        - name: socioProfessionalCategory
          in: query
          schema:
            type: string
        - name: spouseFirstName
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            $ref: ./IdentityStatusEnum.yaml
        - name: taxAddressLine1
          in: query
          schema:
            type: string
        - name: taxAddressLine2
          in: query
          schema:
            type: string
        - name: taxCity
          in: query
          schema:
            type: string
        - name: taxCountry
          in: query
          schema:
            $ref: '#/components/schemas/Country'
        - name: taxDistrict
          in: query
          schema:
            type: string
        - name: taxProvince
          in: query
          schema:
            type: string
        - name: taxRegion
          in: query
          schema:
            type: string
        - name: taxZipCode
          in: query
          schema:
            type: string
        - name: webSite
          in: query
          schema:
            type: string
        - name: zipcode
          in: query
          schema:
            type: string
        - name: kycExpiresBefore
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: kycExpiresAfter
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - legalType
              - profileId
              - externalId
              - role
              - lastUpdateKyc
      responses:
        '200':
          description: List of Identities matching the request filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: me8erasdefssf
    post:
      security:
        - OAuth2:
            - identity_creation
      tags:
        - Identities
      summary: Create Identity
      description: |
        Creating an Identity without Profile will create an Identity with a `NON_CUSTOMER` role.

        To create an Identity with `LEGAL_ENTITY` legal type, at least one relation of type `HAS_FOR_BOARD_MEMBER` is required in `relations` field of creation request.

        Response will not contain the Identity relations provided in the request. Use the relations management endpoints to get and modify Identity relations.
      operationId: CreateIdentity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityCreationRequest'
      responses:
        '201':
          description: Identity has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: kkma7wzjhrmjl
  '/identities/{identityId}':
    parameters:
      - in: path
        name: identityId
        required: true
        schema:
          $ref: ./IdentityId.yaml
    get:
      security:
        - OAuth2:
            - identity_view
      tags:
        - Identities
      summary: Retrieve one Identity
      description: |
        Administrators are not considered as Identity and therefor are not returned by this endpoint.
      operationId: GetIdentity
      responses:
        '200':
          description: The Identity matching the ID in request
          headers:
            Skaleet-Resource-Version:
              description: Indicates the current version of Identity
              schema:
                type: string
                example: '1'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ri9kpts47k4pl
    patch:
      security:
        - OAuth2:
            - identity_update
      tags:
        - Identities
      summary: Update Identity
      operationId: UpdateIdentity
      parameters:
        - in: header
          name: Skaleet-Resource-Version
          required: false
          description: 'Indicate the version of the modified entity. If it does not correspond to the current version, an error is returned'
          schema:
            type: string
            example: '1'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityUpdateRequest'
      responses:
        '200':
          description: The Identity has been successfully updated. Returns the updated Identity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
        '409':
          $ref: '#/components/responses/VersionConflictResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: fkhsaoofjorvu
  '/identities/{identityId}/phones':
    parameters:
      - in: path
        name: identityId
        required: true
        schema:
          $ref: ./IdentityId.yaml
    post:
      security:
        - OAuth2:
            - identity_creation
      tags:
        - Identities
      summary: Associate a new phone to an identity
      operationId: AssociatePhoneToIdentity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: An Identity creation form
              required:
                - phone
              properties:
                phone:
                  $ref: ./Phone.yaml
      responses:
        '204':
          description: Phone has been successfully created an associated
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: fwkzamb6mlpuc
  /documents:
    post:
      security:
        - OAuth2:
            - identity_documents_management
        - OAuth2:
            - documents_management
      tags:
        - Documents management
      summary: Send a document
      operationId: CreateDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreateRequest'
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 59u82l3o38p5r
  '/documents/{documentId}':
    parameters:
      - $ref: '#/components/parameters/DocumentId'
    get:
      security:
        - OAuth2:
            - identity_documents_view
        - OAuth2:
            - documents_view
      tags:
        - Documents management
      summary: Retrieve a document
      operationId: GetDocument
      responses:
        '200':
          description: Example response (Status 200)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '404':
          description: Document not found with this ID
      x-stoplight:
        id: 88rnuc2m7v56k
  '/documents/{documentId}/content':
    parameters:
      - $ref: '#/components/parameters/DocumentId'
    get:
      security:
        - OAuth2:
            - identity_documents_view
        - OAuth2:
            - documents_view
      tags:
        - Documents management
      summary: Retrieve a document's content
      operationId: GetDocumentContent
      responses:
        '200':
          description: The document content
        '404':
          description: Document not found with this ID
      x-stoplight:
        id: lwns9hsxsyjr3
  '/documents/{documentId}/preview':
    parameters:
      - $ref: '#/components/parameters/DocumentId'
    get:
      security:
        - OAuth2:
            - identity_documents_view
        - OAuth2:
            - documents_view
      tags:
        - Documents management
      summary: 'Retrieve a document''s preview content, with a max width of 200px'
      operationId: GetDocumentPreview
      responses:
        '200':
          description: The document's preview content
        '404':
          description: Document not found with this ID
      x-stoplight:
        id: uclva4tvnjeqs
  '/identities/{identityId}/documents':
    parameters:
      - $ref: '#/components/parameters/IdentityId'
    get:
      security:
        - OAuth2:
            - identity_documents_view
        - OAuth2:
            - documents_view
      tags:
        - Documents management
      summary: List user's documents
      operationId: SearchDocument
      responses:
        '200':
          description: Identity's documents list is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCollection'
        '404':
          description: Identity not found with this ID
      x-stoplight:
        id: j0zaczu00htnv
  '/identities/{identityId}/credentials':
    parameters:
      - $ref: '#/components/parameters/IdentityId'
    post:
      security:
        - OAuth2:
            - credentials_creation
      tags:
        - Credentials
      summary: Create Identity's Credential
      description: |
        An Identity can only have one Credential.

        A Credential cannot be created on an Identity with a `NON_CUSTOMER` role.

        The Credential creation may trigger an activation procedure sent by e-mail to the address given in the creation request.

        An Acceptor is allowed to create the Credentials of an Identity with `DELEGATE_USER` role.
      operationId: CreateCredentialForIdentity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialCreationRequest'
      responses:
        '201':
          description: Credentials has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: lddpcbw5lupey
    patch:
      security:
        - OAuth2:
            - credentials_update
      tags:
        - Credentials
      summary: Update Identity's Credential
      operationId: UpdateCredential
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialUpdateRequest'
      responses:
        '200':
          description: Credential has been updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: p0zhuez2vpjvz
    get:
      security:
        - OAuth2:
            - credentials_view
      tags:
        - Credentials
      summary: Get Identity's Credential
      operationId: GetCredential
      responses:
        '200':
          description: the requested Credential
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: qcnyjo8t77jcn
  '/identities/{identityId}/credentials/reset-password':
    parameters:
      - in: path
        name: identityId
        required: true
        schema:
          $ref: ./IdentityId.yaml
    post:
      security:
        - OAuth2:
            - password_reset
      tags:
        - Credentials
      summary: Reset Identity's Credential password
      operationId: ResetPasswordCredentialForIdentity
      responses:
        '201':
          description: Password have been reset
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: dsqk18f1mftfz
  /customer-instructions/credit-transfers:
    post:
      security:
        - OAuth2:
            - customer-instruction_initiation
      tags:
        - Customer Instructions
      summary: Initiate a customer instruction
      operationId: CreditTransferCustomerInstruction_Initiate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateCreditTransferCustomerInstructionRequest'
      responses:
        '201':
          description: Customer Instruction initiated.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewCustomerInstructionResponse'
                  - $ref: '#/components/schemas/CustomerInstructionAfterInitiationLinks'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: duy6vr7nty2cr
  /customer-instructions/credit-transfers/submit:
    post:
      security:
        - OAuth2:
            - customer-instruction_submission
      tags:
        - Customer Instructions
      summary: Submit a credit transfer single payment
      operationId: CreditTransferSinglePayment_Submit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitCustomerCreditTransferInstructionRequest'
      responses:
        '201':
          description: Customer Instruction created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitCustomerCreditTransferInstructionCreatedResponse'
        '202':
          description: Customer instruction accepted. Pending strong authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitCustomerCreditTransferInstructionAcceptedResponse'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        '422':
          description: A strong authentication session is required but pre-conditions not met to initiate one
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: up9wc9rieecf2
  '/customer-instructions/{customerInstructionId}':
    parameters:
      - $ref: '#/components/parameters/CustomerInstructionId'
    get:
      security:
        - OAuth2:
            - customer-instruction_view
      tags:
        - Customer Instructions
      summary: View a customer instruction of credit transfers
      operationId: CustomerInstructionCreditTransfers_View
      responses:
        '200':
          description: Customer Instruction information
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewCustomerInstructionResponse'
                  - $ref: '#/components/schemas/CustomerInstructionAfterInitiationLinks'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: kjifaq31chce4
  '/customer-instructions/credit-transfers/{customerInstructionId}':
    parameters:
      - $ref: '#/components/parameters/CustomerInstructionId'
    patch:
      security:
        - OAuth2:
            - customer-instruction_update
      tags:
        - Customer Instructions
      summary: Update a customer instruction of credit transfers
      operationId: CustomerInstructionCreditTransfers_Update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCreditTransferCustomerInstructionRequest'
      responses:
        '200':
          description: Customer Instruction information
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewCustomerInstructionResponse'
                  - $ref: '#/components/schemas/CustomerInstructionAfterInitiationLinks'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: a8la0emfhtgtz
    delete:
      security:
        - OAuth2:
            - customer-instruction_deletion
      tags:
        - Customer Instructions
      summary: Delete a customer instruction of credit transfers (before submission)
      operationId: CustomerInstructionCreditTransfers_Delete
      responses:
        '204':
          description: Customer Instruction successfully deleted
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: vkm1ra4wobn32
  '/customer-instructions/credit-transfers/{customerInstructionId}/submit':
    parameters:
      - $ref: '#/components/parameters/CustomerInstructionId'
    post:
      security:
        - OAuth2:
            - customer-instruction_submission
      tags:
        - Customer Instructions
      summary: Submit a credit transfer
      operationId: CustomerInstructionCreditTransfers_Submit
      responses:
        '201':
          description: Customer Instruction submitted.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewCustomerInstructionResponse'
                  - $ref: '#/components/schemas/CustomerInstructionAfterSubmissionLinks'
        '202':
          description: Customer instruction accepted. Pending strong authentication
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - id
                      - status
                      - strongAuthenticationReference
                    properties:
                      id:
                        $ref: '#/components/schemas/PaymentTransactionInternalId'
                      status:
                        $ref: '#/components/schemas/PaymentTransactionInternalStatus'
                      strongAuthenticationReference:
                        description: Strong authentication reference
                        type: string
                  - $ref: '#/components/schemas/CustomerInstructionAfterSubmissionLinks'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        '422':
          description: A strong authentication session is required but pre-conditions not met to initiate one
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: vxfomj3uv7l41
  '/customer-instructions/{customerInstructionId}/payment-transactions':
    parameters:
      - $ref: '#/components/parameters/CustomerInstructionId'
    get:
      security:
        - OAuth2:
            - customer-instruction_view
      tags:
        - Customer Instructions
      summary: View a summary of payment transactions associated to a customer instruction of credit transfers
      operationId: CustomerInstructionCreditTransfers_ViewPaymentTransactionList
      responses:
        '200':
          description: Payment transactions internal information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewPaymentTransactionListResponse'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 943kfybrce7pq
  '/customer-instructions/credit-transfers/{customerInstructionId}/payment-transactions':
    parameters:
      - $ref: '#/components/parameters/CustomerInstructionId'
    post:
      security:
        - OAuth2:
            - customer-instruction_initiation
      tags:
        - Customer Instructions
      summary: Initiate a payment transaction and associate to existing customer instruction of credit transfers
      operationId: CreditTransferCustomerInstruction_InitiatePaymentTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateCreditTransferPaymentTransactionRequest'
      responses:
        '201':
          description: Payment transaction initiated.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewPaymentTransactionResponse'
                  - $ref: '#/components/schemas/PaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 248o3rzrika38
  '/customer-instructions/{customerInstructionId}/detailed-payment-transactions':
    parameters:
      - in: path
        required: true
        name: customerInstructionId
        schema:
          $ref: '#/components/schemas/InternalId'
      - in: query
        name: paymentTransactionId
        schema:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
      - in: query
        name: status
        schema:
          type: string
          description: Status value of the customer instruction within the platform
          enum:
            - INI_STARTED
            - INI_IS_VALID
            - INI_NOT_IS_VALID
            - INI_INT_CTRL_FAILED
            - INI_INT_CTRL_PASSED
            - INI_UPDATED
            - INITIATED
            - SUB_STARTED
            - SUB_NOT_IS_VALID
            - SUB_IS_VALID
            - SUB_INT_CTRL_PASSED
            - SUB_INT_CTRL_FAILED
            - SUB_STRONG_AUTH_REQUIRED
            - VALIDATED
            - SUBMITTED
            - READY_FOR_PROCESSING
            - WAREHOUSED
            - P_TRN_SUB_NOT_PASSED
            - PRO_STARTED
            - PRO_INT_CTRL_PASSED
            - PRO_INT_CTRL_FAILED
            - PRO_START_ERROR
            - PRO_DEBIT_HOLD
            - PROCESSED
            - P_TRN_PRO_FAILED
          example: SUB_STARTED
      - in: query
        name: amount
        schema:
          type: integer
          description: Amount without separator and symbol
          example: 1337
      - in: query
        name: startInstructedDate
        schema:
          $ref: '#/components/schemas/InstructedDate'
      - in: query
        name: endInstructedDate
        schema:
          $ref: '#/components/schemas/InstructedDate'
      - in: query
        name: serviceLevel
        schema:
          $ref: '#/components/schemas/ServiceLevel'
      - in: query
        name: externalTransactionId
        schema:
          $ref: '#/components/schemas/ExternalTransactionId'
    get:
      tags:
        - Customer Instructions
      security:
        - OAuth2:
            - customer-instruction_view
      summary: Load detailed payment transactions associated to customer instruction
      operationId: LoadDetailedPaymentTransactionsAssociatedToCustomerInstruction
      responses:
        '200':
          description: Sorted and paginated list of detailed payment transactions associated to the customer instruction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedPaymentTransactionsAssociatedToCustomerInstructionCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
      x-stoplight:
        id: whg2tfdljsc9l
  '/payment-transactions/{paymentTransactionId}':
    parameters:
      - $ref: '#/components/parameters/PaymentTransactionId'
    get:
      security:
        - OAuth2:
            - customer-instruction_view
      tags:
        - Customer Instructions
      summary: View a payment transaction
      operationId: ViewPaymentTransaction
      responses:
        '200':
          description: Payment transaction internal information
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewPaymentTransactionResponse'
                  - $ref: '#/components/schemas/PaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: dhy5k8vlggmvy
  '/customer-instructions/credit-transfers/payment-transactions/{paymentTransactionId}':
    parameters:
      - $ref: '#/components/parameters/PaymentTransactionId'
    patch:
      security:
        - OAuth2:
            - customer-instruction_update
      tags:
        - Customer Instructions
      summary: Update a payment transaction associated to a customer instruction of credit transfers
      operationId: CustomerInstructionCreditTransfers_UpdatePaymentTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCreditTransferPaymentTransactionRequest'
      responses:
        '200':
          description: Payment transaction internal information
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ViewPaymentTransactionResponse'
                  - $ref: '#/components/schemas/PaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: qcn1i069nyoc3
    delete:
      security:
        - OAuth2:
            - customer-instruction_deletion
      tags:
        - Customer Instructions
      summary: Delete a payment transaction associated to a customer instruction of credit transfers (before submission)
      operationId: CustomerInstructionCreditTransfers_DeletePaymentTransaction
      responses:
        '204':
          description: Payment transaction successfully deleted
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: qzk9t5wory8ng
  /customer-instructions:
    parameters:
      - in: query
        name: internalId
        schema:
          $ref: '#/components/schemas/InternalId'
      - in: query
        name: status
        schema:
          $ref: '#/components/schemas/CustomerInstructionInternalStatusValue'
      - in: query
        name: minRequestedExecutionDate
        schema:
          type: string
          description: Requested execution date. Format Y-m-d
          format: date
      - in: query
        name: maxRequestedExecutionDate
        schema:
          type: string
          description: Requested execution date. Format Y-m-d
          format: date
      - in: query
        name: customerInstructionReference
        schema:
          $ref: '#/components/schemas/CustomerInstructionReference'
      - in: query
        name: amount
        schema:
          type: number
          description: Amount without separator and symbol
          example: 1234
      - in: query
        name: type
        schema:
          type: string
          enum:
            - CreditTransfer
    get:
      security:
        - OAuth2:
            - customer-instruction_view
      tags:
        - Customer Instructions
      summary: Retrieve all customer instructions
      operationId: GetAllCustomerInstructions
      responses:
        '200':
          description: Sorted and paginated list of customer instructions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerInstructionCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
      x-stoplight:
        id: z69vz94y2e2pr
  /payment-transactions:
    parameters:
      - in: query
        name: paymentTransactionId
        schema:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
      - in: query
        name: status
        schema:
          type: string
          description: Status value of the payment transaction within the platform
          enum:
            - INI_STARTED
            - INI_IS_VALID
            - INI_NOT_IS_VALID
            - INI_INT_CTRL_FAILED
            - INI_INT_CTRL_PASSED
            - INI_UPDATED
            - INITIATED
            - SUB_STARTED
            - SUB_IS_VALID
            - SUB_NOT_IS_VALID
            - SUB_INT_CTRL_PASSED
            - SUB_INT_CTRL_FAILED
            - SUB_STRONG_AUTH_REQUIRED
            - SUBMITTED
            - VALIDATED
            - READY_FOR_PROCESSING
            - C_INSTRUCTION_SUB_NOT_PASSED
            - P_INSTRUCTION_SUB_NOT_PASSED
            - WAREHOUSED
            - PRO_STARTED
            - PRO_INT_CTRL_PASSED
            - PRO_INT_CTRL_FAILED
            - PRO_DEBIT_HOLD
            - PRO_DEBIT_HOLD_FAILED
            - PRO_ROUTING_FAILED
            - PRO_WAIT_SETTLEMENT_DATE
            - PRO_SETTLEMENT_FAILED
            - SETTLED
            - C_INSTRUCTION_PRO_FAILED
            - C_INSTRUCTION_PRO_START_ERROR
            - READY_FOR_EXCHANGE
            - DEBIT_HOLD_CANCEL_FAILED
            - EXT_REFUSED
            - EXCHANGED
            - EXCHANGE_ERROR
          example: SUBMITTED
      - in: query
        name: amount
        schema:
          type: integer
          description: Amount without separator and symbol
          example: 1337
      - in: query
        name: startInstructedDate
        schema:
          $ref: '#/components/schemas/InstructedDate'
      - in: query
        name: endInstructedDate
        schema:
          $ref: '#/components/schemas/InstructedDate'
      - in: query
        name: startCreationDate
        schema:
          $ref: '#/components/schemas/CreationDate'
      - in: query
        name: endCreationDate
        schema:
          $ref: '#/components/schemas/CreationDate'
      - in: query
        name: startSettlementDate
        schema:
          $ref: '#/components/schemas/SettlementDate'
      - in: query
        name: endSettlementDate
        schema:
          $ref: '#/components/schemas/SettlementDate'
      - in: query
        name: serviceLevel
        schema:
          $ref: '#/components/schemas/ServiceLevel'
      - in: query
        name: externalTransactionId
        schema:
          $ref: '#/components/schemas/ExternalTransactionId'
    get:
      tags:
        - Payment Transaction
      security:
        - OAuth2:
            - customer-instruction_view
      summary: Load payment transactions
      operationId: LoadPaymentTransactions
      responses:
        '200':
          description: Sorted and paginated list of detailed payment transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedPaymentTransactionsCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
      x-stoplight:
        id: 3bpqi9os2jmqm
  /password:
    put:
      security:
        - OAuth2:
            - password_update
      tags:
        - Credentials
      summary: Update delegate user's password
      operationId: PasswordUpdate
      requestBody:
        required: true
        description: Enrollment initiation request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordUpdateRequest'
      responses:
        '202':
          description: User password has been updated successfully
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: uros7u4f7fw90
  /forget-password:
    post:
      security:
        - OAuth2:
            - password_forget
      tags:
        - Credentials
      summary: Forgotten password
      operationId: PasswordForget
      requestBody:
        required: true
        description: Send an email to delegate user who has forgotten their password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgottenPasswordRequest'
      responses:
        '201':
          description: Forgotten password request has been sent
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: oeeavvhtvxtxp
  /password-redefinition:
    post:
      security:
        - OAuth2:
            - password_redefinition
      tags:
        - Credentials
      summary: Password redefinition
      operationId: PasswordRedefinition
      requestBody:
        required: true
        description: Redefinition of forgotten password by delegate user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordRedefinitionRequest'
      responses:
        '201':
          description: Delegate user password has been redefined successfully
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: r8vran9oghbv2
  /relation-natures:
    get:
      security:
        - OAuth2:
            - identity_relations_view
      tags:
        - Customers
      summary: Get available relation natures
      description: Returns the full list of available natures of relation
      operationId: GetRelationNatures
      parameters:
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
      responses:
        '200':
          $ref: '#/components/responses/GetRelationNaturesResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: hxmz2dhsn7fr8
  /branch-logo:
    get:
      security:
        - OAuth2:
            - company_branch_logo_view
      tags:
        - Misc.
      operationId: GetBranchLogo
      summary: Get company branch logo
      responses:
        '200':
          description: Response contains the company branch logo as an image
          content:
            image/png:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Company branch logo was not found
      x-stoplight:
        id: p1jvgyg3up0ol
  /company-relations:
    parameters:
      - name: id
        in: query
        schema:
          $ref: '#/components/schemas/RelationId'
      - name: self
        in: query
        schema:
          $ref: '#/components/schemas/RelationSide'
      - name: nature
        in: query
        schema:
          $ref: '#/components/schemas/RelationNatureId'
      - name: associatedPartyId
        in: query
        schema:
          $ref: ./IdentityId.yaml
    get:
      tags:
        - Customers
      security:
        - OAuth2:
            - company_relations_view
      operationId: GetIdentityRelations
      summary: Get customer's relations
      responses:
        '200':
          $ref: '#/components/responses/GetIdentityRelationsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: hfrzorwo1nlwe
  /accounts:
    get:
      security:
        - OAuth2:
            - sda_accounts_view
      tags:
        - Accounts
      summary: Read account list
      operationId: ListAccounts
      parameters:
        - name: id
          in: query
          description: Filter for account number
          schema:
            $ref: ./AccountId.yaml
        - name: createdBefore
          in: query
          description: Filter for accounts created before this date
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: createdAfter
          in: query
          description: Filter for accounts created after this date
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: lastUsedBefore
          in: query
          description: Filter for accounts which last usage date was before this date
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: lastUsedAfter
          in: query
          description: Filter for accounts which last usage date was after this date
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: lastChangedBefore
          in: query
          description: Filter for accounts which last status change date was before this date
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: lastChangedAfter
          in: query
          description: Filter for accounts which last status change date was after this date
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: currency
          in: query
          description: Filter for accounts using this currency
          schema:
            $ref: '#/components/schemas/Currency'
        - name: externalId
          in: query
          description: Filter for accounts having given external identifier (please note this filter does not allow filtering on account "external references")
          schema:
            $ref: '#/components/schemas/AccountExternalId'
        - name: productId
          in: query
          description: Filter for accounts using given product
          schema:
            $ref: '#/components/schemas/ProductId'
        - name: userId
          in: query
          description: Filter for accounts owned by given user
          schema:
            $ref: '#/components/schemas/UserId'
        - name: status
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AccountStatus'
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/AccountType'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - created
              - lastUsed
              - lastChanged
              - userId
              - externalId
              - type
              - status
              - currency
      responses:
        '200':
          description: Read account list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 9uljt5akyrhif
  '/accounts/{accountNumber}/balances':
    parameters:
      - $ref: '#/components/parameters/AccountNumber'
    get:
      security:
        - OAuth2:
            - sda_accounts_view
      tags:
        - Accounts
      summary: Read an account's balances
      operationId: LoadAccountBalances
      responses:
        '200':
          description: Account balances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalances'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given account was not found
      x-stoplight:
        id: a9d9hmt687ztm
  '/accounts/{accountId}':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: ./AccountId.yaml
    get:
      security:
        - OAuth2:
            - sda_accounts_view
      tags:
        - Accounts
      summary: Retrieve an account
      operationId: GetAccount
      responses:
        '200':
          description: Account information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 58rro9vtd6zvh
  '/accounts/{accountId}/bank-account-details/download':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: ./AccountId.yaml
    get:
      security:
        - OAuth2:
            - sda_accounts_view
      tags:
        - Accounts
      summary: Download Bank Account Details
      operationId: DownloadBankAccountDetails
      responses:
        '200':
          description: The document content
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '404':
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: aodm9jm3djs36
  '/accounts/{accountId}/statements':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: ./AccountId.yaml
    get:
      security:
        - OAuth2:
            - sda_accounts_view
      tags:
        - Accounts
      summary: List all account statements
      operationId: ListAccountStatement
      responses:
        '200':
          description: Returns an account statement collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatementCollection'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
      x-stoplight:
        id: t0wlbt3i4gpi8
  '/accounts/{accountId}/statements/{statementId}/download':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: ./AccountId.yaml
      - name: statementId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountStatementId'
    get:
      security:
        - OAuth2:
            - sda_accounts_view
      tags:
        - Accounts
      summary: Download an account's statement
      operationId: DownloadAccountStatement
      responses:
        '200':
          description: the statement document as PDF file
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: sctzquplh3fvh
  '/identities/{identityId}/recipients':
    parameters:
      - $ref: '#/components/parameters/IdentityId'
    post:
      security:
        - OAuth2:
            - recipients_create
      tags:
        - Identities
      summary: Create a recipient for an identity
      operationId: CreateRecipient
      requestBody:
        required: true
        description: |
          Recipient Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipientCreateRequest'
      responses:
        '200':
          description: Recipient Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientCreateResponse'
        '400':
          description: Bad Response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CreationErrorInvalidPhoneNumber'
                  - $ref: '#/components/schemas/CreationErrorDetailsRequired'
                  - $ref: '#/components/schemas/CreationErrorRequiresIBANorAccount'
                  - $ref: '#/components/schemas/CreationErrorNameTooLong'
                  - $ref: '#/components/schemas/CreationErrorUnknownBIC'
                  - $ref: '#/components/schemas/CreationErrorInvalidAddress'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: zmsv4vbyuxvua
    get:
      security:
        - OAuth2:
            - recipients_view
      tags:
        - Identities
      summary: List recipients of an identity
      operationId: FetchRecipients
      parameters:
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/RecipientId'
        - name: name
          in: query
          schema:
            $ref: '#/components/schemas/RecipientName'
        - name: externalReference
          in: query
          schema:
            $ref: '#/components/schemas/RecipientExternalReference'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - name
      responses:
        '200':
          description: List of Recipients matching the request filters
          content:
            application/json:
              schema:
                $ref: ./RecipientCollection.yaml
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: mc8eiztgduuhz
  '/identities/{identityId}/recipients/{recipientId}':
    parameters:
      - $ref: '#/components/parameters/IdentityId'
      - $ref: '#/components/parameters/RecipientId'
    patch:
      security:
        - OAuth2:
            - recipients_update
      tags:
        - Identities
      summary: Update one recipient for an identity
      operationId: UpdateRecipient
      requestBody:
        required: true
        description: |
          Recipient Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipientUpdateRequest'
      responses:
        '200':
          description: Recipient update successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientUpdateRequest'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: bei9gkbv32x6n
    delete:
      security:
        - OAuth2:
            - recipients_delete
      tags:
        - Identities
      summary: Delete one recipient for an identity
      operationId: DeleteRecipient
      responses:
        '204':
          description: Recipient update successful response
        '400':
          description: Deleting a recipient that does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 66113
                  message:
                    type: string
                    example: 'The recipient #EXT182 belonging to third party #1 not found'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: hmaao9pif661j
  /transactions:
    get:
      security:
        - OAuth2:
            - sda_transactions_view
      tags:
        - Transactions
      summary: Search in transaction history
      operationId: SearchTransactions
      parameters:
        - name: externalId
          in: query
          description: Filter the result on transaction external id
          schema:
            $ref: '#/components/schemas/TransactionExternalId'
        - name: type
          in: query
          description: Filter the result on transaction type
          schema:
            $ref: '#/components/schemas/TransactionType'
        - name: startDate
          in: query
          description: replaced by bookingDateAfter
          schema:
            $ref: ./DateTime.yaml
          deprecated: true
        - name: endDate
          in: query
          description: replaced by bookingDateBefore
          schema:
            $ref: ./DateTime.yaml
          deprecated: true
        - name: bookingDateAfter
          in: query
          description: filter bookingDates after given date
          schema:
            type: string
            format: date-time
            example: '2023-01-25T12:00:00Z'
        - name: bookingDateBefore
          in: query
          description: filter bookingDates before given date
          schema:
            type: string
            example: '2023-01-25T12:00:00Z'
        - name: valueDateAfter
          in: query
          description: filter valueDates after given date
          schema:
            type: string
            format: date
            example: '2023-01-25'
        - name: valueDateBefore
          in: query
          description: filter valueDates before given date
          schema:
            type: string
            example: '2023-01-25'
        - name: amount
          in: query
          description: Filter for given amount (integer value)
          schema:
            $ref: '#/components/schemas/AmountValue'
        - name: currency
          in: query
          description: Filter for given currency
          schema:
            $ref: '#/components/schemas/Currency'
        - name: accountId
          in: query
          description: Filter for given account
          schema:
            $ref: ./AccountId.yaml
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - date
              - amount
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCollection'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: 'If filtering on a specific account, means that given account was not found'
      x-stoplight:
        id: 9ewszxh78165x
  /transactions/export:
    get:
      security:
        - OAuth2:
            - sda_transactions_view
      tags:
        - Transactions
      summary: Export all transactions
      operationId: ExportTransaction
      parameters:
        - name: Skaleet-Column-ExternalData
          in: header
          description: Add Transaction external data in the exported CSV file
          schema:
            type: integer
            example: 1
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/TransactionId'
        - name: externalId
          in: query
          schema:
            $ref: '#/components/schemas/TransactionExternalId'
        - name: userId
          in: query
          schema:
            $ref: '#/components/schemas/UserId'
        - name: type
          in: query
          description: Transaction type
          schema:
            $ref: '#/components/schemas/TransactionType'
        - name: startDate
          in: query
          description: Transaction date range start
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Transaction date range end
          schema:
            type: string
            format: date-time
        - name: amount
          in: query
          description: Transaction amount (in cents)
          schema:
            type: integer
        - name: currency
          in: query
          description: Transaction currency
          schema:
            $ref: '#/components/schemas/Currency'
        - name: media
          in: query
          description: Transaction media
          schema:
            allOf:
              - default: ALL
              - $ref: '#/components/schemas/Media'
        - name: accountingCode
          in: query
          schema:
            type: string
            description: Accounting code from the point of view of the calling system
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - externalId
              - type
              - date
              - currency
              - media
              - amount
              - accountingCode
      responses:
        '200':
          description: A CSV file with the requested export
          content:
            text/csv:
              schema:
                type: string
      x-stoplight:
        id: vmndvq71gbsl7
  '/transactions/{transactionId}':
    parameters:
      - $ref: '#/components/parameters/TransactionId'
    get:
      security:
        - OAuth2:
            - sda_transactions_view
      tags:
        - Transactions
      summary: Retrieve a specific transaction
      operationId: GetTransaction
      responses:
        '200':
          description: A transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          description: Given transaction was not found
      x-stoplight:
        id: 3ahqfsrmd816h
  /front-configuration:
    get:
      tags:
        - Front Configuration
      security:
        - OAuth2:
            - company_front-configuration_view
      operationId: GetFrontConfiguration
      summary: Get Web Corporate front configuration
      responses:
        '200':
          $ref: '#/components/responses/GetFrontConfigurationResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: fib7jiqef0xpn
  /pairing/resend:
    post:
      summary: Request for a new validation code
      responses:
        '204':
          description: No Content
        default:
          $ref: '#/components/responses/ErrorResponse'
      operationId: RequestNewOTP
      x-stoplight:
        id: og9rwjebyfmyu
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
              properties:
                phone:
                  type: string
                  x-stoplight:
                    id: pwzbahh2hlajq
                  description: Phone number of the device for which you request a new validation code
                  example: '0600000000'
        description: the necessary credentials to send a new validation code
      security:
        - OAuth2:
            - phone-pairing_resend
      tags:
        - Pairing
    parameters: []
  /translations:
    parameters:
      - name: applicationId
        in: query
        description: 'the application identifier, in order to get specific translations for this application'
        schema:
          type: string
      - name: 'langs[]'
        in: query
        description: to get only a subset of langs translations
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Lang'
    get:
      security:
        - OAuth2:
            - company_front-configuration_view
      tags:
        - Others
      summary: Load application translations
      operationId: LoadTranslations
      responses:
        '200':
          description: hashmap of translations per langs
          content:
            application/json:
              schema:
                example:
                  fr_FR:
                    MENU_DESC_WALLET_TO_BANK: 'Transférez votre argent depuis votre compte [[brand]] vers votre compte bancaire.'
                    MENU_DESC_ACCOUNT_TO_ACCOUNT: 'Envoyez de l''argent à un autre client de [[brand]].'
                  en_US:
                    MENU_DESC_WALLET_TO_BANK: 'Transfer your money from your [[brand]] account to your bank account.'
                    MENU_DESC_ACCOUNT_TO_ACCOUNT: 'Send money to another [[brand]] client.'
                  es_ES:
                    MENU_DESC_WALLET_TO_BANK: 'Transfiera su dinero de su cuenta [[brand]] a su cuenta bancaria.'
                    MENU_DESC_ACCOUNT_TO_ACCOUNT: 'Enviar dinero a otro cliente [[brand]]'
                type: object
                additionalProperties:
                  type: object
                  description: hashmap of lang translations
                  additionalProperties:
                    type: string
                    description: translation value
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: t63iemrqmdvw1
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      description: |
        This API use the following OAuth2 authentication grant flows:
          * Password grant (with Company delegate users credentials on a registered app)
            * this grant flow is deprecated, authorization code grant flow should be used instead
          * Refresh Token grant
          * Authorization Code grant (with PKCE)

        ## Using API client credentials in HTTP `Authorization` header

        When required, the API client Identifier and Secret can be passed through the HTTP `Authorization` header.

        Then the header must be constructed by concatenation of client_id and client_secret separated by `:`:

        `<client_id>:<client_secret>`

        This value must be Base64 encoded and then used in the `Authorization` header as follow:

        `Authorization: Basic <base64-encoded value>`

        **Example:** `Authorization: Basic dGVzdDoxMjPCow==`

        *References*:
        * RFC7617 (https://datatracker.ietf.org/doc/html/rfc7617)
        * RFC6749 (https://datatracker.ietf.org/doc/html/rfc6749)
      flows:
        clientCredentials:
          tokenUrl: /oauth2/token
          scopes:
            password_forget: Allow to initiate a forgot password procedure
            password_redefinition: Allow to define a new password with a valid forgot password OTP
            company_front-configuration_view: Application can access to the front-end configuration data
            phone-pairing_resend: Allow a User to request a new phone validation code
          refreshUrl: ''
        password:
          tokenUrl: /oauth2/token
          refreshUrl: /oauth2/refresh
          scopes:
            customer-instruction_view: User can view a customer instruction of credit transfers
            customer-instruction_initiation: User can initiate a customer instruction of credit transfers
            customer-instruction_update: 'User can update an existing customer instruction, if not submitted'
            customer-instruction_submission: User can submit a customer instruction of credit transfers
            customer-instruction_deletion: 'User can delete an existing customer instruction of credit transfers, if not submitted'
            enrollment-validation-request-submission: User can request for an enrollment validation
            identity_view: Allow the API client to list Identities details
            identity_update: Allow the API client to update existing Identities
            identity_creation: Allow the API client to create new Identities
            credentials_view: Allow the API client to access the credential details of an Identity
            credentials_creation: Allow the API client to create credential for an Identity
            credentials_update: Allow the API client to update an Identity's credential details
            password_reset: Allow th API client to reset an Identity's password
            profiles_view: Allow the API client to list the Identity Profiles they have access to
            kyc_view: Allow the API client to get the KYC fields list required for an Identity creation
            password_update: Delegate user can update his password
            password_forget: Allow to initiate a forgot password procedure
            password_redefinition: Allow to define a new password with a valid forgot password OTP
            identity_documents_management: User can manage KYC documents
            identity_documents_view: User can view KYC documents
            onboarding_view: User can view the onboarding file data
            company_relations_view: User can view the company's relations
            sda_accounts_view: User can view accounts
            recipients_view: User can list a customer's recipients
            recipients_delete: User can delete a customer's recipient
            recipients_create: User can create a recipient for a customer
            sda_transactions_view: Can view transactions
            sda_pairing-request_write: Can edit pairing requests
            company_branch_logo_view: Can access to Company branch logo
            company_front-configuration_view: Application can access to the front-end configuration data
            identity_relations_view: Can access a customer relations with other parties
            recipients_update: Can update customer's recipients informations
            onboarding_management: Can manage the onboarding relations between parties
            onboarding_update: Can manage the onboarding file content
        authorizationCode:
          authorizationUrl: /oauth2/authorize
          tokenUrl: /oauth2/token
          refreshUrl: /oauth2/refresh
          scopes:
            customer-instruction_view: User can view a customer instruction of credit transfers
            customer-instruction_initiation: User can initiate a customer instruction of credit transfers
            customer-instruction_update: 'User can update an existing customer instruction, if not submitted'
            customer-instruction_submission: User can submit a customer instruction of credit transfers
            customer-instruction_deletion: 'User can delete an existing customer instruction of credit transfers, if not submitted'
            enrollment-validation-request-submission: User can request for an enrollment validation
            identity_view: Allow the API client to list Identities details
            identity_update: Allow the API client to update existing Identities
            identity_creation: Allow the API client to create new Identities
            credentials_view: Allow the API client to access the credential details of an Identity
            credentials_creation: Allow the API client to create credential for an Identity
            credentials_update: Allow the API client to update an Identity's credential details
            password_reset: Allow th API client to reset an Identity's password
            profiles_view: Allow the API client to list the Identity Profiles they have access to
            kyc_view: Allow the API client to get the KYC fields list required for an Identity creation
            password_update: Delegate user can update his password
            password_forget: Allow to initiate a forgot password procedure
            password_redefinition: Allow to define a new password with a valid forgot password OTP
            identity_documents_management: User can manage KYC documents
            identity_documents_view: User can view KYC documents
            onboarding_view: User can view the onboarding file data
            company_relations_view: User can view the company's relations
            sda_accounts_view: User can view accounts
            recipients_view: User can list a customer's recipients
            recipients_delete: User can delete a customer's recipient
            recipients_create: User can create a recipient for a customer
            sda_transactions_view: Can view transactions
            sda_pairing-request_write: Can edit pairing requests
            company_branch_logo_view: Can access to Company branch logo
            company_front-configuration_view: Application can access to the front-end configuration data
            identity_relations_view: Can access a customer relations with other parties
            recipients_update: Can update customer's recipients informations
            onboarding_management: Can manage the onboarding files content and relations between parties
            onboarding_update: Can manage the onboarding file content
  responses:
    OAuth2AuthRequestResponse:
      description: Authorization request initiated successfully. Redirection must be followed.
      headers:
        Location:
          schema:
            type: string
            description: the URI to redirect the client to.
    InvalidRequestResponse:
      description: Request is not valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidRequestError'
    ForbiddenResponse:
      description: Request client was not allowed to make this action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    InternalServerErrorResponse:
      description: Server encountered an unhandled internal error during request processing
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Error'
              - example:
                  message: Internal server error
                  hint: ''
    OAuth2AccessTokenResponse:
      description: Access Token issued successfully
      content:
        application/json:
          schema:
            type: object
            required:
              - token_type
              - expires_in
              - access_token
              - refresh_token
            properties:
              token_type:
                type: string
                description: the Access Token type. Always "Bearer".
                example: Bearer
              expires_in:
                type: integer
                description: the duration in seconds of Access Token validity
              access_token:
                type: string
                description: the Access Token that is a base64 encoded JWT
                example: |
                  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
              refresh_token:
                $ref: '#/components/schemas/RefreshToken'
    RestfulErrorResponse:
      description: Request could not be processed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    GetOnboardingFileResponse:
      description: Response contains onboarding file content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OnboardingFile'
    UnauthorizedResponse:
      description: Request client is not authorized to access this endpoint
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    OnboardingFileUpdatedResponse:
      description: Onboarding file was updated successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OnboardingFile'
    GetRelationAddFormResponse:
      description: Response contains the form to add a relation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RelationAddForm'
    GetOnboardingRelationsResponse:
      description: Returned customer's relations list
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OnboardingRelationCollection'
    OnboardingRelationAddedResponse:
      description: A new relation and party were created successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OnboardingRelation'
    VersionConflictResponse:
      description: The request could not be processed because the current version does not match the specified version
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    GetRelationNaturesResponse:
      description: Relation natures paginated list
      content:
        application/json:
          schema:
            $ref: ./RelationNatureCollection.yaml
    GetIdentityRelationsResponse:
      description: Returned customer's relations list
      content:
        application/json:
          schema:
            $ref: ./RelationCollection.yaml
    ErrorResponse:
      description: Request could not be processed
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/Response'
              - type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                example:
                  success: false
                  error:
                    code: 1337
                    message: An error occurred
    NotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    GetFrontConfigurationResponse:
      description: Returns array containing web corporate front configuration
      content:
        application/json:
          schema:
            type: object
            example:
              colors:
                main: '#000000'
                secondary: '#000000'
                announce: '#000000'
              locale:
                CUSTOM_HOME_PAGE_TITLE:
                  fr_FR: Titre de la page d'accueil
                  en_US: Home page title
                CUSTOM_HOME_PAGE_TEXT:
                  fr_FR: Texte de la page d'accueil
                  en_US: Home page text
                CUSTOM_HOME_PAGE_WARNING:
                  fr_FR: Message d'avertissement de la page d'accueil
                  en_US: Home page warning message
                CUSTOM_LINK_INFO:
                  fr_FR: Texte du lien d'information
                  en_US: Information link text
              logo:
                filename: web_coporate_background.png
                content: ''
                mime: image/png
              favicon:
                filename: web_coporate_background.png
                content: ''
                mime: image/png
              background:
                filename: web_coporate_background.png
                content: ''
                mime: image/png
              strongAuthAtLogin: true
              strongAuthMethod: SMS
              email: contact@domain.com
              externalOnboardingSystem: false
              termsOfServiceUrl: 'https://website.com/terms'
            required:
              - colors
              - locale
              - logo
              - strongAuthAtLogin
            properties:
              colors:
                type: object
                description: Colors configured in the web corporate front
              locale:
                type: object
                description: Locales configured in the web corporate front
              logo:
                allOf:
                  - description: Logo image configured in the web corporate front
                  - $ref: '#/components/schemas/SerializedImage'
              favicon:
                allOf:
                  - description: Favicon image configured in the web corporate front
                  - $ref: '#/components/schemas/SerializedImage'
              background:
                allOf:
                  - description: Background image configured in the web corporate front
                  - $ref: '#/components/schemas/SerializedImage'
              strongAuthAtLogin:
                type: boolean
                description: Strong Authentication required on login in the web corporate front
              strongAuthMethod:
                $ref: ./AuthenticationMethodType.yaml
              email:
                type: string
                description: Contact e-mail address
              termsAndConditionsUrl:
                type: string
                x-stoplight:
                  id: 2oybbjpar0uni
                example: 'https://sandbox.skaleet.com/terms_and_conditions'
                format: uri
              privacyPolicyUrl:
                type: string
                x-stoplight:
                  id: ltlilyfv0qd48
                example: 'https://sandbox.skaleet.com/privacy_policy'
                format: uri
              externalOnboardingSystem:
                type: boolean
                description: 'Is an external onboarding system configured ? If true, onboarding form should not be displayed after initiation, external system page should be displayed instead.'
              termsOfServiceUrl:
                type: string
                description: Link to the terms of service
    AccountBeingExaminedResponse:
      description: Your account opening request is being examined
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
            x-examples:
              Example 1:
                error:
                  code: 70516
                  message: Your account opening request is being examined
  schemas:
    ApiClientId:
      type: string
      description: API client identifier
      example: 78ee4408bb9b0f8ca87d08c8574de47f
      x-stoplight:
        id: u79yzqp7lw2yy
    RedirectUri:
      type: string
      description: |
        The URI the Authorization Server should use to redirect the authorized user or communicate the authorization failure.

        On final user redirection, if authorization were successful, the authorization server will add `code` and `state` parameters.

        `state` must be the same value as the one transmitted in the initiation.

        `code` contains the Authorization Code to exchange for an Access Token.
      format: uri
      example: 'https://client.example.org/oauth-redirect'
      x-stoplight:
        id: kvjjwv04ld3kg
    Scope:
      type: string
      description: |
        The wished scopes list, each scope must be separated by one blank space

        **In case of token refresh**, it is impossible to request scopes that were not requested during the initial Access Token request.

        The list may contain a subset of the initially requested scopes.
      x-stoplight:
        id: 4phe4ntw8pejf
    AuthCodeState:
      type: string
      description: A CSRF token. This parameter is optional but highly recommended. You should store the value of the CSRF token in the user’s session to be validated when they return.
      example: OWY4NmQwODE4ODRjN2Q2NTlhMmZlYWEwYzU1YWQwMTVhM2JmNGYxYjJiMGI4MjJjZDE1ZDZMGYwMGEwOA==
      x-stoplight:
        id: crwkze7t7aadm
    OAuth2AccessTokenRequest:
      oneOf:
        - $ref: '#/components/schemas/OAuth2PasswordAccessTokenRequest'
        - $ref: '#/components/schemas/OAuth2AuthCodeAccessTokenRequest'
        - $ref: '#/components/schemas/OAuth2ClientCredentialsAccessTokenRequest'
      discriminator:
        propertyName: grant_type
        mapping:
          password: '#/components/schemas/OAuth2PasswordAccessTokenRequest'
          authorization_code: '#/components/schemas/OAuth2AuthCodeAccessTokenRequest'
          client_credentials: '#/components/schemas/OAuth2ClientCredentialsAccessTokenRequest'
      x-stoplight:
        id: io6u9q4chq0wn
    OAuth2RefreshAccessTokenRequest:
      type: object
      description: Credentials for Access Token refresh
      required:
        - grant_type
        - refresh_token
      properties:
        grant_type:
          type: string
          description: Always "refresh_token"
          example: refresh_token
        refresh_token:
          $ref: '#/components/schemas/RefreshToken'
        scope:
          $ref: '#/components/schemas/Scope'
      x-stoplight:
        id: eal0owzgzecrq
    Login:
      type: string
      description: the Credential's login
      example: pierre.gola
      x-stoplight:
        id: ye54jmnvd5k9p
    Email:
      type: string
      format: email
      example: pierre.gola@email.com
      x-stoplight:
        id: ro34jrm6voum2
    OnboardingFileUpdateRequest:
      type: object
      description: Onboarding update request
      required:
        - form
      properties:
        form:
          $ref: '#/components/schemas/InputCollectionUpdate'
      x-stoplight:
        id: pxm8t4hkhqniq
    AddOnboardingRelationRequest:
      type: object
      description: Request to add a non customer as a relation to the onboarding company
      x-stoplight:
        id: 989cnnkquzvff
      required:
        - nature
        - legalType
        - relationAddForm
      properties:
        nature:
          $ref: ./RelationNatureId.yaml
        legalType:
          $ref: ./LegalType.yaml
        relationAddForm:
          $ref: '#/components/schemas/InputCollectionUpdate'
    RelationId:
      type: string
      readOnly: true
      description: Identifier of a relation between parties
      x-stoplight:
        id: p4k806qmk8z14
    ProfileId:
      type: integer
      example: 1
      description: ID of a Profile.
      x-stoplight:
        id: s3t4s33ng13rz
    ProfileCollection:
      description: Sorted and paginated list of Identities
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of Profiles
              items:
                $ref: '#/components/schemas/UserProfile'
      x-stoplight:
        id: llhdzjmvz2y7l
    IncludeRenewableKyc:
      type: boolean
      description: |
        Include renewable KYC fields in the response
      x-stoplight:
        id: 6orym1s80zxeg
    IncludeNonRenewableKyc:
      type: boolean
      description: |
        Include non renewable KYC fields in the response
      x-stoplight:
        id: z1pmcy3dntc7o
    InputCollection:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            inputs:
              type: array
              items:
                $ref: '#/components/schemas/Input'
      x-stoplight:
        id: vji8pk2rou8k2
    DocumentRequirementCollection:
      description: Sorted list of document requirements
      type: object
      properties:
        count:
          type: integer
          description: the total count of objects in collection
          minimum: 0
        items:
          type: array
          description: collection of document requirements
          items:
            $ref: '#/components/schemas/DocumentRequirement'
      x-stoplight:
        id: 90ejkqhsodc83
    ExternalId:
      type: string
      description: External id (from the calling system)
      example: EXT123456789
      x-stoplight:
        id: 985h44sc3feu0
    DateAtom:
      type: string
      format: date-time
      description: 'Date in Atom format (exemple 2000-01-20T12:00:00Z)'
      x-stoplight:
        id: vwmih6vtjg33s
    Country:
      description: Numeric iso code of associated country (3 digits)
      type: string
      minLength: 3
      maxLength: 3
      example: '250'
      x-stoplight:
        id: 4b7904d22oo6e
    Lang:
      type: string
      description: Locale identifier
      format: '[a-z]{2}_[A-Z]{2}'
      example: fr_FR
      x-stoplight:
        id: vnljpsu0wzkif
    PersonTitle:
      description: Person title
      type: string
      enum:
        - MR
        - MS
        - MRS
      example: MR
      x-stoplight:
        id: w7ete4eyviy0b
    IdentityCollection:
      description: Sorted and paginated list of Identities
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of Identities
              items:
                $ref: '#/components/schemas/Identity'
      x-stoplight:
        id: v4qbbh7potpob
    IdentityCreationRequest:
      type: object
      description: An Identity creation form
      required:
        - legalType
        - kyc
      properties:
        legalType:
          $ref: ./LegalType.yaml
        kyc:
          $ref: '#/components/schemas/Kyc'
        profileId:
          $ref: '#/components/schemas/ProfileId'
        externalId:
          $ref: '#/components/schemas/ExternalId'
        distributorId:
          $ref: ./IdentityId.yaml
        relations:
          $ref: '#/components/schemas/CreateIdentityRelationCollection'
      x-stoplight:
        id: v8l5c7s8dh9m4
    Identity:
      type: object
      description: An Identity
      required:
        - id
        - legalType
        - kyc
        - role
        - creationDate
        - updateDate
      properties:
        id:
          $ref: ./IdentityId.yaml
        legalType:
          $ref: ./LegalType.yaml
        kyc:
          $ref: '#/components/schemas/Kyc'
        profileId:
          $ref: '#/components/schemas/ProfileId'
        distributorId:
          $ref: ./IdentityId.yaml
        externalId:
          $ref: '#/components/schemas/ExternalId'
        role:
          $ref: ./IdentityRole.yaml
        creationDate:
          type: string
          format: date-time
          description: Identity's creation date
        updateDate:
          type: string
          format: date-time
          description: Identity's last update date
        kycExpirationDate:
          format: date-time
          description: Identity's closest KYC expiration date
      x-stoplight:
        id: iuk0w22i277t4
    IdentityUpdateRequest:
      type: object
      description: Identity update form
      properties:
        kyc:
          $ref: '#/components/schemas/Kyc'
        externalId:
          $ref: '#/components/schemas/ExternalId'
      x-stoplight:
        id: loipw9fs6i4g3
    DocumentCreateRequest:
      allOf:
        - type: object
          required:
            - type
            - content
          properties:
            ownerId:
              $ref: ./IdentityId.yaml
            type:
              $ref: '#/components/schemas/DocumentType'
            description:
              type: string
              description: Custom description
              example: 'Government ID user #XXX'
            externalData:
              $ref: '#/components/schemas/ExternalData'
            content:
              description: Document file content encoded in base64 format
              type: string
              example: TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQK
      x-stoplight:
        id: q5ajtoab66257
    Document:
      type: object
      required:
        - id
        - ownerId
        - status
        - type
        - links
      properties:
        id:
          $ref: '#/components/schemas/ReadOnlyDocumentId'
        ownerId:
          $ref: '#/components/schemas/ReadOnlyIdentityId'
        status:
          $ref: '#/components/schemas/DocumentStatus'
        type:
          $ref: '#/components/schemas/DocumentType'
        description:
          type: string
          description: Custom description
          example: 'Government ID user #XXX'
        uploadDate:
          type: string
          format: date-time
          readOnly: true
        lastUpdateDate:
          type: string
          format: date-time
          readOnly: true
        metadata:
          readOnly: true
          oneOf:
            - $ref: '#/components/schemas/IncorporationCertificateMetadata'
            - $ref: '#/components/schemas/PortraitMetadata'
            - $ref: '#/components/schemas/ProofOfActivityMetadata'
            - $ref: '#/components/schemas/ProofOfBankDomiciliationMetadata'
            - $ref: '#/components/schemas/ProofOfIdentityMetadata'
            - $ref: '#/components/schemas/ProofOfResidenceMetadata'
            - $ref: '#/components/schemas/ProofOfResourcesMetadata'
            - $ref: '#/components/schemas/ProofOfTaxationMetadata'
            - $ref: '#/components/schemas/SignatureMetadata'
            - $ref: '#/components/schemas/OtherMetadata'
          discriminator:
            propertyName: type
            mapping:
              PORTRAIT: '#/components/schemas/PortraitMetadata'
              INCORPORATION_CERTIFICATE: '#/components/schemas/IncorporationCertificateMetadata'
              PROOF_OF_ACTIVITY: '#/components/schemas/ProofOfActivityMetadata'
              PROOF_OF_BANK_DOMICILIATION: '#/components/schemas/ProofOfBankDomiciliationMetadata'
              PROOF_OF_IDENTITY: '#/components/schemas/ProofOfIdentityMetadata'
              PROOF_OF_RESIDENCE: '#/components/schemas/ProofOfResidenceMetadata'
              PROOF_OF_RESOURCES: '#/components/schemas/ProofOfResourcesMetadata'
              PROOF_OF_TAXATION: '#/components/schemas/ProofOfTaxationMetadata'
              SIGNATURE: '#/components/schemas/SignatureMetadata'
              OTHER_DOCUMENTS_LEGAL_ENTITY: '#/components/schemas/OtherMetadata'
              OTHER_DOCUMENTS: '#/components/schemas/OtherMetadata'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `[DocumentType]-content` [GET] Load the document content. DocumentType is the document's type in lower-case.
              * `[DocumentType]-preview` [GET] Get a small sized preview of the document content. DocumentType is the document's type in lower-case.
          items:
            $ref: ./Link.yaml
          example:
            - rel: '[DocumentType]-content'
              href: 'https://sandbox.skaleet.com/api/company/v1/documents/42/content'
            - rel: '[DocumentType]-preview'
              href: 'https://sandbox.skaleet.com/api/company/v1/documents/42/preview'
      x-stoplight:
        id: r913sftxsxis5
    DocumentId:
      type: string
      example: DOC123
      description: Platform document id
      x-stoplight:
        id: 2qw3i9e9gugbi
    DocumentCollection:
      description: Sorted and paginated list of documents
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of documents
              items:
                $ref: '#/components/schemas/Document'
      x-stoplight:
        id: l2pnxp5a54v9j
    CredentialCreationRequest:
      type: object
      description: the Credential's creation form
      required:
        - login
        - email
      properties:
        login:
          $ref: '#/components/schemas/Login'
        email:
          $ref: '#/components/schemas/Email'
        u2fRequired:
          type: boolean
          description: Indicated if the U2F authentication will be required on this Credential
        expirationDate:
          type: string
          format: date-time
          description: 'the Credential expiration date. After this date, the Credential will be blocked.'
      x-stoplight:
        id: whrpnaq3m4q1o
    Credential:
      type: object
      description: an Identity's Credential
      required:
        - login
        - email
      properties:
        login:
          $ref: '#/components/schemas/Login'
        email:
          $ref: '#/components/schemas/Email'
        u2fRequired:
          type: boolean
          description: Indicated if the U2F authentication is required on this Credential
        expirationDate:
          type: string
          format: date-time
        lastLogin:
          type: string
          format: date-time
      x-stoplight:
        id: e7vnzsn1orpsr
    CredentialUpdateRequest:
      type: object
      description: a Credential's update form
      properties:
        email:
          $ref: '#/components/schemas/Email'
        u2fRequired:
          type: boolean
          description: Indicates if the U2F authentication will be required on this Credential
        expirationDate:
          type: string
          format: date-time
          description: 'the Credential expiration date. After this date, the Credential will be blocked.'
      x-stoplight:
        id: 8f4qckr1ctc3s
    InitiateCreditTransferCustomerInstructionRequest:
      type: object
      required:
        - customerInstructionInformation
        - customerInstructionOrderingParties
      properties:
        customerInstructionInformation:
          description: Customer Instruction information provided at initiation
          type: object
          required:
            - paymentInstrument
            - requestedNbPaymentTransactions
            - requestedTotalAmount
            - requestedExecutionDate
          properties:
            paymentInstrument:
              $ref: '#/components/schemas/PaymentInstrument'
            paymentService:
              $ref: '#/components/schemas/PaymentService'
            batchBooking:
              $ref: '#/components/schemas/BatchBooking'
            customerInstructionReference:
              $ref: '#/components/schemas/CustomerInstructionReference'
            requestedNbPaymentTransactions:
              $ref: '#/components/schemas/NbPaymentTransactions'
            requestedTotalAmount:
              $ref: '#/components/schemas/TotalAmount'
            requestedExecutionDate:
              $ref: '#/components/schemas/RequestedExecutionDate'
            customerInstructionTypeInformation:
              $ref: '#/components/schemas/CustomerInstructionTypeInformation'
        customerInstructionOrderingParties:
          type: object
          required:
            - debtor
          description: Customer Instruction ordering parties informations
          properties:
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
                - required:
                    - name
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: c2hod7esref5k
    ViewCustomerInstructionResponse:
      type: object
      required:
        - id
        - status
        - history
        - customerInstructionInformation
        - customerInstructionOrderingParties
        - links
      properties:
        id:
          $ref: '#/components/schemas/InternalId'
        status:
          $ref: '#/components/schemas/InternalStatus'
        history:
          $ref: '#/components/schemas/UserTransitionArray'
        statusReasonInformation:
          $ref: '#/components/schemas/StatusReasonInformation'
        calculatedNbPaymentTransactions:
          $ref: '#/components/schemas/CalculatedNbPaymentTransactions'
        calculatedAmount:
          $ref: '#/components/schemas/CalculatedAmount'
        paymentTransactionsStatus:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransactionsStatus'
        customerInstructionInformation:
          type: object
          description: Customer Instruction informations provided at initiation
          required:
            - paymentInstrument
            - batchBooking
            - customerInstructionReference
            - requestedNbPaymentTransactions
            - requestedTotalAmount
            - requestedExecutionDate
          properties:
            paymentInstrument:
              $ref: '#/components/schemas/CompletePaymentInstrument'
            paymentService:
              $ref: '#/components/schemas/PaymentService'
            batchBooking:
              $ref: '#/components/schemas/BatchBooking'
            customerInstructionReference:
              $ref: '#/components/schemas/CustomerInstructionReference'
            requestedNbPaymentTransactions:
              $ref: '#/components/schemas/NbPaymentTransactions'
            requestedTotalAmount:
              $ref: '#/components/schemas/TotalAmount'
            requestedExecutionDate:
              $ref: '#/components/schemas/RequestedExecutionDate'
            customerInstructionTypeInformation:
              $ref: '#/components/schemas/CustomerInstructionTypeInformation'
        customerInstructionOrderingParties:
          type: object
          required:
            - initiatingParty
            - debtor
          description: Customer Instruction ordering parties informations
          properties:
            initiatingParty:
              allOf:
                - $ref: '#/components/schemas/InitiatingParty'
                - required:
                    - name
                    - id
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
                - required:
                    - name
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: fs4d1stvpu1mw
    CustomerInstructionAfterInitiationLinks:
      type: object
      properties:
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `updateCustomerInstruction` [PATCH] Update customer instruction
              * `deleteCustomerInstruction` [DELETE] Delete customer instruction
              * `getCustomerInstruction` [GET] View customer instruction details
              * `getPaymentTransactionsList` [GET] View list of payment transactions associated to customer instruction
              * `initiatePaymentTransaction` [POST] Initiate a payment transaction associated to the customer instruction
              * `submitCustomerInstruction` [POST] Submit customer instruction
          items:
            $ref: ./Link.yaml
          example:
            - rel: updateCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/company/v1/customer-instructions/credit-transfers/1395'
            - rel: deleteCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/company/v1/customer-instructions/credit-transfers/1395'
            - rel: getCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/company/v1/customer-instructions/1395'
            - rel: getPaymentTransactionsList
              href: 'https://sandbox.skaleet.com/api/company/v1/customer-instructions/1395/payment-transactions'
            - rel: initiatePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/company/v1customer-instructions/credit-transfers/1395/payment-transactions'
            - rel: submitCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/company/v1/customer-instructions/credit-transfers/1395/submit'
      x-stoplight:
        id: vt60m8vyn3tnb
    SubmitCustomerCreditTransferInstructionRequest:
      type: object
      required:
        - customerInstructionInformation
        - customerInstructionOrderingParties
        - paymentTransaction
      properties:
        customerInstructionInformation:
          description: Customer Instruction information provided at initiation
          type: object
          required:
            - paymentInstrument
            - requestedExecutionDate
          properties:
            paymentInstrument:
              $ref: '#/components/schemas/PaymentInstrument'
            batchBooking:
              $ref: '#/components/schemas/BatchBooking'
            customerInstructionReference:
              $ref: '#/components/schemas/CustomerInstructionReference'
            requestedExecutionDate:
              $ref: '#/components/schemas/RequestedExecutionDate'
            customerInstructionTypeInformation:
              $ref: '#/components/schemas/CustomerInstructionTypeInformation'
        customerInstructionOrderingParties:
          type: object
          required:
            - initiatingParty
            - debtor
          description: Customer Instruction ordering parties information
          properties:
            initiatingParty:
              allOf:
                - $ref: '#/components/schemas/InitiatingParty'
                - required:
                    - name
                    - id
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
                - required:
                    - name
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
        paymentTransaction:
          allOf:
            - description: Information on the payment transaction
            - $ref: '#/components/schemas/PaymentTransactionsPostDetails'
      x-stoplight:
        id: sej701el9gj7h
    SubmitCustomerCreditTransferInstructionCreatedResponse:
      allOf:
        - $ref: '#/components/schemas/ViewCustomerInstructionResponse'
        - $ref: '#/components/schemas/CustomerInstructionAfterSubmissionLinks'
        - type: object
          required:
            - paymentTransaction
          properties:
            paymentTransaction:
              allOf:
                - description: Information on the payment transaction
                - $ref: '#/components/schemas/ViewPaymentTransactionResponse'
                - $ref: '#/components/schemas/PaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks'
      x-stoplight:
        id: 8864eujvrdh2r
    SubmitCustomerCreditTransferInstructionAcceptedResponse:
      allOf:
        - type: object
          required:
            - id
            - status
            - strongAuthenticationReference
          properties:
            id:
              $ref: '#/components/schemas/PaymentTransactionInternalId'
            status:
              $ref: '#/components/schemas/PaymentTransactionInternalStatus'
            strongAuthenticationReference:
              description: Strong authentication reference
              type: string
        - $ref: '#/components/schemas/CustomerInstructionAfterSubmissionLinks'
      x-stoplight:
        id: tnxkf7b16f3r1
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: The error numeric code
        message:
          type: string
          description: The error's localized message
        hint:
          type: string
          description: 'On certain types of error, a localized message will be sent to indicate a way to solve the error'
      example:
        code: 1337
        message: Something went wrong because requirement X was not met.
        hint: Field X does not match the field requirements
      x-stoplight:
        id: rvwlaqbgoikhn
    InternalId:
      type: string
      description: Internal reference of the customer instruction with the platform
      example: '10027'
      x-stoplight:
        id: if4g1124or69m
    UpdateCreditTransferCustomerInstructionRequest:
      type: object
      properties:
        customerInstructionInformation:
          description: Customer Instruction informations provided at initiation
          type: object
          properties:
            paymentService:
              $ref: '#/components/schemas/PaymentService'
            batchBooking:
              $ref: '#/components/schemas/BatchBooking'
            customerInstructionReference:
              $ref: '#/components/schemas/CustomerInstructionReference'
            requestedNbPaymentTransactions:
              $ref: '#/components/schemas/NbPaymentTransactions'
            requestedTotalAmount:
              $ref: '#/components/schemas/TotalAmount'
            requestedExecutionDate:
              $ref: '#/components/schemas/RequestedExecutionDate'
            customerInstructionTypeInformation:
              $ref: '#/components/schemas/CustomerInstructionTypeInformation'
        customerInstructionOrderingParties:
          type: object
          description: Customer Instruction ordering parties informations
          properties:
            debtor:
              $ref: '#/components/schemas/Debtor'
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: j5a2n316frsr0
    CustomerInstructionAfterSubmissionLinks:
      type: object
      properties:
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getCustomerInstruction` [GET] View customer instruction details
              * `getPaymentTransactionsList` [GET] View list of payment transactions associated to customer instruction
          items:
            $ref: ./Link.yaml
          example:
            - rel: getCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/company/v1/customer-instructions/1395'
            - rel: getPaymentTransactionsList
              href: 'https://sandbox.skaleet.com/api/company/v1/customer-instructions/1395/payment-transactions'
      x-stoplight:
        id: tdpqc5xvx5pzy
    PaymentTransactionInternalId:
      type: string
      description: Internal reference of the payment transaction with the platform
      example: '10028'
      x-stoplight:
        id: j8wciw7xmkwiq
    PaymentTransactionInternalStatus:
      type: object
      description: Status of the payment transaction within the platform
      required:
        - value
        - label
      properties:
        value:
          type: string
          description: Status value
          enum:
            - INI_STARTED
            - INI_IS_VALID
            - INI_NOT_IS_VALID
            - INI_INT_CTRL_FAILED
            - INI_INT_CTRL_PASSED
            - INI_UPDATED
            - INITIATED
            - SUB_STARTED
            - SUB_IS_VALID
            - SUB_NOT_IS_VALID
            - SUB_INT_CTRL_PASSED
            - SUB_INT_CTRL_FAILED
            - SUBMITTED
            - VALIDATED
            - READY_FOR_PROCESSING
            - C_INSTRUCTION_SUB_NOT_PASSED
            - P_INSTRUCTION_SUB_NOT_PASSED
            - WAREHOUSED
            - PRO_STARTED
            - PRO_INT_CTRL_PASSED
            - PRO_INT_CTRL_FAILED
            - PRO_DEBIT_HOLD
            - PRO_DEBIT_HOLD_FAILED
            - PRO_ROUTING_FAILED
            - PRO_WAIT_SETTLEMENT_DATE
            - PRO_SETTLEMENT_FAILED
            - SETTLED
            - C_INSTRUCTION_PRO_FAILED
            - C_INSTRUCTION_PRO_START_ERROR
            - READY_FOR_EXCHANGE
            - DEBIT_HOLD_CANCEL_FAILED
            - EXT_REFUSED
            - EXCHANGED
            - EXCHANGE_ERROR
          example: INITIATED
        label:
          type: string
          description: Status label
          example: Initiated
      x-stoplight:
        id: vjcbvh7xaljua
    ViewPaymentTransactionListResponse:
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                allOf:
                  - type: object
                    description: Payment transaction summary
                    required:
                      - id
                      - status
                      - instructedDate
                      - instructedAmount
                      - links
                    properties:
                      id:
                        $ref: '#/components/schemas/PaymentTransactionInternalId'
                      status:
                        $ref: '#/components/schemas/PaymentTransactionInternalStatus'
                      instructedDate:
                        $ref: '#/components/schemas/InstructedDate'
                      instructedAmount:
                        allOf:
                          - $ref: '#/components/schemas/InstructedAmount'
                          - required:
                              - currency
                              - value
                  - $ref: '#/components/schemas/PaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks'
      x-stoplight:
        id: oc895czjtq5ov
    InitiateCreditTransferPaymentTransactionRequest:
      allOf:
        - $ref: '#/components/schemas/PaymentTransactionsPostDetails'
      x-stoplight:
        id: 8tr6zgqan5kw1
    ViewPaymentTransactionResponse:
      type: object
      required:
        - paymentTransactionInternalInformation
        - paymentTransactionDateInformation
        - paymentTransactionAmountInformation
        - paymentTransactionParties
        - links
      properties:
        paymentTransactionInformation:
          $ref: '#/components/schemas/PaymentTransactionInformation'
        paymentTransactionInternalInformation:
          $ref: '#/components/schemas/PaymentTransactionInternalInformation'
        paymentTransactionDateInformation:
          type: object
          description: Payment Transaction date informations
          required:
            - instructedDate
            - creationDate
          properties:
            creationDate:
              allOf:
                - $ref: '#/components/schemas/CreationDate'
                - readOnly: true
            instructedDate:
              $ref: '#/components/schemas/InstructedDate'
            settlementDate:
              $ref: '#/components/schemas/SettlementDate'
        paymentTransactionAmountInformation:
          type: object
          description: Payment Transaction amount informations
          required:
            - instructedAmount
            - chargeBearer
          properties:
            instructedAmount:
              allOf:
                - $ref: '#/components/schemas/InstructedAmount'
                - required:
                    - currency
                    - value
            chargeBearer:
              $ref: '#/components/schemas/ChargeBearer'
        paymentTransactionParties:
          type: object
          description: Payment Transaction parties informations
          required:
            - initiatingParty
            - debtor
            - creditor
          properties:
            initiatingParty:
              allOf:
                - $ref: '#/components/schemas/InitiatingParty'
                - required:
                    - name
                    - id
            debtor:
              allOf:
                - $ref: '#/components/schemas/Debtor'
                - required:
                    - name
            creditor:
              allOf:
                - $ref: '#/components/schemas/Creditor'
                - required:
                    - name
            ultimateCreditor:
              $ref: '#/components/schemas/UltimateCreditor'
        paymentTransactionDedicatedInformations:
          type: object
          description: Payment Transaction dedicated informations
          properties:
            remittanceInformation:
              $ref: '#/components/schemas/RemittanceInformation'
        customerInstructionId:
          type: string
          description: Internal id of the customer instruction
          example: '1234'
        paymentInstructionId:
          type: string
          description: Internal id of the payment instruction
          example: '1234'
        externalData:
          $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: qe0uuu939tnr8
    PaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks:
      type: object
      properties:
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `updatePaymentTransaction` [PATCH] Update payment transaction
              * `deletePaymentTransaction` [DELETE] Delete payment transaction
              * `getPaymentTransaction` [GET] View payment transaction details
              * `initiatePaymentTransaction` [POST] Initiate a payment transaction associated to the customer instruction
              * `submitCustomerInstruction` [POST] Submit customer instruction
          items:
            $ref: ./Link.yaml
          example:
            - rel: updatePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/company/v1/customer-instructions/credit-transfers/payment-transactions/1395'
            - rel: deletePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/company/v1/customer-instructions/credit-transfers/payment-transactions/1395'
            - rel: getPaymentTransaction
              href: 'https://sandbox.skaleet.com/api/company/v1/payment-transactions/1395'
            - rel: initiatePaymentTransaction
              href: 'https://sandbox.skaleet.com/api/company/v1customer-instructions/credit-transfers/1395/payment-transactions'
            - rel: submitCustomerInstruction
              href: 'https://sandbox.skaleet.com/api/company/v1/customer-instructions/credit-transfers/1395/submit'
      x-stoplight:
        id: j8q7u4q71urkr
    InstructedDate:
      type: string
      description: Instructed date of the payment transaction. Format Y-m-d
      format: date
      x-stoplight:
        id: te6yuvl758bm7
    ServiceLevel:
      type: string
      enum:
        - XCT
        - SEPA
        - SCT_INST
        - ON_US
        - BACI
        - KNGA
      description: Network code
      example: XCT
      x-stoplight:
        id: sb0kr5yyxmr3c
    ExternalTransactionId:
      type: string
      description: External transaction id
      example: '12223133113'
      maxLength: 105
      x-stoplight:
        id: gbtk55rb4n9vt
    UpdateCreditTransferPaymentTransactionRequest:
      type: object
      description: Informations on the recipient
      properties:
        paymentTransactionInformation:
          $ref: '#/components/schemas/PaymentTransactionInformation'
        paymentTransactionAmountInformation:
          type: object
          description: Information related to the transferred amount
          properties:
            instructedAmount:
              $ref: '#/components/schemas/InstructedAmount'
            chargeBearer:
              $ref: '#/components/schemas/ChargeBearer'
        paymentTransactionParties:
          type: object
          description: recipient parties information
          properties:
            creditor:
              $ref: '#/components/schemas/Creditor'
            ultimateCreditor:
              $ref: '#/components/schemas/UltimateCreditor'
        paymentTransactionDedicatedInformations:
          type: object
          description: dedicated information related to the payment transaction
          properties:
            remittanceInformation:
              $ref: '#/components/schemas/RemittanceInformation'
        externalData:
          allOf:
            - $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: kdpk0ymitdm5p
    CustomerInstructionInternalStatusValue:
      type: string
      description: Status value
      enum:
        - INI_STARTED
        - INI_IS_VALID
        - INI_NOT_IS_VALID
        - INI_INT_CTRL_FAILED
        - INI_INT_CTRL_PASSED
        - INI_UPDATED
        - INITIATED
        - SUB_REQUIRED
        - SUB_STARTED
        - SUB_NOT_IS_VALID
        - SUB_IS_VALID
        - SUB_INT_CTRL_PASSED
        - SUB_INT_CTRL_FAILED
        - SUB_STRONG_AUTH_REQUIRED
        - VALIDATED
        - SUBMITTED
        - READY_FOR_PROCESSING
        - WAREHOUSED
        - P_TRN_SUB_NOT_PASSED
        - PRO_STARTED
        - PRO_INT_CTRL_PASSED
        - PRO_INT_CTRL_FAILED
        - PRO_START_ERROR
        - PRO_DEBIT_HOLD
        - PROCESSED
        - P_TRN_PRO_FAILED
      example: INITIATED
      x-stoplight:
        id: glhahy7sw1shb
    CustomerInstructionReference:
      type: string
      description: Customer Instruction Reference set by the initiating party
      example: CINSTR001
      maxLength: 35
      x-stoplight:
        id: 02g33kji8d199
    CreationDate:
      type: string
      description: Creation date of the payment transaction. Format Y-m-d
      format: date
      x-stoplight:
        id: svc1lorc3fxgd
    SettlementDate:
      type: string
      description: Settlement date of the payment transaction. Format Y-m-d
      format: date
      x-stoplight:
        id: 75p23rv7g82a4
    PasswordUpdateRequest:
      type: object
      description: Request content for password update operation
      required:
        - currentPassword
        - newPassword
      properties:
        currentPassword:
          type: string
          format: password
        newPassword:
          type: string
          format: password
      x-stoplight:
        id: vrfg5m6cf7wtn
    ForgottenPasswordRequest:
      type: object
      description: Request content for forgotten password operation
      required:
        - login
        - email
      properties:
        login:
          type: string
          format: login
        email:
          type: string
          format: email
      x-stoplight:
        id: ghdht34y4nald
    PasswordRedefinitionRequest:
      type: object
      description: Request content for password redefinition operation
      required:
        - otp
        - newPassword
      properties:
        otp:
          type: string
          format: token
        newPassword:
          type: string
          format: password
      x-stoplight:
        id: j7zfn0csn6oxi
    RelationSide:
      description: Indicates if identity is target or originator in relation to associated party
      type: string
      enum:
        - originator
        - target
      x-stoplight:
        id: cl136lsqmrbgo
    RelationNatureId:
      type: string
      description: Nature of the relation
      example: BOARD_MEMBER
      x-stoplight:
        id: qfen37yrvoje7
    Currency:
      description: Alpha iso code of associated currency (ISO 4217)
      type: string
      minLength: 3
      maxLength: 3
      example: EUR
      x-stoplight:
        id: u78ktzob6gt0w
    AccountExternalId:
      type: string
      description: External id (from the calling system)
      example: EXT123456789
      x-stoplight:
        id: 6ez92yl01a1gh
    ProductId:
      type: string
      description: Platform product identifier.
      example: PRO123
      x-stoplight:
        id: 7rgvlfbn7of22
    UserId:
      type: integer
      description: Platform user identifier
      example: 42
      x-stoplight:
        id: ugg2hjqnef67v
    AccountStatus:
      type: string
      description: The account status
      readOnly: true
      enum:
        - OPENED
        - CLOSED
        - BLOCKED
        - DEBIT_BLOCKED
        - CREDIT_BLOCKED
      x-stoplight:
        id: 50xdirjkegzao
    AccountType:
      type: string
      description: Account Type
      enum:
        - CURRENT
        - SAVINGS
        - SUB_ACCOUNT
        - DEDICATED
        - MONEYPOT
        - TECHNICAL
      x-stoplight:
        id: 4ly59r9c6t2hx
    Accounts:
      description: Sorted and paginated list of accounts
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              items:
                $ref: ./Link.yaml
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/company/v1?limit=20&offset=40'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/company/v1?limit=20&offset=60'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/company/v1?limit=20&offset=20'
        - type: object
          properties:
            items:
              type: array
              description: Collection of accounts
              items:
                $ref: '#/components/schemas/Account'
      x-stoplight:
        id: jp1813iwzwl49
    AccountBalances:
      type: object
      x-stoplight:
        id: fvvjopf6zo5qw
      required:
        - accountId
        - balance
        - availableBalance
        - balanceByValueDate
      properties:
        accountId:
          $ref: ./AccountId.yaml
        balance:
          allOf:
            - $ref: '#/components/schemas/Amount'
            - readOnly: true
            - description: Account's balance
        availableBalance:
          allOf:
            - $ref: '#/components/schemas/Amount'
            - readOnly: true
            - description: 'Account''s balance, minus all reserved funds'
        balanceByValueDate:
          allOf:
            - $ref: '#/components/schemas/Amount'
            - readOnly: true
            - description: 'Account''s balance, calculated by value date'
          x-stoplight:
            id: sqsio0xnlxxb6
    AccountBalancesByDate:
      type: object
      x-stoplight:
        id: dw7mdxm86xazf
      required:
        - accountId
        - balance
        - balanceByValueDate
      properties:
        accountId:
          $ref: ./AccountId.yaml
        balance:
          allOf:
            - $ref: '#/components/schemas/Amount'
            - readOnly: true
            - description: Account's balance
        balanceByValueDate:
          allOf:
            - $ref: '#/components/schemas/Amount'
            - readOnly: true
            - description: 'Account''s balance, calculated by value date'
    Account:
      type: object
      required:
        - id
        - currency
        - ownerName
        - name
        - productId
        - type
        - status
        - balances
        - createdAt
        - lastChangedAt
      properties:
        id:
          $ref: ./AccountId.yaml
        iban:
          $ref: ./IBAN.yaml
        currency:
          $ref: '#/components/schemas/Currency'
        userId:
          $ref: '#/components/schemas/UserId'
        ownerName:
          type: string
          description: owner Name
          readOnly: true
        name:
          type: string
          description: The account label
          example: 'Current account #123546'
          readOnly: true
        productId:
          $ref: '#/components/schemas/ProductId'
        type:
          $ref: '#/components/schemas/AccountType'
        status:
          $ref: '#/components/schemas/AccountStatus'
        bic:
          allOf:
            - $ref: ./BIC.yaml
            - readOnly: true
        balances:
          $ref: '#/components/schemas/Iso20022AccountBalances'
        externalReferences:
          type: array
          description: collection of external references
          items:
            $ref: '#/components/schemas/AccountExternalReference'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        externalId:
          $ref: '#/components/schemas/AccountExternalId'
        createdAt:
          type: string
          format: date-time
          readOnly: true
        lastUsedAt:
          type: string
          format: date-time
          readOnly: true
        lastChangedAt:
          type: string
          format: date-time
          readOnly: true
        authorizedOverdraft:
          example:
            currency: EUR
            display: '1, 00 €'
            value: 100
            source: Account
          readOnly: true
          type: object
        additionalData:
          $ref: '#/components/schemas/AccountAdditionalData'
      x-stoplight:
        id: sgptsx2g96ij3
    AccountStatementCollection:
      description: Paginated list of account statements
      allOf:
        - type: object
          properties:
            items:
              type: array
              description: Paginated list of account statements
              items:
                $ref: '#/components/schemas/AccountStatement'
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              items:
                $ref: ./Link.yaml
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/company/v1/accounts/10000000157/statements?limit=20&offset=40'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/company/v1/accounts/10000000157/statements?limit=20&offset=60'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/company/v1/accounts/10000000157/statements?limit=20&offset=20'
      x-stoplight:
        id: nr6w945f34xfa
    AccountStatementId:
      type: string
      description: Account statement identifier
      example: ACCSTAT12
      x-stoplight:
        id: ih0r92my48vk4
    RecipientCreateRequest:
      type: object
      x-stoplight:
        id: drn7gqr43tenv
      required:
        - name
      properties:
        name:
          type: string
          description: recipient's new name
        externalReference:
          type: string
          description: recipient's external reference
        accountReference:
          type: string
          description: 'account reference (if used, BIC is optional. Cannot be used along with phone number or IBAN + BIC)'
        phone:
          type: integer
          description: recipient's phone number (cannot be used with IBAN + BIC or Account Reference + BIC)
        iban:
          type: string
          description: 'recipient''s IBAN (if used, should include BIC. Cannot be used along with phone number or Account Reference + BIC)'
        bic:
          type: string
          description: 'recipient''s BIC (if used, should include IBAN or Account Reference. Cannot be used along with phone number)'
        postalAddress:
          $ref: ./RecipientAddress.yaml
    RecipientCreateResponse:
      type: object
      x-stoplight:
        id: ysu3u7obrk5r3
      properties:
        name:
          type: string
          example: John Doe
        externalReference:
          type: string
          example: external_reference
        accountReference:
          type: string
          example: account_reference
        phone:
          type: integer
          example: 33601020304
        iban:
          type: string
          example: FR7630002032531234567890168
        bic:
          type: string
          description: CRLYFRPPXXX
        postalAddress:
          $ref: ./RecipientAddress.yaml
    CreationErrorInvalidPhoneNumber:
      type: object
      properties:
        code:
          example: 11200
        message:
          example: Invalid phone number
      x-stoplight:
        id: 2q8irydv6c7g4
    CreationErrorDetailsRequired:
      type: object
      properties:
        code:
          example: 61901
        message:
          example: 'Phone number, IBAN or Account reference should be filled'
      x-stoplight:
        id: 9yt1at8gkqv9m
    CreationErrorRequiresIBANorAccount:
      type: object
      properties:
        code:
          example: 61911
        message:
          example: Only the combination IBAN + BIC or Account number + BIC is available
      x-stoplight:
        id: c1aq9dlyi3llq
    CreationErrorNameTooLong:
      type: object
      properties:
        code:
          example: 69409
        message:
          example: Name or external reference too long
      x-stoplight:
        id: vt5ojaqjf9jns
    CreationErrorUnknownBIC:
      type: object
      properties:
        code:
          example: 69405
        message:
          example: BIC \"BOSZDJQEDHUEF\" is unknown
      x-stoplight:
        id: 8p1w9sr6vfriu
    CreationErrorInvalidAddress:
      type: object
      properties:
        code:
          example: 69410
        message:
          example: Invalid Address
      x-stoplight:
        id: stwr19tn6m92a
    RecipientId:
      type: string
      description: Recipient Platform ID
      example: REC2
      x-stoplight:
        id: kiq01yik3i8lt
    RecipientName:
      type: string
      description: 'Recipient alias, if any'
      example: John Doe
      x-stoplight:
        id: j3gf6z9i2ogm9
    RecipientExternalReference:
      type: string
      description: 'Recipient external reference, if any'
      example: EXT_REFERENCE_1
      x-stoplight:
        id: klgp9a34wot5o
    RecipientUpdateRequest:
      type: object
      x-stoplight:
        id: zleuuzre6pcrw
      required:
        - name
      properties:
        name:
          type: string
          description: recipient's new name
        externalReference:
          type: string
          description: recipient's new external reference
        postalAddress:
          $ref: ./RecipientAddress.yaml
    TransactionExternalId:
      type: string
      description: Client custom data (external) for TransactionId
      example: EXT123456789
      x-stoplight:
        id: pxg07l41w65cx
    TransactionType:
      type: string
      readOnly: true
      description: Transaction type
      enum:
        - ACCOUNT_TO_ACCOUNT
        - ON_US_DIRECT_DEBIT
        - ACCOUNT_TO_EXTERNAL_TRF
        - ACCOUNT_TO_TRANSIT
        - ADJUSTMENT
        - BANK_TO_WALLET
        - BLOCK_ACCOUNT
        - BUY_DEPOSIT
        - CARD
        - CASH_TO_EXTERNAL_TRF
        - CASHIN
        - CASHIN_TO_TRANSIT
        - CASHOUT
        - CASHOUT_FROM_EXTERNAL_TRF
        - CASHOUT_FROM_TRANSIT
        - CLOSE_ACCOUNT
        - DEPOSIT
        - DISTRIBUTOR_POSTING
        - EXTERNAL
        - EXTERNAL_TO_MONEYPOT
        - ETM_SCREENING
        - ETM_SCREENING_SUCCESS
        - ETM_SCREENING_FAIL
        - ETM_SCREENING_FAIL_TO_SUCCESS
        - EXTERNAL_TRF_TO_ACCOUNT
        - EXTERNAL_TRF_WITHDRAW
        - FEES_PAYMENT
        - FEES_REFUND
        - INVOICE_GENERATION
        - MAINTENANCE_PAYMENT
        - ONLINE_PAYMENT
        - OPEN_ACCOUNT
        - OVERBALANCE
        - PAYBILL_ACCOUNT
        - PAYBILL_CASH
        - PAYMENT
        - PAYMENT_FUNDS_RESERVATION
        - POSTING
        - RECHARGE_BALANCE
        - RECHARGE_CREDIT_CARD
        - REVERSAL
        - SALARY_DISBURSEMENT
        - SALARY_TO_ACCOUNT
        - SELL_DEPOSIT
        - SETTLEMENT_TO_ACCOUNT
        - SETTLEMENT_TO_CASH
        - TRANSIT_TO_ACCOUNT
        - UNBLOCK_ACCOUNT
        - WALLET_TO_BANK
        - WALLET_TO_BANK_ARCHIVE
        - MAD_APPROVAL
        - MAD_REFUSAL
        - MAD_CREATION
      x-stoplight:
        id: ktsldmlrybpot
    AmountValue:
      description: Amount without separator and symbol
      type: integer
      example: 1337
      x-stoplight:
        id: a06o2eodxweib
    TransactionCollection:
      description: Sorted and paginated list of account transactions
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              items:
                $ref: ./Link.yaml
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/company/v1?limit=20&offset=40&sort=example_sorting_parameter'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/company/v1?limit=20&offset=60&sort=example_sorting_parameter'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/company/v1?limit=20&offset=20&sort=example_sorting_parameter'
        - type: object
          properties:
            items:
              type: array
              description: Collection of account transactions
              items:
                $ref: '#/components/schemas/Transaction'
      x-stoplight:
        id: j4qadol477y0n
    TransactionId:
      type: string
      description: Platform transaction id
      example: TRX123
      x-stoplight:
        id: bu4iilog2v8fi
    Media:
      description: Available media channels
      type: string
      enum:
        - SMS
        - USSD
        - POS
        - WEB
        - BANK
        - IVR
        - API
        - APP
        - ONLINE
        - ALL
        - UNKNOWN
      example: POS
      x-stoplight:
        id: 46ns0tjmu49og
    Transaction:
      type: object
      x-stoplight:
        id: 77uap9dz92jne
      required:
        - id
        - type
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        date:
          type: string
          format: date-time
          deprecated: true
          description: replaced by bookingDate
        bookingDate:
          type: string
          format: date-time
          x-stoplight:
            id: kmi5tx1b5jpoj
        valueDate:
          type: string
          format: date
          x-stoplight:
            id: 92kgp6ke7hoef
        type:
          type: object
          required:
            - value
            - label
          properties:
            value:
              $ref: '#/components/schemas/TransactionType'
            label:
              type: string
              example: Transfer to account
        externalId:
          $ref: '#/components/schemas/TransactionExternalId'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        label:
          description: User defined transaction label
          type: string
        description:
          description: Transaction description
          type: string
        shortDescription:
          description: Transaction short description
          type: string
        balance:
          $ref: '#/components/schemas/Amount'
        amount:
          $ref: '#/components/schemas/Amount'
        geolocation:
          $ref: ./GeoLocation.yaml
        additional:
          description: Additional information on transaction
          type: string
        locked:
          type: boolean
          description: 'If true, spendings details of this transaction can no longer be updated'
        qualified:
          description: Whether the transaction's amount is fully qualified or not. Is only returned if the client has the right to manage spendings
          type: boolean
          example: false
        justified:
          description: Whether the transaction has at least one attachment to justify it. Is only returned if the client has the right to manage spendings
          type: boolean
          example: false
        detailedAccounting:
          type: array
          items:
            $ref: '#/components/schemas/AccountingEntry'
        businessProcessId:
          description: Id of the business process associated with the transaction
          example: 1234
          type: integer
    InvalidRequestError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 0
            message: Invalid value for parameter "parameter_name"
      x-stoplight:
        id: uorp6fkot6vn7
    ForbiddenError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 12345
            message: Client is not allowed to make this action
      x-stoplight:
        id: a6chbk7kxvbiu
    RefreshToken:
      type: string
      description: Refresh token that can be used to refresh this Access Token
      example: |
        def50200d8b0199b7c7362bade48fb6d2e52fed4ef6d4270bbb9260365c17392ad009c1d1e1a8c7bf760281df2e1eeb176ad83332bc00eba386bb67fb6a47b6fb225251f23e8be728727d075288b84c2f54823d6c526b7746d1089918f8fbbada4e14d18df9a9f58c0386aa09bff54803218777e337570699e7b07859096897658d90f9b646029b0c4e054f007766716f25744b2195c05552ed299733a2444fd4461c7d74f88f6dae3842977f3880670f9847beba5d96045b4f21e9d642248b87a213ef3eb5bfb62a743ae457fb8c6e711a733e9f06680f9448e1d57c0ba7fb72dc92f83c815ca79fc0ff9fccd9d8a4bb5bbbd557f0af1643fcaa5564794efa2e9804d2e068ffdfcfe9a03573103a1e3b8ffe51fdaf161d53e677488a9a254f22a5a5ca54099697b83fcf1769130d408094a104740cea7942f7b39ea3a85de1accdb36ac2f0ae0c765ee98f5e5eff28e181a30ee1be198a08723d82c1b9823b71018baae1fb4cfa16589b986cef219e88367eb565a38131a02b2b91cef8c4b57e90412d212c532e4a900797b0ebca5dba43bb40a8bb5ea0d5c909c113b730cbfbc50138699c546a379a62a84fdfba297b84c1c30191c20f9378e7d3b27f9697094a314db2205c2809a74b5c18144f58ec9be66a1c8bd7ca9eb06f338d119538582f29aef67ecc17e8d7e08ea5da39975c3628446283d1f3d5a9fba86c98a8466394065db64aff2e6caaf3ce39dd5d50a6fc75fcb123f09fe42121097f2f72e67d8faaf27b714f712e358fdb8da306615c70a1fbbc73a8df96978785acce47bf76256d338e5bf0078c83f4d81b991e050bc1c65a501cf2fefb793fdffeb18580147170c7894e559ef422d8782344e866c909fd578539588707509b6431773ae227a506d9bee11a7fb50b061fc1534c9e345e6eee5d25b00452f147c5b7f308b412100eae597114966f3aa68837ca24e85168655dddcd3313f5cd7b563429e15a5bd9e383acd7ae22515ffb2d87d6f7a03e08590a4937f6cae3510d39debdd16096215f9241bf5ff7745a6afbb959cb82ec3615962c36c
      x-stoplight:
        id: ejvs7f1hmvp6c
    OnboardingFile:
      type: object
      description: Onboarding file content
      x-stoplight:
        id: o09lyy4fyxfjx
      required:
        - status
        - form
      properties:
        status:
          $ref: ./OnboardingStatus.yaml
        form:
          $ref: '#/components/schemas/InputCollection'
        links:
          type: array
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `self` [GET] Load the current onboarding file
              * `updateFile` [PATCH] Update the onboarding file data
              * `submitFile` [POST] Submit the onboarding data to validation. Only available when applicable.
              * `getRelationAddFormForNaturalPerson` [GET] Get the list of inputs to create a new relation with a natural person. Only available if caller is allowed to manage relations.
              * `getRelationAddFormForLegalEntity` [GET] Get the list of inputs to create a new relation with a legal entity. Only available if caller is allowed to manage relations.
              * `getRelationNatures` [GET] Get the available natures of relation. Only available if caller is allowed to manage relations.
              * `addRelation` [POST] Create a new relation between onboarding party and a new party. Only available if caller is allowed to manage relations.
              * `updateCurrentUser` [PATCH] Update the onboarding party.
          example:
            - rel: self
              href: 'https://sandbox.skaleet.com/api/company/v1/onboarding/file'
            - rel: updateFile
              href: 'https://sandbox.skaleet.com/api/company/v1/onboarding/file'
            - rel: submitFile
              href: 'https://sandbox.skaleet.com/api/company/v1/onboarding/submit'
            - rel: getRelationAddFormForNaturalPerson
              href: 'https://sandbox.skaleet.com/api/company/v1/onboarding/relation-add-form?legalType=NATURAL_PERSON'
            - rel: getRelationAddFormForLegalEntity
              href: 'https://sandbox.skaleet.com/api/company/v1/onboarding/relation-add-form?legalType=LEGAL_ENTITY'
            - rel: getRelationNatures
              href: 'https://sandbox.skaleet.com/api/company/v1/relation-natures'
            - rel: addRelation
              href: 'https://sandbox.skaleet.com/api/company/v1/onboarding/relations'
            - rel: updateCurrentUser
              href: 'https://sandbox.skaleet.com/api/company/v1/identities/42'
          items:
            $ref: ./Link.yaml
          readOnly: true
        termsOfService:
          type: string
          example: 'https://sandbox.skaleet.com/termsOfService/'
          description: URL to terms and conditions
    UnauthorizedError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 9
            message: You don't have access to this ressource
      x-stoplight:
        id: 3dicq73a5mv0d
    RelationAddForm:
      type: object
      description: Form to add a relation
      required:
        - legalType
        - form
      properties:
        legalType:
          $ref: ./LegalType.yaml
        form:
          $ref: '#/components/schemas/InputCollection'
      x-stoplight:
        id: utb0rywfqhhyy
    OnboardingRelationCollection:
      description: Sorted and paginated list of relations
      allOf:
        - $ref: ./PaginatedCollection.yaml
        - type: object
          properties:
            items:
              type: array
              description: collection of relations
              items:
                $ref: '#/components/schemas/OnboardingRelation'
      x-stoplight:
        id: iwqi8bxg7gyjy
    OnboardingRelation:
      type: object
      description: Relation to other parties
      x-stoplight:
        id: qlj4se3rtjcrk
      required:
        - relationId
        - nature
        - associatedParty
        - links
      properties:
        relationId:
          $ref: ./RelationId.yaml
        nature:
          $ref: ./RelationNature.yaml
        associatedParty:
          $ref: '#/components/schemas/Party'
        links:
          type: array
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `deleteRelation` [DELETE] Delete the relation
          example:
            - rel: deleteRelation
              href: 'https://sandbox.skaleet.com/api/company/v1/relations/42'
          items:
            $ref: ./Link.yaml
          readOnly: true
    ConflictError:
      oneOf:
        - $ref: '#/components/schemas/Error'
        - $ref: '#/components/schemas/EmbeddedError'
      x-stoplight:
        id: 1cdouh7v4dbmb
    Response:
      type: object
      properties:
        success:
          type: boolean
      x-stoplight:
        id: hgi0wbtsa1f67
    NotFoundError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 0
            message: Resource has not been found
      x-stoplight:
        id: pzi2eu1qp8xr4
    SerializedImage:
      type: object
      description: Serialized image
      required:
        - filename
        - content
        - mime
      properties:
        filename:
          type: string
          description: Image file name
        content:
          type: string
          description: Image raw content
        mime:
          type: string
          description: Mime type
      x-stoplight:
        id: yl2n7swykh9cr
    OAuth2PasswordAccessTokenRequest:
      allOf:
        - $ref: '#/components/schemas/OAuth2AccessTokenRequestWithScope'
        - type: object
          required:
            - client_secret
            - username
            - password
          properties:
            username:
              type: string
              description: the ressource owner login or username
            password:
              type: string
              description: the ressource owner password associated to the username
      x-stoplight:
        id: df0vafhxdsf3q
    OAuth2AuthCodeAccessTokenRequest:
      allOf:
        - $ref: '#/components/schemas/BaseOAuth2AccessTokenRequest'
        - type: object
          required:
            - code
            - redirect_uri
          properties:
            redirect_uri:
              type: string
              format: uri
              description: one registered redirect URI for the used client_id
              example: 'https://mywebsite.com/oauth-redirect'
            code:
              type: string
              description: the Authorization Code
            code_verifier:
              type: string
              description: The code verifier matching the challenge transmitted on authorization initiation
      x-stoplight:
        id: c4lgk1h5o572d
    OAuth2ClientCredentialsAccessTokenRequest:
      allOf:
        - $ref: '#/components/schemas/OAuth2AccessTokenRequestWithScope'
        - type: object
          required:
            - client_id
            - client_secret
      x-stoplight:
        id: x3vt9rig3cnfs
    InputCollectionUpdate:
      type: object
      description: Form values associated to the corresponding input id
      additionalProperties:
        oneOf:
          - type: string
          - type: number
          - type: integer
          - type: boolean
          - type: array
            items: {}
          - $ref: '#/components/schemas/InputCollectionUpdate'
      example:
        id1: value1
        id2: value2
        id3:
          - value3-1
          - value3-2
        collectionId4:
          id5: value4
      x-stoplight:
        id: b1h61pnvowjps
    Collection:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
        count:
          type: integer
          description: the total count of objects in collection
          minimum: 0
        offset:
          type: integer
          description: Pagination start (from 0)
          minimum: 0
          default: 0
        limit:
          type: integer
          description: Number of results to display (default 20)
          minimum: 0
          maximum: 100
          default: 20
        sort:
          type: string
          description: Field to define sort order
          default: id
      x-stoplight:
        id: bb4mkn026gd4g
    UserProfile:
      description: User habilitation profile
      type: object
      required:
        - id
        - name
        - description
        - role
      properties:
        id:
          $ref: '#/components/schemas/ReadOnlyUserProfileId'
        name:
          type: string
          description: The user Profile name
          example: User Profile 42
        description:
          type: string
          description: The user Profile description
          example: User Profile 42 description
        role:
          $ref: ./IdentityRole.yaml
        ownerId:
          $ref: '#/components/schemas/WriteOnlyIdentityId'
        owner:
          $ref: '#/components/schemas/UserProfileOwner'
      x-stoplight:
        id: pwe9n8dcyednn
    AbstractInput:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          description: the identification key of the Input. Use that ID as object key in form submission.
          example: lastName
        type:
          $ref: '#/components/schemas/InputType'
        label:
          type: string
          description: Displayable Input label
          example: Last Name
        description:
          type: string
          description: A potentially long description of the input content
          example: Enter your last name
        required:
          type: boolean
          description: 'If true, an input value must be provided on form submission'
        validators:
          type: array
          items:
            $ref: '#/components/schemas/Validator'
        disabled:
          type: boolean
          default: false
          description: 'If true, this input cannot be change'
      x-stoplight:
        id: 8asp2n283gnm0
    Input:
      oneOf:
        - $ref: '#/components/schemas/TextInput'
        - $ref: '#/components/schemas/AmountInput'
        - $ref: '#/components/schemas/BoolInput'
        - $ref: '#/components/schemas/DateInput'
        - $ref: '#/components/schemas/DateTimeInput'
        - $ref: '#/components/schemas/DurationInput'
        - $ref: '#/components/schemas/EmailInput'
        - $ref: '#/components/schemas/FileInput'
        - $ref: '#/components/schemas/ImageInput'
        - $ref: '#/components/schemas/FileContentInput'
        - $ref: '#/components/schemas/InputCollection'
        - $ref: '#/components/schemas/IntInput'
        - $ref: '#/components/schemas/IpInput'
        - $ref: '#/components/schemas/SelectInput'
        - $ref: '#/components/schemas/MultiSelectInput'
        - $ref: '#/components/schemas/NumberInput'
        - $ref: '#/components/schemas/PercentInput'
        - $ref: '#/components/schemas/PasswordInput'
        - $ref: '#/components/schemas/PhoneInput'
        - $ref: '#/components/schemas/RateInput'
        - $ref: '#/components/schemas/SelectWithAmountInput'
      discriminator:
        propertyName: type
        mapping:
          TEXT: '#/components/schemas/TextInput'
          COLLECTION: '#/components/schemas/InputCollection'
          AMOUNT: '#/components/schemas/AmountInput'
          BOOL: '#/components/schemas/BoolInput'
          DATE: '#/components/schemas/DateInput'
          DATE_TIME: '#/components/schemas/DateTimeInput'
          DURATION: '#/components/schemas/DurationInput'
          EMAIL: '#/components/schemas/EmailInput'
          FILE: '#/components/schemas/FileInput'
          FILE_CONTENT: '#/components/schemas/FileContentInput'
          IMAGE: '#/components/schemas/ImageInput'
          INT: '#/components/schemas/IntInput'
          IP: '#/components/schemas/IpInput'
          MULTI_SELECT: '#/components/schemas/MultiSelectInput'
          NUMBER: '#/components/schemas/NumberInput'
          PASSWORD: '#/components/schemas/PasswordInput'
          PERCENT: '#/components/schemas/PercentInput'
          PHONE: '#/components/schemas/PhoneInput'
          RATE: '#/components/schemas/RateInput'
          SELECT: '#/components/schemas/SelectInput'
          SELECT_WITH_AMOUNT: '#/components/schemas/SelectWithAmountInput'
          COMPLIANCE: '#/components/schemas/SelectInput'
      x-stoplight:
        id: njtph09iz2i7f
    DocumentRequirement:
      type: object
      description: A document KYC requirements
      required:
        - type
        - required
        - label
        - minimumRequiredStatus
      properties:
        id:
          type: integer
          description: 'Document requirement identifier. Can be null in case document is not required, but type will still be provided.'
        type:
          $ref: '#/components/schemas/DocumentType'
        required:
          type: boolean
          description: Is this document required for KYC or not
        label:
          type: string
          description: Document description
        minimumRequiredStatus:
          $ref: '#/components/schemas/DocumentStatus'
      x-stoplight:
        id: 421gecn31ushf
    Kyc:
      type: object
      description: the KYC
      x-stoplight:
        id: nw2x51mnoxcib
    CreateIdentityRelationCollection:
      type: array
      description: |
        Depending of the type of relation you want to create, provide only one of `toIdentityId` and `fromIdentity` fields.

        The Identity to-be-created will be used for the empty side of the relation.
      items:
        $ref: '#/components/schemas/IdentityRelation'
      x-stoplight:
        id: ed6ugdbwr49zs
    DocumentType:
      type: string
      enum:
        - PORTRAIT
        - SUBSCRIPTION_FORM
        - SIGNATURE
        - PROOF_OF_RESIDENCE
        - PROOF_OF_BANK_DOMICILIATION
        - PROOF_OF_TAXATION
        - PROOF_OF_ACTIVITY
        - PROOF_OF_RESOURCES
        - PROOF_OF_STATUS
        - PHOTO
        - PROOF_OF_IDENTITY
        - OTHER_DOCUMENTS
        - INCORPORATION_CERTIFICATE
        - OTHER_DOCUMENTS_LEGAL_ENTITY
      x-stoplight:
        id: wxtjo2qlmoxac
    ExternalData:
      type: object
      description: Set of key-value pairs that you can attach to an object. This can be useful for storing your additional information about the object in a structured format.
      example:
        key1: value1
        key2: value2
      x-stoplight:
        id: fz9r22vvrdql5
    ReadOnlyDocumentId:
      allOf:
        - $ref: '#/components/schemas/DocumentId'
        - readOnly: true
      x-stoplight:
        id: v3ib1i5vcktmw
    ReadOnlyIdentityId:
      allOf:
        - $ref: ./IdentityId.yaml
        - readOnly: true
          example: '42'
      x-stoplight:
        id: 0dqf3j1bbce4i
    DocumentStatus:
      type: string
      readOnly: true
      enum:
        - NEW
        - PENDING
        - VALIDATED
        - REFUSED
        - UNKNOWN
      x-stoplight:
        id: pjzvc2jdw2c7a
    IncorporationCertificateMetadata:
      type: object
      description: Document metadatas for INCORPORATION_CERTIFICATE documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        country:
          type: string
        deliveryDate:
          type: string
          format: date
        denomination:
          type: string
        legalForm:
          type: string
        numberOfEmployees:
          type: string
        registrationDate:
          type: string
          format: date
        registrationNumber:
          type: string
        registrationPlace:
          type: string
        shareCapital:
          type: string
        zipcode:
          type: string
      x-stoplight:
        id: nj9cj0ih4n0dk
    PortraitMetadata:
      type: object
      description: Document metadatas for PORTRAIT documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        identityPhotoMatch:
          type: string
      x-stoplight:
        id: rfh5djeg42tl3
    ProofOfActivityMetadata:
      type: object
      description: Document metadatas for PROOF_OF_ACTIVITY documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        grossSalary:
          type: string
        lastName:
          type: string
        netSalary:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
      x-stoplight:
        id: k9mlyg4iwavog
    ProofOfBankDomiciliationMetadata:
      type: object
      description: Document metadatas for PROOF_OF_BANK_DOMICILIATION documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        bic:
          type: string
        firstName:
          type: string
        iban:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
      x-stoplight:
        id: 104ltekr527ue
    ProofOfIdentityMetadata:
      type: object
      description: Document metadatas for PROOF_OF_IDENTITY documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        addressLine1:
          type: string
        addressLine2:
          type: string
        birthDate:
          type: string
          format: date
        birthPlace:
          type: string
        city:
          type: string
        country:
          type: string
        deliveryDate:
          type: string
          format: date
        expirationDate:
          type: string
          format: date
        firstName:
          type: string
        idNumber:
          type: string
        issuingAuthority:
          type: string
        issuingCountry:
          type: string
        lastName:
          type: string
        mrz:
          type: string
        nationality:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        zipcode:
          type: string
      x-stoplight:
        id: di0ypduubjvnk
    ProofOfResidenceMetadata:
      type: object
      description: Document metadatas for PROOF_OF_RESIDENCE documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        contractNumber:
          type: string
        contractType:
          type: string
        country:
          type: string
        emissionDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        zipcode:
          type: string
      x-stoplight:
        id: bc1j3hhzb3omw
    ProofOfResourcesMetadata:
      type: object
      description: Document metadatas for PROOF_OF_RESOURCES documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        resourceAmount:
          type: string
      x-stoplight:
        id: y4r3e0yk13rgz
    ProofOfTaxationMetadata:
      type: object
      description: Document metadatas for PROOF_OF_TAXATION documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        taxAmount:
          type: string
        taxNumber:
          type: string
      x-stoplight:
        id: pm42mvrguh0ml
    SignatureMetadata:
      type: object
      description: Document metadatas for SIGNATURE documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        identitySignatureMatch:
          type: string
      x-stoplight:
        id: un0zglg3birys
    OtherMetadata:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
      x-stoplight:
        id: i52dpr2yfqjxi
    PaymentInstrument:
      type: string
      description: 'Define the mean of payment (credit transfer, direct debit,...).'
      example: CreditTransfer
      enum:
        - CreditTransfer
        - CreditTransferInst
      x-stoplight:
        id: 48hw6ffyf5kcw
    PaymentService:
      type: string
      description: Define if instruction is single payment or bulk
      enum:
        - PAYMENTS
        - BULK_PAYMENTS
      x-stoplight:
        id: 8q3ihce3f7md9
    BatchBooking:
      type: boolean
      description: Indicate if transaction within the customer instruction will be processed by batch or unitary
      x-stoplight:
        id: npy46tw4wp7yc
    NbPaymentTransactions:
      type: integer
      description: Number of credit transfer transaction within the customer instruction
      example: 3
      x-stoplight:
        id: zuelh7wab6i5b
    TotalAmount:
      type: object
      description: Declared total Amount without separator and symbol
      required:
        - value
        - currency
      properties:
        value:
          $ref: '#/components/schemas/AmountValue'
        currency:
          description: Currency alpha code (ISO 4217)
          type: string
          minLength: 3
          maxLength: 3
          example: EUR
      x-stoplight:
        id: nb2ityakl9e62
    RequestedExecutionDate:
      type: string
      description: Date at which the customer instruction should be controlled in order to ensure an immediate execution. Effective execution date (cf ExecutionDate) will be determined according to Cut-Off parameters for the product concerned
      format: date
      x-stoplight:
        id: 74fmzm8lqz0o2
    CustomerInstructionTypeInformation:
      description: specific information related to type of payment. The criteria will apply to all transactions unless a dedicated information is also indicated at transaction level
      type: object
      properties:
        categoryPurpose:
          $ref: '#/components/schemas/CategoryPurpose'
        serviceLevel:
          $ref: '#/components/schemas/ServiceLevel'
      x-stoplight:
        id: amkyq1i602mo8
    Debtor:
      type: object
      description: 'Information on the owner of account to debit, need an id or accountId'
      properties:
        name:
          type: string
          example: TOTAL ENERGIES TREASURY
          maxLength: 140
        id:
          description: 'Identification of a party (ordering, beneficiary,...)'
          type: object
          properties:
            value:
              type: string
              example: '331234567889'
              maxLength: 75
            type:
              type: string
              description: Identify the type of party Id provided
              example: phone
              enum:
                - phone
                - identityId
        accountId:
          type: object
          description: 'AccountId of a party (ordering, beneficiary,...)'
          properties:
            value:
              type: string
              description: Account Id according to the system holding the account. It is associated with an account type.
              example: FR7630001007941234567890185
              maxLength: 34
            type:
              type: string
              description: Identify the type of account Id provided
              example: IBAN
              enum:
                - IBAN
                - other
            bankId:
              $ref: '#/components/schemas/BankId'
        postalAddress:
          $ref: '#/components/schemas/PostalAddress'
      x-stoplight:
        id: l6hyqmm6ulzvs
    PaymentEngineExternalData:
      type: object
      description: Set of key-value pairs that you can attach to an object. This can be useful for storing your additional information about the object in a structured format.
      maxLength: 1024
      example:
        externalDataKey: externalDataValue
        externalDataArray:
          - 1
          - 2
          - 3
        externalDataBool: true
      x-stoplight:
        id: jj6ki53gkw0en
    InternalStatus:
      type: object
      description: Status of the customer instruction within the platform
      required:
        - value
        - label
      properties:
        value:
          $ref: '#/components/schemas/CustomerInstructionInternalStatusValue'
        label:
          type: string
          description: Status label
          example: Initiated
      x-stoplight:
        id: 819ll5ielvc7y
    UserTransitionArray:
      type: array
      description: History of process status transitions
      items:
        $ref: '#/components/schemas/UserTransition'
      x-stoplight:
        id: od4omllzfykmn
    StatusReasonInformation:
      type: object
      description: Reason information if error status
      required:
        - originator
        - reason
      properties:
        originator:
          type: string
          description: Originator of error status
          enum:
            - SYSTEM
            - CUSTOMER
            - ADMIN
        reason:
          type: object
          required:
            - code
            - message
          description: Reason of error status
          properties:
            code:
              type: string
              maxLength: 32
            message:
              type: string
              maxLength: 1024
      x-stoplight:
        id: 7edhfuhd5utcd
    CalculatedNbPaymentTransactions:
      type: integer
      description: number of transaction the system has identified within the customer instruction
      example: 3
      x-stoplight:
        id: 97ek84ay29jo9
    CalculatedAmount:
      type: object
      description: Total amount of transactions actually managed in Platform platform
      required:
        - value
        - currency
      properties:
        value:
          type: integer
          description: Amount without separator and symbol
          example: 1337
        currency:
          type: string
          description: Alphabetic iso code of associated currency (3 digits)
          minLength: 3
          maxLength: 3
          example: EUR
      x-stoplight:
        id: r5abiyu25fy92
    PaymentTransactionsStatus:
      type: object
      description: Informations on the recipient
      required:
        - groupStatus
        - nbTransactions
        - totalAmount
      properties:
        groupStatus:
          type: string
          enum:
            - PROCESSABLE
            - NOTPROCESSABLE
        nbTransactions:
          type: integer
          description: number of transaction the system has identified as processable / not processable
          example: 3
        totalAmount:
          type: object
          description: Total Amount of transactions processable / not processable
          required:
            - value
            - currency
          properties:
            value:
              type: integer
              description: Amount without separator and symbol
              example: 1337
            currency:
              type: string
              description: Alphabetic iso code of associated currency (3 digits)
              minLength: 3
              maxLength: 3
              example: EUR
      x-stoplight:
        id: cskedl6b0xffc
    CompletePaymentInstrument:
      type: string
      description: 'Define the mean of payment (credit transfer, direct debit,...).'
      example: CreditTransferReturn
      enum:
        - CreditTransfer
        - CreditTransferInst
        - CreditTransferReturn
        - CreditTransferRecall
        - CreditTransferRecallPositiveResponse
        - CreditTransferRecallNegativeResponse
        - CreditTransferClaimNonReceipt
        - CreditTransferClaimNonReceiptResponse
      x-stoplight:
        id: 0wzy9gm1gqihp
    InitiatingParty:
      type: object
      description: 'Information on the party who sends the customer instruction, to debit its account or on behalf of a debtor'
      properties:
        name:
          type: string
          example: TOTAL ENERGIES
          maxLength: 140
        id:
          $ref: '#/components/schemas/PartyIdentification'
        postalAddress:
          $ref: '#/components/schemas/PostalAddress'
      x-stoplight:
        id: 03lpznt6jxwrn
    PaymentTransactionsPostDetails:
      allOf:
        - $ref: '#/components/schemas/PaymentTransactionsPostDetailsCommonData'
        - type: object
          properties:
            paymentTransactionInformation:
              $ref: '#/components/schemas/PaymentTransactionInformation'
        - type: object
          properties:
            externalData:
              $ref: '#/components/schemas/PaymentEngineExternalData'
      x-stoplight:
        id: teuenr7flqbli
    InstructedAmount:
      type: object
      description: Amount of the transfer initially requested by the initiating party
      properties:
        value:
          type: integer
          description: Amount without separator and symbol
          example: 1337
        currency:
          type: string
          description: Alphabetic iso code of associated currency (3 digits)
          minLength: 3
          maxLength: 3
          example: EUR
      x-stoplight:
        id: pgkdpwnmmqy6r
    PaymentTransactionInformation:
      type: object
      description: Payment transaction information
      properties:
        paymentInstrument:
          allOf:
            - $ref: '#/components/schemas/PaymentInstrument'
            - readOnly: true
        paymentTransactionIdentification:
          $ref: '#/components/schemas/PaymentTransactionIdentification'
        paymentTransactionTypeInformation:
          allOf:
            - $ref: '#/components/schemas/PaymentTransactionTypeInformation'
            - readOnly: true
        direction:
          type: string
          description: Direction of the payment
          example: OUTWARD
          readOnly: true
          enum:
            - OUTWARD
            - INWARD
        transactionType:
          type: string
          description: 'Type of the transaction that will be performed for off-us credit transfers. Must inherit from ACCOUNT_TO_EXTERNAL. If not given, an ACCOUNT_TO_EXTERNAL will be performed'
      x-stoplight:
        id: wof37c500lanx
    PaymentTransactionInternalInformation:
      type: object
      required:
        - id
        - status
        - history
      properties:
        id:
          $ref: '#/components/schemas/PaymentTransactionInternalId'
        status:
          $ref: '#/components/schemas/PaymentTransactionInternalStatus'
        history:
          $ref: '#/components/schemas/UserTransitionArray'
        statusReasonInformation:
          $ref: '#/components/schemas/StatusReasonInformation'
        contractId:
          type: string
          description: ID of the contract
          example: '1002883102221'
      x-stoplight:
        id: vqyo9o262alj7
    ChargeBearer:
      type: string
      description: 'Charge bearer. If not defined, will be set to SLEV'
      enum:
        - SLEV
      x-stoplight:
        id: wgl0wbkizzqvw
    Creditor:
      type: object
      description: Information on the beneficiary counterparty
      properties:
        name:
          type: string
          example: John Doe
          maxLength: 140
        id:
          description: 'Identification of a party (ordering, beneficiary,...)'
          type: object
          properties:
            value:
              type: string
              example: '331234567889'
              maxLength: 75
            type:
              type: string
              description: Identify the type of party Id provided
              example: phone
              enum:
                - identityId
                - phone
        accountId:
          type: object
          properties:
            value:
              type: string
              description: Account Id according to the system holding the account. It is associated with an account type.
              example: FR7630001007941234567890185
              maxLength: 34
            type:
              type: string
              description: Identify the type of account Id provided
              example: IBAN
              enum:
                - IBAN
                - other
            bankId:
              $ref: '#/components/schemas/BankId'
        postalAddress:
          $ref: '#/components/schemas/PostalAddress'
      x-stoplight:
        id: c1wi4tjr78gel
    UltimateCreditor:
      type: object
      description: Information on the ultimate beneficiary counterparty
      properties:
        name:
          type: string
          example: John Doe
          maxLength: 140
        id:
          description: 'Identification of a party (ordering, beneficiary,...)'
          type: object
          required:
            - type
            - value
          properties:
            value:
              type: string
              example: '331234567889'
              maxLength: 75
            type:
              type: string
              description: Identify the type of party Id provided
              example: phone
              enum:
                - identityId
                - phone
                - anybic
                - other
        postalAddress:
          $ref: '#/components/schemas/PostalAddress'
      x-stoplight:
        id: jubiibx794eht
    RemittanceInformation:
      type: object
      description: commercial reference related to the payment (ie invoice reference)
      required:
        - value
        - type
      properties:
        value:
          type: string
          example: payment billing reference No1234556
        type:
          type: string
          example: UNSTRUCTURED
          enum:
            - UNSTRUCTURED
      x-stoplight:
        id: jh2xuk318y86i
    Amount:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/AmountValue'
        currency:
          $ref: '#/components/schemas/Currency'
        display:
          type: string
          example: '13,37 €'
      x-stoplight:
        id: q8beyigf4enml
    Iso20022AccountBalances:
      type: array
      description: Collection of balance
      items:
        $ref: '#/components/schemas/AccountBalance'
      x-stoplight:
        id: fzew2gu83l1nl
    AccountExternalReference:
      description: An account external reference
      properties:
        type:
          type: string
          description: External reference type
        reference:
          type: string
          description: External reference value
      x-stoplight:
        id: mcejqi6pg8bke
    AccountAdditionalData:
      type: object
      description: Additional information associated with the account.
      example:
        key1: value1
        key2: value2
      x-stoplight:
        id: qg8oxec81e26f
    AccountStatement:
      type: object
      required:
        - id
        - fromDate
        - toDate
        - generatedDate
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/AccountStatementId'
            - readOnly: true
        fromDate:
          type: string
          format: date-time
          description: the begin date of the period of time covered by this statement
        toDate:
          type: string
          format: date-time
          description: the end date of the period of time covered by this statement
        generatedDate:
          type: string
          format: date-time
          description: the date of generation of the statement
        label:
          type: string
          description: a displayable label for this document
      x-stoplight:
        id: gy7fnwzob8ycp
    AccountingEntry:
      type: object
      x-stoplight:
        id: 21k1j5v12cg3k
      required:
        - id
        - accountId
        - description
        - amount
        - balance
        - type
      properties:
        id:
          $ref: '#/components/schemas/AccountingEntryId'
        date:
          type: string
          format: date-time
          deprecated: true
          description: replaced by bookingDate
        bookingDate:
          type: string
          format: date-time
          x-stoplight:
            id: zcqqo4rdoa4u8
        valueDate:
          type: string
          format: date
          x-stoplight:
            id: vofs9sxgngjhm
        accountId:
          $ref: '#/components/schemas/AccountId'
        description:
          type: string
          example: Transfer of 13.37 € from John Doe to Jane Dae
        amount:
          $ref: '#/components/schemas/Amount'
        balance:
          $ref: '#/components/schemas/Amount'
        type:
          $ref: '#/components/schemas/AccountingEntryType'
    Party:
      type: object
      x-stoplight:
        id: swj6e9yhifxu7
      required:
        - id
        - name
        - legalType
      properties:
        id:
          $ref: ./IdentityId.yaml
        name:
          type: string
          description: Displayable name of the associated party
        legalType:
          $ref: ./LegalType.yaml
        links:
          type: array
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `self` [GET] Get the party informations
              * `getKycRequirements` [GET] Get the kyc requirements
              * `getDocumentsRequirements` [GET] Get the documents requirements
              * `addDocument` [POST] Add a new document
          example:
            - rel: self
              href: 'https://sandbox.skaleet.com/api/company/v1/identities/42'
            - rel: getKycRequirements
              href: 'https://sandbox.skaleet.com/api/company/v1/kyc?legalType=NATURAL_PERSON'
            - rel: getDocumentsRequirements
              href: 'https://sandbox.skaleet.com/api/company/v1/kyc/documents?legalType=NATURAL_PERSON'
            - rel: addDocument
              href: 'https://sandbox.skaleet.com/api/company/v1/identities/42/documents'
          items:
            $ref: ./Link.yaml
          readOnly: true
      readOnly: true
    EmbeddedError:
      type: object
      required:
        - success
        - error
      properties:
        success:
          type: boolean
          description: Always false
        error:
          $ref: '#/components/schemas/Error'
      example:
        success: false
        error:
          code: 76000
          message: The request could not be processed because the current version does not match the specified version
      x-stoplight:
        id: lpgyhlhexs9m4
    OAuth2AccessTokenRequestWithScope:
      allOf:
        - $ref: '#/components/schemas/BaseOAuth2AccessTokenRequest'
        - type: object
          properties:
            scope:
              $ref: '#/components/schemas/Scope'
      x-stoplight:
        id: pgo0vqel7hbdc
    BaseOAuth2AccessTokenRequest:
      type: object
      required:
        - grant_type
        - client_id
      properties:
        grant_type:
          $ref: '#/components/schemas/OAuth2GrantType'
        client_id:
          $ref: '#/components/schemas/ApiClientId'
        client_secret:
          $ref: '#/components/schemas/ApiClientSecret'
      x-stoplight:
        id: v1zcsz3szcpka
    ReadOnlyUserProfileId:
      allOf:
        - $ref: '#/components/schemas/UserProfileId'
        - readOnly: true
      x-stoplight:
        id: ctu3cn1geprul
    WriteOnlyIdentityId:
      allOf:
        - $ref: ./IdentityId.yaml
        - writeOnly: true
          example: '42'
      x-stoplight:
        id: v7hfokcravxpc
    UserProfileOwner:
      type: object
      readOnly: true
      description: Identity owner of the profile
      required:
        - id
        - role
      properties:
        id:
          $ref: '#/components/schemas/ReadOnlyIdentityId'
        role:
          $ref: ./IdentityRole.yaml
      x-stoplight:
        id: ujn9aflqm0pdj
    InputType:
      type: string
      enum:
        - TEXT
        - COLLECTION
        - AMOUNT
        - BOOL
        - DATE
        - DATE_TIME
        - DURATION
        - EMAIL
        - FILE
        - FILE_CONTENT
        - IMAGE
        - INT
        - IP
        - MULTI_SELECT
        - NUMBER
        - PASSWORD
        - PERCENT
        - PHONE
        - PINCODE
        - RATE
        - SELECT
        - SELECT_WITH_AMOUNT
      x-stoplight:
        id: pxactap1dzfjj
    Validator:
      oneOf:
        - $ref: '#/components/schemas/AmountValidator'
        - $ref: '#/components/schemas/MinValidator'
        - $ref: '#/components/schemas/MaxValidator'
        - $ref: '#/components/schemas/BetweenValidator'
        - $ref: '#/components/schemas/BlacklistValidator'
        - $ref: '#/components/schemas/WhitelistValidator'
        - $ref: '#/components/schemas/LengthValidator'
        - $ref: '#/components/schemas/MaxLengthValidator'
        - $ref: '#/components/schemas/MinLengthValidator'
        - $ref: '#/components/schemas/PasswordValidator'
        - $ref: '#/components/schemas/RegexValidator'
      discriminator:
        propertyName: type
        mapping:
          AMOUNT: '#/components/schemas/AmountValidator'
          MIN: '#/components/schemas/MinValidator'
          MAX: '#/components/schemas/MaxValidator'
          BETWEEN: '#/components/schemas/BetweenValidator'
          BLACKLIST: '#/components/schemas/BlacklistValidator'
          WHITELIST: '#/components/schemas/WhitelistValidator'
          LENGTH: '#/components/schemas/LengthValidator'
          MAX_LENGTH: '#/components/schemas/MaxLengthValidator'
          MIN_LENGTH: '#/components/schemas/MinLengthValidator'
          PASSWORD: '#/components/schemas/PasswordValidator'
          REGEX: '#/components/schemas/RegexValidator'
      x-stoplight:
        id: 2eupjji0i2jvr
    TextInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
      x-stoplight:
        id: k0dpyivzo8v0z
    AmountInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/Amount'
            currencies:
              type: array
              items:
                $ref: '#/components/schemas/Currency'
      x-stoplight:
        id: 25f8hpcc0pdb4
    BoolInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: boolean
      x-stoplight:
        id: na9l1jbbtl6qw
    DateInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: '20180717'
            format:
              type: string
              description: 'Possible formats are the ones accepted by the [date function (php)](https://php.net/manual/en/function.date.php)'
              example: Ymd
      x-stoplight:
        id: toar8avwn4m4l
    DateTimeInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: '20180717162042'
            format:
              type: string
              description: 'Possible formats are the ones accepted by the [date function (php)](https://php.net/manual/en/function.date.php)'
              example: YmdHis
      x-stoplight:
        id: loevyora7r8yl
    DurationInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/Duration'
            periodicities:
              type: array
              items:
                $ref: '#/components/schemas/Periodicity'
      x-stoplight:
        id: xbise9fsj6vgk
    EmailInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
              format: email
      x-stoplight:
        id: 48bbb8mj448pa
    FileInput:
      allOf:
        - $ref: '#/components/schemas/AbstractFileInput'
        - type: object
          properties:
            value:
              type: object
              readOnly: true
              properties:
                content:
                  type: string
                  description: 'File content, Base64 encoded'
                  format: byte
                name:
                  type: string
                  description: Original file name and extension
                  example: fileName.txt
                type:
                  type: string
                  description: File MIME type
                  example: text/plain
                size:
                  type: integer
                  description: 'File size, in bytes'
      x-stoplight:
        id: dgx524hjo71n2
    ImageInput:
      allOf:
        - $ref: '#/components/schemas/AbstractFileInput'
        - type: object
          properties:
            value:
              type: string
              description: Image content base64 encoded
      x-stoplight:
        id: b20gc0rf4r62f
    FileContentInput:
      allOf:
        - $ref: '#/components/schemas/AbstractFileInput'
        - type: object
          properties:
            value:
              oneOf:
                - type: object
                  properties:
                    documentId:
                      $ref: '#/components/schemas/ReadOnlyDocumentId'
                - type: string
                  description: File content as Base64 encoded string
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getDocument` [GET] Load the document details linked to this input
                  * `getDocumentContent` [GET] Load the document content
                  * `getDocumentPreview` [GET] Get a small sized preview of the document content
              items:
                $ref: ./Link.yaml
              example:
                - rel: getDocument
                  href: 'https://sandbox.skaleet.com/api/company/v1/documents/42'
                - rel: getDocumentContent
                  href: 'https://sandbox.skaleet.com/api/company/v1/documents/42/content'
                - rel: getDocumentPreview
                  href: 'https://sandbox.skaleet.com/api/company/v1/documents/42/preview'
      x-stoplight:
        id: yjahw64zmgk34
    IntInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: integer
      x-stoplight:
        id: atvrwxag5u8c8
    IpInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
      x-stoplight:
        id: 2inpjk4op05m3
    SelectInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: someValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/Option'
      x-stoplight:
        id: nj85lwcotv8rx
    MultiSelectInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: array
              items:
                type: string
              example:
                - someValue
                - anotherValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/Option'
      x-stoplight:
        id: h0kwum79h5z7j
    NumberInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: number
              format: float
      x-stoplight:
        id: 4r1olaoev4osb
    PercentInput:
      allOf:
        - $ref: '#/components/schemas/NumberInput'
      x-stoplight:
        id: dv2hwa87g7qq7
    PasswordInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
      x-stoplight:
        id: dqejcjjferkp2
    PhoneInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
              example: '33612345678'
              description: Phone number in international format (MSISDN)
      x-stoplight:
        id: 85nb3h79wcm56
    RateInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            inputs:
              type: object
              required:
                - value
                - periodicity
              properties:
                value:
                  $ref: '#/components/schemas/NumberInput'
                periodicity:
                  $ref: '#/components/schemas/SelectInput'
      x-stoplight:
        id: 18ypeslmb85ae
    SelectWithAmountInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: someValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/OptionWithAmount'
      x-stoplight:
        id: fekpvipjh792a
    IdentityRelation:
      type: object
      description: A relation between Identities
      required:
        - type
      properties:
        fromIdentityId:
          $ref: ./IdentityId.yaml
        toIdentityId:
          $ref: ./IdentityId.yaml
        nature:
          $ref: '#/components/schemas/IdentityRelationNature'
      x-stoplight:
        id: jg0s05k445nkj
    CategoryPurpose:
      type: string
      description: purpose of the payment. The code is used to trigger specific behavior and identify product and operations
      enum:
        - BONU
        - CASH
        - CBLK
        - CCRD
        - CORT
        - DIVI
        - DVPM
        - EPAY
        - FCIN
        - FCOL
        - GP2P
        - GOVT
        - HEDG
        - ICCP
        - IDCP
        - INTC
        - INTE
        - LBOX
        - LOAN
        - MP2B
        - MP2P
        - OTHR
        - PENS
        - RPRE
        - RRCT
        - RVPM
        - SALA
        - SECU
        - SSBE
        - SUPP
        - TAXS
        - TRAD
        - TREA
        - VATX
        - WHLD
        - SWEP
        - TOPG
        - ZABA
        - VOST
        - FCDT
        - CIPC
        - CONC
      example: SALA
      maxLength: 4
      x-stoplight:
        id: 7iftvimb06vef
    BankId:
      type: object
      description: BankId of a party
      properties:
        value:
          type: string
          description: Value of the bankId. It is associated with a bankId type.
          example: BNPAFRPP
        type:
          type: string
          description: Identify the type of bankId provided
          example: BIC
          enum:
            - BIC
            - other
      x-stoplight:
        id: bgyb2xw08ivc9
    PostalAddress:
      type: object
      description: Postal address of the party
      properties:
        addressLines:
          type: string
          description: Address in an unformatted format. You must define either this or the structured address
          maxLength: 140
        structuredAddress:
          type: object
          description: Address in a formatted format. You must define either this or the address lines
          properties:
            streetName:
              type: string
              description: Street name
              maxLength: 70
            buildingNumber:
              type: string
              description: Building number
              maxLength: 16
            postCode:
              type: string
              description: Town's post code
              maxLength: 16
            townName:
              type: string
              description: Town's name
              maxLength: 70
        country:
          type: string
          minLength: 3
          maxLength: 3
          description: ISO numeric country code
          example: '826'
      x-stoplight:
        id: i53y6nu1h312t
    UserTransition:
      type: object
      description: Process status transition
      required:
        - status
        - date
      properties:
        status:
          type: object
          description: Status the process transitioned to
          properties:
            value:
              type: string
              description: Status value
              example: INITIATED
            label:
              type: string
              description: Status label
              example: Initiated
        date:
          type: string
          format: date-time
          description: Date of the transition
          example: '2021-04-20T10:29:44+00:00'
        userId:
          $ref: '#/components/schemas/UserId'
        comment:
          type: string
          description: Comment on the transition
        previousTransitionId:
          type: string
          description: Id of the previous transition if not the first
          example: '1234'
      x-stoplight:
        id: hoorlyr52rqb5
    PartyIdentification:
      description: 'Identification of a party (ordering, beneficiary,...)'
      type: object
      required:
        - type
        - value
      properties:
        value:
          type: string
          description: Party Id according to the system it belongs. It is associated with an party id type.
          example: '123456'
          maxLength: 75
        type:
          type: string
          description: Identify the type of party Id provided
          example: identityId
          enum:
            - phone
            - identityId
      x-stoplight:
        id: m1umsjkdxg9qe
    PaymentTransactionsPostDetailsCommonData:
      type: object
      description: Information on the recipient
      required:
        - paymentTransactionAmountInformation
        - paymentTransactionParties
      properties:
        paymentTransactionAmountInformation:
          type: object
          description: Information related to the transferred amount
          required:
            - instructedAmount
          properties:
            instructedAmount:
              allOf:
                - $ref: '#/components/schemas/InstructedAmount'
                - required:
                    - currency
                    - value
            chargeBearer:
              $ref: '#/components/schemas/ChargeBearer'
        paymentTransactionParties:
          type: object
          description: recipient parties information
          required:
            - creditor
          properties:
            creditor:
              allOf:
                - $ref: '#/components/schemas/Creditor'
                - required:
                    - name
            ultimateCreditor:
              $ref: '#/components/schemas/UltimateCreditor'
        paymentTransactionDedicatedInformations:
          type: object
          description: dedicated information related to the payment transaction
          properties:
            remittanceInformation:
              $ref: '#/components/schemas/RemittanceInformation'
      x-stoplight:
        id: ebqnynd6vyty9
    PaymentTransactionIdentification:
      type: object
      description: Payment transaction identification
      required:
        - id
      properties:
        instructionId:
          $ref: '#/components/schemas/InstructionId'
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        externalTransactionId:
          allOf:
            - $ref: '#/components/schemas/ExternalTransactionId'
            - readOnly: true
        customerInstructionId:
          type: string
          description: Internal reference of the client instruction
          readOnly: true
        id:
          allOf:
            - $ref: '#/components/schemas/PaymentTransactionInternalId'
            - readOnly: true
        clearingChannel:
          type: string
          example: BOOK
          readOnly: true
      x-stoplight:
        id: 6an3ba251lcg3
    PaymentTransactionTypeInformation:
      type: object
      description: Payment transaction type information
      required:
        - paymentInstrument
      properties:
        serviceLevel:
          $ref: '#/components/schemas/ServiceLevel'
      x-stoplight:
        id: 99aveys4juo8g
    AccountBalance:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/AmountValue'
        currency:
          $ref: '#/components/schemas/Currency'
        display:
          type: string
          example: '13,37 €'
        balanceType:
          $ref: '#/components/schemas/BalanceType'
      x-stoplight:
        id: jc5zby5l950gl
    AccountingEntryId:
      type: string
      description: Platform accounting entry id
      example: ACO4
      x-stoplight:
        id: qshab2p1lkard
    AccountId:
      type: string
      description: Account identifier
      example: ACC123
      x-stoplight:
        id: xvds9bq0800j7
    AccountingEntryType:
      type: string
      enum:
        - TRANSFER
        - FEE
        - COMMISSION
        - TAX
        - DISCOUNT
        - INTEREST
      x-stoplight:
        id: v5joh0emsgozm
    OAuth2GrantType:
      type: string
      description: OAuth2 authorization grant type
      enum:
        - authorization_code
        - password
        - client_credentials
      x-stoplight:
        id: oo09cfwq6jofi
    ApiClientSecret:
      type: string
      description: API client secret
      example: 8349dd16bcd6d192a18b885e11bc8d28503a0abbef698e40540f54d3b30ae49e
      x-stoplight:
        id: mepv1dmxeyyau
    UserProfileId:
      type: string
      description: User habilitation profile unique identifier
      example: '42'
      x-stoplight:
        id: z8i3odagwnefn
    AmountValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - currencies
          properties:
            currencies:
              type: array
              items:
                $ref: '#/components/schemas/Currency'
      x-stoplight:
        id: 1nognuvrzxxsz
    MinValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - min
          properties:
            min:
              type: number
      x-stoplight:
        id: hcq3tjuxvj5r4
    MaxValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - max
          properties:
            max:
              type: number
      x-stoplight:
        id: 60i0bvfvt1jht
    BetweenValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - min
            - max
          properties:
            min:
              type: number
            max:
              type: number
      x-stoplight:
        id: 67zl9qm5xkbmh
    BlacklistValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - blacklist
          properties:
            blacklist:
              type: array
              items:
                type: string
      x-stoplight:
        id: 9d5adu92fcfsc
    WhitelistValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - whitelist
          properties:
            whitelist:
              type: array
              items:
                type: string
      x-stoplight:
        id: k5lozebe0ma55
    LengthValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - length
          properties:
            length:
              type: integer
      x-stoplight:
        id: 23ergqd2lu6rm
    MaxLengthValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - maxLength
          properties:
            maxLength:
              type: integer
      x-stoplight:
        id: 99t73sp9m7efq
    MinLengthValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - minLength
          properties:
            minLength:
              type: integer
      x-stoplight:
        id: 0iswmnxx9oo5x
    PasswordValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          properties:
            minLength:
              type: integer
            regexp:
              type: string
              description: regexp in PCRE format. Password must match this regexp
            forbidRegex:
              type: string
              description: regexp in PCRE format. Password must not match this regexp
            forbidDates:
              type: boolean
              description: 'if true, you cannot choose a date as a password'
            blacklist:
              type: array
              description: list of forbidden passwords
              example:
                - azerty
                - qwerty
                - '123456'
                - password
              items:
                type: string
      x-stoplight:
        id: my9gn2vvrhh6k
    RegexValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - regex
          properties:
            regex:
              type: string
              description: regexp in PCRE format. Value must match this regexp
      x-stoplight:
        id: i7ps5dk0cj934
    Duration:
      type: object
      properties:
        value:
          type: integer
          example: 42
        unit:
          $ref: '#/components/schemas/Periodicity'
      x-stoplight:
        id: mhlx9r0dvkbbb
    Periodicity:
      description: Available periodicities
      type: string
      enum:
        - HOUR
        - WEEK
        - DAY
        - MONTH
        - YEAR
      example: DAY
      x-stoplight:
        id: r0hv5h4sulutr
    AbstractFileInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            maxSize:
              type: integer
              description: 'Maximum allowed file size, in bytes'
            acceptedTypes:
              type: array
              description: Accepted file types list as MIME types
              items:
                type: string
              example:
                - text/plain
                - text/csv
                - application/vnd.ms-excel
                - image/png
            minimumPageCount:
              type: integer
              description: Expected minimum page count
            maximumPageCount:
              type: integer
              description: Expected maximum page count
      x-stoplight:
        id: 1hshyblq6la38
    Option:
      type: object
      required:
        - id
        - label
      properties:
        id:
          type: string
          example: someValue
        label:
          type: string
          example: Label for someValue
      x-stoplight:
        id: 38jgyuvq427er
    OptionWithAmount:
      allOf:
        - $ref: '#/components/schemas/Option'
        - type: object
          required:
            - amount
          properties:
            amount:
              $ref: '#/components/schemas/Amount'
      x-stoplight:
        id: drl6pgcphmbfk
    IdentityRelationNature:
      type: string
      description: Nature of the relation between Identities
      example: BOARD_MEMBER
      x-stoplight:
        id: o2pbeqjtm98gk
    InstructionId:
      type: string
      description: Payment Transaction Id set by the initiating party system. This Id is used for transaction level reporting.
      example: TransactionInstrId-001
      maxLength: 35
      x-stoplight:
        id: 2s0mpu6rz4xv7
    EndToEndId:
      type: string
      description: Payment Transaction reference set by the initiating party to be transported to the recipient without any modification
      example: TransactionRef-End2EndId-001
      maxLength: 35
      x-stoplight:
        id: d9erau5bug9tz
    BalanceType:
      type: string
      description: Balance type
      enum:
        - AvailableBalance
        - SettlementPositionBalance
      x-stoplight:
        id: t3q2uk94m9bwz
    AbstractValidator:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
      x-stoplight:
        id: 7sfrgpp1dw2xa
    ValidatorType:
      type: string
      enum:
        - AMOUNT
        - MIN
        - MAX
        - BETWEEN
        - BLACKLIST
        - LENGTH
        - MAX_LENGTH
        - MIN_LENGTH
        - PASSWORD
        - REGEX
        - WHITELIST
      x-stoplight:
        id: zt6o8el4m8b5r
    DetailedPaymentTransactionsAssociatedToCustomerInstructionCollection:
      description: Sorted and paginated list of detailed payment transactions associated to the customer instruction
      allOf:
        - type: object
          properties:
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
        - type: object
          properties:
            items:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/ViewPaymentTransactionResponse'
                  - $ref: '#/components/schemas/PaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks'
      x-stoplight:
        id: sohrpneqtpzmv
    CustomerInstructionCollection:
      description: Sorted and paginated list of customer instructions
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/ViewCustomerInstructionResponse'
                  - $ref: '#/components/schemas/CustomerInstructionAfterInitiationLinks'
      x-stoplight:
        id: uxn2krne89wbf
    DetailedPaymentTransactionsCollection:
      description: Sorted and paginated list of detailed payment transactions
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/ViewPaymentTransactionResponse'
                  - $ref: '#/components/schemas/PaymentTransactionAssociatedToCustomerInstructionAfterInitiationLinks'
      x-stoplight:
        id: pswuk2f41royo
  parameters:
    DocumentId:
      name: documentId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/DocumentId'
    IdentityId:
      name: identityId
      in: path
      required: true
      schema:
        $ref: ./IdentityId.yaml
    CustomerInstructionId:
      name: customerInstructionId
      in: path
      required: true
      description: Internal identifier of the Customer Instruction
      schema:
        $ref: '#/components/schemas/InternalId'
    PaymentTransactionId:
      name: paymentTransactionId
      in: path
      required: true
      description: Internal identifier of the Payment Transaction
      schema:
        $ref: '#/components/schemas/PaymentTransactionInternalId'
    AccountNumber:
      name: accountNumber
      in: path
      required: true
      schema:
        $ref: ./AccountId.yaml
    RecipientId:
      name: recipientId
      in: path
      required: true
      description: 'Recipient ID, including the prefix that indictates the type of recipient (INT or EXT)'
      schema:
        type: string
    TransactionId:
      name: transactionId
      in: path
      required: true
      schema:
        type: integer
