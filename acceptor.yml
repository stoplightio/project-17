openapi: 3.1.0
x-stoplight:
  id: ekarmyiacqheh
servers:
  - url: 'https://sandbox.skaleet.com/api/acceptor/v1'
info:
  title: Acceptor API
  version: '0.2'
  description: "Acceptor API |  | \n---------|----------|\nUser | **Acceptor** |\n Use cases Exampl | **Acceptor Authentication**<br>- Verify acceptor pincode<br>**Client Authentication**<br>- Verify client pincode<br>- Verify client transaction code<br>- Send and verify OTP SMS<br>- Initiate and verify NSDT<br>- Initiate QR code<br>**Account Management**<br>- Search acceptor accounts<br>- Search client accounts<br>**User Management**<br>- Retrieve acceptor information<br>- Search for a client<br>- Update acceptor delegate user information<br>**Operations**<br>- Initiate and execute cashin<br>- Initiate and execute cashout<br>- Initiate and execute payment<br>- Initiate and execute bill payment<br>-Initiate and execute reversal<br>**QR Code Management**<br>- Generate QR codes<br>- List QR codes and get their information<br>- Delete QR codes |\n\nAcceptors are financial service providers made available by an acquirer. In Skaleet, they are represented by agents and merchants.\n\nTo use this API, you need to create (or reused, if already created) an agent or a merchant.Each user is associated with a user profile that defines their rights and permissions. The configuration of this user's profile will affect their authorization to endpoints.\n\n>The acceptor must have the `OPEN` status to use the Acceptor API.\n> For more information about users and their statuses, refer to [Users](docs/users-product.md)\n\nAPI keys are generated by the back-office through their web portal. The authorization mode depends on the method used to generate the API key. When creating or editing the API key, the back-office can specify the scopes available for this key, determining whether access to specific endpoints is authorized or not.\n\nFor more details about:\n- **API key configuration**, refer to \U0001F512 [API Configuration](https://tagpay.atlassian.net/servicedesk/customer/portal/1/article/2911731868)\n- **Authorization**, refer to [Authorization](docs/acceptor/oauth2-authorization.md)"
  contact:
    name: Skaleet
    url: 'https://www.skaleet.com/en/'
    email: api@skaleet.com
  license:
    name: Proprietary
    url: 'https://www.skaleet.com/'
tags:
  - name: Acceptor
  - name: Accounts
  - name: Association
  - name: Authentication
  - name: Autocomplete
  - name: Bill payment
  - name: Cashin
  - name: Cashout
  - name: Clients
  - name: Delegate Users
  - name: Other
  - name: Payment
  - name: QRCode
  - name: Reversal
paths:
  /clients:
    get:
      security:
        - OAuth2:
            - clients_view
      tags:
        - Clients
      summary: Search for a client
      operationId: SearchClients
      parameters:
        - name: phone
          in: query
          description: the client mobile phone number
          schema:
            $ref: '#/components/schemas/Phone'
        - name: idNumber
          in: query
          description: the client identity number
          schema:
            type: string
        - name: externalId
          in: query
          description: the client external identifier
          schema:
            type: string
            example: EXT123
      responses:
        '200':
          description: Client information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: rroq7dttxgyk2
  '/autocomplete/{inputId}':
    parameters:
      - $ref: '#/components/parameters/inputId'
    get:
      security:
        - OAuth2: []
      tags:
        - Autocomplete
      summary: KYC field auto-complete
      operationId: Autocomplete
      parameters:
        - name: userInput
          in: query
          required: true
          description: 'Current user input, to be completed'
          schema:
            type: string
      responses:
        '200':
          description: list of possible values found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PossibleValueCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 1r8daknrgdn9z
  /devices/activation:
    post:
      security:
        - OAuth2: []
      tags:
        - Association
      summary: Terminal association
      description: |
        This operation will proceed the activation of a previously registered device on the platform.

        API client will get an API Key in response to a successful activation.
        This API key is linked to the device and its owner's Acceptor.

        These are highly sensitive data, client app must store them in a secure manner.
      operationId: ActivateDevice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - device-id
                - activation-code
              properties:
                device-id:
                  $ref: '#/components/schemas/DeviceId'
                activation-code:
                  $ref: '#/components/schemas/ActivationCode'
      responses:
        '200':
          $ref: '#/components/responses/DeviceAssociationResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: csm8y081necmz
  /acceptor:
    get:
      security:
        - OAuth2:
            - kyc_view
      tags:
        - Acceptor
      summary: Get Acceptor Identity Info
      operationId: GetIdentity
      responses:
        '200':
          description: The Acceptor Identity structured object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: qt7uweiujmxf7
  /accounts:
    get:
      security:
        - OAuth2:
            - accounts_view
      tags:
        - Accounts
      summary: Search accounts
      operationId: SearchAccounts
      parameters:
        - name: id
          in: query
          schema:
            $ref: ./AccountId.yaml
        - name: iban
          in: query
          schema:
            $ref: ./IBAN.yaml
        - name: status
          in: query
          schema:
            type: array
            items:
              $ref: ./AccountStatus.yaml
        - name: type
          in: query
          schema:
            description: Type de compte
            type: string
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: The accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: a614erww4daid
  '/clients/{clientId}/accounts':
    parameters:
      - $ref: '#/components/parameters/clientId'
    get:
      security:
        - OAuth2:
            - client_accounts_view
      tags:
        - Accounts
      summary: Search client accounts
      operationId: SearchClientAccounts
      parameters:
        - name: id
          in: query
          schema:
            $ref: ./AccountId.yaml
        - name: iban
          in: query
          schema:
            $ref: ./IBAN.yaml
        - name: status
          in: query
          schema:
            type: array
            items:
              $ref: ./AccountStatus.yaml
        - name: type
          in: query
          schema:
            description: Type de compte
            type: string
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: The client accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 9c6uxtpim8es5
  /accounting-entries:
    get:
      security:
        - OAuth2:
            - accounts_view
      tags:
        - Accounts
      summary: List Accounting Entries For Acceptor
      operationId: listAccountingEntries
      parameters:
        - name: accountId
          in: query
          required: true
          schema:
            $ref: ./AccountId.yaml
        - name: startDate
          in: query
          description: Date et heure du début de l’intervalle de recherche
          schema:
            type: string
            format: date-time
            description: (Format ISO)
        - name: endDate
          in: query
          description: Date et heure de la fin de l’intervalle de  recherche
          schema:
            type: string
            format: date-time
            description: (Format ISO)
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/AccountingEntryId'
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/AccountingEntryType'
        - name: transactionId
          in: query
          schema:
            $ref: '#/components/schemas/TransactionId'
        - name: transactionType
          in: query
          schema:
            $ref: '#/components/schemas/TransactionType'
        - name: externalId
          in: query
          schema:
            $ref: '#/components/schemas/TransactionExternalId'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: Searched List Of Accounting Entries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingEntryCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: qfxasxs5x287s
  /transactions/cashin:
    post:
      security:
        - OAuth2:
            - cashin
      tags:
        - Cashin
      summary: Cashin pre-authorization
      operationId: CashinPreauth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  required:
                    - clientIdentifier
                    - amount
                  properties:
                    clientIdentifier:
                      $ref: '#/components/schemas/ClientIdentifier'
                    amount:
                      $ref: ./Amount.yaml
                - $ref: '#/components/schemas/TransactionRequest'
      responses:
        '201':
          $ref: '#/components/responses/SuccessfulPreauthResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: ajn5ksft69td6
  '/transactions/cashin/{transactionToken}':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    post:
      security:
        - OAuth2:
            - cashin
      tags:
        - Cashin
      summary: Cashin transaction
      operationId: CashinMake
      responses:
        '201':
          $ref: '#/components/responses/SuccessfulTransactionResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: wl2g278gm3nr6
  /transactions/cashout:
    post:
      security:
        - OAuth2:
            - cashout
      tags:
        - Cashout
      summary: Cashout pre-authorization
      operationId: CashoutPreauth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  required:
                    - clientIdentifier
                    - amount
                  properties:
                    clientIdentifier:
                      $ref: '#/components/schemas/ClientIdentifier'
                    amount:
                      $ref: ./Amount.yaml
                - $ref: '#/components/schemas/TransactionRequest'
      responses:
        '201':
          $ref: '#/components/responses/SuccessfulPreauthResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 6bvimdwmnc52s
  '/transactions/cashout/{transactionToken}':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    post:
      security:
        - OAuth2:
            - cashout
      tags:
        - Cashout
      summary: Cashout transaction
      operationId: CashoutMake
      responses:
        '201':
          $ref: '#/components/responses/SuccessfulTransactionResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: zimx7g4e1e01g
  '/delegate-users/{userId}':
    parameters:
      - name: userId
        in: path
        description: User Id of the delegate user
        required: true
        schema:
          type: integer
    patch:
      security:
        - OAuth2:
            - delegate_user_management
      tags:
        - Delegate Users
      summary: Update Information Of Delegate User By Acceptor
      operationId: updateInformationDelegateUserByAcceptor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  $ref: '#/components/schemas/Email'
                phoneNumber:
                  $ref: '#/components/schemas/Phone'
      responses:
        '200':
          description: Delegate user information were updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegateUser'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: zazidfj4m570s
  /transactions/payment:
    post:
      security:
        - OAuth2:
            - payment
      tags:
        - Payment
      summary: Payment pre-authorization
      operationId: PaymentPreauth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  required:
                    - amount
                  properties:
                    amount:
                      $ref: ./Amount.yaml
                    clientIdentifier:
                      $ref: '#/components/schemas/ClientIdentifier'
                - $ref: '#/components/schemas/TransactionRequest'
      responses:
        '201':
          $ref: '#/components/responses/SuccessfulPreauthResponse'
        '202':
          $ref: '#/components/responses/PendingClientAuthenticationResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: t79245fuuyht2
  '/transactions/payment/{transactionToken}':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    post:
      security:
        - OAuth2:
            - payment
      tags:
        - Payment
      summary: Payment transaction
      operationId: PaymentMake
      responses:
        '201':
          $ref: '#/components/responses/SuccessfulTransactionResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 1yduajd6rpeee
  /billers:
    get:
      security:
        - OAuth2:
            - bill_payment
      tags:
        - Bill payment
      parameters:
        - name: billItemId
          in: query
          required: false
          description: root item to use to get a subset of this tree
          schema:
            type: string
      summary: Bill issuers list
      operationId: LoadBillerTree
      responses:
        '200':
          description: Returns the bill issuers list ordered by categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillerItem'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: mfn799lyu0nr5
  /transactions/paybill:
    post:
      security:
        - OAuth2:
            - bill_payment
      tags:
        - Bill payment
      summary: Paybill initialization
      description: |
        <details>
          <summary>An example of paybill call flow (click to expand)</summary>
          
          ```js
          function paybill(apiClient, billIssuerId, clientIdentifier) {
              // initiate paybill transaction
              let response = apiClient.post("/transactions/paybill", {billIssuerId: billIssuerId, clientIdentifier: clientIdentifier});
              let transactionToken = response.body.transactionToken;
              let userSubmittedValues = null;
          
              // making multiple preauth
              while(true) {
                  response = apiClient.patch("/transactions/paybill/" + transactionToken, {inputs: userSubmittedValues});
                  if (response.code === 201) {
                      break;
                  }
                  userSubmittedValues = askUserInput(response.body.inputs);
              }
              
              // making authentification
              makeAuth(transactionToken)
          
              // making transaction
              apiClient.post("/transactions/paybill/" + transactionToken);
          }
          
          function askUserInput(inputs) {
              // ui logic to ask user to fill inputs
          }
          
          function makeAuth(transactionToken)
          {
              // logic to make authentication
          }
          ```

        </details>
      operationId: InitPaybill
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaybillTransactionRequest'
      responses:
        '201':
          description: Request successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - transactionToken
                properties:
                  transactionToken:
                    $ref: '#/components/schemas/TransactionToken'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: fq7xqjw88wqxb
  '/transactions/paybill/{transactionToken}':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    patch:
      security:
        - OAuth2:
            - bill_payment
      tags:
        - Bill payment
      summary: Paybill pre-authorization
      operationId: SubmitPaybillInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                inputs:
                  type: object
                  description: |
                    This object must contain user's input if a previous `PATCH /transactions/paybill/{paybillSessionId}` call returned any `Input` object.

                    It must contains as many properties as received `Input`, with property name is equal to `Input` `id`, and property value is user's input
      responses:
        '200':
          description: Request success but more inputs are required
          content:
            application/json:
              schema:
                type: object
                required:
                  - inputs
                properties:
                  inputs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Input'
        '201':
          description: 'Request successful, preauth was made'
          content:
            application/json:
              schema:
                type: object
                required:
                  - session
                  - transaction
                properties:
                  session:
                    $ref: '#/components/schemas/TransactionSession'
                  transaction:
                    $ref: '#/components/schemas/TransactionAccounting'
                  info:
                    type: string
                    description: information to display to the user
                  additional:
                    type: string
                    description: additional information to display to the user
        '403':
          $ref: '#/components/responses/ForbiddenErrorResponseWithBlockingVelocityRules'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: yb9pa0431rj0h
    post:
      security:
        - OAuth2:
            - bill_payment
      tags:
        - Bill payment
      summary: Paybill transaction
      operationId: Paybill
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                type: object
                required:
                  - transaction
                properties:
                  transaction:
                    $ref: '#/components/schemas/TransactionAccounting'
                  info:
                    type: string
                    description: information to display to the user
                  additional:
                    type: string
                    description: additional information to display to the user
                  voucher:
                    type: string
                    description: 'Voucher generated for this bill payment, if any'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: yhzs5pi6i59m7
  /transactions/reversal:
    post:
      security:
        - OAuth2:
            - reversal
      tags:
        - Reversal
      summary: Reversal pre-authorization
      operationId: ReversalPreauth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  required:
                    - transactionId
                    - amount
                  properties:
                    transactionId:
                      $ref: '#/components/schemas/TransactionId'
                - $ref: '#/components/schemas/TransactionRequest'
      responses:
        '201':
          $ref: '#/components/responses/SuccessfulPreauthResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: uqooac1o3pyz8
  '/transactions/reversal/{transactionToken}':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    post:
      security:
        - OAuth2:
            - reversal
      tags:
        - Reversal
      summary: Reversal transaction
      operationId: ReversalMake
      responses:
        '201':
          $ref: '#/components/responses/SuccessfulTransactionResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 1elg7r1z9qmsg
  '/authentications/{transactionToken}/pincode-acceptor/verify':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    patch:
      security:
        - OAuth2:
            - authentication_pincode_acceptor
      tags:
        - Authentication
      summary: Acceptor pincode
      description: Should be called when requested authentication mode is `PINCODE_ACCEPTOR`
      operationId: VerifyAcceptorPincode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - pincode
              properties:
                pincode:
                  type: string
                  description: The acceptor pincode
                  example: '1234'
      responses:
        '200':
          $ref: '#/components/responses/SuccessfulAuthenticationResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: bz1m4fbgoe2uc
  '/authentications/{transactionToken}/pincode-client/verify':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    patch:
      security:
        - OAuth2:
            - authentication_pincode_client
      tags:
        - Authentication
      summary: Client pincode
      description: |
        Should be called when requested authentication mode is `PINCODE_CLIENT`

        **Notice**

        Calling this endpoint with an invalid keyboard ID will put the transaction authentication mode to `ERROR` state.
        If no fallback is defined, then the transaction authentication state becomes `AUTH_KO` and cannot be authenticated anymore.

        Invalid keyboard ID is defined by:
          * an unknown keyboard ID,
          * a keyboard ID that is not linked to the transaction session.
      operationId: VerifyClientPincode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - pincode
              properties:
                pincode:
                  $ref: '#/components/schemas/PincodeSubmission'
      responses:
        '200':
          $ref: '#/components/responses/SuccessfulAuthenticationResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: mo31btcdkxa4s
  '/authentications/{transactionToken}/pincode-client-ivr/verify':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    patch:
      security:
        - OAuth2:
            - authentication_pincode_client_ivr
      tags:
        - Authentication
      summary: NYI Client pincode (IVR)
      description: |
        Should be called when requested authentication mode is `PINCODE_CLIENT_IVR`.

        This endpoint uses [Server Sent Events](#section/Server-Sent-Events)
      operationId: VerifyPincodeClientIVR
      responses:
        '200':
          description: Server sent events stream about the client pincode on IVR process
          content:
            text/event-stream:
              schema:
                oneOf:
                  - type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/CallStatusEvent'
                        - $ref: '#/components/schemas/TransactionSessionEvent'
                      discriminator:
                        propertyName: event
                        mapping:
                          CALL_STATUS: '#/components/schemas/CallStatusEvent'
                          TRANSACTION_SESSION: '#/components/schemas/TransactionSessionEvent'
                  - type: string
                    format: server-sent-events
              example: |
                id: EVT124
                type: CALL_STATUS
                data: {"status" : "RINGING"}


                id: EVT125
                type: CALL_STATUS
                data: {"status" : "CONNECTED"}


                id: EVT126
                type: CALL_STATUS
                data: {"status" : "SUCCESS"}


                id: EVT127
                type: TRANSACTION_SESSION
                data: {"session":{"token":"string","status":"AUTH_PENDING","authentications":[{"mode":"PINCODE_ACCEPTOR","status":"PENDING","fallback":"PINCODE_ACCEPTOR"}]}}
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: oes9lkcdymw7m
  '/authentications/{transactionToken}/otp-client/send':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    patch:
      security:
        - OAuth2:
            - authentication_otp_client
      tags:
        - Authentication
      summary: Client OTP (send)
      description: Should be called when requested authentication mode is `OTP_CLIENT`
      operationId: SendClientOTP
      responses:
        '200':
          description: OTP was sent
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: ed69m324v80f8
  '/authentications/{transactionToken}/otp-client/verify':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    patch:
      security:
        - OAuth2:
            - authentication_otp_client
      tags:
        - Authentication
      summary: Client OTP (verify)
      description: 'Should be called when requested authentication mode is `OTP_CLIENT`, after that OTP was sent'
      operationId: VerifyClientOTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - otp
              properties:
                otp:
                  type: string
                  description: The client OTP
                  example: '123456'
      responses:
        '200':
          $ref: '#/components/responses/SuccessfulAuthenticationResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: pc2xddgktwquz
  '/authentications/{transactionToken}/nsdt/verify':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    patch:
      security:
        - OAuth2:
            - authentication_nsdt
      tags:
        - Authentication
      summary: NSDT
      description: |
        Should be called when requested authentication mode is `NSDT_CLIENT`.

        This endpoint uses [Server Sent Events](#section/Server-Sent-Events)

        When event call status is `CONNECTED`, the API Client should start playing NSDT token.

        When event call status is in `SUCCESS`, `HANG_UP`, `TIMEOUT`, the API Client should stop playing NSDT token.
      operationId: VerifyNSDT
      responses:
        '200':
          description: Server sent events stream about the NSDT process
          content:
            text/event-stream:
              schema:
                oneOf:
                  - type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/NSDTTokenEvent'
                        - $ref: '#/components/schemas/CallStatusEvent'
                        - $ref: '#/components/schemas/TransactionSessionEvent'
                        - $ref: '#/components/schemas/EndOfStreamEvent'
                        - $ref: '#/components/schemas/ErrorEvent'
                      discriminator:
                        propertyName: event
                        mapping:
                          NSDT_TOKEN: '#/components/schemas/NSDTTokenEvent'
                          CALL_STATUS: '#/components/schemas/CallStatusEvent'
                          TRANSACTION_SESSION: '#/components/schemas/TransactionSessionEvent'
                          ERROR: '#/components/schemas/ErrorEvent'
                          END_OF_STREAM: '#/components/schemas/EndOfStreamEvent'
                  - type: string
                    format: server-sent-events
              example: |
                id: EVT123
                type: NSDT_TOKEN
                data: {"token" : "f0d40;f3d30;f8d30;f8d30;f7d30;f2d30;f4d30;f3d30;f2d30;f3d30;f1d30;f1d30;f2d30;f4d30;f6d30;f2d30;f8d30;f1d30;f7d30;f1d30"}


                id: EVT124
                type: CALL_STATUS
                data: {"status" : "RINGING"}


                id: EVT125
                type: CALL_STATUS
                data: {"status" : "CONNECTED"}


                id: EVT126
                type: CALL_STATUS
                data: {"status" : "SUCCESS"}


                id: EVT127
                type: TRANSACTION_SESSION
                data: {"session":{"token":"string","status":"AUTH_PENDING","authentications":[{"mode":"PINCODE_ACCEPTOR","status":"PENDING","fallback":"PINCODE_ACCEPTOR"}]}}

                id: EVT128
                type: END_OF_STREAM
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: czz47kjb8onhx
  '/authentications/{transactionToken}/qr-code':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    post:
      security:
        - OAuth2:
            - authentication_qr_code
      tags:
        - Authentication
      summary: QrCode (initiate)
      description: Should be called when requested authentication mode is `CLIENT_QR_CODE`
      operationId: InitiateQrCodeAuthentication
      responses:
        '204':
          description: 'successfully initiated, next, use GetQrCodeContent or GetQrCodeImage to present qrCode to the client.'
        '403':
          description: not applicable to current session
        '409':
          description: already initiated QrCode authentication
      x-stoplight:
        id: 88b0o9wccu2gn
  '/authentications/{transactionToken}/qr-code/raw-content':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    get:
      security:
        - OAuth2:
            - authentication_qr_code
      tags:
        - Authentication
      summary: QrCode (content)
      description: allows you to present the data as a QrCode while keeping control of its parameters and styles
      operationId: GetQrCodeContent
      responses:
        '200':
          description: QR code content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQrCodeContentResponse'
        '404':
          description: QrCode not found. Maybe authentication is not initiated
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: dc46mz0cqoti8
  '/authentications/{transactionToken}/qr-code/image':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
      - name: size
        in: query
        required: false
        schema:
          default: 200
          description: size in pixels of qrCode image to be generated
          type: integer
    get:
      security:
        - OAuth2:
            - authentication_qr_code
      tags:
        - Authentication
      summary: QrCode (image)
      description: get a basic QrCode image ready to present
      operationId: GetQrCodeImage
      responses:
        '200':
          description: QR code image
          content:
            image/png:
              schema:
                type: string
                format: binary
        '404':
          description: QrCode not found. Maybe authentication is not initiated
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: zewszf1b2l62g
  '/authentications/{transactionToken}/qr-code/verify':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    patch:
      security:
        - OAuth2:
            - authentication_qr_code
      tags:
        - Authentication
      summary: QrCode (verify)
      description: |
        Should be called when requested authentication mode is `QR_CODE_CLIENT`.

        This endpoint uses [Server Sent Events](#section/Server-Sent-Events)
      operationId: VerifyQrCode
      responses:
        '200':
          description: Server sent events stream about the QR code process
          content:
            text/event-stream:
              schema:
                oneOf:
                  - type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/WaitingClientInititationEvent'
                        - $ref: '#/components/schemas/ClientConnectedEvent'
                        - $ref: '#/components/schemas/TransactionPreauthKoEvent'
                        - $ref: '#/components/schemas/TransactionPreauthOkEvent'
                        - $ref: '#/components/schemas/TransactionSessionEvent'
                        - $ref: '#/components/schemas/EndOfStreamEvent'
                      discriminator:
                        propertyName: event
                        mapping:
                          WAITING_CLIENT_INITIATION: '#/components/schemas/WaitingClientInititationEvent'
                          CLIENT_CONNECTED: '#/components/schemas/ClientConnectedEvent'
                          TRANSACTION_PREAUTH_KO: '#/components/schemas/TransactionPreauthKoEvent'
                          TRANSACTION_PREAUTH_OK: '#/components/schemas/TransactionPreauthOkEvent'
                          TRANSACTION_SESSION: '#/components/schemas/TransactionSessionEvent'
                          END_OF_STREAM: '#/components/schemas/EndOfStreamEvent'
                  - type: string
                    format: server-sent-events
              example: |
                id: EVT001
                type: WAITING_CLIENT_INITIATION

                id: EVT002
                type: CLIENT_CONNECTED

                id: EVT003
                type: TRANSACTION_PREAUTH_OK
                data: {"transaction":{"date":"2020-05-18T06:47:22Z","type":{"value":"PAYMENT","label":"Payment"},"externalId":"EXT123456789","externalData":{},"label":"string","description":"string","geolocation":{"latitude":0,"longitude":0},"amount":{"value":1337,"currency":"EUR"},"detailedAccounting":[{"id":"ACO4","date":"2020-05-18T06:47:22Z","accountId":"ACC123","description":"Transfer of 13.37 € from John Doe to Jane Dae","amount":{"value":1337,"currency":"EUR"},"balance":{"value":1337,"currency":"EUR"},"type":"TRANSFER"}]}}

                id: EVT004
                type: TRANSACTION_SESSION
                data: {"session":{"token":"string","status":"AUTH_OK","authentications":[{"mode":"QR_CODE_CLIENT","status":"SUCCESS"}}}

                id: EVT005
                type: END_OF_STREAM
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: l90o17csato6c
  '/authentications/{transactionToken}':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    delete:
      security:
        - OAuth2:
            - authentication_cancel
      tags:
        - Authentication
      summary: NYI Cancel ongoing transaction
      description: Can cancel an ongoing transaction
      operationId: CancelTransaction
      responses:
        '200':
          description: Transaction was cancelled
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: fetfcpyqdz5qe
  '/authentications/{transactionToken}/transaction-code':
    parameters:
      - name: transactionToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    patch:
      security:
        - OAuth2:
            - authentication_transaction_code
      tags:
        - Authentication
      summary: Client Transaction code
      description: |
        Should be called when requested authentication mode is `TRANSACTION_CODE`

        Transaction code available amount will be checked against total amount of transaction.
      operationId: VerifyTransactionCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transactionCode
              properties:
                transactionCode:
                  type: string
                  description: The Client transaction code
                  example: '123456'
      responses:
        '200':
          $ref: '#/components/responses/SuccessfulAuthenticationResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: jc2lde06d791m
  '/keyboard/{transaction-token}':
    parameters:
      - name: transaction-token
        in: path
        description: the transaction token to authenticate
        required: true
        schema:
          $ref: '#/components/schemas/TransactionToken'
    get:
      security:
        - OAuth2:
            - authentication_pincode_client
      parameters:
        - name: font
          in: query
          description: the font to use in images
          schema:
            type: string
        - name: color
          in: query
          description: the text color
          schema:
            type: string
            pattern: '^#[0-9]{6}$'
            example: '#000000'
        - name: width
          in: query
          description: size of the image in pixel
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: fontSize
          in: query
          description: size of the font
          schema:
            type: integer
            minimum: 1
            maximum: 500
      tags:
        - Other
      summary: Generates a secret code input keyboard
      description: |
        **Notice:** a Keyboard can only be used once. If the secret code validation fails, you will have to generate a new Keyboard to make a new attempt.
      operationId: GenerateKeyboard
      responses:
        '200':
          description: returns a keyboard safe to use to input client secret code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PincodeKeyboardData'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 3ofmvwcwncn3j
  /pincode-acceptor/verify:
    get:
      security:
        - OAuth2:
            - authentication_pincode_acceptor
      tags:
        - Other
      summary: Verify the validity of the pincode's acceptor
      description: |
        **Notice:** Verify the validity of the pincode's acceptor whenever needed!
      operationId: VerifyPincodeAcceptor
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - pincode
              properties:
                pincode:
                  type: string
                  example: '1234'
      responses:
        '204':
          description: On successful pincode validation
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 5hgc3f8ec3dmn
  /qr_code:
    put:
      security:
        - OAuth2:
            - qr_code_management
      tags:
        - QRCode
      summary: Generate a QR code
      operationId: GenerateAcceptorQRCode
      requestBody:
        description: QR code information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddQrCodeRequest'
      responses:
        '201':
          description: QR code has been successfully generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddQrCodeResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: yikms3uogz3gj
    get:
      security:
        - OAuth2:
            - qr_code_management
      tags:
        - QRCode
      summary: List QR codes
      operationId: SearchAcceptorQRCodes
      parameters:
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: QR codes found for this search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QrCodeCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: a8r986azutsfc
  '/qr_code/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QrCodeId'
    delete:
      security:
        - OAuth2:
            - qr_code_management
      tags:
        - QRCode
      summary: Remove QR code
      operationId: RemoveAcceptorQRCode
      responses:
        '204':
          description: QR has been successfully removed
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: nkhstz28751wp
  '/qr_code/{id}/content':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QrCodeId'
    get:
      security:
        - OAuth2:
            - qr_code_management
      tags:
        - QRCode
      summary: Get QR code content
      operationId: GetAcceptorQrCodeContent
      responses:
        '200':
          description: QR code content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQrCodeContentResponse'
        '404':
          description: QR code not found
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: l7npzics9vex4
  '/qr_code/{id}/display':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QrCodeId'
      - name: size
        in: query
        required: false
        schema:
          default: 200
          description: size in pixels of qrCode image to be generated
          type: integer
    get:
      security:
        - OAuth2:
            - qr_code_management
      tags:
        - QRCode
      summary: Get QR code image
      operationId: GetAcceptorQrCodeDisplay
      responses:
        '200':
          description: QR code image
          content:
            image/png:
              schema:
                type: string
                format: binary
        '404':
          description: QR code not found
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 7kiabo5ihmayc
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      description: Acceptor API is using OAuth2 protocol to handle authorization. Please refer to the portal documentation for more details.
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/authorize
          tokenUrl: /oauth2/token
          refreshUrl: /oauth2/refresh
          scopes:
            clients_view: View clients information
            accounts_view: View acceptor accounts information
            client_accounts_view: View client accounts information
            cashin: Make cashin transaction
            cashout: Make cashout transaction
            bill_payment: Make bill payment transaction
            payment: Make payment transaction
            reversal: Make reversal transaction
            authentication_pincode_acceptor: Authenticate acceptor with it's pincode
            authentication_pincode_client: Authenticate client with it's pincode
            authentication_pincode_client_ivr: Authenticate client with it's pincode through IVR
            authentication_otp_client: Authenticate client with a one time password
            authentication_nsdt: Authenticate client with NSDT
            authentication_qr_code: Authenticate client with QR Code
            authentication_cancel: Cancel an ongoing transaction
            authentication_transaction_code: Generate a transaction code
            delegate_user_management: Delegate User Management
            kyc_view: View acceptor profile information
            qr_code_management: Manage QR code library
            qr_code_view: Access to existing QR codes in library
        clientCredentials:
          tokenUrl: /oauth2/token
          refreshUrl: /oauth2/refresh
          scopes:
            clients_view: View clients information
            accounts_view: View acceptor accounts information
            client_accounts_view: View client accounts information
            cashin: Make cashin transaction
            cashout: Make cashout transaction
            bill_payment: Make bill payment transaction
            payment: Make payment transaction
            reversal: Make reversal transaction
            authentication_pincode_acceptor: Authenticate acceptor with it's pincode
            authentication_pincode_client: Authenticate client with it's pincode
            authentication_pincode_client_ivr: Authenticate client with it's pincode through IVR
            authentication_otp_client: Authenticate client with a one time password
            authentication_nsdt: Authenticate client with NSDT
            authentication_qr_code: Authenticate client with QR Code
            authentication_cancel: Cancel an ongoing transaction
            authentication_transaction_code: Generate a transaction code
            delegate_user_management: Delegate User Management
            kyc_view: View acceptor profile information
            qr_code_management: Manage QR code library
            qr_code_view: Access to existing QR codes in library
        password:
          tokenUrl: /oauth2/token
          refreshUrl: /oauth2/refresh
          scopes:
            clients_view: View clients information
            accounts_view: View acceptor accounts information
            client_accounts_view: View client accounts information
            cashin: Make cashin transaction
            cashout: Make cashout transaction
            bill_payment: Make bill payment transaction
            payment: Make payment transaction
            reversal: Make reversal transaction
            authentication_pincode_acceptor: Authenticate acceptor with it's pincode
            authentication_pincode_client: Authenticate client with it's pincode
            authentication_pincode_client_ivr: Authenticate client with it's pincode through IVR
            authentication_otp_client: Authenticate client with a one time password
            authentication_nsdt: Authenticate client with NSDT
            authentication_qr_code: Authenticate client with QR Code
            authentication_cancel: Cancel an ongoing transaction
            authentication_transaction_code: Generate a transaction code
            delegate_user_management: Delegate User Management
            kyc_view: View acceptor profile information
            qr_code_management: Manage QR code library
            qr_code_view: Access to existing QR codes in library
  responses:
    ErrorResponse:
      description: Request could not be processed
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                $ref: '#/components/schemas/Error'
    DeviceAssociationResponse:
      description: Device association succeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Key'
    SuccessfulPreauthResponse:
      description: Preauth successful
      content:
        application/json:
          schema:
            type: object
            required:
              - session
              - transaction
            properties:
              session:
                $ref: '#/components/schemas/TransactionSession'
              transaction:
                $ref: '#/components/schemas/TransactionAccounting'
    SuccessfulTransactionResponse:
      description: 'Request successful, transaction was made'
      content:
        application/json:
          schema:
            type: object
            required:
              - transaction
            properties:
              transaction:
                $ref: '#/components/schemas/TransactionAccounting'
    PendingClientAuthenticationResponse:
      description: Pending client identification
      content:
        application/json:
          schema:
            type: object
            required:
              - session
            properties:
              session:
                $ref: '#/components/schemas/TransactionSession'
    ForbiddenErrorResponseWithBlockingVelocityRules:
      description: Request client was not allowed to make this action
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ForbiddenError'
              - type: object
                properties:
                  blockingVelocityRules:
                    type: array
                    items:
                      $ref: ./BlockingVelocityRule.yaml
    SuccessfulAuthenticationResponse:
      description: Authentication successful
      content:
        application/json:
          schema:
            type: object
            required:
              - session
            properties:
              session:
                $ref: '#/components/schemas/TransactionSession'
  schemas:
    Phone:
      type: string
      description: |
        Phone number in international format (E.164)

        (without plus sign, dashes or spaces)
      example: '33612354678'
      pattern: '^[0-9]+$'
      x-stoplight:
        id: t2j1sivyk8se9
    Client:
      type: object
      required:
        - id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/ClientId'
            - readOnly: true
      x-stoplight:
        id: yx5hnz5f1aef7
    InputId:
      type: string
      description: KYC field identifier
      example: FIELD123
      x-stoplight:
        id: 1ozv6c2df52gm
    PossibleValueCollection:
      type: object
      properties:
        inputId:
          $ref: '#/components/schemas/InputId'
        userInput:
          type: string
          description: 'Current user input, to be completed'
        possibleValues:
          type: array
          description: List of values found for auto-completion
          items:
            $ref: '#/components/schemas/PossibleValue'
      x-stoplight:
        id: 11c5duldjfuoz
    DeviceId:
      type: string
      description: Unique terminal identifier
      example: A12B3C4D5E
      x-stoplight:
        id: euc7p47uu1lrh
    ActivationCode:
      type: string
      description: Device activation one-time code
      minLength: 4
      maxLength: 4
      example: '1234'
      x-stoplight:
        id: xntvs14xwoqh3
    Identity:
      type: object
      description: An Identity
      x-stoplight:
        id: fax65r2xf81hp
      required:
        - id
        - legalType
        - kyc
        - role
        - creationDate
        - updateDate
      properties:
        id:
          $ref: ./IdentityId.yaml
        legalType:
          $ref: ./LegalType.yaml
        kyc:
          $ref: ./Kyc.yaml
        profileId:
          $ref: ./ProfileId.yaml
        externalId:
          $ref: ./ExternalId.yaml
        role:
          $ref: '#/components/schemas/IdentityRole'
        creationDate:
          $ref: ./DateTime.yaml
        updateDate:
          $ref: ./DateTime.yaml
    AccountCollection:
      description: Sorted and paginated list of accounts
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of accounts
              items:
                $ref: '#/components/schemas/Account'
      x-stoplight:
        id: 0luiddjkrswfo
    ClientId:
      type: string
      description: Client identifier
      example: CLI123
      x-stoplight:
        id: m4sudtgjokuq3
    AccountingEntryId:
      type: string
      description: Skaleet accounting entry id
      example: ACO4
      x-stoplight:
        id: 05hw938af813a
    AccountingEntryType:
      type: string
      enum:
        - TRANSFER
        - FEE
        - COMMISSION
        - TAX
        - DISCOUNT
        - INTEREST
      x-stoplight:
        id: afuvntlhwysob
    TransactionId:
      type: string
      description: Skaleet transaction id
      example: TRX123
      x-stoplight:
        id: y9v8xjkkqbl4m
    TransactionType:
      type: string
      readOnly: true
      description: Transaction type
      enum:
        - ACCOUNT_TO_ACCOUNT
        - ON_US_DIRECT_DEBIT
        - ACCOUNT_TO_EXTERNAL_TRF
        - ACCOUNT_TO_TRANSIT
        - ADJUSTMENT
        - BANK_TO_WALLET
        - BLOCK_ACCOUNT
        - BUY_DEPOSIT
        - CARD
        - CASH_TO_EXTERNAL_TRF
        - CASHIN
        - CASHIN_TO_TRANSIT
        - CASHOUT
        - CASHOUT_FROM_EXTERNAL_TRF
        - CASHOUT_FROM_TRANSIT
        - CLOSE_ACCOUNT
        - DEPOSIT
        - DISTRIBUTOR_POSTING
        - EXTERNAL
        - EXTERNAL_TO_MONEYPOT
        - ETM_SCREENING
        - ETM_SCREENING_SUCCESS
        - ETM_SCREENING_FAIL
        - ETM_SCREENING_FAIL_TO_SUCCESS
        - EXTERNAL_TRF_TO_ACCOUNT
        - EXTERNAL_TRF_WITHDRAW
        - FEES_PAYMENT
        - INVOICE_GENERATION
        - MAINTENANCE_PAYMENT
        - ONLINE_PAYMENT
        - OPEN_ACCOUNT
        - OVERBALANCE
        - PAYBILL_ACCOUNT
        - PAYBILL_CASH
        - PAYMENT
        - POSTING
        - RECHARGE_BALANCE
        - RECHARGE_CREDIT_CARD
        - REVERSAL
        - SALARY_DISBURSEMENT
        - SALARY_TO_ACCOUNT
        - SELL_DEPOSIT
        - SETTLEMENT_TO_ACCOUNT
        - SETTLEMENT_TO_CASH
        - TRANSIT_TO_ACCOUNT
        - UNBLOCK_ACCOUNT
        - WALLET_TO_BANK
        - WALLET_TO_BANK_ARCHIVE
        - MAD_APPROVAL
        - MAD_REFUSAL
        - MAD_CREATION
      x-stoplight:
        id: 2hf27gv3pukuz
    TransactionExternalId:
      type: string
      description: Client custom data (external) for TransactionId
      example: EXT123456789
      x-stoplight:
        id: z0visswygde54
    AccountingEntryCollection:
      description: Sorted and paginated list of accounting entries
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: 'Array of accounting entries (srcAccount, dstAccount, amount)'
              items:
                $ref: '#/components/schemas/AccountingEntry'
      x-stoplight:
        id: gwkotiwiumpvm
    ClientIdentifier:
      oneOf:
        - $ref: '#/components/schemas/IdIdentifier'
        - $ref: '#/components/schemas/PhoneIdentifier'
        - $ref: '#/components/schemas/IdNumberIdentifier'
        - $ref: '#/components/schemas/ExternalIdIdentifier'
      required:
        - type
        - value
      properties:
        type:
          type: string
        value:
          type: string
      discriminator:
        propertyName: type
        mapping:
          ID: '#/components/schemas/IdIdentifier'
          PHONE: '#/components/schemas/PhoneIdentifier'
          ID_NUMBER: '#/components/schemas/IdNumberIdentifier'
          EXTERNAL_ID: '#/components/schemas/ExternalIdIdentifier'
      x-stoplight:
        id: mkga4m0v68195
    TransactionRequest:
      type: object
      properties:
        location:
          $ref: ./GeoLocation.yaml
        externalId:
          $ref: '#/components/schemas/TransactionExternalId'
        externalData:
          $ref: '#/components/schemas/ExternalData'
      x-stoplight:
        id: u48wld3vt1dud
    TransactionToken:
      type: string
      description: Transaction session identifier
      x-stoplight:
        id: dxjtazico0nid
    Email:
      type: string
      format: email
      example: gio.fuerte@email.com
      x-stoplight:
        id: y1b2ygw7d8vqp
    DelegateUser:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: Id of the delegate user
        email:
          $ref: '#/components/schemas/Email'
        contactPhone:
          $ref: '#/components/schemas/Phone'
        lastName:
          type: string
          example: Fuerte
        firstName:
          type: string
          example: Gio
      x-stoplight:
        id: uck41jmtfq8p8
    BillerItem:
      oneOf:
        - $ref: '#/components/schemas/BillerCategory'
        - $ref: '#/components/schemas/Biller'
      discriminator:
        propertyName: type
        mapping:
          CATEGORY: '#/components/schemas/BillerCategory'
          BILL_ISSUER: '#/components/schemas/Biller'
      x-stoplight:
        id: sj0ovh4exxwbo
    PaybillTransactionRequest:
      oneOf:
        - $ref: '#/components/schemas/PaybillAccountTransactionRequest'
        - $ref: '#/components/schemas/PaybillCashTransactionRequest'
      discriminator:
        propertyName: paybillType
        mapping:
          ACCOUNT: '#/components/schemas/PaybillAccountTransactionRequest'
          CASH: '#/components/schemas/PaybillCashTransactionRequest'
      x-stoplight:
        id: su0tzq4kt8bm0
    Input:
      oneOf:
        - $ref: '#/components/schemas/TextInput'
        - $ref: '#/components/schemas/AmountInput'
        - $ref: '#/components/schemas/BoolInput'
        - $ref: '#/components/schemas/DateInput'
        - $ref: '#/components/schemas/DateTimeInput'
        - $ref: '#/components/schemas/DurationInput'
        - $ref: '#/components/schemas/EmailInput'
        - $ref: '#/components/schemas/FileInput'
        - $ref: '#/components/schemas/InputCollection'
        - $ref: '#/components/schemas/IntInput'
        - $ref: '#/components/schemas/IpInput'
        - $ref: '#/components/schemas/SelectInput'
        - $ref: '#/components/schemas/MultiSelectInput'
        - $ref: '#/components/schemas/NumberInput'
        - $ref: '#/components/schemas/PercentInput'
        - $ref: '#/components/schemas/PasswordInput'
        - $ref: '#/components/schemas/PhoneInput'
        - $ref: '#/components/schemas/RateInput'
        - $ref: '#/components/schemas/SelectWithAmountInput'
      discriminator:
        propertyName: type
        mapping:
          TEXT: '#/components/schemas/TextInput'
          AMOUNT: '#/components/schemas/AmountInput'
          BOOL: '#/components/schemas/BoolInput'
          DATE: '#/components/schemas/DateInput'
          DATE_TIME: '#/components/schemas/DateTimeInput'
          DURATION: '#/components/schemas/DurationInput'
          EMAIL: '#/components/schemas/EmailInput'
          FILE: '#/components/schemas/FileInput'
          COLLECTION: '#/components/schemas/InputCollection'
          INT: '#/components/schemas/IntInput'
          IP: '#/components/schemas/IpInput'
          SELECT: '#/components/schemas/SelectInput'
          MULTI_SELECT: '#/components/schemas/MultiSelectInput'
          NUMBER: '#/components/schemas/NumberInput'
          PERCENT: '#/components/schemas/PercentInput'
          PASSWORD: '#/components/schemas/PasswordInput'
          PHONE: '#/components/schemas/PhoneInput'
          RATE: '#/components/schemas/RateInput'
          SELECT_WITH_AMOUNT: '#/components/schemas/SelectWithAmountInput'
      x-stoplight:
        id: cbn1v5c9zrygr
    TransactionSession:
      type: object
      required:
        - token
        - status
      properties:
        token:
          $ref: '#/components/schemas/TransactionToken'
        status:
          $ref: '#/components/schemas/TransactionSessionStatus'
        authentications:
          type: array
          items:
            $ref: '#/components/schemas/Authentication'
      x-stoplight:
        id: rmgeo429hstk8
    TransactionAccounting:
      allOf:
        - $ref: '#/components/schemas/Transaction'
        - type: object
          required:
            - detailedAccounting
          properties:
            detailedAccounting:
              type: array
              items:
                $ref: '#/components/schemas/AccountingEntry'
      x-stoplight:
        id: a4ym6biw605vc
    PincodeSubmission:
      type: object
      required:
        - id
        - value
      properties:
        id:
          $ref: '#/components/schemas/PincodeKeyboardId'
        value:
          $ref: '#/components/schemas/PincodeArray'
      x-stoplight:
        id: aq6cl5dc58zz8
    CallStatusEvent:
      allOf:
        - $ref: '#/components/schemas/ServerSentEvent'
        - type: object
          required:
            - data
          properties:
            event:
              type: string
              enum:
                - CALL_STATUS
            data:
              type: object
              format: json
              description: Event data encoded in json
              example:
                status: RINGING
              required:
                - status
              properties:
                status:
                  $ref: '#/components/schemas/CallStatus'
      x-stoplight:
        id: mci8huied4z8z
    TransactionSessionEvent:
      allOf:
        - $ref: '#/components/schemas/ServerSentEvent'
        - type: object
          required:
            - data
          properties:
            event:
              type: string
              enum:
                - TRANSACTION_SESSION
            data:
              $ref: '#/components/schemas/TransactionSession'
      x-stoplight:
        id: lpl5it9wo8ndy
    NSDTTokenEvent:
      allOf:
        - $ref: '#/components/schemas/ServerSentEvent'
        - type: object
          required:
            - data
          properties:
            event:
              type: string
              enum:
                - NSDT_TOKEN
            data:
              type: object
              format: json
              description: Event data encoded in json
              example:
                token: f0d40;f3d30;f8d30;f8d30;f7d30;f2d30;f4d30;f3d30;f2d30;f3d30;f1d30;f1d30;f2d30;f4d30;f6d30;f2d30;f8d30;f1d30;f7d30;f1d30
              required:
                - token
              properties:
                token:
                  $ref: '#/components/schemas/NSDTToken'
      x-stoplight:
        id: ellohccndxkla
    EndOfStreamEvent:
      allOf:
        - $ref: '#/components/schemas/ServerSentEvent'
        - type: object
          properties:
            event:
              type: string
              enum:
                - END_OF_STREAM
      x-stoplight:
        id: wx5gtssgnkkdi
    ErrorEvent:
      allOf:
        - $ref: '#/components/schemas/ServerSentEvent'
        - type: object
          required:
            - data
          properties:
            event:
              type: string
              enum:
                - ERROR
            data:
              $ref: '#/components/schemas/Error'
      x-stoplight:
        id: 6k36ilojnngxf
    GetQrCodeContentResponse:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          description: QR code content
          example: 00020101021102170410033000000428726440020fr.tagpay.merchantId01163914974109498813520459995303840540155802FR5905Agent6015Boulogne-Billan630434E0
      x-stoplight:
        id: h3taicvsx4hn7
    WaitingClientInititationEvent:
      allOf:
        - $ref: '#/components/schemas/ServerSentEvent'
        - type: object
          properties:
            event:
              type: string
              enum:
                - WAITING_CLIENT_INITIATION
      x-stoplight:
        id: svxoi7ziphoyn
    ClientConnectedEvent:
      allOf:
        - $ref: '#/components/schemas/ServerSentEvent'
        - type: object
          properties:
            event:
              type: string
              enum:
                - CLIENT_CONNECTED
            data:
              type: object
              format: json
              description: Event data encoded in json
              example:
                client:
                  id: CLI354
              properties:
                client:
                  $ref: '#/components/schemas/Client'
      x-stoplight:
        id: p8h59ase5rd07
    TransactionPreauthKoEvent:
      allOf:
        - $ref: '#/components/schemas/ServerSentEvent'
        - type: object
          properties:
            event:
              type: string
              enum:
                - TRANSACTION_PREAUTH_KO
      x-stoplight:
        id: 4vrsg5rb0xllp
    TransactionPreauthOkEvent:
      allOf:
        - $ref: '#/components/schemas/ServerSentEvent'
        - type: object
          properties:
            event:
              type: string
              enum:
                - TRANSACTION_PREAUTH_OK
            data:
              type: object
              format: json
              description: Event data encoded in json
              required:
                - transaction
              properties:
                transaction:
                  $ref: '#/components/schemas/TransactionAccounting'
      x-stoplight:
        id: w0u2i04kwvqzk
    PincodeKeyboardData:
      type: object
      required:
        - id
        - value
      properties:
        id:
          $ref: '#/components/schemas/PincodeKeyboardId'
        images:
          type: array
          description: 'an array of 16 images, each representing either nothing or a digit'
          minItems: 16
          maxItems: 16
          example:
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjK/v78/Pz9fX1+fn5/f399/f38fHx////9xjtetAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACfSURBVDiN7dQ/C4JQFAXwq4k8N/sSkltrW6ub4KJb0OQWbW0iRLRF2ovzbbtvDM6davSsPx7v/oErsubJxY5l0SI/y633LZUEmj2TXZCJSYfNFU8m535wgFGbgzdkxMwlBk5cUrxpP0Fw5OJWwMArkAq1IXccDMnwIKIzMN6UOugL/afCpIvYEonDFl6sH1eq1EwkKXwjVL6zyP/FvHwfnhou18ClDQkAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjIfHx+/v79fX19/f3/f39+fn58/Pz////++JpndAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACDSURBVDiNY2AQxA4EGHADXHKMozIUy3CUTavALhM5c+bMAGwyLECJmVOwybDNnMIycxo2mc6ZBQyVMxuwyEQCRTsRFiHJWM5UYNCcaYBFJhMsk4BFZuZMBgZOPDITyJDBZhpuF+B2dSVOn3riDB3cIYo7FnDHHJ7YRgWjMtSXwVnyAQB+9zaCVQB/9wAAAABJRU5ErkJggg==
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjJ/f38/Pz8fHx+fn5/f39+/v79fX1////+aYKOoAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACoSURBVDiN7dQxDwFBEAXg51w4Hf9Aq9ModNuhU0i0EkSmU2i2u1YnESvv35qrkLytKG/aLzP7ZooFRrqGyFfOOq38LFVMGyllJDlV0nfgXcmV+yWfSqKPmrzHfYgRWHEshC4DnmVP8J6dfKf2FEo8W9d4E9Jr9pFSGpnkNBR2XGhBk3qdEb3p1oJfJ8h9LhUfEDJvQh+UFA4pKMHMTjWkfFcr/5fsz/cCMz82BjZhFdsAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjKfn58/Pz/f399fX18fHx9/f3+/v7////+7iz3EAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAABkSURBVDiN7dShDcAwDERRt8ByWDtOF4gUFppRukUU5m0rtaQgnxnm0wdPOpFz3iEc2bYkQMw7yE2iTmIojUS9gJhfIG2kuahnEPMK0obMRUsG2b2CJH/rMfIp7RMr/5bECz7fA5etMI9vuUYuAAAAAElFTkSuQmCC
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjLf39+fn58/Pz9fX1+/v79/f38fHx/////bxromAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACkSURBVDiN7ZShDoMwFEUfCSTMwR8gENTN4rA4LI7MENzsHMEsc8vCxP3bvdbAkvvUJrmyp6+9p6IiOU8mdiwWHeRncp8wzowk0KyMtJ6gIaRGGTucCXG6v0VBCCBywpOQKcwMtIG/hzXQZaCkpgvwsk3f3NS6p0YnPe3m1OdhmM5KmKkLp7GZW2hwJWTxrTehHUn9G1TMR5ILRqHkOwf5PzF/vg/NyDgAvn+1IQAAAABJRU5ErkJggg==
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjKfn58/Pz8fHx9/f3/f39+/v79fX1////+j2q/UAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACbSURBVDiN7dQ9CoNAEAXgCRGjnd7ALqRLm24rwc7WTrDaAySwXdp0ISGBd1v/ml15U2nptB+P2ZmBFcl5ZaKXZoddVkvywN0wiSyAjkk8AP6GSIPuaFETcXjKDS2RszWS4q28uqKZuVfBJQKuXEp82DzTrC2XEjBcHL5C5eT1D+XiR3xJgki4659weY1XoHtzqlhVFrXL9qL+fD2XjjDB7uM8UwAAAABJRU5ErkJggg==
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjK/v78/Pz9fX1+fn59/f3/f398fHx////9YH2UiAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAB+SURBVDiN7dQhD0BQFMXxa8ZofANVUzVVUzVVU19TNTM259sy6d3tnkT0r7/t7bwXnkhulwmPWfDLW8HT+pHcJQ6DLREOsq3FRMShsiX2DtOy4CQyoiPiMNsSYhNbIuxEUn+AkhoFETVNSY+GSOm9jRZ1HSWAENH98r3Qn+8C+nQomSj77pIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjKfn59fX1/f39+/v79/f38/Pz8fHx////8Pkci4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACWSURBVDiNY2AQxA4EGHADXHKMozKUynDMBAFsMuw4ZdhwyrDOTMBhDwtOmc6ZBjhkLGeqerphlckEOcADm0wkSGYqNhkVF4vmmQi70EInc6YCDpnOmQ44ZDhnTiBZpnNmABaZEM8GoAsSsMhoznRnnjmzAYtMJ8inkxmwyLB7AmUSsMkwtEVOUWfAKoMKRmWoL4Oz5AMA6wcwRTqhe+MAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAG1BMVEUAAAAyMjK/v7+fn58/Pz/f398fHx9fX1////9tbpBCAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAABMSURBVDiNY2AQxA4EGHADXHKMozJUkKnowCHDFoFLJrUDhwxLBA4ZFosOHDIcHbhlQnDJNCXgkGEqYMDlNoZRGbwyyGBUhvoyOEs+AJjIIDEL67UJAAAAAElFTkSuQmCC
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjJ/f38fHx8/Pz+fn5/f39+/v79fX1////9VClHYAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAClSURBVDiN7dQtD8IwEMbxI10gOPgGWBwCSOpm51AkOMJLyDkSDHNzCw7V9fm23CTJcwrkzv7S9H8VFZnzmYk/no0G+V1avZZUtgAyk6AmKIlMkEONHZGIhcQbkyVWTtshedXabfTEJVnamUnfjMTlUigaKo28cGf3WHXEkUgNkSnezqb8TGWvU9F7xshr3lb0+3RsH0sGHlTCHk+h8j2D/F/cn+8DWgo2STo2HycAAAAASUVORK5CYII=
          items:
            type: string
            format: binary
            description: a transparent PNG image representing a digit or empty
      x-stoplight:
        id: v5xzpropsazzf
    AddQrCodeRequest:
      type: object
      required:
        - description
        - targetAccountId
        - static
      properties:
        description:
          type: string
          description: QR code's description
        paymentReference:
          type: string
          description: Label given to the transactions initiated with this QR code.
          maxLength: 25
        targetAccountId:
          type: integer
          description: Current account's ID on which the funds will be received
          example: 42
        amount:
          type: integer
          description: Transaction's amount
          example: 58
        static:
          type: boolean
          description: 'If true, the QR code will be reusable until it is deleted or its expiration date has been reached. If false, the QR code will be deleted after the transaction or after its expiration date has been reached'
          example: false
        expirationDate:
          type: string
          format: date-time
          description: 'QR code''s expiration date. If null, it will never be automatically revoked. Expected format is Y-m-d\TH:i:sP'
      x-stoplight:
        id: xxw1wb1zgn1zc
    AddQrCodeResponse:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/QrCodeId'
      x-stoplight:
        id: ww2t1nbyvlcn6
    QrCodeCollection:
      description: Sorted and paginated list of products
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: List of all unexpired QR codes in which the target account belongs to the client
              items:
                $ref: '#/components/schemas/QrCode'
      x-stoplight:
        id: kak6x3d6j2dfr
    QrCodeId:
      type: string
      description: QR code's ID
      example: '1234'
      x-stoplight:
        id: uhzj9t69t92d2
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: error code
          example: 1234
        message:
          type: string
          description: 'This is an error message, it can be shown to the end user'
          example: something went wrong because requirement X was not met.
        hint:
          type: string
          description: 'More technical message about the error, to ease debugging of what went wrong. It should not be shown to the end user'
          example: '"myAttribute" must be a string, int given'
      x-stoplight:
        id: yowsqzd847w3n
    Key:
      type: object
      required:
        - key-id
        - key-secret
      properties:
        key-id:
          type: string
          description: API client ID associated to the terminal
          minLength: 32
          maxLength: 64
          pattern: '^[a-zA-Z0-9]{32,64}$'
          example: 55a2ab136fb230655e8d37453810a3ca
        key-secret:
          type: string
          description: API client secret
          minLength: 64
          maxLength: 64
          pattern: '^[a-zA-Z0-9]{64}$'
          example: ce284270a902fe770e47415903af0908160cb7d3584470e7d364e619affa2797
      x-stoplight:
        id: r8mu861nrydl7
    ForbiddenError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 12345
            message: Client is not allowed to make this action
      x-stoplight:
        id: tzdxiey12gufo
    PossibleValue:
      type: object
      required:
        - value
        - label
      properties:
        value:
          type: string
          description: The possible value
          example: Value123
        label:
          type: string
          description: The value translation
      x-stoplight:
        id: p6uhd26exeveq
    IdentityRole:
      type: string
      description: An Identity can be of type MERCHANT or AGENT
      readOnly: true
      enum:
        - MERCHANT
        - AGENT
      x-stoplight:
        id: u1313snsmdy02
    Collection:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
        count:
          type: integer
          description: the number of elements returned in `items` array
          minimum: 0
        total:
          type: integer
          description: the total number of objects in collection
          minimum: 0
        offset:
          type: integer
          description: Pagination start (from 0)
          minimum: 0
          default: 0
        limit:
          type: integer
          description: Number of results to display (default 20)
          minimum: 0
          maximum: 100
          default: 20
        sort:
          type: string
          description: Field to define sort order
          default: id
      x-stoplight:
        id: gagusoejrf7qo
    Account:
      type: object
      x-stoplight:
        id: wru31edr1v3rg
      required:
        - id
        - balance
        - availableBalance
        - status
        - label
        - createdAt
        - type
      properties:
        id:
          allOf:
            - $ref: ./AccountId.yaml
            - readOnly: true
        balance:
          allOf:
            - $ref: ./Amount.yaml
            - readOnly: true
        availableBalance:
          allOf:
            - $ref: ./Amount.yaml
            - readOnly: true
        status:
          $ref: ./AccountStatus.yaml
        label:
          type: string
          description: The account label
          example: 'Current account #123546'
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        externalId:
          $ref: ./AccountExternalId.yaml
        iban:
          allOf:
            - $ref: ./IBAN.yaml
            - readOnly: true
        bic:
          allOf:
            - $ref: ./BIC.yaml
            - readOnly: true
        lastUsedAt:
          type: string
          format: date-time
          readOnly: true
        deletedAt:
          type: string
          format: date-time
          readOnly: true
        type:
          $ref: '#/components/schemas/AccountType'
        merchant:
          type: string
          description: brand's merchant for dedicated account
          readOnly: true
    AccountingEntry:
      type: object
      required:
        - accountId
        - description
        - amount
        - balance
        - type
      properties:
        id:
          $ref: '#/components/schemas/AccountingEntryId'
        date:
          type: string
          format: date-time
        accountId:
          $ref: ./AccountId.yaml
        description:
          type: string
          example: Transfer of 13.37 € from John Doe to Jane Dae
        amount:
          $ref: ./Amount.yaml
        balance:
          $ref: ./Amount.yaml
        type:
          $ref: '#/components/schemas/AccountingEntryType'
        transactionId:
          $ref: '#/components/schemas/TransactionId'
        accountOwner:
          $ref: '#/components/schemas/AccountOwner'
      x-stoplight:
        id: wqflfd5m5ghsw
    IdIdentifier:
      allOf:
        - $ref: '#/components/schemas/ClientIdentifier'
        - type: object
          properties:
            type:
              type: string
              enum:
                - ID
            value:
              $ref: '#/components/schemas/ClientId'
      x-stoplight:
        id: qu8uz5j3vo8r5
    PhoneIdentifier:
      allOf:
        - $ref: '#/components/schemas/ClientIdentifier'
        - type: object
          properties:
            type:
              type: string
              enum:
                - PHONE
            value:
              $ref: '#/components/schemas/Phone'
      x-stoplight:
        id: y5w3kfze7ib7t
    IdNumberIdentifier:
      allOf:
        - $ref: '#/components/schemas/ClientIdentifier'
        - type: object
          properties:
            type:
              type: string
              enum:
                - ID_NUMBER
      x-stoplight:
        id: u42d3tycxt2pr
    ExternalIdIdentifier:
      allOf:
        - $ref: '#/components/schemas/ClientIdentifier'
        - type: object
          properties:
            type:
              type: string
              enum:
                - EXTERNAL_ID
            value:
              type: string
              example: EXT123
      x-stoplight:
        id: x4g3dlg9bu0af
    ExternalData:
      type: object
      description: Set of key-value pairs that you can attach to an object. This can be useful for storing your additional information about the object in a structured format.
      x-stoplight:
        id: a1jly00dwgvjy
    BillerCategory:
      type: object
      description: Category of bill issuers
      required:
        - id
        - name
        - type
        - children
      properties:
        id:
          type: string
          description: Bill category identifier
        name:
          type: string
          description: Bill category name
        type:
          $ref: '#/components/schemas/BillerItemType'
        children:
          type: array
          items:
            $ref: '#/components/schemas/BillerItem'
        logoUrl:
          type: string
          description: Logo of the bill Category
      x-stoplight:
        id: mj193b9l0rjjq
    Biller:
      type: object
      description: Bill issuer
      required:
        - id
        - name
        - type
      properties:
        id:
          $ref: '#/components/schemas/BillerId'
        name:
          type: string
          description: Displayable name of bill issuer
        type:
          $ref: '#/components/schemas/BillerItemType'
        logoUrl:
          type: string
          description: Logo of bill issuer
      x-stoplight:
        id: c0imralz6lgmk
    PaybillAccountTransactionRequest:
      allOf:
        - type: object
          required:
            - paybillType
            - billIssuerId
            - clientIdentifier
          properties:
            paybillType:
              $ref: '#/components/schemas/PaybillType'
            billIssuerId:
              $ref: '#/components/schemas/BillerId'
            clientIdentifier:
              $ref: '#/components/schemas/ClientIdentifier'
        - $ref: '#/components/schemas/TransactionRequest'
      x-stoplight:
        id: li0fxreko31lr
    PaybillCashTransactionRequest:
      allOf:
        - type: object
          required:
            - paybillType
            - billIssuerId
          properties:
            paybillType:
              $ref: '#/components/schemas/PaybillType'
            billIssuerId:
              $ref: '#/components/schemas/BillerId'
            clientIdentifier:
              $ref: '#/components/schemas/ClientIdentifier'
        - $ref: '#/components/schemas/TransactionRequest'
      x-stoplight:
        id: 9rkeltjiie2nn
    TextInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
      x-stoplight:
        id: xzuxe7h8b49r1
    AmountInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              $ref: ./Amount.yaml
            currencies:
              type: array
              items:
                $ref: ./CurrencyAlpha.yaml
      x-stoplight:
        id: 3iufputk5hmdi
    BoolInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: boolean
      x-stoplight:
        id: apzsxbhhudl9b
    DateInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: '20180717'
            format:
              type: string
              description: 'Possible formats are the ones accepted by the [date function (php)](https://php.net/manual/en/function.date.php)'
              example: Ymd
      x-stoplight:
        id: cv6xm8s8jsrue
    DateTimeInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: '20180717162042'
            format:
              type: string
              description: 'Possible formats are the ones accepted by the [date function (php)](https://php.net/manual/en/function.date.php)'
              example: YmdHis
      x-stoplight:
        id: ndes6f10xjpwq
    DurationInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              $ref: ./Duration.yaml
            periodicities:
              type: array
              items:
                $ref: ./Periodicity.yaml
      x-stoplight:
        id: jpqide55a0s0s
    EmailInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
              format: email
      x-stoplight:
        id: w5gib1ztnilj6
    FileInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: object
              properties:
                content:
                  type: string
                  format: byte
                name:
                  type: string
                  example: fileName.txt
                type:
                  type: string
                  example: txt
                size:
                  type: integer
            maxsize:
              type: integer
            acceptedtypes:
              type: array
              items:
                type: string
              example:
                - txt
                - csv
                - xls
            minimumPageCount:
              type: integer
              description: Expected minimum page count
            maximumPageCount:
              type: integer
              description: Expected maximum page count
      x-stoplight:
        id: kle5blugsd2kq
    InputCollection:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            inputs:
              type: array
              items:
                $ref: '#/components/schemas/Input'
      x-stoplight:
        id: rjmd5c770oe0o
    IntInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: integer
      x-stoplight:
        id: evu26e4lbp19m
    IpInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
      x-stoplight:
        id: mgu8zevv5em1t
    SelectInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: someValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/Option'
      x-stoplight:
        id: 9zj83ai55utgo
    MultiSelectInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: array
              items:
                type: string
              example:
                - someValue
                - anotherValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/Option'
      x-stoplight:
        id: kuyupbctmmtyv
    NumberInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: number
              format: float
      x-stoplight:
        id: r29zwh4say6dt
    PercentInput:
      allOf:
        - $ref: '#/components/schemas/NumberInput'
      x-stoplight:
        id: xzm5ntnvlyd4i
    PasswordInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
      x-stoplight:
        id: pgcil12yqspt7
    PhoneInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
              example: '33612345678'
              description: Phone number in international format (MSISDN)
      x-stoplight:
        id: zvy4cpqn33ceh
    RateInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            inputs:
              type: object
              required:
                - value
                - periodicity
              properties:
                value:
                  $ref: '#/components/schemas/NumberInput'
                periodicity:
                  $ref: '#/components/schemas/SelectInput'
      x-stoplight:
        id: 00v5zvpwci6y1
    SelectWithAmountInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: someValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/OptionWithAmount'
      x-stoplight:
        id: um1qjr4m95i67
    TransactionSessionStatus:
      type: string
      description: Transaction session status
      enum:
        - AUTH_PENDING
        - AUTH_OK
        - AUTH_KO
        - TRANSACTION_OK
        - CANCELLED
      x-stoplight:
        id: 8ikcjm9omzl3h
    Authentication:
      type: object
      required:
        - mode
        - status
      properties:
        mode:
          $ref: '#/components/schemas/AuthenticationMode'
        status:
          $ref: '#/components/schemas/AuthenticationStatus'
        fallback:
          $ref: '#/components/schemas/AuthenticationMode'
      x-stoplight:
        id: vqv121jmge60l
    Transaction:
      type: object
      required:
        - id
        - date
        - type
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        date:
          type: string
          format: date-time
        type:
          type: object
          required:
            - value
            - label
          properties:
            value:
              $ref: '#/components/schemas/TransactionType'
            label:
              type: string
              example: Transfer to account
        externalId:
          $ref: '#/components/schemas/TransactionExternalId'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        label:
          description: User defined transaction label
          type: string
        description:
          description: Transaction description
          type: string
        geolocation:
          $ref: ./GeoLocation.yaml
        amount:
          $ref: ./Amount.yaml
      x-stoplight:
        id: 77vdxmowrwcv9
    PincodeKeyboardId:
      type: string
      description: Pincode keyboard identifier
      example: 16fd2706-8baf-433b-82eb-8c7fada847da
      x-stoplight:
        id: jlzgcjhzewm19
    PincodeArray:
      type: array
      description: ordered list of positions selected by final client on virtual keyboard
      items:
        type: integer
      example:
        - 1
        - 12
        - 14
        - 3
      x-stoplight:
        id: fw66fmt3wdrzt
    ServerSentEvent:
      type: object
      format: text
      required:
        - id
        - event
      properties:
        id:
          type: string
          example: EVT123
          description: Event id
        event:
          type: string
          description: Event type
      x-stoplight:
        id: 7i636ike3itzl
    CallStatus:
      type: string
      description: |
        - `RINGING` : User phone number was called, it has not picked up yet
        - `CONNECTED` : User picked up.
        - `SUCCESS` : Authentication was successfully validated.
        - `ANSWERING_MACHINE` : User answering machine was detected by the server
        - `HANG_UP` : User hanged up before server was able to validate the authentication
        - `TIMEOUT` : Server hanged up
        - `ERROR` : Authentication failed
        - `DISCONNECTED` : Call is disconnected, user or server hung up.
      enum:
        - RINGING
        - CONNECTED
        - SUCCESS
        - ANSWERING_MACHINE
        - HANG_UP
        - TIMEOUT
        - ERROR
        - DISCONNECTED
      x-stoplight:
        id: 8rv4nvmc7rotm
    NSDTToken:
      type: string
      description: NSDT token
      example: f0d40;f3d30;f8d30;f8d30;f7d30;f2d30;f4d30;f3d30;f2d30;f3d30;f1d30;f1d30;f2d30;f4d30;f6d30;f2d30;f8d30;f1d30;f7d30;f1d30
      x-stoplight:
        id: tmf87dw1zt53l
    QrCode:
      type: object
      required:
        - id
        - reference
        - description
      properties:
        id:
          $ref: '#/components/schemas/QrCodeId'
        reference:
          type: string
          description: QR code's reference
          example: '2648055076494259'
        description:
          type: string
          description: QR code's description
        paymentReference:
          type: string
          description: Label given to the transactions initiated with this QR code
        amount:
          $ref: ./Amount.yaml
        expirationDate:
          type: string
          format: date-time
          description: 'QR code''s expiration date. Format is Y-m-d\TH:i:sP'
        activationDate:
          type: string
          format: date-time
          description: 'QR code''s activation date. Format is Y-m-d\TH:i:sP'
      x-stoplight:
        id: x9pibdpofrzjy
    AccountType:
      type: string
      description: Account Type
      enum:
        - CURRENT
        - SAVINGS
        - SUB_ACCOUNT
        - DEDICATED
        - MONEYPOT
        - TECHNICAL
      x-stoplight:
        id: aefg1cqbi3d0g
    AccountOwner:
      type: object
      required:
        - id
        - name
      properties:
        id:
          allOf:
            - $ref: ./AccountId.yaml
            - readOnly: true
        name:
          type: string
          description: |
            - le full name d’une personne physique
            - le legal name d’une personne morale
          example: Kommandor Fuerte
          readOnly: true
      x-stoplight:
        id: q8b5yemwc5kry
    BillerItemType:
      type: string
      description: Type of node in bill issuers tree
      enum:
        - CATEGORY
        - BILL_ISSUER
      x-stoplight:
        id: irnpctpi21k5t
    BillerId:
      type: string
      description: the bill issuer system identifier
      example: BI5
      x-stoplight:
        id: v7eb51uaq2y99
    PaybillType:
      type: string
      description: Type of paybill
      enum:
        - ACCOUNT
        - CASH
      x-stoplight:
        id: bx7vd01xmcyis
    AbstractInput:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          example: myInputId
        type:
          $ref: '#/components/schemas/InputType'
        label:
          type: string
          example: My input label
        description:
          type: string
          example: This is my input description
        required:
          type: boolean
        validators:
          type: array
          items:
            $ref: '#/components/schemas/Validator'
        disabled:
          type: boolean
          default: false
          description: 'If true, this input cannot be change'
      x-stoplight:
        id: 12nodvogeijok
    Option:
      type: object
      required:
        - id
        - label
      properties:
        id:
          type: string
          example: someValue
        label:
          type: string
          example: Label for someValue
      x-stoplight:
        id: zvz86of9ukqmx
    OptionWithAmount:
      allOf:
        - $ref: '#/components/schemas/Option'
        - type: object
          required:
            - amount
          properties:
            amount:
              $ref: ./Amount.yaml
      x-stoplight:
        id: ybnkqtkmhw2vj
    AuthenticationMode:
      type: string
      description: Authentication mode
      enum:
        - PINCODE_ACCEPTOR
        - PINCODE_CLIENT
        - PINCODE_CLIENT_IVR
        - NSDT_CLIENT
        - QR_CODE_CLIENT
        - OTP_CLIENT
        - TRANSACTION_CODE
      x-stoplight:
        id: wgiuug0m20l8t
    AuthenticationStatus:
      type: string
      description: Authentication status
      enum:
        - PENDING
        - SUCCESS
        - ERROR
      x-stoplight:
        id: znzzxnrqj13k1
    InputType:
      type: string
      enum:
        - AMOUNT
        - TEXT
        - BOOL
        - DATE
        - DATE_TIME
        - DURATION
        - EMAIL
        - FILE
        - IMAGE
        - COLLECTION
        - INT
        - IP
        - MULTI_SELECT
        - NUMBER
        - PERCENT
        - PASSWORD
        - PHONE
        - PINCODE
        - RATE
        - SELECT
        - SELECT_WITH_AMOUNT
      x-stoplight:
        id: o3x34m2smr682
    Validator:
      oneOf:
        - $ref: '#/components/schemas/AmountValidator'
        - $ref: '#/components/schemas/MinValidator'
        - $ref: '#/components/schemas/MaxValidator'
        - $ref: '#/components/schemas/BetweenValidator'
        - $ref: '#/components/schemas/BlacklistValidator'
        - $ref: '#/components/schemas/WhitelistValidator'
        - $ref: '#/components/schemas/LengthValidator'
        - $ref: '#/components/schemas/MaxLengthValidator'
        - $ref: '#/components/schemas/MinLengthValidator'
        - $ref: '#/components/schemas/PasswordValidator'
        - $ref: '#/components/schemas/RegexValidator'
      discriminator:
        propertyName: type
        mapping:
          AMOUNT: '#/components/schemas/AmountValidator'
          MIN: '#/components/schemas/MinValidator'
          MAX: '#/components/schemas/MaxValidator'
          BETWEEN: '#/components/schemas/BetweenValidator'
          BLACKLIST: '#/components/schemas/BlacklistValidator'
          WHITELIST: '#/components/schemas/WhitelistValidator'
          LENGTH: '#/components/schemas/LengthValidator'
          MAX_LENGTH: '#/components/schemas/MaxLengthValidator'
          MIN_LENGTH: '#/components/schemas/MinLengthValidator'
          PASSWORD: '#/components/schemas/PasswordValidator'
          REGEX: '#/components/schemas/RegexValidator'
      x-stoplight:
        id: ygz2gc1t2r95s
    AmountValidator:
      type: object
      required:
        - type
        - currencies
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        currencies:
          type: array
          items:
            $ref: ./CurrencyAlpha.yaml
      x-stoplight:
        id: 1u3zdegnvswwg
    MinValidator:
      type: object
      required:
        - type
        - min
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        min:
          type: number
      x-stoplight:
        id: wrybegdng5c9f
    MaxValidator:
      type: object
      required:
        - type
        - max
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        max:
          type: number
      x-stoplight:
        id: nrttyiong7mkh
    BetweenValidator:
      type: object
      required:
        - type
        - min
        - max
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        min:
          type: number
        max:
          type: number
      x-stoplight:
        id: msrua3coejug6
    BlacklistValidator:
      type: object
      required:
        - type
        - blacklist
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        blacklist:
          type: array
          items:
            type: string
      x-stoplight:
        id: yepnwfmcu4tqv
    WhitelistValidator:
      type: object
      required:
        - type
        - whitelist
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        whitelist:
          type: array
          items:
            type: string
      x-stoplight:
        id: ie16jtbtnjfab
    LengthValidator:
      type: object
      required:
        - type
        - length
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        length:
          type: integer
      x-stoplight:
        id: ox2yqott0vs9y
    MaxLengthValidator:
      type: object
      required:
        - type
        - maxLength
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        maxLength:
          type: integer
      x-stoplight:
        id: zn9umvotuzsb6
    MinLengthValidator:
      type: object
      required:
        - type
        - minLength
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        minLength:
          type: integer
      x-stoplight:
        id: g1ykfs2m1pq2g
    PasswordValidator:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        minLength:
          type: integer
        regexp:
          type: string
          description: regexp in PCRE format. Password must match this regexp
        forbidRegex:
          type: string
          description: regexp in PCRE format. Password must not match this regexp
        forbidDates:
          type: boolean
          description: 'if true, you cannot choose a date as a password'
        blacklist:
          type: array
          description: list of forbidden passwords
          example:
            - azerty
            - qwerty
            - '123456'
            - password
          items:
            type: string
      x-stoplight:
        id: aqwihrof2xzvq
    RegexValidator:
      type: object
      required:
        - type
        - regex
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        regex:
          type: string
          description: regexp in PCRE format. Value must match this regexp
      x-stoplight:
        id: p0cssqpqueyj1
    ValidatorType:
      type: string
      enum:
        - AMOUNT
        - MIN
        - MAX
        - BETWEEN
        - BLACKLIST
        - LENGTH
        - MAX_LENGTH
        - MIN_LENGTH
        - PASSWORD
        - REGEX
        - WHITELIST
      x-stoplight:
        id: r39touwibt5ml
  parameters:
    inputId:
      name: inputId
      in: path
      required: true
      description: KYC field identifier.
      schema:
        $ref: '#/components/schemas/InputId'
    clientId:
      name: clientId
      in: path
      required: true
      description: Customer unique identifier.
      schema:
        $ref: '#/components/schemas/ClientId'
