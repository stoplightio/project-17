openapi: 3.1.0
x-stoplight:
  id: v9sm1t3sap8jd
servers:
  - url: 'https://sandbox.skaleet.com/api/client/v1'
    description: Skaleet sandbox environment.
info:
  title: Client API
  version: 1.1.6
  description: |-
    Client API |  | 
    ---------|----------|
     User | **Client (Individual Customer)** |
     Use cases Examples|**Onboarding**<br>- Retrieve onboarding requirements<br>- Initiate client onboarding<br>- Update onboarding file<br>- Submit onboarding file<br>**Acceptor**<br>- Search and geolocate acceptors<br>**Account Management**<br>- View and download accounts information<br>- Recharge account<br>**Authentication**<br>- List strong authentication<br>- Accept or refuse operation through strong authentication<br>**Card Management**<br>- Request Card creation<br>- Manage card lifecycle<br>- Manage card features<br>**Recipient Management**<br>- Manage beneficiaries<br>- Manage external account<br>**Notifications**<br>- Enable and disable notifications<br>**Expense Tracking**<br>- Manage transactions categorized spendings<br>- Manage transactions attachment <br>**Operations**<br>- List an account authorization holds<br>- List an account transactions<br>- Cash transfers<br>- P2P transfers<br>- External transfers<br>- Bill Payment<br>- Manage bill references<br>- Payment<br>- Manage QR Code|

    Clients are the consumer customers who use or engage with financial services offered by a financial institution.

    To use this API, you may create or reuse a client (or use the API to create a new one through onboarding). Each users are attached to a user profile which define their rights and permissions. The profile configuration of this user will impact the authorization to endpoints.

    API keys are generated by the back-office through their web portal. The authorization mode depends on the method used to generate the API key and its configuration. When creating or editing the API key, the back-office can specify the scopes available for this key, determining whether access to specific endpoints is authorized or not.

    For more information about Authorization, refer to [Authorization](/dos/client/oauth2-authorization.md)
  contact:
    name: Skaleet
    url: 'https://www.skaleet.com/en/'
    email: api@skaleet.com
  license:
    name: Proprietary
    url: 'https://www.skaleet.com/'
tags:
  - name: Acceptor search
  - name: Accounts
  - name: Authentication
  - name: Authorization holds
  - name: Autocomplete
  - name: Beneficiary management
  - name: BIC referential list
  - name: Bills
  - name: Cards
  - name: Cash transfers
  - name: Client
  - name: Customer Actions
  - name: Documents management
  - name: Enrollment
  - name: External account management
  - name: Mobile
  - name: Mobile Banking
  - name: Notifications
  - name: Onboarding
  - name: Others
  - name: Products
  - name: QRCode
  - name: Recipient management
  - name: Spending Categorization
  - name: Spendings categorization
  - name: Transaction codes
  - name: Transactions
paths:
  '/enrollment/{phoneNumber}':
    parameters:
      - name: phoneNumber
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Phone'
      - name: Accept-Language
        in: header
        schema:
          type: string
          pattern: '^[a-z]{2}-[A-Z]{2}$'
          example: en-US
        required: true
    get:
      security:
        - OAuth2:
            - client_onboarding
      tags:
        - Enrollment
      operationId: LoadEnrollmentForm
      summary: Get enrollment form
      responses:
        '200':
          description: |
            Enrollment is open and client can enroll.
            Returns the form.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InputCollection'
        '400':
          $ref: '#/components/responses/EnrollmentClientExistsErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: ix46yh5fluczi
    post:
      security:
        - OAuth2:
            - client_onboarding
      tags:
        - Enrollment
      operationId: SubmitEnrollment
      summary: Submit completed enrollment form
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollmentRequest'
      responses:
        '200':
          description: |
            PREAUTH mode : Enrollment form has been validated and saved under the ID given in response.</br>
            TRANSACTION mode : An OTP has been generated to validate the procedure under the ID given in response.</br>
            Client won't exist until the OTP has been validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: mm2eub4ajscjh
  /client:
    get:
      security:
        - OAuth2:
            - kyc_view
      tags:
        - Client
      summary: Load client information
      operationId: LoadClient
      responses:
        '200':
          description: Client information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientInformation'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 1hofnq5mmtgcv
    patch:
      security:
        - OAuth2:
            - kyc_update
      tags:
        - Client
      summary: Update client information
      operationId: UpdateClient
      requestBody:
        required: true
        description: |
          Client information to change
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientInformation'
      responses:
        '200':
          description: Client information was changed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientInformation'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: dfs1xqhu95iw6
  /client/pincode:
    put:
      security:
        - OAuth2:
            - pincode_update
      tags:
        - Client
      summary: Change client pincode
      operationId: ChangePincode
      requestBody:
        required: true
        description: |
          Client pincode changes
        content:
          application/json:
            schema:
              type: object
              required:
                - currentPincode
                - newPincode
              properties:
                currentPincode:
                  allOf:
                    - description: the current client pincode
                    - $ref: '#/components/schemas/PincodeSubmission'
                newPincode:
                  allOf:
                    - description: the new client pincode
                    - $ref: '#/components/schemas/PincodeSubmission'
      responses:
        '200':
          description: Client pincode changed successfully
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: tjjzvey3c9ga5
  /client/pincode/verify:
    post:
      security:
        - OAuth2:
            - pincode_check
      tags:
        - Client
      summary: Verify client pincode
      operationId: VerifyPincode
      requestBody:
        required: true
        description: |
          Client pincode submission
        content:
          application/json:
            schema:
              type: object
              required:
                - pincode
              properties:
                pincode:
                  $ref: '#/components/schemas/PincodeSubmission'
      responses:
        '200':
          description: Client pincode is valid
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: gun2c2eucyqec
  /accounts:
    get:
      security:
        - OAuth2:
            - accounts_view
      tags:
        - Accounts
      summary: Search accounts
      operationId: SearchAccounts
      parameters:
        - name: status
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AccountStatus'
        - name: type
          in: query
          schema:
            description: Type de compte @todo
            type: string
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: The client's accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: i3yz6c04w7cdr
  '/accounts/{accountId}/fees-statements':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
    get:
      security:
        - OAuth2:
            - accounts_view
      tags:
        - Accounts
      summary: Search account's fees statements
      operationId: SearchAccountFeesStatements
      responses:
        '200':
          description: The account's fees statements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountFeesStatementCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: rq0dfwkhbeda1
  '/accounts/{accountId}/fees-statements/{statementId}':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
      - name: statementId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountFeesStatementId'
    get:
      security:
        - OAuth2:
            - accounts_view
      tags:
        - Accounts
      summary: Load an account's fees statement
      operationId: LoadAccountFeesStatement
      responses:
        '200':
          description: the account's fees statement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountFeesStatement'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: r4yx5408v9oja
  '/accounts/{accountId}/fees-statements/{statementId}/download':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
      - name: statementId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountFeesStatementId'
    get:
      security:
        - OAuth2:
            - accounts_view
      tags:
        - Accounts
      summary: Download an account's fees statement
      operationId: DownloadAccountFeesStatement
      responses:
        '200':
          description: the statement document as PDF file
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: vu7go0lk6pp36
  '/accounts/{accountId}/statements':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
    get:
      security:
        - OAuth2:
            - accounts_view
      tags:
        - Accounts
      summary: Search account's statements
      operationId: SearchAccountStatements
      responses:
        '200':
          description: The account's statements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatementCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: gprhdfmfo1swx
  '/accounts/{accountId}/statements/{statementId}':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
      - name: statementId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountStatementId'
    get:
      security:
        - OAuth2:
            - accounts_view
      tags:
        - Accounts
      summary: Load an account's statement
      operationId: LoadAccountStatement
      responses:
        '200':
          description: the account's statement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatement'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: h2kk6k5hu055r
  '/accounts/{accountId}/statements/{statementId}/download':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
      - name: statementId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountStatementId'
    get:
      security:
        - OAuth2:
            - accounts_view
      tags:
        - Accounts
      summary: Download an account's statement
      operationId: DownloadAccountStatement
      responses:
        '200':
          description: the statement document as PDF file
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: gecivr86v8rzb
  '/accounts/{accountId}/actions/download-rib':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
    get:
      security:
        - OAuth2:
            - accounts_view
      tags:
        - Accounts
      summary: Download RIB
      operationId: DownloadRIB
      responses:
        '200':
          description: The document content
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 7rxk3go4vsbs9
  /mobiles:
    get:
      security:
        - OAuth2:
            - mobiles_management
      tags:
        - Mobile
      summary: NYI Search mobiles
      operationId: SearchMobiles
      responses:
        '200':
          description: Client's mobiles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 931hpif4thtji
    post:
      security:
        - OAuth2:
            - mobiles_management
      tags:
        - Mobile
      summary: NYI Add mobile
      operationId: AddMobile
      requestBody:
        required: true
        description: |
          The new mobile content
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMobileRequest'
      responses:
        '201':
          description: Mobile added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: vn516urpx2imy
  '/mobiles/{mobileId}':
    parameters:
      - name: mobileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DeviceId'
    delete:
      security:
        - OAuth2:
            - mobiles_management
      tags:
        - Mobile
      summary: NYI Remove mobile
      operationId: RemoveMobile
      responses:
        '204':
          description: Mobile instance removal is successful.
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: rgktbjwqm9rkj
  /cards:
    get:
      security:
        - OAuth2:
            - cards_management
      tags:
        - Cards
      summary: List all cards
      operationId: SearchCards
      parameters:
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/CardId'
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/CardState'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: client's cards
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: sqttv08crt5bz
  '/cards/{cardId}':
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CardId'
    get:
      security:
        - OAuth2:
            - cards_management
      tags:
        - Cards
      summary: Retrieve a card
      operationId: LoadCard
      responses:
        '200':
          description: Card information
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/CardItem'
                  - type: object
                    properties:
                      links:
                        $ref: '#/components/schemas/CardLinksCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: zomogkrvg1yk7
  '/cards/{cardId}/features':
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CardId'
    patch:
      security:
        - OAuth2:
            - cards_management
      tags:
        - Cards
      summary: Change card feature
      operationId: ChangeCardFeature
      requestBody:
        required: true
        description: the card feature to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardFeature'
      responses:
        '200':
          description: Card updated information
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/CardItem'
                  - type: object
                    properties:
                      links:
                        $ref: '#/components/schemas/CardLinksCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: e81xop8d51sik
  '/cards/{cardId}/limits':
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          type: string
          description: card id
          example: '0'
    patch:
      security:
        - OAuth2:
            - cards_management
      tags:
        - Cards
      summary: Change card limit
      description: Modify a card limit value
      operationId: changeCardLimit
      requestBody:
        required: true
        description: Card limits change request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Limit'
      responses:
        '200':
          description: Card limit change successfully requested
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/CardItem'
                  - type: object
                    properties:
                      links:
                        $ref: '#/components/schemas/CardLinksCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: jb5pkwprox3vy
  '/cards/{cardId}/_actions/block':
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CardId'
    post:
      security:
        - OAuth2:
            - cards_management
      tags:
        - Cards
      summary: Block a card
      operationId: BlockCard
      responses:
        '200':
          description: Card successfully blocked
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/CardItem'
                  - type: object
                    properties:
                      links:
                        $ref: '#/components/schemas/CardLinksCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 6jc37lmxb8rvl
      parameters:
        - schema:
            type: string
            enum:
              - ALL
              - API
              - APP
              - BANK
              - IVR
              - ONLINE
              - POS
              - SMS
              - UNKNOWN
              - USSD
              - WEB
          in: query
          name: media
          description: Available media channels
  '/cards/{cardId}/_actions/unblock':
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CardId'
    post:
      security:
        - OAuth2:
            - cards_management
      tags:
        - Cards
      summary: Unblock a card
      operationId: UnblockCard
      responses:
        '200':
          description: Card successfully unblocked
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/CardItem'
                  - type: object
                    properties:
                      links:
                        $ref: '#/components/schemas/CardLinksCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: ou3bza9embhbr
      parameters:
        - schema:
            type: string
            enum:
              - ALL
              - API
              - APP
              - BANK
              - IVR
              - ONLINE
              - POS
              - SMS
              - UNKNOWN
              - USSD
              - WEB
          in: query
          name: media
          description: Available media channels
  '/cards/{cardId}/_actions/oppose':
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CardId'
    post:
      security:
        - OAuth2:
            - cards_management
      tags:
        - Cards
      summary: Oppose a card
      operationId: OpposeCard
      requestBody:
        required: true
        description: Card opposition request
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  enum:
                    - LOST
                    - STOLEN
                    - NOT_DISTRIBUTED
      responses:
        '200':
          description: Card successfully opposed
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/CardItem'
                  - type: object
                    properties:
                      links:
                        $ref: '#/components/schemas/CardLinksCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: jps14b5qjv6f2
      parameters:
        - schema:
            type: string
            enum:
              - ALL
              - API
              - APP
              - BANK
              - IVR
              - ONLINE
              - POS
              - SMS
              - UNKNOWN
              - USSD
              - WEB
          in: query
          name: media
          description: Available media channels
  '/cards/{cardId}/_actions/activate':
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CardId'
    post:
      security:
        - OAuth2:
            - cards_management
      tags:
        - Cards
      summary: Activate a card
      operationId: ActivateCard
      requestBody:
        required: true
        description: Card activation options
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: Optional activation code
                  example: 123ABC
                reason:
                  type: string
                  description: Optional activation reason
                  example: Customer activated card in ATM
      responses:
        '200':
          description: Activation was requested
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/CardItem'
                  - type: object
                    properties:
                      links:
                        $ref: '#/components/schemas/CardLinksCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 9c4o7nqljc579
      parameters:
        - schema:
            type: string
            enum:
              - ALL
              - API
              - APP
              - BANK
              - IVR
              - ONLINE
              - POS
              - SMS
              - UNKNOWN
              - USSD
              - WEB
          in: query
          name: media
          description: Available media channels
  '/cards/{cardId}/refabricate':
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          type: string
          description: card id
          example: '1234'
    patch:
      security:
        - OAuth2:
            - cards_management
      tags:
        - Cards
      summary: Refabricate a card
      operationId: RefabricateCard
      responses:
        '200':
          description: Refabrication was requested
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - pendingManagementOperation
                properties:
                  id:
                    type: string
                    readOnly: true
                    description: Card id
                    example: '0'
                  pendingManagementOperation:
                    $ref: '#/components/schemas/PendingManagementOperation'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 5xpcajcrkiria
      parameters:
        - schema:
            type: string
            enum:
              - ALL
              - API
              - APP
              - BANK
              - IVR
              - ONLINE
              - POS
              - SMS
              - UNKNOWN
              - USSD
              - WEB
          in: query
          name: media
          description: Available media channels
  '/cards/{cardId}/details':
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CardId'
    post:
      security:
        - OAuth2:
            - card_sensitive_data_view
      tags:
        - Cards
      operationId: GetCardDetails
      summary: Get a card's details
      requestBody:
        description: Provide the public key to encrypt the card details
        content:
          application/json:
            schema:
              type: object
              properties:
                publicKey:
                  type: string
      responses:
        '200':
          description: The card's details
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CardDetail'
                  - $ref: '#/components/schemas/CardImage'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
      x-stoplight:
        id: v0zi9yp8xn3rj
  '/accounts/{accountId}/cards':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
          description: Account number
          example: '10000000157'
    post:
      security:
        - OAuth2:
            - cards_management
      tags:
        - Cards
      summary: Create a card
      operationId: CreateCard
      requestBody:
        description: Card to add to the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardCreation'
      responses:
        '201':
          description: Card creation response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/CardItem'
                  - type: object
                    properties:
                      links:
                        $ref: '#/components/schemas/CardLinksCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
      x-stoplight:
        id: c7wjj3eg1u1ng
  '/accounts/{accountId}/cards-virtual':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
          description: Account number
          example: '10000000157'
    post:
      security:
        - OAuth2:
            - cards_virtual_creation
      tags:
        - Cards
      summary: Create a virtual card
      operationId: CreateVirtualCard
      requestBody:
        description: Virtual card to add to the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardCreation'
      responses:
        '201':
          description: Card creation response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/CardItem'
                  - type: object
                    properties:
                      links:
                        $ref: '#/components/schemas/CardLinksCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
      x-stoplight:
        id: xoqv053bjxqdk
  '/cards/{cardId}/_actions/deactivate':
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CardId'
    delete:
      security:
        - OAuth2:
            - cards_management
      tags:
        - Cards
      summary: Deactivate a card
      operationId: DeactivateCard
      responses:
        '200':
          description: Card successfully deactivated
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/CardItem'
                  - type: object
                    properties:
                      links:
                        $ref: '#/components/schemas/CardLinksCollection'
        '400':
          description: Card could not be deactivated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardError'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        '404':
          description: Requested card was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardError'
      x-stoplight:
        id: 5d4lg9wx5pf0o
      parameters:
        - schema:
            type: string
            enum:
              - ALL
              - API
              - APP
              - BANK
              - IVR
              - ONLINE
              - POS
              - SMS
              - UNKNOWN
              - USSD
              - WEB
          in: query
          name: media
          description: Available media channels
  '/cards/{cardId}/image':
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          type: string
          description: card id
          example: '1234'
    get:
      security:
        - OAuth2:
            - cards_management
      tags:
        - Cards
      operationId: GetCardImage
      summary: Get a card's image
      responses:
        '200':
          description: The card's image as PNG
          content:
            image/png:
              schema:
                type: string
                format: binary
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 0m5tdkpwdipi4
  '/cards/{cardId}/outstandings':
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CardId'
    get:
      security:
        - OAuth2:
            - cards_management
      tags:
        - Cards
      operationId: GetCardOutstandings
      summary: Get a card's outstandings
      responses:
        '200':
          description: The card's outstandings
          content:
            application/json:
              schema:
                type: object
                required:
                  - outstandings
                properties:
                  outstandings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Outstanding'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
      x-stoplight:
        id: zjz6m4n6ginhy
  /accounting-entries:
    get:
      security:
        - OAuth2:
            - accounts_view
      tags:
        - Transactions
      summary: Retrieve an account accounting
      operationId: SearchAccountingEntries
      parameters:
        - name: accountId
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: startDate
          in: query
          description: Transaction date range start (default value is endDate - 3 months)
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Transaction date range end (default value is now)
          schema:
            type: string
            format: date-time
        - name: id
          in: query
          schema:
            $ref: ./AccountingEntryId.yaml
        - name: type
          in: query
          schema:
            $ref: ./AccountingEntryType.yaml
        - name: transactionId
          in: query
          schema:
            $ref: '#/components/schemas/TransactionId'
        - name: transactionType
          in: query
          description: Transaction type
          schema:
            $ref: '#/components/schemas/TransactionType'
        - name: externalId
          in: query
          schema:
            $ref: '#/components/schemas/TransactionExternalId'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: the accounting entry list for the account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAccountingEntryCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: mxuo3ke3zip34
  /transactions:
    get:
      security:
        - OAuth2:
            - accounts_view
      tags:
        - Transactions
      summary: Retrieve an account's transactions
      operationId: SearchTransactions
      parameters:
        - name: accountId
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: startDate
          in: query
          description: Transaction date range start (default value is endDate - 3 months)
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Transaction date range end (default value is now)
          schema:
            type: string
            format: date-time
        - name: minAmount
          in: query
          description: Transaction minimum amount integral value (inclusive). The account currency will be used.
          schema:
            type: integer
        - name: maxAmount
          in: query
          description: Transaction maximum amount integral value (inclusive). The account currency will be used.
          schema:
            type: integer
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/TransactionId'
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/TransactionType'
        - name: externalId
          in: query
          schema:
            $ref: '#/components/schemas/TransactionExternalId'
        - name: direction
          in: query
          schema:
            $ref: '#/components/schemas/TransactionDirection'
        - name: isQualified
          in: query
          description: 'Filters the qualification status of the transactions to be returned. Passing `1` will return qualified transactions, `0` will return unqualified transactions.'
          schema:
            type: boolean
            example: true
        - name: isJustified
          in: query
          description: 'Filters the justification status of the transactions to be returned. Passing `1` will return justified transactions, `0` will return unjustified transactions.'
          schema:
            type: boolean
            example: true
        - name: isLocked
          in: query
          description: 'Filters the locking status of the transactions to be returned. Passing `1` will return locked transactions, `0` will return unlocked transactions.'
          schema:
            type: boolean
            example: true
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: the transaction list for the account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 8mrd3os7ywcxy
  /transactions/p2p-transfer:
    post:
      security:
        - OAuth2:
            - p2p_transfer
      tags:
        - Transactions
      summary: Send money to an account
      operationId: AccountToAccount
      requestBody:
        required: true
        description: |
          Transaction information
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TransactionRequest'
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      required:
                        - amount
                        - recipientId
                      properties:
                        amount:
                          $ref: ./Amount.yaml
                        recipientId:
                          $ref: '#/components/schemas/RecipientId'
                        label:
                          type: string
                          description: ' message to send to recipient'
      responses:
        '201':
          description: Success response. Please select the PREAUTH or TRANSACTION mode inside metadata to see the corresponding response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: tbnitpd294byn
  /transactions/payout:
    post:
      security:
        - OAuth2:
            - payout
      tags:
        - Transactions
      summary: External transfer (Payout)
      description: |
        Transfer from a Skaleet platform account to an external account.

        When external transfer uses SEPA, it is a SCT (SEPA Credit Transfer).
      operationId: Payout
      requestBody:
        required: true
        description: |
          Payout information
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TransactionRequest'
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      required:
                        - amount
                        - srcAccountId
                        - recipientId
                      properties:
                        amount:
                          $ref: ./Amount.yaml
                        srcAccountId:
                          $ref: '#/components/schemas/AccountId'
                        recipientId:
                          $ref: '#/components/schemas/RecipientId'
                        purpose:
                          type: string
                          description: Purpose of external transfer (max 140 characters)
                          maxLength: 140
                        userReference:
                          type: string
                          description: User reference
      responses:
        '201':
          description: Success response. Please select the PREAUTH or TRANSACTION mode inside metadata to see the corresponding response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutResponse'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: cy8cc3zub9wun
  /transactions/payment:
    post:
      security:
        - OAuth2:
            - payment
      tags:
        - Transactions
      summary: Payment
      operationId: Payment
      requestBody:
        required: true
        description: |
          Payment with token

          The `inputs` field must be filled in with all values returned on the previous `PREAUTH` type call, if any.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TransactionRequest'
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        token:
                          $ref: '#/components/schemas/PaymentToken'
                        inputs:
                          $ref: '#/components/schemas/InputValues'
                      required:
                        - token
      responses:
        '200':
          description: 'Request was successful, but additional data are needed. Do a new pre-auth with inputs values.'
          content:
            application/json:
              schema:
                type: object
                required:
                  - inputs
                properties:
                  inputs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Input'
        '201':
          description: Payment success response. Please select the PREAUTH or TRANSACTION mode inside metadata to see the corresponding response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TransactionResponse'
                  - type: object
                    required:
                      - data
                    properties:
                      data:
                        type: object
                        properties:
                          payeeDisplayName:
                            type: string
                            description: the payee displayable name
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: aktf0wwp5zk9a
  /transactions/withdraw:
    post:
      security:
        - OAuth2:
            - withdraw
      tags:
        - Transactions
      summary: Withdraw
      operationId: Withdraw
      requestBody:
        required: true
        description: |
          Withdraw with token

          The `inputs` field must be filled in with all values returned on the previous `PREAUTH` type call, if any.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TransactionRequest'
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      required:
                        - token
                      properties:
                        token:
                          $ref: '#/components/schemas/WithdrawToken'
                        amount:
                          $ref: ./Amount.yaml
                        inputs:
                          $ref: '#/components/schemas/InputValues'
      responses:
        '200':
          description: 'Request was successful, but additional data are needed. Do a new pre-auth with inputs values.'
          content:
            application/json:
              schema:
                type: object
                required:
                  - inputs
                properties:
                  inputs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Input'
        '201':
          description: Withdraw success response. Please select the PREAUTH or TRANSACTION mode inside metadata to see the corresponding response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TransactionResponse'
                  - type: object
                    required:
                      - data
                    properties:
                      data:
                        type: object
                        properties:
                          merchantDisplayName:
                            type: string
                            description: the merchant displayable name
        '400':
          $ref: '#/components/responses/WithdrawAmountRequiredResponse'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: dqhtwuemjt4hg
  /transactions/recharge-by-card:
    post:
      security:
        - OAuth2:
            - wallet_recharge_by_card
      tags:
        - Transactions
      summary: Recharge your account
      description: |
        Recharge your Skaleet platform account from an external account
      operationId: RechargeByCard
      requestBody:
        required: true
        description: |
          Recharge by card parameters
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PspTransactionRequest'
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        amount:
                          $ref: ./Amount.yaml
                        accountId:
                          $ref: '#/components/schemas/AccountId'
                      required:
                        - amount
                        - accountId
      responses:
        '201':
          description: Success response. Please select the PREAUTH or TRANSACTION mode inside metadata to see the corresponding response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PspTransactionResponse'
                  - type: object
                    required:
                      - data
                    properties:
                      data:
                        type: object
                        properties:
                          pspResult:
                            $ref: '#/components/schemas/PspOperationResult'
                          webviewUrl:
                            description: Only present in TRANSACTION mode
                            type: string
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: k2vfeufz03ku8
  /transactions/p2p-dedicated-transfer:
    post:
      security:
        - OAuth2:
            - p2p_transfer_dedicated
      tags:
        - Transactions
      summary: Send money to a dedicated account
      description: |
        Send money to a shop account dedicated to the recipient
      operationId: AccountToDedicated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TransactionRequest'
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        amount:
                          $ref: ./Amount.yaml
                        acceptorId:
                          $ref: '#/components/schemas/AcceptorId'
                        recipientId:
                          $ref: '#/components/schemas/RecipientId'
                        label:
                          type: string
                          description: ' message to send to recipient'
                      required:
                        - amount
                        - acceptorId
                        - recipientId
      responses:
        '201':
          description: Success response. Please select the PREAUTH or TRANSACTION mode inside metadata to see the corresponding response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 8n4g53d6bumq9
  /cash-transfers:
    get:
      security:
        - OAuth2:
            - retrieve_cash_transfer
            - p2p_cash_transfer
      tags:
        - Cash transfers
      summary: Search cash transfers
      operationId: SearchCashTransfers
      responses:
        '200':
          description: Success response. Codes will be available only for cash transfers initiated by Client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashTransferCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: p3cbl3jc67b1x
  /transactions/p2p-cash-transfer:
    post:
      security:
        - OAuth2:
            - p2p_cash_transfer
      tags:
        - Transactions
      summary: Send cash transfer
      operationId: SendCashTransfer
      requestBody:
        required: true
        description: |
          Transaction information
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TransactionRequest'
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        amount:
                          $ref: ./Amount.yaml
                        recipientId:
                          $ref: '#/components/schemas/RecipientId'
                        label:
                          type: string
                          description: ' message to send to recipient'
                      required:
                        - amount
                        - recipientId
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: sw99uodloqz0r
  /transactions/retrieve-cash-transfer:
    post:
      security:
        - OAuth2:
            - retrieve_cash_transfer
      tags:
        - Transactions
      summary: Retrieve cash transfer
      operationId: RetrieveCashTransfer
      requestBody:
        required: true
        description: |
          Transaction information
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TransactionRequest'
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        cashTransferCode:
                          $ref: '#/components/schemas/CashTransferCode'
                      required:
                        - cashTransferCode
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: ymi3n3batvlvl
  /transactions/wallet-to-bank:
    post:
      security:
        - OAuth2:
            - wallet_to_bank
      tags:
        - Mobile Banking
      summary: NYI Send money to a linked bank account
      operationId: WalletToBank
      requestBody:
        required: true
        description: Transaction information
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TransactionRequest'
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        amount:
                          $ref: ./Amount.yaml
                      required:
                        - amount
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: atzdrvn078ze0
  /transactions/bank-to-wallet:
    post:
      security:
        - OAuth2:
            - bank_to_wallet
      tags:
        - Mobile Banking
      summary: Receive money from a linked bank account
      operationId: BankToWallet
      requestBody:
        required: true
        description: |
          Transaction information
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TransactionRequest'
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        amount:
                          $ref: ./Amount.yaml
                        creditorReference:
                          type: string
                          description: Recharged account reference (account number)
                        creditorReferenceType:
                          $ref: '#/components/schemas/InterbankingReferenceType'
                        creditorBic:
                          type: string
                          description: 'Creditor BIC, mandatory when creditorReferenceType is ACCOUNT_REFERENCE'
                        debtorReference:
                          type: string
                          description: Source account reference (IBAN)
                        debtorReferenceType:
                          $ref: '#/components/schemas/InterbankingReferenceType'
                        debtorBic:
                          type: string
                          description: 'Debtor BIC, mandatory when debtorReferenceType is ACCOUNT_REFERENCE'
                      required:
                        - amount
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                type: object
                required:
                  - metadata
                  - data
                properties:
                  metadata:
                    $ref: '#/components/schemas/RtpTransactionResponseMetadata'
                  data:
                    type: object
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: cj08tea6rex36
  '/bank-account/{accountId}/history':
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
    get:
      security:
        - OAuth2:
            - consult_bank_account
      tags:
        - Mobile Banking
      summary: NYI Retrieve a bank account transactions list
      operationId: SearchBankHistory
      parameters:
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: the transactions list for the account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankTransactionCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: r41fie1wmwl2p
  /transactions/recharge-by-psp:
    post:
      security:
        - OAuth2:
            - wallet_recharge_by_psp
      tags:
        - Mobile Banking
      summary: Recharge your account by a configured PSP
      operationId: AccountRechargeByPSP
      requestBody:
        required: true
        description: |
          Transaction information
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AccountRechargeByPSPRequest'
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        amount:
                          $ref: ./Amount.yaml
                        creditorReference:
                          type: string
                          description: Recharged account reference (account number)
                      required:
                        - amount
                        - creditorReference
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                type: object
                required:
                  - metadata
                  - data
                properties:
                  metadata:
                    $ref: '#/components/schemas/RtpTransactionResponseMetadata'
                  data:
                    type: object
                    properties:
                      webviewUrl:
                        type: string
                        description: URL to call the PSP. Returned in TRANSACTION mode only.
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: udd9vmcipg2dq
  /transaction-codes:
    get:
      security:
        - OAuth2:
            - transaction_code
      tags:
        - Transaction codes
      summary: Search transaction codes
      operationId: SearchTransactionCodes
      parameters:
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: the transaction codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCodeCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: x461c7t75evp5
    post:
      security:
        - OAuth2:
            - transaction_code
      tags:
        - Transaction codes
      summary: Generate a transaction code
      operationId: GenerateTransactionCode
      requestBody:
        required: true
        description: |
          Transaction code information
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - pincode
              properties:
                amount:
                  $ref: ./Amount.yaml
                acceptorShortCode:
                  $ref: '#/components/schemas/AcceptorShortCode'
                pincode:
                  $ref: '#/components/schemas/PincodeSubmission'
      responses:
        '201':
          description: The generated transaction code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCode'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: ahuwzbah1nhfm
  /recipients:
    get:
      security:
        - OAuth2:
            - recipients_view
      tags:
        - Recipient management
      summary: Get recipients list
      operationId: SearchRecipients
      parameters:
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: the recipients list of the final client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 1brztgg1g86ew
    post:
      security:
        - OAuth2:
            - recipients_update
      tags:
        - Recipient management
      summary: Confirm new recipient
      operationId: ConfirmNewRecipient
      requestBody:
        required: true
        description: Recipient information and OTP
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRecipientConfirmRequest'
      responses:
        '201':
          description: Recipient was added succesfully to the list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: vs32x62mst3or
  /recipients/auth:
    post:
      security:
        - OAuth2:
            - recipients_update
      tags:
        - Recipient management
      summary: Request new recipient
      operationId: RequestNewRecipient
      requestBody:
        required: true
        description: Recipient information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRecipientCheckRequest'
      responses:
        '201':
          description: Operation is allowed and the recipient information are valid. OTP sent for validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: ador1enzqsdif
  '/recipients/{recipientId}':
    parameters:
      - name: recipientId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RecipientId'
    patch:
      security:
        - OAuth2:
            - recipients_update
      tags:
        - Recipient management
      summary: Update a recipient
      operationId: UpdateRecipient
      requestBody:
        required: true
        description: Recipient information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipientUpdateRequest'
      responses:
        '200':
          description: the recipient has been successfully updated
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 20sk6m99bdwn2
    delete:
      security:
        - OAuth2:
            - recipients_update
      tags:
        - Recipient management
      summary: Delete a recipient
      operationId: RemoveRecipient
      responses:
        '200':
          description: Recipient deleted successfully
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 2hzr5vqeyi2qa
  /billers:
    get:
      security:
        - OAuth2:
            - bill_payment
      tags:
        - Bills
      parameters:
        - name: billItemId
          in: query
          required: false
          description: root item to use to get a subset of this tree
          schema:
            type: string
      summary: Bill issuers list
      operationId: LoadBillerTree
      responses:
        '200':
          description: Returns the bill issuers list ordered by categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillerItem'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: v18o7akaz017e
  '/billers/{billerId}/references':
    parameters:
      - name: billerId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BillerId'
    post:
      security:
        - OAuth2:
            - bill_payment
      tags:
        - Bills
      summary: Save a bill reference
      operationId: SaveBillReference
      requestBody:
        required: true
        description: Reference information
        content:
          application/json:
            schema:
              type: object
              required:
                - reference
              properties:
                reference:
                  $ref: '#/components/schemas/BillReference'
      responses:
        '201':
          description: The bill issuer with the new reference added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Biller'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: ht7dwyq9qh2cz
  '/billers/{billerId}/references/{billReference}':
    parameters:
      - name: billerId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BillerId'
      - name: billReference
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BillReference'
    delete:
      security:
        - OAuth2:
            - bill_payment
      tags:
        - Bills
      summary: Remove bill reference
      operationId: RemoveBillReference
      responses:
        '200':
          description: The bill reference was deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Biller'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 8sgzvmic6hkdq
  /transactions/paybill:
    post:
      security:
        - OAuth2:
            - bill_payment
      tags:
        - Bills
      summary: Init paybill session
      description: |
        An example of paybill call flow

        ```js
        function paybill(apiClient, billIssuerId) {
            let response = apiClient.post("/transactions/paybill", {billIssuerId: billIssuerId});
            let paybillSessionId = response.body.paybillSessionId;
            let userSubmittedValues = null;

            while(true) {
                response = apiClient.patch("/transactions/paybill/" + paybillSessionId, {inputs: userSubmittedValues});
                if (response.code === 201) {
                    break;
                }
                userSubmittedValues = askUserInput(response.body.inputs);
            }

            response = apiClient.get("/keyboard");

            let pincode = askUserPincode(response.body);
            apiClient.post("/transaction/paybill/" + paybillSessionId, {confirmationMode:"PINCODE", pincode: pincode});
        }


        function askUserPincode(keyboard)
        {
            // ui logic to ask user pincode
        }
        function askUserInput(inputs) {
            // ui logic to ask user to fill inputs
        }
        ```
      operationId: InitPaybill
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - billIssuerId
              properties:
                billIssuerId:
                  $ref: '#/components/schemas/BillerId'
                location:
                  $ref: '#/components/schemas/Geolocation'
                externalId:
                  $ref: '#/components/schemas/TransactionExternalId'
                externalData:
                  $ref: '#/components/schemas/ExternalData'
      responses:
        '201':
          description: Request successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - paybillSessionId
                properties:
                  paybillSessionId:
                    $ref: '#/components/schemas/PaybillSessionId'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: fvjvnw39qt2ys
  '/transactions/paybill/{paybillSessionId}/uploadFile':
    parameters:
      - name: paybillSessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaybillSessionId'
    post:
      security:
        - OAuth2:
            - bill_payment
      tags:
        - Bills
      summary: Submit paybill requested file
      operationId: SubmitPaybillFile
      description: |
        Request is used to send a file when it is requested as an user's input in the previous `PATCH /transactions/paybill/{paybillSessionId}` or `POST /transactions/paybill/{paybillSessionId}/fileUpload`
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                metadata:
                  allOf:
                    - description: File upload
                      type: object
                      properties:
                        file:
                          type: string
                          format: binary
                        filename:
                          type: string
                          description: File name
                        contentType:
                          type: string
                          description: File content type
      responses:
        '200':
          description: Request success but more inputs are required
          content:
            application/json:
              schema:
                type: object
                required:
                  - inputs
                properties:
                  inputs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Input'
        '201':
          description: 'Request successful, preauth was made'
          content:
            application/json:
              schema:
                type: object
                required:
                  - metadata
                properties:
                  metadata:
                    type: object
                    required:
                      - confirmationMode
                      - transaction
                    properties:
                      confirmationMode:
                        $ref: '#/components/schemas/TransactionConfirmationMode'
                      transaction:
                        $ref: '#/components/schemas/TransactionAccounting'
                  data:
                    type: object
                    properties:
                      info:
                        type: string
                        description: information to display to the user
                      additional:
                        type: string
                        description: additional information to display to the user
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: s83wku83xcx0n
  '/transactions/paybill/{paybillSessionId}':
    parameters:
      - name: paybillSessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PaybillSessionId'
    patch:
      security:
        - OAuth2:
            - bill_payment
      tags:
        - Bills
      summary: Submit paybill requested input
      operationId: SubmitPaybillInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                inputs:
                  allOf:
                    - description: |
                        This object must contain user's input if a previous `PATCH /transactions/paybill/{paybillSessionId}` call returned any `Input` object.
                        It must contains as many properties as received `Input`, with property name is equal to `Input.id`, and property value is user's input
                    - $ref: '#/components/schemas/InputValues'
      responses:
        '200':
          description: Request success but more inputs are required
          content:
            application/json:
              schema:
                type: object
                required:
                  - inputs
                properties:
                  inputs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Input'
        '201':
          description: 'Request successful, preauth was made'
          content:
            application/json:
              schema:
                type: object
                required:
                  - metadata
                properties:
                  metadata:
                    type: object
                    required:
                      - confirmationMode
                      - transaction
                    properties:
                      confirmationMode:
                        $ref: '#/components/schemas/TransactionConfirmationMode'
                      transaction:
                        $ref: '#/components/schemas/TransactionAccounting'
                  data:
                    type: object
                    properties:
                      info:
                        type: string
                        description: information to display to the user
                      additional:
                        type: string
                        description: additional information to display to the user
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 0f5z7uqu09wqj
    post:
      security:
        - OAuth2:
            - bill_payment
      tags:
        - Bills
      summary: Validate bill payment
      operationId: Paybill
      requestBody:
        required: true
        description: |
          Transaction information
        content:
          application/json:
            schema:
              type: object
              required:
                - confirmationMode
              properties:
                confirmationMode:
                  $ref: '#/components/schemas/TransactionConfirmationMode'
                pincode:
                  allOf:
                    - description: pincode attribute is required if `confirmationMode` equals to `PINCODE`
                    - $ref: '#/components/schemas/PincodeSubmission'
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                type: object
                required:
                  - metadata
                properties:
                  metadata:
                    type: object
                    required:
                      - transaction
                    properties:
                      transaction:
                        $ref: '#/components/schemas/TransactionAccounting'
                  data:
                    type: object
                    properties:
                      info:
                        type: string
                        description: information to display to the user
                      additional:
                        type: string
                        description: additional information to display to the user
                      voucher:
                        type: string
                        description: 'Voucher generated for this bill payment, if any'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: hdv5he68vj5f0
  '/notifications/{token}':
    parameters:
      - name: token
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NotificationToken'
    post:
      security:
        - OAuth2:
            - notifications
      tags:
        - Notifications
      summary: Enable in-app notifications
      operationId: EnableNotifications
      responses:
        '201':
          description: Device successfully enable notification service
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: uchtxnbodavtf
    delete:
      security:
        - OAuth2:
            - notifications
      tags:
        - Notifications
      summary: Disable in-app notifications
      operationId: DisableNotifications
      responses:
        '200':
          description: Device successfully disabled notification service
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: fvellxd5m2t1u
  '/notifications/ack/{notificationId}':
    parameters:
      - name: notificationId
        in: path
        required: true
        schema:
          type: string
          description: the Skaleet platform notification ID embedded in received notification
          example: NOT1
    post:
      security:
        - OAuth2:
            - notifications
      tags:
        - Notifications
      summary: Notification acknowledgement
      operationId: AckNotification
      responses:
        '201':
          description: Notification successfully acknowledged. Platform can consider the message as received by Client.
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: jvyqdef66fxgw
  /acceptors/categories:
    get:
      security:
        - OAuth2:
            - acceptor_search
      tags:
        - Acceptor search
      summary: Search acceptor categories
      operationId: SearchAcceptorCategories
      responses:
        '200':
          description: Returns the list of acceptor categories
          content:
            application/json:
              schema:
                type: array
                example:
                  - id: FOOD
                    label: Food stores
                  - id: GAS
                    label: Gas stations
                  - id: EDUCATION
                    label: Schools and universities
                  - id: HEALTH
                    label: Hospital and doctors
                  - id: ATM
                    label: ATM
                  - id: BRANCH
                    label: Banks
                  - id: AGENT
                    label: Independent agents
                items:
                  $ref: '#/components/schemas/AcceptorCategory'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: hxw90u2w5jyu4
  /acceptors:
    get:
      security:
        - OAuth2:
            - acceptor_search
      tags:
        - Acceptor search
      summary: Geolocalized acceptor search
      operationId: SearchAcceptor
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: number
            description: the location latitude
        - name: longitude
          in: query
          required: true
          schema:
            type: number
            description: the location longitude
        - name: radius
          in: query
          schema:
            type: integer
            description: 'Radius of search, in meters'
            exclusiveMinimum: 0
        - name: 'categories[]'
          in: query
          schema:
            type: array
            example:
              - UNCATEGORIZED
              - FOOD
              - GAS
              - EDUCATION
              - HEALTH
              - ATM
              - BRANCH
              - AGENT
            items:
              $ref: '#/components/schemas/AcceptorCategoryId'
        - name: supportDedicatedTransfers
          in: query
          schema:
            type: boolean
            description: Can handle transfers on dedicated accounts
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: Returns the search results list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptorCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: rvsahr1mqpyxv
  /configuration:
    get:
      security:
        - OAuth2:
            - configuration
      tags:
        - Others
      summary: Load platform configuration
      operationId: LoadConfiguration
      responses:
        '200':
          description: the platform configuration values
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformConfiguration'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 6ui3vpumk1bhn
  /translations:
    parameters:
      - name: applicationId
        in: query
        description: 'the application identifier, in order to get specific translations for this application'
        schema:
          type: string
      - name: 'langs[]'
        in: query
        description: to get only a subset of langs translations
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Lang'
    get:
      security:
        - OAuth2:
            - configuration
      tags:
        - Others
      summary: Load application translations
      operationId: LoadTranslations
      responses:
        '200':
          description: hashmap of translations per langs
          content:
            application/json:
              schema:
                example:
                  fr_FR:
                    MENU_DESC_WALLET_TO_BANK: 'Transférez votre argent depuis votre compte [[brand]] vers votre compte bancaire.'
                    MENU_DESC_ACCOUNT_TO_ACCOUNT: 'Envoyez de l''argent à un autre client de [[brand]].'
                  en_US:
                    MENU_DESC_WALLET_TO_BANK: 'Transfer your money from your [[brand]] account to your bank account.'
                    MENU_DESC_ACCOUNT_TO_ACCOUNT: 'Send money to another [[brand]] client.'
                  es_ES:
                    MENU_DESC_WALLET_TO_BANK: 'Transfiera su dinero de su cuenta [[brand]] a su cuenta bancaria.'
                    MENU_DESC_ACCOUNT_TO_ACCOUNT: 'Enviar dinero a otro cliente [[brand]]'
                type: object
                additionalProperties:
                  type: object
                  description: hashmap of lang translations
                  additionalProperties:
                    type: string
                    description: translation value
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: ls6jvqb7a7k08
  '/keyboard/{phone}':
    parameters:
      - name: phone
        in: path
        description: the client phone number
        required: true
        schema:
          $ref: '#/components/schemas/Phone'
    get:
      security:
        - OAuth2:
            - pincode_check
      parameters:
        - name: font
          in: query
          description: the font to use in images
          schema:
            type: string
        - name: color
          in: query
          description: the text color
          schema:
            type: string
            pattern: '^#[0-9]{6}$'
            example: '#000000'
        - name: width
          in: query
          description: size of the image in pixel
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: fontSize
          in: query
          description: size of the font
          schema:
            type: integer
            minimum: 1
            maximum: 500
      tags:
        - Others
      summary: Generates a pincode keyboard
      operationId: GenerateKeyboard
      responses:
        '200':
          description: returns a secured keyboard to use to input client pincode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PincodeKeyboardData'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 6sflqzqm9k8us
  /logo:
    get:
      security:
        - OAuth2:
            - configuration
      tags:
        - Others
      summary: Load logo
      operationId: LoadLogo
      responses:
        '200':
          description: the logo as PNG image
          content:
            image/png:
              schema:
                type: string
                format: binary
      x-stoplight:
        id: 8mv3pfl9usoey
  /authorization-holds:
    get:
      security:
        - OAuth2:
            - consult_authorization_holds
      tags:
        - Authorization holds
      summary: List all current authorization holds for an account
      operationId: SearchAuthorizationHolds
      parameters:
        - name: accountId
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: startDate
          in: query
          description: Authorization holds date range start
          schema:
            type: string
            format: date-time
            description: endDate - 3 months
        - name: endDate
          in: query
          description: Authorization holds date range end
          schema:
            type: string
            format: date-time
            description: Default value is Today
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: Account's authorization holds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationHoldCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: uf3ig3cheuhcd
  '/autocomplete/{inputId}':
    parameters:
      - name: inputId
        in: path
        required: true
        description: KYC field identifier
        schema:
          $ref: '#/components/schemas/InputId'
    get:
      security:
        - OAuth2: []
      tags:
        - Autocomplete
      summary: KYC field auto-complete
      operationId: Autocomplete
      parameters:
        - name: userInput
          in: query
          required: true
          description: 'Current user input, to be completed'
          schema:
            type: string
      responses:
        '200':
          description: list of possible values found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PossibleValueCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: mtb1ilrzqpj3z
  /products:
    get:
      security:
        - OAuth2: []
      tags:
        - Products
      summary: List all products available for client
      operationId: SearchProducts
      parameters:
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/ProductId'
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/ProductType'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: Products found for this search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
      x-stoplight:
        id: zh5matp4ol687
  '/products/{productId}':
    parameters:
      - name: productId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProductId'
    get:
      security:
        - OAuth2: []
      tags:
        - Products
      summary: Retrieve a Product
      operationId: LoadProduct
      responses:
        '200':
          description: Product information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 2ldlvln15c25l
  /authentications:
    parameters:
      - name: search
        in: query
        schema:
          $ref: '#/components/schemas/SearchRequest'
        description: |
          See <a href="#section/Overview/Search-requests">"Search requests"</a> section


          Available criteria attributes :
           * Process
             * id : `NumberCriteria`
             * state : `EnumCriteria`
             * isSuspicious : `BoolCriteria`, possible values: `true`, `false`
    get:
      security:
        - OAuth2:
            - strong_customer_authentication
      tags:
        - Authentication
      summary: List strong customer authentication processes
      operationId: SearchStrongCustomerAuthentication
      responses:
        '200':
          description: Found strong authentication processes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrongCustomerAuthenticationProcessCollection'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 2oo1t9xzzzy4m
  '/authentications/{authenticationId}':
    parameters:
      - in: path
        required: true
        name: authenticationId
        schema:
          $ref: '#/components/schemas/StrongCustomerAuthenticationId'
    get:
      security:
        - OAuth2:
            - strong_customer_authentication
      tags:
        - Authentication
      summary: Retrieve a strong customer authentication
      operationId: GetStrongCustomerAuthentication
      responses:
        '200':
          description: Found strong authentication process
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrongCustomerAuthenticationProcess'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          description: Authentication was not found for this client
      x-stoplight:
        id: nsrpn6o9w7upc
  '/authentications/{authenticationId}/accept':
    parameters:
      - in: path
        required: true
        name: authenticationId
        schema:
          $ref: '#/components/schemas/StrongCustomerAuthenticationId'
    post:
      security:
        - OAuth2:
            - strong_customer_authentication
      tags:
        - Authentication
      summary: Accept strong customer authentication
      description: |
        Request accepts a strong customer authentication business process.
      operationId: AcceptStrongCustomerAuthentication
      requestBody:
        required: true
        description: |
          Must contain all required information to accept a strong customer authentication.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PincodeSubmission'
      responses:
        '204':
          description: Strong customer authentication was successfully accepted
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/StrongCustomerAuthenticationErrorResponse'
        '404':
          description: Authentication was not found for this client with the provided `authenticationId`
      x-stoplight:
        id: gueg35zijsdn1
  '/authentications/{authenticationId}/refuse':
    parameters:
      - in: path
        required: true
        name: authenticationId
        schema:
          $ref: '#/components/schemas/StrongCustomerAuthenticationId'
    post:
      security:
        - OAuth2:
            - strong_customer_authentication
      tags:
        - Authentication
      summary: Refuse strong customer authentication
      description: |
        Request refuses a strong customer authentication business process.
      operationId: RefuseStrongCustomerAuthentication
      requestBody:
        required: true
        description: |
          Must contain all required information to refuse a strong customer authentication.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PincodeSubmission'
      responses:
        '204':
          description: Strong customer authentication was successfully refused
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/StrongCustomerAuthenticationErrorResponse'
        '404':
          description: Authentication was not found for this client with the provided `authenticationId`
      x-stoplight:
        id: 2jge5uc7awpqp
  /qr_code:
    put:
      security:
        - OAuth2:
            - qr_code_management
      tags:
        - QRCode
      summary: Generate a QR code
      operationId: GenerateQRCode
      requestBody:
        description: QR code information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddQrCodeRequest'
      responses:
        '201':
          description: QR code has been successfully generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddQrCodeResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: eolwdlx6do7le
    get:
      security:
        - OAuth2:
            - qr_code_management
      tags:
        - QRCode
      summary: List QR codes
      operationId: SearchQRCodes
      parameters:
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: QR codes found for this search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QrCodeCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: dbbvhiued45xy
  '/qr_code/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QrCodeId'
    delete:
      security:
        - OAuth2:
            - qr_code_management
      tags:
        - QRCode
      summary: Remove QR code
      operationId: RemoveQRCode
      responses:
        '204':
          description: QR has been successfully removed
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 834ugz57d7k3o
  '/qr_code/{id}/content':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QrCodeId'
    get:
      security:
        - OAuth2:
            - qr_code_management
      tags:
        - QRCode
      summary: Get QR code content
      operationId: GetQrCodeContent
      responses:
        '200':
          description: QR code content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQrCodeContentResponse'
        '404':
          description: QR code not found
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: dumro1otdwybo
  '/qr_code/{id}/display':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QrCodeId'
      - name: size
        in: query
        required: false
        schema:
          default: 200
          description: size in pixels of qrCode image to be generated
          type: integer
    get:
      security:
        - OAuth2:
            - qr_code_management
      tags:
        - QRCode
      summary: Get QR code image
      operationId: GetQrCodeDisplay
      responses:
        '200':
          description: QR code image
          content:
            image/png:
              schema:
                type: string
                format: binary
        '404':
          description: QR code not found
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: qv6grce0nbmyd
  /qr_code/information:
    get:
      security:
        - OAuth2:
            - qr_code_view
      tags:
        - QRCode
      summary: Get QR code information
      operationId: GetQRCodeInformation
      requestBody:
        description: QR code information
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  description: QR code data
      responses:
        '200':
          description: QR code information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QrCodeInformation'
        '400':
          description: Invalid QR code data
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 6g3utkqecjcut
  /bic-referential:
    get:
      security:
        - OAuth2:
            - bic_referential_view
      tags:
        - BIC referential list
      summary: Get bic referential list
      operationId: SearchBicReferential
      parameters:
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
        - name: search
          in: query
          description: Search value will match on BIC display name (`displayName` field)
          schema:
            type: string
      responses:
        '200':
          description: The BIC referential list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BicCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: qzpgu433qqhwm
  /spendings-categorization/categories:
    get:
      security:
        - OAuth2:
            - spendings_categorization_management
      tags:
        - Spendings categorization
      summary: Get available categories
      operationId: GetSpendingCategories
      responses:
        '200':
          $ref: '#/components/responses/GetSpendingsCategories'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
      x-stoplight:
        id: lga8wpljcv04v
  /spendings-categorization/available-additional-data:
    get:
      security:
        - OAuth2:
            - spendings_categorization_management
      tags:
        - Spending Categorization
      summary: Get available spending additional data keys
      operationId: GetSpendingAdditionalDataKeys
      responses:
        '200':
          $ref: '#/components/responses/GetSpendingsAdditionalData'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
      x-stoplight:
        id: 48mkqfacqunbo
  '/transactions/{transactionId}/attachments':
    parameters:
      - in: path
        name: transactionId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
    post:
      security:
        - OAuth2:
            - spendings_categorization_management
      tags:
        - Spendings categorization
      operationId: AddAttachmentToTransaction
      summary: Add attachment to transaction
      requestBody:
        $ref: '#/components/requestBodies/AddAttachmentToTransactionRequest'
      responses:
        '201':
          $ref: '#/components/responses/AttachmentAddedToTransactionResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: l85xvu7bgnoy1
    get:
      security:
        - OAuth2:
            - spendings_categorization_management
      tags:
        - Spendings categorization
      operationId: GetTransactionAttachmentsList
      summary: Get attachments on transaction
      responses:
        '200':
          $ref: '#/components/responses/GetTransactionAttachmentsListResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: xqc5540evsqmt
  '/transactions/{transactionId}/attachments/{attachmentId}':
    parameters:
      - in: path
        name: transactionId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      - in: path
        name: attachmentId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionAttachmentId'
    delete:
      security:
        - OAuth2:
            - spendings_categorization_management
      tags:
        - Spendings categorization
      operationId: DeleteTransactionAttachment
      summary: Delete attachments on transaction
      responses:
        '204':
          $ref: '#/components/responses/TransactionAttachmentDeletedResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: kj7i2o7qara6u
  '/transactions/{transactionId}/attachments/{attachmentId}/content':
    parameters:
      - in: path
        name: transactionId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      - in: path
        name: attachmentId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionAttachmentId'
    get:
      security:
        - OAuth2:
            - spendings_categorization_management
      tags:
        - Spendings categorization
      operationId: GetTransactionAttachmentContent
      summary: Get attachments content
      responses:
        '200':
          $ref: '#/components/responses/TransactionAttachmentContentResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: c7h3q74bzj9nt
  '/transactions/{transactionId}/attachments/{attachmentId}/preview':
    parameters:
      - in: path
        name: transactionId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      - in: path
        name: attachmentId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionAttachmentId'
    get:
      security:
        - OAuth2:
            - spendings_categorization_management
      tags:
        - Spendings categorization
      operationId: GetTransactionAttachmentThumbnail
      summary: Get attachments content thumbnail
      responses:
        '200':
          $ref: '#/components/responses/TransactionAttachmentPreviewResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: sesi7ijymui9q
  '/transactions/{transactionId}/spendings':
    parameters:
      - in: path
        name: transactionId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
    post:
      security:
        - OAuth2:
            - spendings_categorization_management
      tags:
        - Spendings categorization
      operationId: AddSpendingDetailOnTransaction
      summary: Add detailed spending on transaction
      requestBody:
        $ref: '#/components/requestBodies/AddSpendingDetailOnTransactionRequest'
      responses:
        '201':
          $ref: '#/components/responses/SpendingDetailAddedOnTransactionResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: bj7kj7vdewb2e
    get:
      security:
        - OAuth2:
            - spendings_categorization_management
      tags:
        - Spendings categorization
      operationId: GetSpendingDetailsOnTransaction
      summary: Get spending details on transaction
      responses:
        '200':
          $ref: '#/components/responses/GetSpendingDetailsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: ahohmg2uqvo69
  '/transactions/{transactionId}/spendings/{spendingId}':
    parameters:
      - in: path
        name: transactionId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      - in: path
        name: spendingId
        required: true
        schema:
          $ref: '#/components/schemas/SpendingDetailId'
    patch:
      security:
        - OAuth2:
            - spendings_categorization_management
      tags:
        - Spendings categorization
      operationId: UpdateSpendingDetail
      summary: Update spending detail
      description: |
        To delete an additional data value, use the `null` value with the corresponding key in the `additionalData` array.
        ```
        {
          "key": "additionalDataKey",
          "value": null
        }
        ```
      requestBody:
        $ref: '#/components/requestBodies/UpdateSpendingDetailRequest'
      responses:
        '200':
          $ref: '#/components/responses/SpendingDetailUpdatedResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: ro4av53k3agu8
    delete:
      security:
        - OAuth2:
            - spendings_categorization_management
      tags:
        - Spendings categorization
      operationId: DeleteSpendingDetail
      summary: Delete spending detail
      responses:
        '204':
          $ref: '#/components/responses/SpendingDetailDeletedResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: nlbg0q1obk825
  /beneficiaries:
    get:
      security:
        - OAuth2:
            - beneficiaries_usage
      tags:
        - Beneficiary management
      summary: Get beneficiaries list
      operationId: SearchBeneficiaries
      parameters:
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: the beneficiaries list of the final client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeneficiaryCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: n56i5dq63n1gp
    post:
      security:
        - OAuth2:
            - beneficiaries_management
      tags:
        - Beneficiary management
      summary: Confirm new beneficiary
      operationId: ConfirmNewBeneficiary
      requestBody:
        required: true
        description: Beneficiary information and OTP
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBeneficiaryConfirmRequest'
      responses:
        '201':
          description: Beneficiary was added successfully to the list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beneficiary'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: opuc6qvy365qa
  /beneficiaries/auth:
    post:
      security:
        - OAuth2:
            - beneficiaries_management
      tags:
        - Beneficiary management
      summary: Request new beneficiary
      operationId: RequestNewBeneficiary
      requestBody:
        required: true
        description: Beneficiary information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBeneficiaryCheckRequest'
      responses:
        '201':
          description: Operation is allowed and the beneficiary information are valid. OTP sent for validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beneficiary'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 05sir3ys7yyaj
  '/beneficiaries/{beneficiaryId}':
    parameters:
      - name: beneficiaryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BeneficiaryId'
    patch:
      security:
        - OAuth2:
            - beneficiaries_management
      tags:
        - Beneficiary management
      summary: Update a beneficiary
      operationId: UpdateBeneficiary
      requestBody:
        required: true
        description: Beneficiary information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeneficiaryUpdateRequest'
      responses:
        '200':
          description: the beneficiary has been successfully updated
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: dmr11mtiwfgyf
    delete:
      security:
        - OAuth2:
            - beneficiaries_management
      tags:
        - Beneficiary management
      summary: Delete a beneficiary
      operationId: RemoveBeneficiary
      responses:
        '200':
          description: Beneficiary deleted successfully
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: pu3uthfd6sme8
  /external-accounts:
    get:
      security:
        - OAuth2:
            - external_account_usage
      tags:
        - External account management
      summary: Get External account list
      operationId: SearchExternalAccount
      parameters:
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
      responses:
        '200':
          description: the External account list of the final client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccountCollection'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 60wuky6ts6m4y
    post:
      security:
        - OAuth2:
            - external_account_management
      tags:
        - External account management
      summary: Confirm new External account
      operationId: ConfirmNewExternalAccount
      requestBody:
        required: true
        description: External account information and OTP
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddExternalAccountConfirmRequest'
      responses:
        '201':
          description: External account was added successfully to the list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccount'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: r9gfynaqlwboc
  /external-accounts/auth:
    post:
      security:
        - OAuth2:
            - external_account_management
      tags:
        - External account management
      summary: Request new External account
      operationId: RequestNewExternalAccount
      requestBody:
        required: true
        description: External account information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddExternalAccountCheckRequest'
      responses:
        '201':
          description: Operation is allowed and the External account information are valid. OTP sent for validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccount'
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: tu7zo9fpgquln
  '/external-accounts/{externalAccountId}':
    parameters:
      - name: externalAccountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ExternalAccountId'
    patch:
      security:
        - OAuth2:
            - external_account_management
      tags:
        - External account management
      summary: Update an external account
      operationId: UpdateExternalAccount
      requestBody:
        required: true
        description: External account information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalAccountUpdateRequest'
      responses:
        '200':
          description: the external account has been successfully updated
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: i57r1y6wuqjy2
    delete:
      security:
        - OAuth2:
            - external_account_management
      tags:
        - External account management
      summary: Delete a External account
      operationId: RemoveExternalAccount
      responses:
        '200':
          description: External account deleted successfully
        '403':
          $ref: '#/components/responses/AccountBeingExaminedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: t201bg7dekw1t
  /onboarding/initiate:
    post:
      security:
        - OAuth2:
            - sda_customer_onboarding_create
      tags:
        - Onboarding
      summary: Initiate natural person onboarding
      operationId: InitiateNaturalPersonOnboarding
      requestBody:
        $ref: '#/components/requestBodies/InitiateNaturalPersonOnboardingRequest'
      responses:
        '204':
          description: Party onboarding has been initiated successfully.
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: elbejjhllnbm0
  /onboarding/file:
    get:
      security:
        - OAuth2:
            - sda_customer_onboarding_view
      tags:
        - Onboarding
      operationId: GetOnboardingFile
      summary: Get Client onboarding file
      description: |
        Returns the Client onboarding file containing the onboarding form, status and possible actions.
      responses:
        '200':
          $ref: '#/components/responses/GetOnboardingFileResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: gntr56qjr8x78
    patch:
      security:
        - OAuth2:
            - sda_customer_onboarding_update
      tags:
        - Onboarding
      operationId: UpdateOnboardingFile
      summary: Update Client onboarding file
      description: |
        Update Client onboarding file content and returns newly updated file containing the onboarding form, status and possible actions.
      requestBody:
        $ref: '#/components/requestBodies/OnboardingFileUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/OnboardingFileUpdatedResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: 6dx5agq9ja7gv
  /onboarding/submit:
    post:
      security:
        - OAuth2:
            - sda_customer_onboarding_submit
      tags:
        - Onboarding
      operationId: SubmitOnboardingFile
      summary: Submit Client onboarding file
      description: Submits the Client completed onboarding file
      responses:
        '204':
          description: Onboarding file submitted successfully
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: 4v8x29e7czm0x
  '/documents/{documentId}':
    parameters:
      - name: documentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DocumentId'
    get:
      security:
        - OAuth2:
            - identity_documents_view
      tags:
        - Documents management
      summary: Retrieve a document
      operationId: GetDocument
      responses:
        '200':
          description: Example response (Status 200)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '404':
          description: Document not found with this ID
      x-stoplight:
        id: 9naj3qurgohdd
  '/documents/{documentId}/content':
    parameters:
      - name: documentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DocumentId'
    get:
      security:
        - OAuth2:
            - identity_documents_view
      tags:
        - Documents management
      summary: Retrieve a document's content
      operationId: GetDocumentContent
      responses:
        '200':
          description: The document content
        '404':
          description: Document not found with this ID
      x-stoplight:
        id: g2x15h2ufk7i8
  '/documents/{documentId}/preview':
    parameters:
      - name: documentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DocumentId'
    get:
      security:
        - OAuth2:
            - identity_documents_view
      tags:
        - Documents management
      summary: 'Retrieve a document''s preview content, with a max width of 200px'
      operationId: GetDocumentPreview
      responses:
        '200':
          description: The document's preview content
        '404':
          description: Document not found with this ID
      x-stoplight:
        id: huwa8c0zeqock
  '/customer-actions/initiate-action/{action-code}':
    parameters:
      - name: action-code
        in: path
        description: The code of the customer action to initiate
        required: true
        schema:
          type: string
          example: email_change
    put:
      security:
        - OAuth2:
            - sda_customer-actions_initiate
      tags:
        - Customer Actions
      operationId: InitiateCustomerAction
      summary: Initiate customer action
      responses:
        '201':
          $ref: '#/components/responses/InitiateCustomerActionResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: n8bpqj3bjtcs1
  '/customer-actions/ongoing-actions/{customerActionBusinessProcessId}':
    parameters:
      - name: customerActionBusinessProcessId
        in: path
        description: The id of the customer action business process to get
        required: true
        schema:
          $ref: '#/components/schemas/CustomerActionBusinessProcessId'
    get:
      security:
        - OAuth2:
            - sda_customer-actions_read
      tags:
        - Customer Actions
      operationId: GetOngoingCustomerActionBusinessProcess
      summary: Get ongoing customer action business process
      responses:
        '200':
          $ref: '#/components/responses/GetOngoingCustomerActionBusinessProcessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: cggef75ktxe78
    patch:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerActionUpdateRequest'
      security:
        - OAuth2:
            - sda_customer-actions_initiate
      tags:
        - Customer Actions
      operationId: UpdateOngoingCustomerActionBusinessProcess
      summary: Update ongoing customer action business process
      responses:
        '200':
          $ref: '#/components/responses/GetOngoingCustomerActionBusinessProcessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: bcgaka6y5t0m5
  '/customer-actions/ongoing-actions/{customerActionBusinessProcessId}/submit':
    parameters:
      - name: customerActionBusinessProcessId
        in: path
        description: The id of the customer action business process to edit
        required: true
        schema:
          $ref: '#/components/schemas/CustomerActionBusinessProcessId'
    post:
      security:
        - OAuth2:
            - sda_customer-actions_initiate
      tags:
        - Customer Actions
      operationId: SubmitOngoingCustomerActionBusinessProcess
      summary: submit ongoing customer action business process
      responses:
        '204':
          description: Customer Action Business Process submitted successfully
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: nmrddrwim7f19
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: /oauth2/token
          scopes:
            client_onboarding: Allow the API client to perform Client onboarding
            pincode_check: Allow the API client to verify a Client secret code
            acceptor_search: Allow the API client to perform Acceptor search
            configuration: Allow the API client to fetch the platform configuration
            sda_customer_onboarding_create: Can initiate party onboarding process
        authorizationCode:
          authorizationUrl: /oauth2/authorize
          tokenUrl: /oauth2/token
          refreshUrl: /oauth2/refresh
          scopes:
            client_onboarding: Allow the API client to perform Client onboarding
            pincode_check: Allow the API client to verify a Client secret code
            acceptor_search: Allow the API client to perform Acceptor search
            configuration: Allow the API client to fetch the platform configuration
            sda_customer_onboarding_create: Can initiate party onboarding process
            otp_check: Allow the API client to check a connection OTP
            payment: Client can make NSDT2.0 payment transaction
            bill_payment: Client can make bill payment transaction
            p2p_transfer: Client can make money transfers to another client
            p2p_cash_transfer: Client can send cash transfer
            retrieve_cash_transfer: Client can retrieve a cas transfer
            payout: Client can make external transfers
            transaction_code: Client can generate transaction codes
            subscribe_loan: Client can subscribe loans
            consult_loans: Client can consult ongoing loans
            wallet_to_bank: (Mobile Banking) Client can make wallet to bank transaction
            bank_to_wallet: (Mobile Banking) Client can make bank to wallet transaction
            consult_bank_account: (Mobile Banking) Client can consult bank account history and balance
            cards_management: Client can manage his cards
            card_sensitive_data_view: Client can view sensitive card's details
            mobiles_management: Client can manage his mobiles
            notifications: Client has access to in-app notification service
            kyc_view: View client personnal information
            kyc_update: Update client personnal information
            pincode_update: Change client pincode
            accounts_view: View accounts balances and history
            recipients_view: View recipients
            recipients_update: Update recipient list
            consult_authorization_holds: Client can consult authorization holds for an account
            wallet_recharge_by_card: Client can recharge their account with a debit card operation
            p2p_transfer_dedicated: Client can make money transfers to another client for a particular shop
            qr_code_management: Client can manage QR codes
            qr_code_view: Get public information about qr-code
            strong_customer_authentication: Client can manage their strong customer authentication requests
            bic_referential_view: Retrieve BIC referential
            spendings_categorization_management: Client can manage spending categorization
            sda_customer_onboarding_submit: Can submit completed onboarding files
            sda_customer_onboarding_view: Can view parties onboarding processes
            sda_customer_onboarding_update: Can update parties onboarding files
            sda_customer-actions_initiate: Can initiate a customer action process
            sda_customer-actions_read: Can access to existing customer action processes details
            beneficiaries_management: Can edit customer's beneficiaries
            beneficiaries_usage: Can use existing customer's beneficiaries informations
            cards_virtual_creation: Can create new virtual payment cards
            external_account_management: Can manage external accounts
            external_account_usage: Can use existing external accounts
            identity_documents_view: Can visualize customer related documents
            wallet_recharge_by_psp: Can recharge wallet account using a PSP
            withdraw: Can initiate a withdraw
        password:
          tokenUrl: /oauth2/token and /oauth2/otp
          refreshUrl: /oauth2/refresh
          scopes:
            client_onboarding: Allow the API client to perform Client onboarding
            pincode_check: Allow the API client to verify a Client secret code
            acceptor_search: Allow the API client to perform Acceptor search
            configuration: Allow the API client to fetch the platform configuration
            sda_customer_onboarding_create: Can initiate party onboarding process
            otp_check: Allow the API client to check a connection OTP
            payment: Client can make NSDT2.0 payment transaction
            bill_payment: Client can make bill payment transaction
            p2p_transfer: Client can make money transfers to another client
            p2p_cash_transfer: Client can send cash transfer
            retrieve_cash_transfer: Client can retrieve a cas transfer
            payout: Client can make external transfers
            transaction_code: Client can generate transaction codes
            subscribe_loan: Client can subscribe loans
            consult_loans: Client can consult ongoing loans
            wallet_to_bank: (Mobile Banking) Client can make wallet to bank transaction
            bank_to_wallet: (Mobile Banking) Client can make bank to wallet transaction
            consult_bank_account: (Mobile Banking) Client can consult bank account history and balance
            cards_management: Client can manage his cards
            card_sensitive_data_view: Client can view sensitive card's details
            mobiles_management: Client can manage his mobiles
            notifications: Client has access to in-app notification service
            kyc_view: View client personnal information
            kyc_update: Update client personnal information
            pincode_update: Change client pincode
            accounts_view: View accounts balances and history
            recipients_view: View recipients
            recipients_update: Update recipient list
            consult_authorization_holds: Client can consult authorization holds for an account
            wallet_recharge_by_card: Client can recharge their account with a debit card operation
            p2p_transfer_dedicated: Client can make money transfers to another client for a particular shop
            qr_code_management: Client can manage QR codes
            qr_code_view: Get public information about qr-code
            strong_customer_authentication: Client can manage their strong customer authentication requests
            bic_referential_view: Retrieve BIC referential
            spendings_categorization_management: Client can manage spending categorization
            sda_customer_onboarding_submit: Can submit completed onboarding files
            sda_customer_onboarding_view: Can view parties onboarding processes
            sda_customer_onboarding_update: Can update parties onboarding files
            sda_customer-actions_initiate: Can initiate a customer action process
            sda_customer-actions_read: Can access to existing customer action processes details
            beneficiaries_management: Can edit customer's beneficiaries
            beneficiaries_usage: Can use existing customer's beneficiaries informations
            cards_virtual_creation: Can create new virtual payment cards
            external_account_management: Can manage external accounts
            external_account_usage: Can use existing external accounts
            identity_documents_view: Can visualize customer related documents
            wallet_recharge_by_psp: Can recharge wallet account using a PSP
            withdraw: Can initiate a withdraw
  requestBodies:
    AddAttachmentToTransactionRequest:
      description: Document data to attach to transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAttachment'
    AddSpendingDetailOnTransactionRequest:
      description: Spending details to add on transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpendingDetail'
    UpdateSpendingDetailRequest:
      description: Spending details to add on transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpendingDetailUpdate'
    InitiateNaturalPersonOnboardingRequest:
      description: Enrollment initiation request
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - phoneNumber
              - lastName
              - firstName
              - privacyPolicyAcceptance
              - termsAcceptance
            properties:
              email:
                type: string
                description: Person to create e-mail address. Will be used as `login` if request's `login` field is empty
                example: john.doe@email.com
                format: email
              phoneNumber:
                $ref: '#/components/schemas/Phone'
              lastName:
                type: string
                description: Person to create last name
                example: Doe
              firstName:
                type: string
                description: Person to create first name
                example: John
              privacyPolicyAcceptance:
                type: boolean
                description: Person to agree privacy policy acceptance
                example: true
              termsAcceptance:
                type: boolean
                description: Person to agree terms acceptance
                example: true
    OnboardingFileUpdateRequest:
      description: Onboarding update request
      content:
        application/json:
          schema:
            type: object
            required:
              - form
            properties:
              form:
                $ref: '#/components/schemas/InputCollectionUpdate'
  responses:
    EnrollmentClientExistsErrorResponse:
      description: 'Code 30234: Enrollment is not authorized with this phone number'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Error'
              - properties:
                  code:
                    example: 30234
                  message:
                    example: Client already exists
    ErrorResponse:
      description: Request could not be processed
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                $ref: '#/components/schemas/Error'
    WithdrawAmountRequiredResponse:
      description: 'Code 62320: Amount is required. Ask preauth again with amount'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Error'
              - properties:
                  code:
                    example: 62320
                  message:
                    example: Amount is required
    StrongCustomerAuthenticationErrorResponse:
      description: Value entered on virtual keyboard does not match user secret code
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                $ref: '#/components/schemas/Error'
    GetSpendingsCategories:
      description: Categories to use for expense management
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpendingCategoryArray'
    UnauthorizedResponse:
      description: Request client is not authorized to access this endpoint
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    InternalServerErrorResponse:
      description: Server encountered an unhandled internal error during request processing
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Error'
              - example:
                  message: Internal server error
                  hint: ''
    GetSpendingsAdditionalData:
      description: Categories to use for expense management
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpendingsAdditionalData'
    AttachmentAddedToTransactionResponse:
      description: A new attachment has been added successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAttachment'
    InvalidRequestResponse:
      description: Request is not valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidRequestError'
    ForbiddenResponse:
      description: Request client was not allowed to make this action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    GetTransactionAttachmentsListResponse:
      description: The list of attachments of the transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAttachmentsList'
    NotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    TransactionAttachmentDeletedResponse:
      description: Transaction attachment has been successfully deleted
    TransactionAttachmentContentResponse:
      description: Document content (check `Content-Type` header value to know the exact MIME type of content)
      headers:
        Content-Type:
          description: Returned file MIME type
          schema:
            type: string
            example: image/png
      content:
        image/jpeg:
          schema:
            type: string
            format: binary
        image/gif:
          schema:
            type: string
            format: binary
        image/png:
          schema:
            type: string
            format: binary
        application/pdf:
          schema:
            type: string
            format: binary
    TransactionAttachmentPreviewResponse:
      description: Document content (check `Content-Type` header value to know the exact MIME type of content)
      headers:
        Content-Type:
          description: Returned file MIME type
          schema:
            type: string
            example: image/png
      content:
        image/png:
          schema:
            type: string
            format: binary
    SpendingDetailAddedOnTransactionResponse:
      description: A new spending detail has been added successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpendingDetail'
    GetSpendingDetailsResponse:
      description: The list of spending details of the transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpendingDetailsList'
    SpendingDetailUpdatedResponse:
      description: Spending detail has been updated successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpendingDetail'
    SpendingDetailDeletedResponse:
      description: Spending detail has been successfully deleted
    GetOnboardingFileResponse:
      description: Response contains onboarding file content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OnboardingFile'
    OnboardingFileUpdatedResponse:
      description: Onboarding file was updated successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OnboardingFile'
    InitiateCustomerActionResponse:
      description: Response to customer action initiation request
      content:
        application/json:
          schema:
            type: object
            required:
              - id
              - links
            properties:
              id:
                type: integer
                example: 42
              links:
                type: object
                required:
                  - rel
                  - href
                properties:
                  rel:
                    type: string
                    example: self
                  href:
                    type: string
                    example: 'https://sandbox.skaleet.com/api/client/v1/customer-actions/42'
    GetOngoingCustomerActionBusinessProcessResponse:
      description: Response to customer action business process request
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/CustomerActionBusinessProcess'
              - type: object
                required:
                  - form
                properties:
                  form:
                    $ref: '#/components/schemas/InputCollection'
    AccountBeingExaminedResponse:
      description: Your account opening request is being examined
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
            x-examples:
              Example 1:
                error:
                  code: 70516
                  message: Your account opening request is being examined
  schemas:
    Phone:
      type: string
      description: |
        Phone number in international format (E.164)

        (without plus sign, dashes or spaces)
      example: '33612354678'
      pattern: '^[0-9]+$'
      x-stoplight:
        id: b8yyyxzg3amcz
    InputCollection:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            inputs:
              type: array
              items:
                $ref: '#/components/schemas/Input'
      x-stoplight:
        id: kzxaiksg8olhn
    EnrollmentRequest:
      type: object
      required:
        - metadata
      properties:
        metadata:
          $ref: '#/components/schemas/EnrollmentRequestMetadata'
        data:
          $ref: '#/components/schemas/EnrollmentRequestData'
      x-stoplight:
        id: evs3gdgf9c4r3
    EnrollmentResponse:
      type: object
      required:
        - metadata
      properties:
        metadata:
          $ref: '#/components/schemas/EnrollmentResponseMetadata'
      x-stoplight:
        id: f1pbjfrjmahen
    ClientInformation:
      type: object
      description: the client basic information and configuration
      required:
        - mobile
        - alias
        - rights
      properties:
        mobile:
          allOf:
            - $ref: '#/components/schemas/Phone'
            - readOnly: true
        lastName:
          type: string
          description: last name
          readOnly: true
        firstName:
          type: string
          description: first name
          readOnly: true
        maidenName:
          type: string
          description: maiden name
          readOnly: true
        postName:
          type: string
          description: post name
          readOnly: true
        alias:
          type: string
          description: alias
          readOnly: true
        email:
          type: string
          format: email
          description: contact e-mail address
          readOnly: true
        lang:
          $ref: '#/components/schemas/Lang'
        address:
          allOf:
            - $ref: '#/components/schemas/Address'
            - readOnly: true
        birthDate:
          type: string
          format: date
          description: date of birth (yyyy-mm-dd)
          example: '1970-01-01'
          readOnly: true
        birthPlace:
          type: string
          description: place of birth
          readOnly: true
        gender:
          allOf:
            - $ref: '#/components/schemas/Gender'
            - readOnly: true
        contactphone:
          allOf:
            - $ref: '#/components/schemas/Phone'
            - description: contact phone number
        lastLogin:
          type: string
          format: date-time
          readOnly: true
        mustChangePincode:
          type: boolean
          description: true if the final client msut change its temporary pincode before doing any transaction
          example: false
          readOnly: true
        status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - readOnly: true
        requiredActions:
          type: object
          description: Required action of the client
          properties:
            type:
              type: string
              description: The type of the required action
            reason:
              type: string
              description: The reason of the required action
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getOngoingOnboardingFile` [GET] Load the current onboarding file
              * `updateEmailAddress` [PUT] Update email address
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: getOngoingOnboardingFile
              href: 'https://sandbox.skaleet.com/api/client/v1/onboarding/file'
            - rel: updateEmailAddress
              href: 'https://sandbox.skaleet.com/api/client/v1/customer-actions/initiate-action/CUSTOMER_ACTION_CODE'
      x-stoplight:
        id: bk3h7qgz3tvmx
    PincodeSubmission:
      type: object
      required:
        - id
        - value
      properties:
        id:
          $ref: '#/components/schemas/PincodeKeyboardId'
        value:
          $ref: '#/components/schemas/ClientPincode'
      x-stoplight:
        id: jzh4go1b3g3eg
    AccountStatus:
      type: string
      description: The account status
      readOnly: true
      enum:
        - OPENED
        - CLOSED
        - BLOCKED
        - DEBIT_BLOCKED
        - CREDIT_BLOCKED
      x-stoplight:
        id: 0m47j2krm10xh
    AccountCollection:
      description: Sorted and paginated list of accounts
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of accounts
              items:
                $ref: '#/components/schemas/Account'
      x-stoplight:
        id: pab05ji83wih9
    AccountId:
      type: string
      description: Account identifier
      example: ACC123
      x-stoplight:
        id: 8mvwk7z1plcps
    AccountFeesStatementCollection:
      description: Sorted by end date and paginated list of account fees statements
      allOf:
        - type: object
          properties:
            items:
              type: array
              description: collection of statements sorted by end date
              items:
                $ref: '#/components/schemas/AccountFeesStatement'
            count:
              type: integer
              description: the number of elements returned in `items` array
              minimum: 0
            total:
              type: integer
              description: the total number of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
      x-stoplight:
        id: wwmwlicttbkfi
    AccountFeesStatementId:
      type: string
      description: Account fees statement identifier
      example: ACCSTAT12
      x-stoplight:
        id: uvnk0ac9a028r
    AccountFeesStatement:
      type: object
      required:
        - id
        - fromDate
        - toDate
        - generatedDate
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/AccountFeesStatementId'
            - readOnly: true
        fromDate:
          type: string
          format: date-time
          description: the begin date of the period of time covered by this statement
        toDate:
          type: string
          format: date-time
          description: the end date of the period of time covered by this statement
        generatedDate:
          type: string
          format: date-time
          description: the date of generation of the statement
      x-stoplight:
        id: ngkmg75z0cp5z
    AccountStatementCollection:
      description: Paginated list of account statements
      allOf:
        - type: object
          properties:
            items:
              type: array
              description: Paginated list of account statements
              items:
                $ref: '#/components/schemas/AccountStatement'
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              items:
                $ref: '#/components/schemas/Link'
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/client/v1/accounts/10000000157/statements?limit=20&offset=40'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/client/v1/accounts/10000000157/statements?limit=20&offset=60'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/client/v1/accounts/10000000157/statements?limit=20&offset=20'
      x-stoplight:
        id: 58wqlm6v927kb
    AccountStatementId:
      type: string
      description: Account statement identifier
      example: ACCSTAT12
      x-stoplight:
        id: 9wkl0b9o1sbol
    AccountStatement:
      type: object
      required:
        - id
        - fromDate
        - toDate
        - generatedDate
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/AccountStatementId'
            - readOnly: true
        fromDate:
          type: string
          format: date-time
          description: the begin date of the period of time covered by this statement
        toDate:
          type: string
          format: date-time
          description: the end date of the period of time covered by this statement
        generatedDate:
          type: string
          format: date-time
          description: the date of generation of the statement
        label:
          type: string
          description: a displayable label for this document
      x-stoplight:
        id: lnv1zfu10qq74
    DeviceCollection:
      type: object
      description: Sorted and paginated list of devices
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of devices
              items:
                $ref: '#/components/schemas/Device'
      x-stoplight:
        id: thgh2toruadr0
    CreateMobileRequest:
      type: object
      required:
        - number
      properties:
        number:
          allOf:
            - $ref: '#/components/schemas/Phone'
        alias:
          type: string
          description: a customizable alias for this number
      x-stoplight:
        id: ac8g3v1gfjadb
    DeviceId:
      type: string
      description: a device system identifier
      example: DEV1
      x-stoplight:
        id: 7jl7l4hxqeghs
    CardId:
      type: string
      description: Card identifier
      example: CARD123
      x-stoplight:
        id: rcvk473f15hlq
    CardState:
      type: string
      description: Card state
      enum:
        - NEW
        - PENDING
        - ACTIVE
        - EXPIRED
        - REMOVED
        - BLOCKED
        - OPPOSED
        - CANCELLED
      x-stoplight:
        id: ecnup6grx4ase
    CardCollection:
      description: Sorted and paginated list of cards
      allOf:
        - type: object
          properties:
            items:
              type: array
              description: collection of cards
              items:
                allOf:
                  - $ref: '#/components/schemas/CardItem'
                  - type: object
                    properties:
                      links:
                        $ref: '#/components/schemas/CardLinksCollection'
        - type: object
          properties:
            sort:
              type: string
              description: Default Order By Creation Date Desc
              default: '-creationDate'
        - $ref: '#/components/schemas/Collection'
      x-stoplight:
        id: a4br48vc5a8rc
    CardItem:
      type: object
      required:
        - id
        - accountId
        - productId
        - productName
        - type
        - status
      properties:
        id:
          $ref: '#/components/schemas/CardId'
        accountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - readOnly: true
        productId:
          $ref: '#/components/schemas/ProductId'
        productName:
          type: string
          description: The card product Name
        type:
          $ref: '#/components/schemas/CardType'
        status:
          type: string
          readOnly: true
          enum:
            - NEW
            - PENDING
            - ACTIVE
            - EXPIRED
            - REMOVED
            - BLOCKED
            - OPPOSED
        description:
          type: string
        embossedName:
          type: string
          description: The card holder name
          example: John Doe
        embossedReference:
          type: string
          description: 'Reference at the back of the card, if any'
        panDisplay:
          type: string
          readOnly: true
          example: 5119 77XX XXXX 4431
        createdAt:
          type: string
          readOnly: true
          format: date-time
          description: Card creation date (date in ATOM format)
          example: '2022-01-20T01:23:45+02:00'
        expirationDate:
          type: string
          readOnly: true
          description: Card expiration date (YYYY-MM)
          example: 2022-12
        lastUsageDate:
          type: string
          readOnly: true
          format: date-time
          description: Card last usage date (date in ATOM format)
          example: '2022-01-20T01:23:45+02:00'
        limits:
          type: object
          description: Card's limits
        features:
          type: array
          readOnly: true
          description: Available card features
          items:
            $ref: '#/components/schemas/CardFeature'
        externalId:
          $ref: '#/components/schemas/CardExternalId'
        userId:
          $ref: '#/components/schemas/IdentityId'
        contractId:
          type: string
          description: Card contract associated with the card. Leave empty to create a card in a new contract.
        currency:
          type: string
          readOnly: true
          description: Card and account currency
          example: EUR
        productCode:
          type: string
          readOnly: true
          description: Product Code
          example: PRD1
        profileId:
          allOf:
            - $ref: '#/components/schemas/UserProfileId'
            - readOnly: true
        image:
          type: string
          description: URL used to retrieve image associated with card product
          example: 'https://sandbox.skaleet.com/api/client/v1/cards/42/image'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        pendingManagementOperation:
          $ref: '#/components/schemas/PendingManagementOperation'
        anonymous:
          type: boolean
          description: Is this an anonymous card ? Anonymous cards don't have customer's name embossed on the physical card
        externalStatus:
          $ref: '#/components/schemas/CardExternalStatus'
        replacedBy:
          description: collection of cards that replaced this card
          required:
            - cardId
            - replacementReason
          type: array
          items:
            description: Test
            type: object
            properties:
              cardId:
                example: 1234
                type: integer
              replacementReason:
                $ref: '#/components/schemas/CardRefabricateReason'
        replacementFor:
          type: string
          description: Id of the card that this card replaced
          example: CARD789
        replacementReason:
          $ref: '#/components/schemas/CardRefabricateReason'
        virtual:
          type: boolean
          description: Is this a virtual card ?
        label:
          type: string
          description: Label of the card
      x-stoplight:
        id: 1xkmvk3c11s4y
    CardLinksCollection:
      type: array
      description: Card's available actions
      items:
        type: object
        properties:
          rel:
            type: string
            description: Action identifier
            enum:
              - refabricateCard
              - reissueCardCode
              - opposeCard
              - blockCard
              - unblockCard
              - activateCard
              - activateCardWithCode
              - updateCardFeatures
              - updateCardLimits
              - deactivateCard
              - getOutstandings
          href:
            type: string
            description: Action endpoint url
            example: 'https://sandbox.skaleet.com/api/client/v1/cards/94280/_actions/activate'
      x-stoplight:
        id: 4jx5ph0be5ef1
    CardFeature:
      type: object
      required:
        - id
        - enabled
      properties:
        id:
          $ref: '#/components/schemas/CardFeatureId'
        enabled:
          type: boolean
          description: Is feature enabled ?
      x-stoplight:
        id: hfa5n15wwt4d6
    Limit:
      type: object
      required:
        - limit
        - amount
      properties:
        limit:
          $ref: '#/components/schemas/CardLimit'
        amount:
          description: Limit amount (in cents)
          type: integer
      x-stoplight:
        id: cfft61bi66q9b
    PendingManagementOperation:
      type: object
      required:
        - operationType
      properties:
        operationType:
          $ref: '#/components/schemas/OperationType'
        featureId:
          $ref: '#/components/schemas/CardFeatureId'
      x-stoplight:
        id: yujicowuf1a4j
    CardDetail:
      type: object
      properties:
        encryptedPan:
          type: string
          example: '73894094'
        encryptedCvv:
          type: string
          example: ae739mepc
        expirationMonth:
          type: string
          example: '11'
        expirationYear:
          type: string
          example: '26'
      x-stoplight:
        id: vrgypelhjwtma
    CardImage:
      type: object
      properties:
        content:
          type: string
          example: dGVzdA==
      x-stoplight:
        id: i3oh59fgwdy5k
    CardCreation:
      type: object
      x-stoplight:
        id: yfc2qugjk6rw8
      properties:
        productId:
          type: string
          description: 'Skaleet platform Product Id. If not given, will use the the available card product for the client'
          example: PRO123
        embossedReference:
          type: string
          description: 'Mandatory for anonymous cards, reference at the back of the card to link anonymous card with an account'
        contractId:
          type: string
          description: Card contract associated with the card. Leave empty to create a card in a new contract.
        pincode:
          type: string
          description: Pincode of the card. Must be 4 digits if defined
          example: '1234'
        limits:
          $ref: ./CardLimits.yaml
        features:
          type: object
          properties:
            cashOperation:
              type: boolean
              example: true
              description: Are cash operation available ?
            foreignPayment:
              type: boolean
              example: false
              description: Is foreign payment available ?
            onlinePayment:
              type: boolean
              example: true
              description: Is online payment available ?
            nfc:
              type: boolean
              example: false
              description: Is NFC payment allowed ?
            paymentAuthorized:
              type: boolean
              example: false
              description: Is payment authorized ?
            foreignWithdrawal:
              type: boolean
              example: true
              description: Is foreign withdrawal allowed ?
            foreignOnlinePayment:
              type: boolean
              example: true
              description: Is foreign online payment allowed ?
    CardError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: error code
          example: 1234
        message:
          type: string
          description: This is an error message that can be shown to the end user
          example: something went wrong because requirement X was not met.
        hint:
          type: string
          description: This is a more technical message about the current error. It can be used to better understand the underlying issue. This is intended for developer usage
      x-stoplight:
        id: fsl5miqejckrv
    Outstanding:
      type: object
      required:
        - id
        - limit
        - current
      properties:
        id:
          type: string
          description: Partner's limit id
          example: OUT1
        label:
          type: string
          description: Limit label
          example: Monthly payment
        type:
          type: string
          description: Limit type
          example: LIMIT_PAYMENT_MONTH
          enum:
            - LIMIT_CASHOUT_DAY
            - LIMIT_CASHOUT_WEEK
            - LIMIT_CASHOUT_MONTH
            - LIMIT_CASHOUT_YEAR
            - LIMIT_CASHOUT_ALL
            - LIMIT_PAYMENT_DAY
            - LIMIT_PAYMENT_WEEK
            - LIMIT_PAYMENT_MONTH
            - LIMIT_PAYMENT_YEAR
            - LIMIT_PAYMENT_ALL
        limit:
          type: object
          required:
            - value
          properties:
            value:
              type: integer
              description: Limit amount or number of usage
              example: 1337
            currency:
              type: string
              format: iso-4217
              description: 'Three-letter ISO currency code, in uppercase. Read more at https://fr.wikipedia.org/wiki/ISO_4217. Only if limit is an amount.'
              example: EUR
        current:
          type: object
          required:
            - value
          properties:
            value:
              type: integer
              description: Current amount or number of usage
              example: 42
            currency:
              type: string
              format: iso-4217
              description: 'Three-letter ISO currency code, in uppercase. Read more at https://fr.wikipedia.org/wiki/ISO_4217. Only if current is an amount.'
              example: EUR
        period:
          $ref: '#/components/schemas/Duration'
        termDay:
          type: integer
          description: Outstanding's term day. DD format.
          minimum: 1
          maximum: 31
        specificPeriod:
          type: object
          required:
            - startDate
            - endDate
          description: Start and end date of the period when specified
          properties:
            startDate:
              type: string
              description: Period's start date
              format: date-time
            endDate:
              type: string
              description: Period's end date
              format: date-time
      x-stoplight:
        id: k19sx9lbg49pj
    TransactionId:
      type: string
      description: Skaleet platform transaction id
      example: TRX123
      x-stoplight:
        id: i6w0m6h6ucdmc
    TransactionType:
      type: string
      readOnly: true
      description: Transaction type
      enum:
        - ACCOUNT_TO_ACCOUNT
        - ON_US_DIRECT_DEBIT
        - ACCOUNT_TO_EXTERNAL_TRF
        - ACCOUNT_TO_TRANSIT
        - ADJUSTMENT
        - BANK_TO_WALLET
        - BLOCK_ACCOUNT
        - BUY_DEPOSIT
        - CARD
        - CASH_TO_EXTERNAL_TRF
        - CASHIN
        - CASHIN_TO_TRANSIT
        - CASHOUT
        - CASHOUT_FROM_EXTERNAL_TRF
        - CASHOUT_FROM_TRANSIT
        - CLOSE_ACCOUNT
        - DEPOSIT
        - DISTRIBUTOR_POSTING
        - EXTERNAL
        - EXTERNAL_TO_MONEYPOT
        - ETM_SCREENING
        - ETM_SCREENING_SUCCESS
        - ETM_SCREENING_FAIL
        - ETM_SCREENING_FAIL_TO_SUCCESS
        - EXTERNAL_TRF_TO_ACCOUNT
        - EXTERNAL_TRF_WITHDRAW
        - FEES_PAYMENT
        - FEES_REFUND
        - INVOICE_GENERATION
        - MAINTENANCE_PAYMENT
        - ONLINE_PAYMENT
        - OPEN_ACCOUNT
        - OVERBALANCE
        - PAYBILL_ACCOUNT
        - PAYBILL_CASH
        - PAYMENT
        - PAYMENT_FUNDS_RESERVATION
        - POSTING
        - RECHARGE_BALANCE
        - RECHARGE_CREDIT_CARD
        - REVERSAL
        - SALARY_DISBURSEMENT
        - SALARY_TO_ACCOUNT
        - SELL_DEPOSIT
        - SETTLEMENT_TO_ACCOUNT
        - SETTLEMENT_TO_CASH
        - TRANSIT_TO_ACCOUNT
        - UNBLOCK_ACCOUNT
        - WALLET_TO_BANK
        - WALLET_TO_BANK_ARCHIVE
        - MAD_APPROVAL
        - MAD_REFUSAL
        - MAD_CREATION
      x-stoplight:
        id: l3wht5x7xmwre
    TransactionExternalId:
      type: string
      description: Client custom data (external) for TransactionId
      example: EXT123456789
      x-stoplight:
        id: em6hyftapk6d2
    AccountAccountingEntryCollection:
      description: Sorted and paginated list of accounting entries
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: 'Array of accounting entries (srcAccount, dstAccount, amount)'
              items:
                $ref: '#/components/schemas/AccountAccountingEntry'
            startDate:
              type: string
              format: date-time
              description: Transaction date range start
            endDate:
              type: string
              format: date-time
              description: Transaction date range end
      x-stoplight:
        id: f29vi91q5pyy7
    TransactionDirection:
      type: string
      description: Transaction direction
      enum:
        - debit
        - credit
      x-stoplight:
        id: j051a2a5fcqz9
    TransactionCollection:
      description: Sorted and paginated list of transactions
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: Array of transactions
              items:
                $ref: '#/components/schemas/TransactionAccounting'
            startDate:
              type: string
              format: date-time
              description: Transaction date range start
            endDate:
              type: string
              format: date-time
              description: Transaction date range end
      x-stoplight:
        id: pa5hnnxdi2wrw
    RecipientId:
      type: string
      description: Recipient Skaleet platform ID
      example: REC2
      x-stoplight:
        id: grspgp733zo8j
    TransactionRequest:
      type: object
      required:
        - metadata
        - data
      properties:
        metadata:
          $ref: '#/components/schemas/TransactionRequestMetadata'
        data:
          type: object
      x-stoplight:
        id: m52qjgk99n23a
    TransactionResponse:
      type: object
      required:
        - metadata
        - data
      properties:
        metadata:
          $ref: '#/components/schemas/TransactionResponseMetadata'
        data:
          type: object
      x-stoplight:
        id: uc2fdk0fm7ozb
    PayoutResponse:
      type: object
      required:
        - metadata
        - data
      properties:
        metadata:
          $ref: '#/components/schemas/PayoutResponseMetadata'
        data:
          type: object
      x-stoplight:
        id: ew7e51u9pstz2
    PaymentToken:
      type: object
      description: A payment transaction token
      required:
        - token
        - type
      properties:
        token:
          description: Payment transaction token
          type: string
        type:
          $ref: '#/components/schemas/PaymentTokenType'
      x-stoplight:
        id: hwzv78fsspw61
    InputValues:
      type: object
      description: Input values
      additionalProperties:
        type: string
      example:
        id1: value1
        id2: value2
      x-stoplight:
        id: 56bweu1wa9b8o
    Input:
      oneOf:
        - $ref: '#/components/schemas/TextInput'
        - $ref: '#/components/schemas/AmountInput'
        - $ref: '#/components/schemas/BoolInput'
        - $ref: '#/components/schemas/DateInput'
        - $ref: '#/components/schemas/DateTimeInput'
        - $ref: '#/components/schemas/DurationInput'
        - $ref: '#/components/schemas/EmailInput'
        - $ref: '#/components/schemas/FileInput'
        - $ref: '#/components/schemas/InputCollection'
        - $ref: '#/components/schemas/IntInput'
        - $ref: '#/components/schemas/IpInput'
        - $ref: '#/components/schemas/SelectInput'
        - $ref: '#/components/schemas/MultiSelectInput'
        - $ref: '#/components/schemas/NumberInput'
        - $ref: '#/components/schemas/PercentInput'
        - $ref: '#/components/schemas/PasswordInput'
        - $ref: '#/components/schemas/PhoneInput'
        - $ref: '#/components/schemas/RateInput'
        - $ref: '#/components/schemas/SelectWithAmountInput'
        - $ref: '#/components/schemas/ImageInput'
      discriminator:
        propertyName: type
        mapping:
          TEXT: '#/components/schemas/TextInput'
          AMOUNT: '#/components/schemas/AmountInput'
          BOOL: '#/components/schemas/BoolInput'
          DATE: '#/components/schemas/DateInput'
          DATE_TIME: '#/components/schemas/DateTimeInput'
          DURATION: '#/components/schemas/DurationInput'
          EMAIL: '#/components/schemas/EmailInput'
          FILE: '#/components/schemas/FileInput'
          IMAGE: '#/components/schemas/ImageInput'
          COLLECTION: '#/components/schemas/InputCollection'
          INT: '#/components/schemas/IntInput'
          IP: '#/components/schemas/IpInput'
          SELECT: '#/components/schemas/SelectInput'
          MULTI_SELECT: '#/components/schemas/MultiSelectInput'
          NUMBER: '#/components/schemas/NumberInput'
          PERCENT: '#/components/schemas/PercentInput'
          PASSWORD: '#/components/schemas/PasswordInput'
          PHONE: '#/components/schemas/PhoneInput'
          RATE: '#/components/schemas/RateInput'
          SELECT_WITH_AMOUNT: '#/components/schemas/SelectWithAmountInput'
      x-stoplight:
        id: xmrh678cw2f47
    WithdrawToken:
      type: object
      description: A withdraw transaction token
      required:
        - token
        - type
      properties:
        token:
          description: Withdraw transaction token
          type: string
        type:
          $ref: '#/components/schemas/WithdrawTokenType'
      x-stoplight:
        id: h9odofstznt2g
    PspTransactionRequest:
      type: object
      required:
        - metadata
        - data
      properties:
        metadata:
          $ref: '#/components/schemas/PspTransactionRequestMetadata'
        data:
          type: object
      x-stoplight:
        id: otxnxis76glty
    PspOperationResult:
      type: string
      description: Only present in TRANSACTION mode
      enum:
        - SUCCESS
        - PENDING
        - FAILURE
      x-stoplight:
        id: 62etq6e7kidkg
    PspTransactionResponse:
      type: object
      required:
        - metadata
        - data
      properties:
        metadata:
          $ref: '#/components/schemas/PspTransactionResponseMetadata'
        data:
          type: object
      x-stoplight:
        id: p02bx3s0qf0j8
    AcceptorId:
      type: string
      description: Acceptor identifier
      x-stoplight:
        id: 1v9611q2aicto
    CashTransferCollection:
      description: Sorted and paginated list of cash transfers
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of cash transfers
              items:
                $ref: '#/components/schemas/CashTransfer'
      x-stoplight:
        id: 4g8z17f0x5a8w
    CashTransferCode:
      type: string
      description: CashTransfer withdrawal code
      x-stoplight:
        id: 2yx6vncojfrn2
    InterbankingReferenceType:
      description: Type of the reference
      type: string
      enum:
        - IBAN
        - ACCOUNT_NUMBER
        - ACCOUNT_REFERENCE
        - VISA_NUMBER
        - PHONE
        - OTHER
      example: IBAN
      x-stoplight:
        id: 7p2l5gosx3udm
    RtpTransactionResponseMetadata:
      oneOf:
        - $ref: '#/components/schemas/RtpTransactionResponsePreauthMetadata'
        - $ref: '#/components/schemas/RtpTransactionResponseCompleteMetadata'
      discriminator:
        propertyName: mode
        mapping:
          PREAUTH: '#/components/schemas/RtpTransactionResponsePreauthMetadata'
          TRANSACTION: '#/components/schemas/RtpTransactionResponseCompleteMetadata'
      x-stoplight:
        id: z5aem9oc5dbnt
    BankTransactionCollection:
      description: Sorted and paginated list of bank transactions
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of external bank transactions
              items:
                $ref: '#/components/schemas/BankTransaction'
      x-stoplight:
        id: cqfb1rwvvb6t6
    AccountRechargeByPSPRequest:
      type: object
      required:
        - metadata
        - data
      properties:
        metadata:
          $ref: '#/components/schemas/AccountRechargeByPSPRequestMetadata'
        data:
          type: object
      x-stoplight:
        id: kdmevh8fy40yk
    TransactionCodeCollection:
      description: Sorted and paginated list of transaction codes
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection transaction codes
              items:
                $ref: '#/components/schemas/TransactionCode'
      x-stoplight:
        id: w1etl4ej68nmr
    AcceptorShortCode:
      type: string
      description: |
        Acceptor 6 digits identification code (short code)
      minLength: 6
      maxLength: 6
      pattern: '^[0-9]{6}$'
      x-stoplight:
        id: 41s6giaohdeuv
    TransactionCode:
      type: object
      description: a transaction code can be used to authenticate a transaction
      required:
        - date
        - amount
        - code
      properties:
        code:
          type: string
          description: Transaction code
        date:
          type: string
          format: date-time
        acceptor:
          $ref: '#/components/schemas/Acceptor'
        amount:
          $ref: ./Amount.yaml
      x-stoplight:
        id: 0qusnhltyt1ok
    RecipientCollection:
      description: Sorted and paginated list of recipients
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of recipients
              items:
                $ref: '#/components/schemas/Recipient'
      x-stoplight:
        id: 4ah5r2vq6dbc1
    AddRecipientConfirmRequest:
      type: object
      required:
        - otp
      properties:
        otp:
          type: string
          description: the OTP to validate the operation
      x-stoplight:
        id: 3q4qfzie8lv9a
    Recipient:
      type: object
      description: at least one of phone or iban is required
      required:
        - id
        - name
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/RecipientId'
            - readOnly: true
        name:
          type: string
          description: 'Recipient alias, if any'
          example: John Doe
        iban:
          $ref: ./IBAN.yaml
        accountReference:
          type: string
          description: External account reference. BIC is optional when using accountReference.
        bic:
          $ref: ./BIC.yaml
        bankName:
          type: string
          description: Name of the recipient bank
        phone:
          $ref: '#/components/schemas/Phone'
        externalData:
          allOf:
            - $ref: '#/components/schemas/ExternalData'
            - type: object
              description: Additional information on recipient
              example:
                firstname: John
                lastname: Doe
                countryCode: FR
        counterparty:
          type: boolean
          description: Indicate if the Recipient is an External Counterparty for the owner
      x-stoplight:
        id: pog15kcqnhu72
    AddRecipientCheckRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: the recipient alias choosen by final client
        phone:
          allOf:
            - $ref: '#/components/schemas/Phone'
        iban:
          allOf:
            - $ref: ./IBAN.yaml
        bic:
          allOf:
            - $ref: ./BIC.yaml
        accountReference:
          type: string
          description: External account reference. BIC is optional when using accountReference.
        externalData:
          allOf:
            - $ref: '#/components/schemas/Recipient/properties/externalData'
            - type: object
              description: Additional information on recipient
              example:
                firstname: John
                lastname: Doe
                countryCode: FR
        counterparty:
          type: boolean
          description: Indicate if the Recipient is an External Counterparty for the owner
      x-stoplight:
        id: 44i7jyzgndpqh
    RecipientUpdateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: the recipient new alias choosen by final client
      x-stoplight:
        id: jkapty0sotw8j
    BillerItem:
      oneOf:
        - $ref: '#/components/schemas/BillerCategory'
        - $ref: '#/components/schemas/Biller'
      discriminator:
        propertyName: type
        mapping:
          CATEGORY: '#/components/schemas/BillerCategory'
          BILL_ISSUER: '#/components/schemas/Biller'
      x-stoplight:
        id: hbggffg6nm6s8
    BillerId:
      type: string
      description: the bill issuer system identifier
      example: BI5
      x-stoplight:
        id: vc5qfytvahm3u
    BillReference:
      type: string
      description: the bill reference
      example: WTR123456
      x-stoplight:
        id: 3krlszbdwqrey
    Biller:
      type: object
      description: Bill issuer
      required:
        - id
        - name
        - type
      properties:
        id:
          $ref: '#/components/schemas/BillerId'
        name:
          type: string
          description: Displayable name of bill issuer
        type:
          $ref: '#/components/schemas/BillerItemType'
        logoUrl:
          type: string
          description: Logo of bill issuer
        references:
          type: array
          description: list of registered references for this bill issuer
          items:
            $ref: '#/components/schemas/BillReference'
      x-stoplight:
        id: n45nsp48a2kyl
    Geolocation:
      type: object
      description: a geolocalized location (latitude/longitude)
      required:
        - latitude
        - longitude
      properties:
        latitude:
          type: number
          description: the location latitude
        longitude:
          type: number
          description: the location longitude
      x-stoplight:
        id: r77rku4mnclvq
    ExternalData:
      type: object
      description: Set of key-value pairs that you can attach to an object. This can be useful for storing your additional information about the object in a structured format.
      x-stoplight:
        id: sapwwxt2iys8g
    PaybillSessionId:
      type: string
      description: Paybill session Identifier
      x-stoplight:
        id: ovdtsmn081shb
    TransactionConfirmationMode:
      type: string
      description: transaction confirmation mode
      enum:
        - CONFIRM
        - PINCODE
      x-stoplight:
        id: 465t69cjknx0p
    TransactionAccounting:
      allOf:
        - $ref: '#/components/schemas/TransactionComplete'
        - type: object
          required:
            - detailedAccounting
          properties:
            balance:
              $ref: ./Amount.yaml
            businessProcessId:
              description: Id of the business process associated with the transaction
              example: 1234
              type: integer
            detailedAccounting:
              type: array
              items:
                $ref: '#/components/schemas/AccountingEntry'
      x-stoplight:
        id: bbgn7a03nraou
    NotificationToken:
      type: string
      description: Notification token identifier
      x-stoplight:
        id: reuf0pm5vs492
    AcceptorCategory:
      type: object
      description: Acceptor category
      required:
        - id
        - label
      properties:
        id:
          $ref: '#/components/schemas/AcceptorCategoryId'
        label:
          type: string
          description: Category name
      x-stoplight:
        id: 98k6ex6ml0wh1
    AcceptorCategoryId:
      type: string
      description: a category identifier
      example: ATM
      x-stoplight:
        id: hztfonznx0gcc
    AcceptorCollection:
      description: Sorted and paginated list of acceptors
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of acceptors
              items:
                $ref: '#/components/schemas/Acceptor'
      x-stoplight:
        id: dic8kh6ng9a55
    PlatformConfiguration:
      allOf:
        - type: object
          description: the platform general configuration values
          required:
            - enrollment
            - pincode
            - otp
            - p2pCodeLength
            - langs
            - countries
            - colorScheme
            - authentication_mode
            - visaPaymentAvailable
            - isCameraCaptureAuthorized
            - isLocalFileUploadAuthorized
          properties:
            enrollment:
              type: boolean
              description: true if enrollment is active on platform. False otherwise.
              example: false
            pincode:
              allOf:
                - description: pincode length specification
                - $ref: '#/components/schemas/NumericCodeSpec'
            otp:
              allOf:
                - description: otp length specification
                - $ref: '#/components/schemas/NumericCodeSpec'
            p2pCodeLength:
              allOf:
                - description: Transfer code length
                - $ref: '#/components/schemas/NumericCodeSpec'
            langs:
              type: array
              description: Lang codes list
              items:
                $ref: '#/components/schemas/Lang'
            countries:
              type: array
              description: Country alpha 2 codes list
              items:
                $ref: '#/components/schemas/Country'
            contactPhone:
              allOf:
                - description: platform contact phone
                - $ref: '#/components/schemas/Phone'
            contactEmail:
              type: string
              description: platform contact e-mail address
              format: email
              example: contact@sandbox.skaleet.com
            termsAndConditionsUrl:
              type: string
              x-stoplight:
                id: g00mapmfdybwh
              format: uri
              description: URL of the platform Terms and Cond
              example: 'https://sandbox.skaleet.com/terms_and_conditions'
            privacyPolicyUrl:
              type: string
              x-stoplight:
                id: pwo0eutvhugp4
              format: uri
              example: 'https://sandbox.skaleet.com/privacy_policy'
              description: URL of the platform Privacy Policy
            infoUrl:
              type: object
              description: Map of URLs referenced by language tags. There are as much values as configured languages on platform.
              example:
                en_US: sandbox.skaleet.com
                fr_FR: sandbox.skaleet.com
                es_ES: sandbox.skaleet.com
              additionalProperties:
                type: string
            colorScheme:
              $ref: '#/components/schemas/ColorScheme'
            userAppMinimumVersion:
              type: string
              description: User app minimum version required to use the Client API
              example: '20.11'
            authentication_mode:
              type: string
              description: Api authentication mode (login_password or phone_pincode)
              example: login_password
            visaPaymentAvailable:
              type: boolean
              description: Indicates of the VISA payment system is available and should be indicated to the User
              example: true
            isCameraCaptureAuthorized:
              type: boolean
              description: Indicates if camera capture should be allowed by the app to fill in file inputs
              example: true
            isLocalFileUploadAuthorized:
              type: boolean
              description: Indicates if local file upload should be allowed by the app to fill in file inputs
              example: true
            termsOfService:
              type: string
              description: URL pointing to a term of service document to be accepted by the user during onboarding
            selectDistributorDuringOnboarding:
              type: boolean
              description: Show an input field allowing a user to type a code to select a specific profile during onboarding
              example: true
        - $ref: '#/components/schemas/WebAppConf'
      x-stoplight:
        id: z6b3lfioqsvr0
    Lang:
      type: string
      description: |
        Country-Language code as composition of one ISO-639 2 letters language code and one ISO-3166 2 letters country code

        Available languages can be requested through `GET /configuration` operation
      pattern: '^[a-z]{2}_[A-Z]{2}$'
      example: fr_FR
      x-stoplight:
        id: vmon9qdzsj44m
    PincodeKeyboardData:
      type: object
      required:
        - id
        - value
      properties:
        id:
          $ref: '#/components/schemas/PincodeKeyboardId'
        images:
          type: array
          description: 'an array of 16 images, each representing either nothing or a digit'
          minItems: 16
          maxItems: 16
          example:
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjK/v78/Pz9fX1+fn5/f399/f38fHx////9xjtetAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACfSURBVDiN7dQ/C4JQFAXwq4k8N/sSkltrW6ub4KJb0OQWbW0iRLRF2ovzbbtvDM6davSsPx7v/oErsubJxY5l0SI/y633LZUEmj2TXZCJSYfNFU8m535wgFGbgzdkxMwlBk5cUrxpP0Fw5OJWwMArkAq1IXccDMnwIKIzMN6UOugL/afCpIvYEonDFl6sH1eq1EwkKXwjVL6zyP/FvHwfnhou18ClDQkAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjIfHx+/v79fX19/f3/f39+fn58/Pz////++JpndAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACDSURBVDiNY2AQxA4EGHADXHKMozIUy3CUTavALhM5c+bMAGwyLECJmVOwybDNnMIycxo2mc6ZBQyVMxuwyEQCRTsRFiHJWM5UYNCcaYBFJhMsk4BFZuZMBgZOPDITyJDBZhpuF+B2dSVOn3riDB3cIYo7FnDHHJ7YRgWjMtSXwVnyAQB+9zaCVQB/9wAAAABJRU5ErkJggg==
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjJ/f38/Pz8fHx+fn5/f39+/v79fX1////+aYKOoAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACoSURBVDiN7dQxDwFBEAXg51w4Hf9Aq9ModNuhU0i0EkSmU2i2u1YnESvv35qrkLytKG/aLzP7ZooFRrqGyFfOOq38LFVMGyllJDlV0nfgXcmV+yWfSqKPmrzHfYgRWHEshC4DnmVP8J6dfKf2FEo8W9d4E9Jr9pFSGpnkNBR2XGhBk3qdEb3p1oJfJ8h9LhUfEDJvQh+UFA4pKMHMTjWkfFcr/5fsz/cCMz82BjZhFdsAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjKfn58/Pz/f399fX18fHx9/f3+/v7////+7iz3EAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAABkSURBVDiN7dShDcAwDERRt8ByWDtOF4gUFppRukUU5m0rtaQgnxnm0wdPOpFz3iEc2bYkQMw7yE2iTmIojUS9gJhfIG2kuahnEPMK0obMRUsG2b2CJH/rMfIp7RMr/5bECz7fA5etMI9vuUYuAAAAAElFTkSuQmCC
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjLf39+fn58/Pz9fX1+/v79/f38fHx/////bxromAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACkSURBVDiN7ZShDoMwFEUfCSTMwR8gENTN4rA4LI7MENzsHMEsc8vCxP3bvdbAkvvUJrmyp6+9p6IiOU8mdiwWHeRncp8wzowk0KyMtJ6gIaRGGTucCXG6v0VBCCBywpOQKcwMtIG/hzXQZaCkpgvwsk3f3NS6p0YnPe3m1OdhmM5KmKkLp7GZW2hwJWTxrTehHUn9G1TMR5ILRqHkOwf5PzF/vg/NyDgAvn+1IQAAAABJRU5ErkJggg==
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjKfn58/Pz8fHx9/f3/f39+/v79fX1////+j2q/UAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACbSURBVDiN7dQ9CoNAEAXgCRGjnd7ALqRLm24rwc7WTrDaAySwXdp0ISGBd1v/ml15U2nptB+P2ZmBFcl5ZaKXZoddVkvywN0wiSyAjkk8AP6GSIPuaFETcXjKDS2RszWS4q28uqKZuVfBJQKuXEp82DzTrC2XEjBcHL5C5eT1D+XiR3xJgki4659weY1XoHtzqlhVFrXL9qL+fD2XjjDB7uM8UwAAAABJRU5ErkJggg==
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjK/v78/Pz9fX1+fn59/f3/f398fHx////9YH2UiAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAB+SURBVDiN7dQhD0BQFMXxa8ZofANVUzVVUzVVU19TNTM259sy6d3tnkT0r7/t7bwXnkhulwmPWfDLW8HT+pHcJQ6DLREOsq3FRMShsiX2DtOy4CQyoiPiMNsSYhNbIuxEUn+AkhoFETVNSY+GSOm9jRZ1HSWAENH98r3Qn+8C+nQomSj77pIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyAgMAAABjUWAiAAAACVBMVEUAAAAyMjL///9LrLK4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAbSURBVCiRY2ANRQAHBlSAzBcY5Y3yBpyHkloBnboWiQsoNBIAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjKfn59fX1/f39+/v79/f38/Pz8fHx////8Pkci4AAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAACWSURBVDiNY2AQxA4EGHADXHKMozKUynDMBAFsMuw4ZdhwyrDOTMBhDwtOmc6ZBjhkLGeqerphlckEOcADm0wkSGYqNhkVF4vmmQi70EInc6YCDpnOmQ44ZDhnTiBZpnNmABaZEM8GoAsSsMhoznRnnjmzAYtMJ8inkxmwyLB7AmUSsMkwtEVOUWfAKoMKRmWoL4Oz5AMA6wcwRTqhe+MAAAAASUVORK5CYII=
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAG1BMVEUAAAAyMjK/v7+fn58/Pz/f398fHx9fX1////9tbpBCAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAABMSURBVDiNY2AQxA4EGHADXHKMozJUkKnowCHDFoFLJrUDhwxLBA4ZFosOHDIcHbhlQnDJNCXgkGEqYMDlNoZRGbwyyGBUhvoyOEs+AJjIIDEL67UJAAAAAElFTkSuQmCC
            - iVBORw0KGgoAAAANSUhEUgAAADIAAAAyBAMAAADsEZWCAAAAHlBMVEUAAAAyMjJ/f38fHx8/Pz+fn5/f39+/v79fX1////9VClHYAAAAAnRSTlMAhwVP27sAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAClSURBVDiN7dQtD8IwEMbxI10gOPgGWBwCSOpm51AkOMJLyDkSDHNzCw7V9fm23CTJcwrkzv7S9H8VFZnzmYk/no0G+V1avZZUtgAyk6AmKIlMkEONHZGIhcQbkyVWTtshedXabfTEJVnamUnfjMTlUigaKo28cGf3WHXEkUgNkSnezqb8TGWvU9F7xshr3lb0+3RsH0sGHlTCHk+h8j2D/F/cn+8DWgo2STo2HycAAAAASUVORK5CYII=
          items:
            type: string
            format: binary
            description: a transparent image representing a digit or empty (PNG)
      x-stoplight:
        id: eccien1ij7h2a
    AuthorizationHoldCollection:
      description: Sorted and paginated list of authorization holds
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of authorization holds
              items:
                $ref: '#/components/schemas/AuthorizationHold'
            startDate:
              type: string
              format: date-time
              description: Authorization holds date range start
            endDate:
              type: string
              format: date-time
              description: Authorization holds date range end
      x-stoplight:
        id: 5f6wt3mk59l8v
    InputId:
      type: string
      description: KYC field identifier
      example: FIELD123
      x-stoplight:
        id: yb0eracezm0yf
    PossibleValueCollection:
      type: object
      properties:
        inputId:
          $ref: '#/components/schemas/InputId'
        userInput:
          type: string
          description: 'Current user input, to be completed'
        possibleValues:
          type: array
          description: List of values found for auto-completion
          items:
            $ref: '#/components/schemas/PossibleValue'
      x-stoplight:
        id: b3shs7esdi0v6
    ProductId:
      type: string
      description: Skaleet platform product identifier.
      example: PRO123
      x-stoplight:
        id: 8tx8iqhlfaruo
    ProductType:
      type: string
      description: Product type
      example: CURRENT
      enum:
        - DEBIT_CARD
        - CURRENT
        - SAVINGS
        - COMMISSIONS
        - DEDICATED
        - MONEYPOT
        - GUARANTEE_ACCOUNT
        - TECHNICAL
      x-stoplight:
        id: jqo8ucj89czlq
    ProductCollection:
      description: Sorted and paginated list of products.
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of products
              items:
                $ref: '#/components/schemas/Product'
      x-stoplight:
        id: 1e1cfaiq6peim
    Product:
      oneOf:
        - $ref: '#/components/schemas/DebitCardProduct'
        - $ref: '#/components/schemas/AbstractProduct'
      discriminator:
        propertyName: type
        mapping:
          DEBIT_CARD: '#/components/schemas/DebitCardProduct'
          CURRENT: '#/components/schemas/AbstractProduct'
          SAVINGS: '#/components/schemas/AbstractProduct'
          COMMISSIONS: '#/components/schemas/AbstractProduct'
          DEDICATED: '#/components/schemas/AbstractProduct'
          MONEYPOT: '#/components/schemas/AbstractProduct'
          GUARANTEE_ACCOUNT: '#/components/schemas/AbstractProduct'
          TECHNICAL: '#/components/schemas/AbstractProduct'
      x-stoplight:
        id: fq313xg3jdov7
      examples:
        - currentAccount:
            id: PRO123
            name: Current Account
            type: CURRENT
            currency: EUR
        - savingAccount:
            id: PRO456
            name: Saving Account
            type: SAVINGS
            currency: USD
        - debitCard:
            id: PRO987
            name: Standard Card
            type: DEBIT_CARD
            currency: USD
        - technicalAccount:
            id: PRO512
            name: Technical Account
            type: TECHNICAL
            currency: USD
    SearchRequest:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/Filter'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        pager:
          $ref: '#/components/schemas/Pager'
      x-stoplight:
        id: w09u4oh20747w
    StrongCustomerAuthenticationProcessCollection:
      description: Sorted and paginated list of strong customer authentication process
      allOf:
        - type: object
          properties:
            items:
              type: array
              description: collection of strong customer authentication process
              items:
                $ref: '#/components/schemas/StrongCustomerAuthenticationProcess'
        - type: object
          properties:
            sort:
              type: string
              description: Default Order By ID Desc
              default: '-id'
        - $ref: '#/components/schemas/Collection'
      x-stoplight:
        id: 0gksau03ei4y7
    StrongCustomerAuthenticationId:
      type: string
      description: Strong customer authentication identifier
      x-stoplight:
        id: o94nybb34x1mk
    StrongCustomerAuthenticationProcess:
      type: object
      description: A strong customer authentication process
      required:
        - id
      properties:
        id:
          type: integer
          description: Process identifier
          readOnly: true
        token:
          type: string
          description: Authentication session token
          readOnly: true
          example: 44654rgergre-gregregreh-grthtrh545-gregregrehr
        acsTransactionId:
          type: string
          example: '123456789'
          description: Identifier used to connect strong customer authentication request to ensuing card authorization request
        authenticationType:
          $ref: '#/components/schemas/StrongCustomerAuthenticationType'
        cardId:
          type: string
          description: Associated Skaleet platform card identifier
        creationDateTime:
          type: string
          format: date-time
          description: Date when the authentication was requested
        authenticationRequestType:
          $ref: '#/components/schemas/StrongCustomerAuthenticationRequestType'
        maxResponseTime:
          type: integer
          description: Maximum amount of time (in minutes) before request reaches expiration
        messageVersion:
          type: string
          description: 3DS version
        amount:
          $ref: ./Amount.yaml
        seller:
          type: string
          description: Seller name
        state:
          $ref: '#/components/schemas/StrongCustomerAuthenticationProcessState'
        isSuspicious:
          type: boolean
          description: To identify authentication session as suspicious or not
        suspiciousComment:
          type: string
          description: Comment to identify the reason for marking the authentication session as suspicious
        error:
          $ref: '#/components/schemas/Error'
      x-stoplight:
        id: lc374wpz08gks
    AddQrCodeRequest:
      type: object
      required:
        - description
        - targetAccountId
        - static
      properties:
        description:
          type: string
          description: QR code's description
        paymentReference:
          type: string
          description: Label given to the transactions initiated with this QR code.
          maxLength: 25
        targetAccountId:
          type: integer
          description: Current account's ID on which the funds will be received
          example: 42
        amount:
          type: integer
          description: Transaction's amount
          example: 58
        static:
          type: boolean
          description: 'If true, the QR code will be reusable until it is deleted or its expiration date has been reached. If false, the QR code will be deleted after the transaction or after its expiration date has been reached'
          example: false
        expirationDate:
          type: string
          format: date-time
          description: 'QR code''s expiration date. If null, it will never be automatically revoked. Expected format is Y-m-d\TH:i:sP'
      x-stoplight:
        id: s0f98uvz9d9kh
    AddQrCodeResponse:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/QrCodeId'
      x-stoplight:
        id: o82v2x6xyhbuh
    QrCodeCollection:
      description: Sorted and paginated list of products
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: List of all unexpired QR codes in which the target account belongs to the client
              items:
                $ref: '#/components/schemas/QrCode'
      x-stoplight:
        id: tiyp4s7vm71e0
    QrCodeId:
      type: string
      description: QR code's ID
      example: '1234'
      x-stoplight:
        id: n5if7vvy96dbq
    GetQrCodeContentResponse:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          description: QR code content
          example: 00020101021102170410033000000428726440020fr.tagpay.merchantId01163914974109498813520459995303840540155802FR5905Agent6015Boulogne-Billan630434E0
      x-stoplight:
        id: yamojzl6xr9tw
    QrCodeInformation:
      type: object
      required:
        - internal
        - target
        - transferDirection
        - acceptedCurrencies
      properties:
        internal:
          type: boolean
          description: Either the QrCode target party is internal to the platform or not
        active:
          type: boolean
          description: Is QR code enabled for transaction. Only present on internal qr code
        target:
          type: object
          required:
            - displayName
          description: target party information
          properties:
            identityId:
              $ref: '#/components/schemas/IdentityId'
            displayName:
              type: string
              example: 123 shop
              description: target party name
        transferDirection:
          type: string
          enum:
            - debit
            - credit
        acceptedCurrencies:
          type: array
          items:
            $ref: '#/components/schemas/Currency'
      x-stoplight:
        id: n58z9up681uif
    BicCollection:
      description: Sorted and paginated list of BIC referential
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                type: object
            count:
              type: integer
              description: the total count of objects in collection
              minimum: 0
            offset:
              type: integer
              description: Pagination start (from 0)
              minimum: 0
              default: 0
            limit:
              type: integer
              description: Number of results to display (default 20)
              minimum: 0
              maximum: 100
              default: 20
            sort:
              type: string
              description: Field to define sort order
              default: id
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getCurrentPage` [GET] Load the current collection page
                  * `getNextPage` [GET] Load the next collection page, if any
                  * `getPreviousPage` [GET] Load the previous collection page, if any
              items:
                $ref: '#/components/schemas/Link'
              example:
                - rel: getCurrentPage
                  href: 'https://sandbox.skaleet.com/api/client/v1/bic-referential?limit=20&offset=40&sort=example_sorting_parameter'
                - rel: getNextPage
                  href: 'https://sandbox.skaleet.com/api/client/v1/bic-referential?limit=20&offset=60&sort=example_sorting_parameter'
                - rel: getPreviousPage
                  href: 'https://sandbox.skaleet.com/api/client/v1/bic-referential?limit=20&offset=20&sort=example_sorting_parameter'
        - type: object
          properties:
            items:
              type: array
              description: List of all BIC referential
              items:
                $ref: '#/components/schemas/Bic'
      x-stoplight:
        id: 4y09deipi0kj8
    TransactionAttachmentId:
      type: string
      description: Transaction attachment unique identifier
      readOnly: true
      example: TRXATT123
      x-stoplight:
        id: hh2udkq23ywwp
    SpendingDetailId:
      type: string
      description: Spending detail unique identifier
      readOnly: true
      example: SPD123
      x-stoplight:
        id: ydw9lgrnab9ko
    BeneficiaryCollection:
      description: Sorted and paginated list of beneficiaries
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of beneficiaries
              items:
                $ref: '#/components/schemas/Beneficiary'
      x-stoplight:
        id: pqhcile8nuhty
    AddBeneficiaryConfirmRequest:
      type: object
      required:
        - otp
      properties:
        otp:
          type: string
          description: the OTP to validate the operation
      x-stoplight:
        id: sifsexcjllo77
    AddBeneficiaryCheckRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: the beneficiary alias chosen by final client
        phone:
          allOf:
            - $ref: '#/components/schemas/Phone'
        iban:
          allOf:
            - $ref: ./IBAN.yaml
        bic:
          allOf:
            - $ref: ./BIC.yaml
        accountReference:
          type: string
          description: External account reference. BIC is optional when using accountReference.
        externalData:
          allOf:
            - $ref: '#/components/schemas/Beneficiary/properties/externalData'
            - type: object
              description: Additional information on beneficiary
              example:
                firstname: John
                lastname: Doe
                countryCode: FR
      x-stoplight:
        id: yk67szpx5kw7n
    Beneficiary:
      type: object
      description: at least one of phone or iban is required
      required:
        - id
        - name
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/BeneficiaryId'
            - readOnly: true
        name:
          type: string
          description: 'Beneficiary alias, if any'
          example: John Doe
        iban:
          $ref: ./IBAN.yaml
        accountReference:
          type: string
          description: External account reference. BIC is optional when using accountReference.
        bic:
          $ref: ./BIC.yaml
        bankName:
          type: string
          description: Name of the beneficiary bank
        phone:
          $ref: '#/components/schemas/Phone'
        externalData:
          allOf:
            - $ref: '#/components/schemas/ExternalData'
            - type: object
              description: Additional information on beneficiary
              example:
                firstname: John
                lastname: Doe
                countryCode: FR
      x-stoplight:
        id: s4qxy80lyz9bm
    BeneficiaryId:
      type: string
      description: Beneficiary Skaleet platform ID
      example: REC2
      x-stoplight:
        id: uunwqwnd5pi1u
    BeneficiaryUpdateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: the recipient new alias chosen by final client
      x-stoplight:
        id: ip2kczhyw97zp
    ExternalAccountCollection:
      description: Sorted and paginated list of external accounts
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of beneficiaries
              items:
                $ref: '#/components/schemas/ExternalAccount'
      x-stoplight:
        id: wpa6eiakibmv1
    AddExternalAccountConfirmRequest:
      type: object
      required:
        - otp
      properties:
        otp:
          type: string
          description: the OTP to validate the operation
      x-stoplight:
        id: fm3w4kqlf942y
    ExternalAccount:
      type: object
      required:
        - id
        - name
        - iban
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/ExternalAccountId'
            - readOnly: true
        name:
          type: string
          description: 'external account alias, if any'
          example: John Doe
        state:
          $ref: '#/components/schemas/ExternalAccountState'
        iban:
          $ref: ./IBAN.yaml
        bic:
          $ref: ./BIC.yaml
        bankName:
          type: string
          description: Name of the external account bank
        externalData:
          allOf:
            - $ref: '#/components/schemas/ExternalData'
            - type: object
              description: Additional information on beneficiary
              example:
                firstname: John
                lastname: Doe
                countryCode: FR
      x-stoplight:
        id: 01dthktzfd1z5
    AddExternalAccountCheckRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: the external account alias chosen by final client
        iban:
          allOf:
            - $ref: ./IBAN.yaml
        bic:
          allOf:
            - $ref: ./BIC.yaml
        externalData:
          allOf:
            - $ref: '#/components/schemas/ExternalAccount/properties/externalData'
            - type: object
              description: Additional information on beneficiary
              example:
                firstname: John
                lastname: Doe
                countryCode: FR
      x-stoplight:
        id: fnuy36n6s8zt8
    ExternalAccountId:
      type: string
      description: External account Skaleet platform ID
      example: EXT2
      x-stoplight:
        id: vxqu79h8m9gnl
    ExternalAccountUpdateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: the external account new alias chosen by final client
      x-stoplight:
        id: 1yo49tn57w875
    DocumentId:
      type: string
      example: DOC123
      description: Skaleet platform document id
      x-stoplight:
        id: vwra196ha7ewx
    Document:
      type: object
      required:
        - id
        - ownerId
        - status
        - type
        - links
      properties:
        id:
          $ref: '#/components/schemas/ReadOnlyDocumentId'
        ownerId:
          $ref: '#/components/schemas/ReadOnlyIdentityId'
        status:
          $ref: '#/components/schemas/DocumentStatus'
        type:
          $ref: '#/components/schemas/DocumentType'
        description:
          type: string
          description: Custom description
          example: 'Government ID user #XXX'
        uploadDate:
          type: string
          format: date-time
          readOnly: true
        lastUpdateDate:
          type: string
          format: date-time
          readOnly: true
        metadata:
          readOnly: true
          oneOf:
            - $ref: '#/components/schemas/IncorporationCertificateMetadata'
            - $ref: '#/components/schemas/PortraitMetadata'
            - $ref: '#/components/schemas/ProofOfActivityMetadata'
            - $ref: '#/components/schemas/ProofOfBankDomiciliationMetadata'
            - $ref: '#/components/schemas/ProofOfIdentityMetadata'
            - $ref: '#/components/schemas/ProofOfResidenceMetadata'
            - $ref: '#/components/schemas/ProofOfResourcesMetadata'
            - $ref: '#/components/schemas/ProofOfTaxationMetadata'
            - $ref: '#/components/schemas/SignatureMetadata'
            - $ref: '#/components/schemas/OtherMetadata'
          discriminator:
            propertyName: type
            mapping:
              PORTRAIT: '#/components/schemas/PortraitMetadata'
              INCORPORATION_CERTIFICATE: '#/components/schemas/IncorporationCertificateMetadata'
              PROOF_OF_ACTIVITY: '#/components/schemas/ProofOfActivityMetadata'
              PROOF_OF_BANK_DOMICILIATION: '#/components/schemas/ProofOfBankDomiciliationMetadata'
              PROOF_OF_IDENTITY: '#/components/schemas/ProofOfIdentityMetadata'
              PROOF_OF_RESIDENCE: '#/components/schemas/ProofOfResidenceMetadata'
              PROOF_OF_RESOURCES: '#/components/schemas/ProofOfResourcesMetadata'
              PROOF_OF_TAXATION: '#/components/schemas/ProofOfTaxationMetadata'
              SIGNATURE: '#/components/schemas/SignatureMetadata'
              OTHER_DOCUMENTS_LEGAL_ENTITY: '#/components/schemas/OtherMetadata'
              OTHER_DOCUMENTS: '#/components/schemas/OtherMetadata'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `[DocumentType]-content` [GET] Load the document content. DocumentType is the document's type in lower-case.
              * `[DocumentType]-preview` [GET] Get a small sized preview of the document content. DocumentType is the document's type in lower-case.
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: '[DocumentType]-content'
              href: 'https://sandbox.skaleet.com/api/client/v1/documents/42/content'
            - rel: '[DocumentType]-preview'
              href: 'https://sandbox.skaleet.com/api/client/v1/documents/42/preview'
      x-stoplight:
        id: 1o914hzgknmlc
    CustomerActionBusinessProcessId:
      type: string
      example: '42'
      x-stoplight:
        id: pujuwv2wqpxzq
    CustomerActionUpdateRequest:
      type: object
      properties:
        email:
          type: string
          description: 'Customer''s new email. Required when updating an `email_change` Customer Action, ignored otherwise.'
          example: email@domain.com
      x-stoplight:
        id: d022m76cw8eoi
    TransactionAttachment:
      type: object
      required:
        - id
        - content
        - importDate
        - links
      properties:
        id:
          $ref: '#/components/schemas/TransactionAttachmentId'
        content:
          type: string
          format: byte
          writeOnly: true
          description: 'Document content, base64 encoded'
        description:
          type: string
          description: Description of the document type and content
        importDate:
          type: string
          format: date-time
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getContent` [GET] Get document content
              * `getPreview` [GET] Get document content thumbnail
              * `deleteAttachment` [DELETE] Delete this attachment
              * `addAttachmentOnSameTransaction` [POST] Add another attachment on the same transaction
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: getContent
              href: 'https://sandbox.skaleet.com/api/client/v1/transactions/42/attachments/43/content'
            - rel: getPreview
              href: 'https://sandbox.skaleet.com/api/client/v1/transactions/42/attachments/43/preview'
            - rel: deleteAttachment
              href: 'https://sandbox.skaleet.com/api/client/v1/transaction/42/attachments/43'
            - rel: addAttachmentOnSameTransaction
              href: 'https://sandbox.skaleet.com/api/client/v1/transaction/42/attachments'
      x-stoplight:
        id: 5mqikrpzift2f
    SpendingDetail:
      type: object
      description: Spending detail
      properties:
        id:
          $ref: '#/components/schemas/SpendingDetailId'
        amount:
          $ref: ./Amount.yaml
        category:
          $ref: '#/components/schemas/BaseSpendingCategory'
        subcategory:
          $ref: '#/components/schemas/BaseSpendingCategory'
        label:
          type: string
          description: Description of the spending detail
        additionalData:
          type: array
          items:
            type: object
            properties:
              key:
                $ref: '#/components/schemas/SpendingsAdditionalDataKey'
              label:
                type: string
                description: locale of additional-key in platform config
              value:
                type: string
      x-stoplight:
        id: rnqbxmimxsfxm
    SpendingDetailUpdate:
      type: object
      description: Spending details
      properties:
        id:
          $ref: '#/components/schemas/SpendingDetailId'
        amount:
          $ref: ./Amount.yaml
        category:
          $ref: '#/components/schemas/BaseSpendingCategory'
        categoryId:
          $ref: '#/components/schemas/WriteOnlySpendingCategoryId'
        subcategory:
          $ref: '#/components/schemas/BaseSpendingCategory'
        subcategoryId:
          $ref: '#/components/schemas/WriteOnlySpendingCategoryId'
        label:
          type: string
          description: Description of the spending detail
        additionalData:
          type: array
          items:
            type: object
            properties:
              key:
                $ref: '#/components/schemas/SpendingsAdditionalDataKey'
              value:
                type: string
                description: additional data value we want to update
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `updateSpendingDetail` [PATCH] Update this spending detail
              * `deleteSpendingDetail` [DELETE] Delete this spending detail
              * `addSpendingOnSameTransaction` [POST] Add another spending on the same transaction
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: updateSpendingDetail
              href: 'https://sandbox.skaleet.com/api/client/v1/transactions/42/spendings/43'
            - rel: deleteSpendingDetail
              href: 'https://sandbox.skaleet.com/api/client/v1/transactions/42/spendings/43'
            - rel: addSpendingOnSameTransaction
              href: 'https://sandbox.skaleet.com/api/client/v1/transactions/42/spendings'
      x-stoplight:
        id: ef81dxsmxhe52
    InputCollectionUpdate:
      type: object
      description: Form values associated to the corresponding input id
      additionalProperties:
        oneOf:
          - type: string
          - type: number
          - type: integer
          - type: boolean
          - type: array
            items: {}
          - $ref: '#/components/schemas/InputCollectionUpdate'
      example:
        id1: value1
        id2: value2
        id3:
          - value3-1
          - value3-2
        collectionId4:
          id5: value4
      x-stoplight:
        id: 27pcp0qe941zp
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: error code
          example: 1234
        message:
          type: string
          description: This is an error message
          example: something went wrong because requirement X was not met.
      x-stoplight:
        id: zt1cnjg50hgcn
    SpendingCategoryArray:
      type: array
      items:
        $ref: '#/components/schemas/SpendingCategory'
      x-stoplight:
        id: 5h3ym3ipgdxfn
    UnauthorizedError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 9
            message: You don't have access to this ressource
      x-stoplight:
        id: 2fi6ibcsn3cfd
    SpendingsAdditionalData:
      type: array
      description: Used to define additionnal expense data
      items:
        type: object
        readOnly: true
        required:
          - key
          - label
        properties:
          key:
            $ref: '#/components/schemas/SpendingsAdditionalDataKey'
          label:
            type: string
      example:
        - key: TVA_20
          label: TVA 20%
        - key: TVA_55
          label: TVA 5.5%
        - key: ZONEGEO
          label: Zone géographique
        - key: TVA_AUTRE_PC
          label: TVA Autre (pourcentage)
        - key: TVA_AUTRE_MON
          label: TVA Autre (montant)
      x-stoplight:
        id: peg527nb5au89
    InvalidRequestError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 0
            message: Invalid value for parameter "parameter_name"
      x-stoplight:
        id: s2oz4sy3qywgu
    ForbiddenError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 12345
            message: Client is not allowed to make this action
      x-stoplight:
        id: 1q9z0eae5yqrp
    TransactionAttachmentsList:
      type: array
      description: List of transaction's attached documents
      items:
        $ref: '#/components/schemas/TransactionAttachment'
      x-stoplight:
        id: 8oxrc9s7bs7ib
    NotFoundError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 0
            message: Resource has not been found
      x-stoplight:
        id: y8gbkyy44k3ne
    SpendingDetailsList:
      type: array
      description: List of spending details
      items:
        $ref: '#/components/schemas/SpendingDetail'
      x-stoplight:
        id: kd1561y0nt1ak
    OnboardingFile:
      type: object
      description: Onboarding file content
      required:
        - status
        - form
      properties:
        status:
          $ref: '#/components/schemas/OnboardingStatus'
        form:
          $ref: '#/components/schemas/InputCollection'
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `self` [GET] Load the current onboarding file
              * `updateFile` [PATCH] Update the onboarding file data
              * `submitFile` [POST] Submit the onboarding data to validation. Only available when applicable.
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: self
              href: 'https://sandbox.skaleet.com/api/client/v1/onboarding/file'
            - rel: updateFile
              href: 'https://sandbox.skaleet.com/api/client/v1/onboarding/file'
            - rel: submitFile
              href: 'https://sandbox.skaleet.com/api/client/v1/onboarding/submit'
        termsOfService:
          type: string
          example: 'https://sandbox.skaleet.com/termsOfService/'
          description: URL to terms and conditions
      x-stoplight:
        id: 7nnpdixs68f8q
    CustomerActionBusinessProcess:
      type: object
      required:
        - id
        - actionCode
        - status
        - links
      properties:
        id:
          $ref: '#/components/schemas/CustomerActionBusinessProcessId'
        actionCode:
          type: string
          example: email_change
        status:
          type: string
          example: INITIATED
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `self` [GET] Get ongoing customer action business process
              * `updateAction` [PATCH] Update customer action business process
              * `submitForValidation` [POST] Submit customer action business process for validation
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: self
              href: 'https://sandbox.skaleet.com/api/client/v1/customer-actions/ongoing-actions/42'
            - rel: updateAction
              href: 'https://sandbox.skaleet.com/api/client/v1/customer-actions/ongoing-actions/42'
            - rel: submitForValidation
              href: 'https://sandbox.skaleet.com/api/client/v1/customer-actions/ongoing-actions/42/submit'
      x-stoplight:
        id: yyiobojgc99pf
    AbstractInput:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          example: myInputId
        type:
          $ref: '#/components/schemas/InputType'
        label:
          type: string
          example: My input label
        description:
          type: string
          example: This is my input description
        required:
          type: boolean
        validators:
          type: array
          items:
            $ref: '#/components/schemas/Validator'
        disabled:
          type: boolean
          default: false
          description: 'If true, this input cannot be change'
      x-stoplight:
        id: eikxv9jczrd2c
    EnrollmentRequestMetadata:
      oneOf:
        - $ref: '#/components/schemas/EnrollmentRequestPreauthMetadata'
        - $ref: '#/components/schemas/EnrollmentRequestCompleteMetadata'
      discriminator:
        propertyName: mode
        mapping:
          PREAUTH: '#/components/schemas/EnrollmentRequestPreauthMetadata'
          TRANSACTION: '#/components/schemas/EnrollmentRequestCompleteMetadata'
      x-stoplight:
        id: 9bgpw3jqn7if0
    EnrollmentRequestData:
      type: object
      description: required for `PREAUTH` mode only
      properties:
        form:
          description: |
            an object representing values for each inputs retrieved by `GET /enrollment/{phoneNumber}`
          allOf:
            - $ref: '#/components/schemas/InputValues'
        redirectUrl:
          type: string
          format: url
          description: |
            The redirection URL to transmit to the self-enrollment external system, |
            used for additional validation process, that allows the external system |
            to directly notify the API client for results.
          example: 'https://domaintoredirect.com/enrollment'
      x-stoplight:
        id: 5yqo0z4wl3ly3
    EnrollmentResponseMetadata:
      oneOf:
        - $ref: '#/components/schemas/EnrollmentResponsePreauthMetadata'
        - $ref: '#/components/schemas/EnrollmentResponseTransactionMetadata'
      discriminator:
        propertyName: mode
        mapping:
          PREAUTH: '#/components/schemas/EnrollmentResponsePreauthMetadata'
          TRANSACTION: '#/components/schemas/EnrollmentResponseTransactionMetadata'
      x-stoplight:
        id: fifaaxgtu0syh
    Address:
      type: object
      properties:
        line1:
          type: string
        line2:
          type: string
        zipcode:
          type: string
        district:
          type: string
        province:
          type: string
        region:
          type: string
        city:
          type: string
        country:
          $ref: '#/components/schemas/Country'
      example:
        line1: 88 rue du dôme
        line2: Apt 3
        zipcode: '92100'
        province: Ile-de-france
        city: Boulogne-Billancourt
        country: FR
      x-stoplight:
        id: t7jvph7ec901y
    Gender:
      type: string
      readOnly: true
      description: Physical person genders list
      enum:
        - MALE
        - FEMALE
        - OTHER
      example: FEMALE
      x-stoplight:
        id: j665s9pein1ci
    Status:
      type: string
      description: Client Status
      enum:
        - INITIATED
        - PENDING
        - OPENED
        - BLOCKED
        - CLOSED
        - INIBLOCKED
      x-stoplight:
        id: f5eda7qieo75e
    Link:
      type: object
      readOnly: true
      required:
        - rel
        - href
      properties:
        rel:
          type: string
          description: Link relation
        href:
          type: string
          format: uri
          description: Location URI
      x-stoplight:
        id: sd215bajfcf7j
    PincodeKeyboardId:
      type: string
      description: Pincode keyboard identifier
      example: 16fd2706-8baf-433b-82eb-8c7fada847da
      x-stoplight:
        id: dgg8uqcswcopi
    ClientPincode:
      type: array
      description: ordered list of positions selected by final client on virtual keyboard
      items:
        type: integer
      example:
        - 1
        - 12
        - 14
        - 3
      x-stoplight:
        id: ifgi3vpimoj7b
    Collection:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
        count:
          type: integer
          description: the number of elements returned in `items` array
          minimum: 0
        total:
          type: integer
          description: the total number of objects in collection
          minimum: 0
        offset:
          type: integer
          description: Pagination start (from 0)
          minimum: 0
          default: 0
        limit:
          type: integer
          description: Number of results to display (default 20)
          minimum: 0
          maximum: 100
          default: 20
        sort:
          type: string
          description: Field to define sort order
          default: id
      x-stoplight:
        id: cghkcx43cgxu4
    Account:
      type: object
      x-stoplight:
        id: rrg5svl1vealq
      required:
        - id
        - balance
        - availableBalance
        - status
        - label
        - createdAt
        - type
      properties:
        id:
          allOf:
            - $ref: ./AccountId.yaml
            - readOnly: true
        balance:
          allOf:
            - $ref: ./Amount.yaml
            - readOnly: true
        availableBalance:
          allOf:
            - $ref: ./Amount.yaml
            - readOnly: true
        status:
          $ref: ./AccountStatus.yaml
        label:
          type: string
          description: The account label
          example: 'Current account #123546'
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        externalId:
          $ref: ./AccountExternalId.yaml
        iban:
          allOf:
            - $ref: ./IBAN.yaml
            - readOnly: true
        bic:
          allOf:
            - $ref: ./BIC.yaml
            - readOnly: true
        externalData:
          $ref: '#/components/schemas/ExternalData'
        externalAccount:
          type: string
          description: External account identifier
          example: FR76 XXXX XXXX XXXX XXXX XXXX XXX
          readOnly: true
        lastUsedAt:
          type: string
          format: date-time
          readOnly: true
        deletedAt:
          type: string
          format: date-time
          readOnly: true
        type:
          $ref: '#/components/schemas/AccountType'
        merchant:
          type: string
          description: brand's merchant for dedicated account
          readOnly: true
    Device:
      type: object
      description: a final client device
      required:
        - id
        - number
        - firstUse
        - countUse
        - alias
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/DeviceId'
            - readOnly: true
        number:
          $ref: '#/components/schemas/Phone'
        alias:
          type: string
          description: the mobile alias
          readOnly: true
      x-stoplight:
        id: y1eglz5x6azff
    CardType:
      type: string
      description: Card Type
      enum:
        - DEBIT_CARD
      x-stoplight:
        id: k96ajp0p62iz7
    CardExternalId:
      type: string
      description: External Card identifier (Partner).
      example: EXT123456789
      x-stoplight:
        id: h8jimnyb3vv4l
    IdentityId:
      type: string
      example: '1'
      description: Identity unique identifier
      x-stoplight:
        id: megn4fp90fizt
    UserProfileId:
      type: string
      description: User habilitation profile unique identifier
      example: '42'
      x-stoplight:
        id: yeni40rjusvqu
    CardExternalStatus:
      type: object
      required:
        - value
      properties:
        value:
          type: string
          readOnly: true
          description: Status value
        creationDate:
          type: string
          readOnly: true
          format: date-time
          description: Status creation date
          example: '2022-01-20T01:23:45+02:00'
        confirmationDate:
          type: string
          readOnly: true
          format: date-time
          description: Status confirmation date
          example: '2022-01-20T01:23:45+02:00'
      x-stoplight:
        id: pfj2mebw4pxrh
    CardRefabricateReason:
      type: string
      description: |
        Card remanufacturing reason
      enum:
        - ABUSE
        - DAMAGED
        - EXPIRED
        - OPPOSED
        - LOST
        - STOLEN
      x-stoplight:
        id: 31h4rigaa9i12
    CardFeatureId:
      type: string
      description: |
        Feature Identitifier - Depends on product configuration
        - `NFC` : card can be used for contactless payment
        - `CASH_OPERATION` : card can be used to withdraw cash
        - `EUR_WITHDRAWAL` : card can be used to withdraw cash in euro zone
        - `FOREIGN_WITHDRAWAL` : card can be used to withdraw cash in foreign countries
        - `PAYMENT_AUTHORIZED` : card can be used to pay
        - `EUR_PAYMENT` : card can be used to pay in euro zone
        - `FOREIGN_PAYMENT` : card can be used to pay in foreign countries
        - `FOREIGN_ALL` : card can be used to pay or withdraw cash in foreign countries
        - `ONLINE_PAYMENT` : card can be used to pay online
        - `FOREIGN_ONLINE_PAYMENT` : card can be used to pay online in foreign countries
      enum:
        - NFC
        - CASH_OPERATION
        - EUR_WITHDRAWAL
        - FOREIGN_WITHDRAWAL
        - PAYMENT_AUTHORIZED
        - EUR_PAYMENT
        - FOREIGN_PAYMENT
        - FOREIGN_ALL
        - ONLINE_PAYMENT
        - FOREIGN_ONLINE_PAYMENT
      x-stoplight:
        id: wgcspr0pybiqp
    CardLimit:
      type: string
      description: |
        Handled limits by partner
      enum:
        - LIMIT_CASHOUT_DAY
        - LIMIT_CASHOUT_WEEK
        - LIMIT_CASHOUT_MONTH
        - LIMIT_CASHOUT_YEAR
        - LIMIT_CASHOUT_ALL
        - LIMIT_CASHOUT_TRANSACTION
        - LIMIT_FOREIGN_CASHOUT_TRANSACTION
        - LIMIT_FOREIGN_CASHOUT_DAY
        - LIMIT_FOREIGN_CASHOUT_MONTH
        - LIMIT_PAYMENT_TRANSACTION
        - LIMIT_PAYMENT_DAY
        - LIMIT_PAYMENT_WEEK
        - LIMIT_PAYMENT_MONTH
        - LIMIT_PAYMENT_YEAR
        - LIMIT_PAYMENT_ALL
        - LIMIT_CARD_TO_CARD_BASE_SHARING_TRANSACTION
        - LIMIT_CARD_TO_CARD_BASE_SHARING_DAY
        - LIMIT_CARD_TO_CARD_BASE_SHARING_MONTH
      x-stoplight:
        id: fvix40y350qos
    OperationType:
      type: string
      example: card_features_update
      enum:
        - card_activation
        - card_blocking
        - card_code_reissuing
        - card_creation
        - card_features_update
        - card_limits_update
        - card_opposition
        - card_renew
        - card_suppression
        - card_unblocking
        - refabrication
      x-stoplight:
        id: zo9q1tw1c2i0k
    Duration:
      type: object
      properties:
        value:
          type: integer
          example: 42
        unit:
          $ref: '#/components/schemas/Periodicity'
      x-stoplight:
        id: oge5oomwgrn61
    AccountAccountingEntry:
      allOf:
        - $ref: '#/components/schemas/AccountingEntry'
        - type: object
          required:
            - transaction
          properties:
            transaction:
              $ref: '#/components/schemas/TransactionComplete'
      x-stoplight:
        id: lc2m6iftf9xmt
    Currency:
      description: 'Three-letter ISO currency code, in uppercase. Read more at https://fr.wikipedia.org/wiki/ISO_4217.'
      type: string
      format: iso-4217
      example: EUR
      x-stoplight:
        id: dnr2e8nysagh1
    TransactionRequestMetadata:
      oneOf:
        - $ref: '#/components/schemas/TransactionRequestPreauthMetadata'
        - $ref: '#/components/schemas/TransactionRequestCompleteMetadata'
      discriminator:
        propertyName: mode
        mapping:
          PREAUTH: '#/components/schemas/TransactionRequestPreauthMetadata'
          TRANSACTION: '#/components/schemas/TransactionRequestCompleteMetadata'
      x-stoplight:
        id: qrbda7h00oyuo
    TransactionResponseMetadata:
      oneOf:
        - $ref: '#/components/schemas/TransactionResponsePreauthMetadata'
        - $ref: '#/components/schemas/TransactionResponseCompleteMetadata'
      discriminator:
        propertyName: mode
        mapping:
          PREAUTH: '#/components/schemas/TransactionResponsePreauthMetadata'
          TRANSACTION: '#/components/schemas/TransactionResponseCompleteMetadata'
      x-stoplight:
        id: 99pj3xca93mxm
    PayoutResponseMetadata:
      oneOf:
        - $ref: '#/components/schemas/PayoutResponsePreauthMetadata'
        - $ref: '#/components/schemas/PayoutResponseCompleteMetadata'
      discriminator:
        propertyName: mode
        mapping:
          PREAUTH: '#/components/schemas/PayoutResponsePreauthMetadata'
          TRANSACTION: '#/components/schemas/PayoutResponseCompleteMetadata'
      x-stoplight:
        id: xve8bwnuefzk0
    PaymentTokenType:
      type: string
      description: Payment token type (according to capture mode)
      enum:
        - NSDT
        - QR_CODE
      x-stoplight:
        id: l7xrbfbetyu1w
    TextInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
      x-stoplight:
        id: t2vupnikiy1f3
    AmountInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              $ref: ./Amount.yaml
            currencies:
              type: array
              items:
                $ref: ./CurrencyNumeric.yaml
      x-stoplight:
        id: iukanybryhx6f
    BoolInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: boolean
      x-stoplight:
        id: sxq48f80xh6j9
    DateInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: '20180717'
            format:
              type: string
              description: 'Possible formats are the ones accepted by the [date function (php)](https://php.net/manual/en/function.date.php)'
              example: Ymd
      x-stoplight:
        id: knwuuvcxhkeri
    DateTimeInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: '20180717162042'
            format:
              type: string
              description: 'Possible formats are the ones accepted by the [date function (php)](https://php.net/manual/en/function.date.php)'
              example: YmdHis
      x-stoplight:
        id: 3ajydgi2k3m3r
    DurationInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              $ref: ./Duration.yaml
            periodicities:
              type: array
              items:
                $ref: ./Periodicity.yaml
      x-stoplight:
        id: bwn5wye9u8ye5
    EmailInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
              format: email
      x-stoplight:
        id: r8049dknls8jn
    FileInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: object
              properties:
                content:
                  type: string
                  format: byte
                name:
                  type: string
                  example: fileName.txt
                type:
                  type: string
                  example: txt
                size:
                  type: integer
            maxsize:
              type: integer
            acceptedtypes:
              type: array
              items:
                type: string
              example:
                - txt
                - csv
                - xls
            minimumPageCount:
              type: integer
              description: Expected minimum page count
            maximumPageCount:
              type: integer
              description: Expected maximum page count
      x-stoplight:
        id: b525ckwc8old6
    IntInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: integer
      x-stoplight:
        id: 8ncom6o9mv9qv
    IpInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
      x-stoplight:
        id: 81x9flqrucuew
    SelectInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: someValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/Option'
      x-stoplight:
        id: 16l0pcrdhyq1x
    MultiSelectInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: array
              items:
                type: string
              example:
                - someValue
                - anotherValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/Option'
      x-stoplight:
        id: l6p3ro201clc1
    NumberInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: number
              format: float
      x-stoplight:
        id: 6nqu2ot5bsa6h
    PercentInput:
      allOf:
        - $ref: '#/components/schemas/NumberInput'
      x-stoplight:
        id: 1jusvcfogxz1w
    PasswordInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
      x-stoplight:
        id: kdvgp42fakgiv
    PhoneInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
              example: '33612345678'
              description: Phone number in international format (MSISDN)
      x-stoplight:
        id: xnvsdpgk2wze0
    RateInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            inputs:
              type: object
              required:
                - value
                - periodicity
              properties:
                value:
                  $ref: '#/components/schemas/NumberInput'
                periodicity:
                  $ref: '#/components/schemas/SelectInput'
      x-stoplight:
        id: 1w9c1rxyfyk8d
    SelectWithAmountInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: someValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/OptionWithAmount'
      x-stoplight:
        id: 4xy71qn3vw0ux
    ImageInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              description: Image content base64 encoded
            maxsize:
              type: integer
              description: Maximum allowed size in bytes
            acceptedtypes:
              type: array
              items:
                type: string
              example:
                - png
                - jpg
                - gif
            minimumPageCount:
              type: integer
              description: Expected minimum page count
            maximumPageCount:
              type: integer
              description: Expected maximum page count
      x-stoplight:
        id: rwyty7ydw9uaj
    WithdrawTokenType:
      type: string
      description: Withdraw token type
      enum:
        - QR_CODE
      x-stoplight:
        id: vnk1pn6velyvs
    PspTransactionRequestMetadata:
      oneOf:
        - $ref: '#/components/schemas/TransactionRequestPreauthMetadata'
        - $ref: '#/components/schemas/PspTransactionRequestCompleteMetadata'
      discriminator:
        propertyName: mode
        mapping:
          PREAUTH: '#/components/schemas/TransactionRequestPreauthMetadata'
          TRANSACTION: '#/components/schemas/PspTransactionRequestCompleteMetadata'
      x-stoplight:
        id: 6c7xk0ax18576
    PspTransactionResponseMetadata:
      oneOf:
        - $ref: '#/components/schemas/PspTransactionResponsePreauthMetadata'
        - $ref: '#/components/schemas/TransactionResponseCompleteMetadata'
      discriminator:
        propertyName: mode
        mapping:
          PREAUTH: '#/components/schemas/PspTransactionResponsePreauthMetadata'
          TRANSACTION: '#/components/schemas/TransactionResponseCompleteMetadata'
      x-stoplight:
        id: n5n69p84y5w0y
    CashTransfer:
      type: object
      description: cash transfer
      required:
        - id
        - date
        - amount
        - label
      properties:
        id:
          $ref: '#/components/schemas/CashTransferId'
        date:
          type: string
          format: date-time
        amount:
          $ref: ./Amount.yaml
        code:
          $ref: '#/components/schemas/CashTransferCode'
        label:
          type: string
          description: a label
        recipient:
          type: string
          description: If you are the sender. Alias or phone number of the recipient
        sender:
          type: string
          description: If you are the recipient. Alias or phone number of the sender
      x-stoplight:
        id: d3a3idjczfmek
    RtpTransactionResponsePreauthMetadata:
      allOf:
        - $ref: '#/components/schemas/RtpTransactionResponseBaseMetadata'
        - type: object
          required:
            - operation
            - confirmationMode
          properties:
            operation:
              $ref: '#/components/schemas/RequestToPay'
            confirmationMode:
              $ref: '#/components/schemas/TransactionConfirmationMode'
      x-stoplight:
        id: xfjqkjghd1cyz
    RtpTransactionResponseCompleteMetadata:
      allOf:
        - $ref: '#/components/schemas/RtpTransactionResponseBaseMetadata'
        - type: object
          required:
            - operation
          properties:
            operation:
              $ref: '#/components/schemas/RequestToPay'
      x-stoplight:
        id: h65kaaqb3bum7
    BankTransaction:
      type: object
      description: External bank transaction
      properties:
        date:
          type: string
          format: date-time
          description: transaction date
        amount:
          $ref: ./Amount.yaml
        reference:
          type: string
      x-stoplight:
        id: 9jpr7jngg04ri
    AccountRechargeByPSPRequestMetadata:
      oneOf:
        - $ref: '#/components/schemas/TransactionRequestPreauthMetadata'
        - $ref: '#/components/schemas/AccountRechargeByPSPRequestCompleteMetadata'
      discriminator:
        propertyName: mode
        mapping:
          PREAUTH: '#/components/schemas/TransactionRequestPreauthMetadata'
          TRANSACTION: '#/components/schemas/AccountRechargeByPSPRequestCompleteMetadata'
      x-stoplight:
        id: zvjuoxmusawjv
    Acceptor:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/AcceptorId'
        name:
          type: string
          description: Acceptor name
        code:
          type: string
          description: Acceptor code
        category:
          $ref: '#/components/schemas/AcceptorCategoryId'
        position:
          $ref: '#/components/schemas/Geolocation'
        contactphone:
          $ref: '#/components/schemas/Phone'
        email:
          type: string
          description: email address
        address:
          $ref: '#/components/schemas/Address'
        description:
          type: string
          description: Short description of acceptor
        picture:
          type: string
          description: URL to be used to load a picture that illustrate the result
          format: url
      x-stoplight:
        id: 8wpjd1ftu7phz
    BillerCategory:
      type: object
      description: Category of bill issuers
      required:
        - id
        - name
        - type
        - children
      properties:
        id:
          type: string
          description: Bill category identifier
        name:
          type: string
          description: Bill category name
        type:
          $ref: '#/components/schemas/BillerItemType'
        children:
          type: array
          items:
            $ref: '#/components/schemas/BillerItem'
        logoUrl:
          type: string
          description: Logo of the bill Category
      x-stoplight:
        id: nfzcbmoli13lq
    BillerItemType:
      type: string
      description: Type of node in bill issuers tree
      enum:
        - CATEGORY
        - BILL_ISSUER
      x-stoplight:
        id: bym32n4voupb5
    TransactionComplete:
      allOf:
        - $ref: '#/components/schemas/TransactionBase'
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
      x-stoplight:
        id: 97fc04ey8rzrp
    AccountingEntry:
      type: object
      x-stoplight:
        id: 1ots0rzm1n342
      required:
        - id
        - accountId
        - description
        - amount
        - balance
        - type
      properties:
        id:
          $ref: ./AccountingEntryId.yaml
        date:
          type: string
          format: date-time
          deprecated: true
          description: replaced by bookingDate
        bookingDate:
          type: string
          format: date-time
          x-stoplight:
            id: mlo5kwhda3x4k
        valueDate:
          type: string
          format: date
          x-stoplight:
            id: 7uxygp4bwbtxm
        accountId:
          $ref: ./AccountId.yaml
        description:
          type: string
          example: Transfer of 13.37 € from John Doe to Jane Dae
        amount:
          $ref: ./Amount.yaml
        balance:
          $ref: ./Amount.yaml
        type:
          $ref: ./AccountingEntryType.yaml
    NumericCodeSpec:
      type: object
      required:
        - minLength
        - maxLength
      properties:
        minLength:
          type: integer
          description: the minimum length
          exclusiveMinimum: 0
        maxLength:
          type: integer
          description: the maximum length
          exclusiveMinimum: 0
      x-stoplight:
        id: hqczprdzjqpkv
    Country:
      description: Two letter iso code of associated country (2 letters code)
      type: string
      minLength: 2
      maxLength: 2
      example: FR
      x-stoplight:
        id: vzqqjjbid34m6
    ColorScheme:
      type: object
      description: Set of configurable colors
      required:
        - menuColors
        - recipientColors
        - billIssuerColors
      properties:
        menuColors:
          type: array
          items:
            $ref: '#/components/schemas/Color'
        recipientColors:
          type: array
          items:
            $ref: '#/components/schemas/Color'
        billIssuerColors:
          type: array
          items:
            $ref: '#/components/schemas/Color'
      example:
        menuColors:
          - '#000000'
          - '#FFFFFF'
        recipientColors:
          - '#000000'
          - '#FFFFFF'
        billIssuerColors:
          - '#000000'
          - '#FFFFFF'
      x-stoplight:
        id: ezuub2i7vmn1b
    WebAppConf:
      type: object
      description: Web-app custom image and color interface configuration
      required:
        - colorScheme
        - logo
        - favicon
        - registerImage
        - carouselImages
      properties:
        colorScheme:
          type: object
        logo:
          type: string
          format: url
          description: Link to logo image configured in web app front-client
        favicon:
          type: string
          format: url
          description: Link to favicon file configured in web app front-client
        registerImage:
          type: string
          format: url
          description: Link to auto-enrollment banner image configured in web app front-client
        carouselImages:
          type: array
          description: Links to carousel images configured in web app front-client
          items:
            type: string
            format: uri
      example:
        colorScheme:
          primaryColor: '#76B33F'
        logo: 'https://tagpay.fr/api/common/v1/images/front-client/logo'
        favicon: 'https://tagpay.fr/api/common/v1/images/front-client/favicon'
        registerImage: 'https://tagpay.fr/api/common/v1/images/front-client/register'
        carouselImages:
          - 'https://tagpay.fr/api/common/v1/images/front-client/carousel-1'
          - 'https://tagpay.fr/api/common/v1/images/front-client/carousel-2'
          - 'https://tagpay.fr/api/common/v1/images/front-client/carousel-3'
      x-stoplight:
        id: vf3sm9b3n1avl
    AuthorizationHold:
      type: object
      x-stoplight:
        id: rcac7bjbecdzb
      required:
        - id
        - date
        - accountId
        - label
        - type
        - amount
      properties:
        id:
          $ref: '#/components/schemas/AuthorizationHoldId'
        date:
          type: string
          format: date-time
        accountId:
          $ref: ./AccountId.yaml
        label:
          type: string
        type:
          $ref: '#/components/schemas/AuthorizationHoldType'
        amount:
          $ref: ./Amount.yaml
    PossibleValue:
      type: object
      required:
        - value
        - label
      properties:
        value:
          type: string
          description: The possible value
          example: Value123
        label:
          type: string
          description: The value translation
      x-stoplight:
        id: tgzhtnflisiwt
    DebitCardProduct:
      allOf:
        - $ref: '#/components/schemas/AbstractProduct'
        - type: object
          properties:
            cardActivationProcess:
              type: string
              description: Card activation process.
            cardActivationMode:
              type: string
              enum:
                - WITH_CODE
                - WITHOUT_CODE
              description: 'Card activation mode, if activation available for the card processor'
            cardCreationProcess:
              $ref: '#/components/schemas/ProductCardCreationProcess'
      x-stoplight:
        id: ncrrshfevevlf
    AbstractProduct:
      type: object
      x-stoplight:
        id: q6yr4zb60lqfh
      required:
        - id
        - name
        - type
        - currency
      properties:
        id:
          $ref: ./ProductId.yaml
        name:
          type: string
          description: Product name
          example: Standard current account
        type:
          allOf:
            - $ref: '#/components/schemas/ProductType'
            - readOnly: true
        currency:
          type: string
          description: Product currency
          example: EUR
          readOnly: true
    Filter:
      type: object
      description: An object to filter results according to various criteria
      required:
        - type
      properties:
        value:
          type: string
      x-stoplight:
        id: zsx41lcoqsy2w
    Order:
      type: object
      properties:
        attribute:
          type: string
        direction:
          type: string
          enum:
            - ASC
            - DESC
      required:
        - attribute
      x-stoplight:
        id: rbb570nh2e4xp
    Pager:
      type: object
      properties:
        from:
          type: integer
        size:
          type: integer
      x-stoplight:
        id: echl2o07zcynv
    StrongCustomerAuthenticationType:
      type: string
      readOnly: true
      description: Authentication type allows definition of authentication path to follow
      enum:
        - OUT_OF_BAND
      example: OUT_OF_BAND
      x-stoplight:
        id: 7pl7n838b8xby
    StrongCustomerAuthenticationRequestType:
      type: string
      readOnly: true
      description: Strong authentication request type
      enum:
        - PAYMENT
        - RECURRING
        - INSTALLMENT
      example: PAYMENT
      x-stoplight:
        id: iksy186jojnju
    StrongCustomerAuthenticationProcessState:
      type: string
      readOnly: true
      description: Strong authentication process state
      enum:
        - INITIATED
        - IS_NOT_VALID
        - IS_VALID
        - AUTH_ACCEPTED
        - AUTH_FAILED
        - AUTH_REFUSED
        - APP_NOTIFICATION_SENT
      example: INITIATED
      x-stoplight:
        id: 0owfsicp46943
    QrCode:
      type: object
      required:
        - id
        - reference
        - description
      properties:
        id:
          $ref: '#/components/schemas/QrCodeId'
        reference:
          type: string
          description: QR code's reference
          example: '2648055076494259'
        description:
          type: string
          description: QR code's description
        paymentReference:
          type: string
          description: Label given to the transactions initiated with this QR code
        amount:
          $ref: ./Amount.yaml
        expirationDate:
          type: string
          format: date-time
          description: 'QR code''s expiration date. Format is Y-m-d\TH:i:sP'
        activationDate:
          type: string
          format: date-time
          description: 'QR code''s activation date. Format is Y-m-d\TH:i:sP'
      x-stoplight:
        id: f1mgxgyxorg8k
    Bic:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BicId'
        recordKey:
          type: string
          description: BIC referential's record key
          example: IB00000004JI
        institutionName:
          type: string
          description: BIC referential's institution name
          example: HSBC France Belgian Branch
        countryName:
          type: string
          description: BIC referential's country name
          example: BELGIUM
        isoCountryCode:
          type: string
          description: BIC referential's ISO country code
          example: BE
        ibanBic:
          type: string
          description: BIC referential's IBAN BIC
          example: HSBCBEBBXXX
        routingBic:
          type: string
          description: BIC referential's routing BIC
          example: HSBCBEBBXXX
        ibanNationalId:
          type: string
          description: BIC referential's IBAN national id
          example: '949'
        serviceContext:
          type: string
          description: BIC referential's service context
          example: SEPA
        fieldA:
          type: string
          description: BIC referential's field A
        fieldB:
          type: string
          description: BIC referential's field B
        displayName:
          type: string
          description: BIC referential's display name
          example: HSBC France Belgian Branch HSBCBEBBXXX
      x-stoplight:
        id: kaq0zm3tr3u7f
    ExternalAccountState:
      type: string
      readOnly: true
      enum:
        - pending
        - opened
        - refused
      x-stoplight:
        id: 1ltoikfmt7t9z
    ReadOnlyDocumentId:
      allOf:
        - $ref: '#/components/schemas/DocumentId'
        - readOnly: true
      x-stoplight:
        id: o20thfbjn9h7d
    ReadOnlyIdentityId:
      allOf:
        - $ref: '#/components/schemas/IdentityId'
        - readOnly: true
          example: '42'
      x-stoplight:
        id: nigxj3nj7hvtr
    DocumentStatus:
      type: string
      readOnly: true
      enum:
        - NEW
        - PENDING
        - VALIDATED
        - REFUSED
        - UNKNOWN
      x-stoplight:
        id: v0c8mym1ond5e
    DocumentType:
      type: string
      enum:
        - PORTRAIT
        - SUBSCRIPTION_FORM
        - SIGNATURE
        - PROOF_OF_RESIDENCE
        - PROOF_OF_BANK_DOMICILIATION
        - PROOF_OF_TAXATION
        - PROOF_OF_ACTIVITY
        - PROOF_OF_RESOURCES
        - PROOF_OF_STATUS
        - PHOTO
        - PROOF_OF_IDENTITY
        - OTHER_DOCUMENTS
        - INCORPORATION_CERTIFICATE
        - OTHER_DOCUMENTS_LEGAL_ENTITY
      x-stoplight:
        id: 5lwr63z6mb9mn
    IncorporationCertificateMetadata:
      type: object
      description: Document metadatas for INCORPORATION_CERTIFICATE documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        country:
          type: string
        deliveryDate:
          type: string
          format: date
        denomination:
          type: string
        legalForm:
          type: string
        numberOfEmployees:
          type: string
        registrationDate:
          type: string
          format: date
        registrationNumber:
          type: string
        registrationPlace:
          type: string
        shareCapital:
          type: string
        zipcode:
          type: string
      x-stoplight:
        id: n9hi3d8c5ciua
    PortraitMetadata:
      type: object
      description: Document metadatas for PORTRAIT documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        identityPhotoMatch:
          type: string
      x-stoplight:
        id: ttw14uzfvr5qr
    ProofOfActivityMetadata:
      type: object
      description: Document metadatas for PROOF_OF_ACTIVITY documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        grossSalary:
          type: string
        lastName:
          type: string
        netSalary:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
      x-stoplight:
        id: 51fge96zpw1nz
    ProofOfBankDomiciliationMetadata:
      type: object
      description: Document metadatas for PROOF_OF_BANK_DOMICILIATION documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        bic:
          type: string
        firstName:
          type: string
        iban:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
      x-stoplight:
        id: ov1cctav9tajl
    ProofOfIdentityMetadata:
      type: object
      description: Document metadatas for PROOF_OF_IDENTITY documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        addressLine1:
          type: string
        addressLine2:
          type: string
        birthDate:
          type: string
          format: date
        birthPlace:
          type: string
        city:
          type: string
        country:
          type: string
        deliveryDate:
          type: string
          format: date
        expirationDate:
          type: string
          format: date
        firstName:
          type: string
        idNumber:
          type: string
        issuingAuthority:
          type: string
        issuingCountry:
          type: string
        lastName:
          type: string
        mrz:
          type: string
        nationality:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        zipcode:
          type: string
      x-stoplight:
        id: 16lrhfwfsmjy8
    ProofOfResidenceMetadata:
      type: object
      description: Document metadatas for PROOF_OF_RESIDENCE documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        contractNumber:
          type: string
        contractType:
          type: string
        country:
          type: string
        emissionDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        zipcode:
          type: string
      x-stoplight:
        id: hmwqs0p8qai3j
    ProofOfResourcesMetadata:
      type: object
      description: Document metadatas for PROOF_OF_RESOURCES documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        resourceAmount:
          type: string
      x-stoplight:
        id: ab7wwere33mby
    ProofOfTaxationMetadata:
      type: object
      description: Document metadatas for PROOF_OF_TAXATION documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        taxAmount:
          type: string
        taxNumber:
          type: string
      x-stoplight:
        id: zbnu36yatfy8l
    SignatureMetadata:
      type: object
      description: Document metadatas for SIGNATURE documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        identitySignatureMatch:
          type: string
      x-stoplight:
        id: rehhu8t5du7c1
    OtherMetadata:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
      x-stoplight:
        id: 6m9itq4lw01bz
    BaseSpendingCategory:
      type: object
      readOnly: true
      required:
        - id
        - label
      properties:
        id:
          $ref: '#/components/schemas/ReadOnlySpendingCategoryId'
        label:
          type: string
          readOnly: true
      x-stoplight:
        id: x771e3ott9i7o
    SpendingsAdditionalDataKey:
      type: string
      description: Additional data key
      x-stoplight:
        id: egluam86s4g9q
    WriteOnlySpendingCategoryId:
      allOf:
        - $ref: '#/components/schemas/SpendingCategoryId'
        - writeOnly: true
      x-stoplight:
        id: z47xk9hs66f1v
    SpendingCategory:
      allOf:
        - $ref: '#/components/schemas/BaseSpendingCategory'
        - type: object
          properties:
            subCategories:
              type: array
              items:
                $ref: '#/components/schemas/BaseSpendingCategory'
      x-stoplight:
        id: mq08muiwznb1n
    OnboardingStatus:
      type: string
      readOnly: true
      description: Onboarding status
      enum:
        - INITIATED
        - COMPLETION_PENDING
        - READY_TO_SUBMIT
        - SUBMITTED
      x-stoplight:
        id: 4ygymdf6m4ndg
    InputType:
      type: string
      enum:
        - AMOUNT
        - TEXT
        - BOOL
        - DATE
        - DATE_TIME
        - DURATION
        - EMAIL
        - FILE
        - IMAGE
        - COLLECTION
        - INT
        - IP
        - MULTI_SELECT
        - NUMBER
        - PERCENT
        - PASSWORD
        - PHONE
        - PINCODE
        - RATE
        - SELECT
        - SELECT_WITH_AMOUNT
      x-stoplight:
        id: x31taibivocoi
    Validator:
      oneOf:
        - $ref: '#/components/schemas/AmountValidator'
        - $ref: '#/components/schemas/MinValidator'
        - $ref: '#/components/schemas/MaxValidator'
        - $ref: '#/components/schemas/BetweenValidator'
        - $ref: '#/components/schemas/BlacklistValidator'
        - $ref: '#/components/schemas/WhitelistValidator'
        - $ref: '#/components/schemas/LengthValidator'
        - $ref: '#/components/schemas/MaxLengthValidator'
        - $ref: '#/components/schemas/MinLengthValidator'
        - $ref: '#/components/schemas/PasswordValidator'
        - $ref: '#/components/schemas/RegexValidator'
      discriminator:
        propertyName: type
        mapping:
          AMOUNT: '#/components/schemas/AmountValidator'
          MIN: '#/components/schemas/MinValidator'
          MAX: '#/components/schemas/MaxValidator'
          BETWEEN: '#/components/schemas/BetweenValidator'
          BLACKLIST: '#/components/schemas/BlacklistValidator'
          WHITELIST: '#/components/schemas/WhitelistValidator'
          LENGTH: '#/components/schemas/LengthValidator'
          MAX_LENGTH: '#/components/schemas/MaxLengthValidator'
          MIN_LENGTH: '#/components/schemas/MinLengthValidator'
          PASSWORD: '#/components/schemas/PasswordValidator'
          REGEX: '#/components/schemas/RegexValidator'
      x-stoplight:
        id: 6jea830h14lqq
    EnrollmentRequestPreauthMetadata:
      type: object
      required:
        - mode
      properties:
        mode:
          $ref: '#/components/schemas/TransactionMode'
      x-stoplight:
        id: pim70kkrt4vms
    EnrollmentRequestCompleteMetadata:
      type: object
      required:
        - mode
        - enrollmentId
      properties:
        mode:
          $ref: '#/components/schemas/TransactionMode'
        enrollmentId:
          $ref: '#/components/schemas/EnrollmentId'
      x-stoplight:
        id: glfbcohtjd3ua
    EnrollmentResponsePreauthMetadata:
      allOf:
        - $ref: '#/components/schemas/EnrollmentResponseTransactionMetadata'
        - type: object
          properties:
            confirmationMode:
              $ref: '#/components/schemas/EnrollmentConfirmMode'
      x-stoplight:
        id: bisdirtprsxik
    EnrollmentResponseTransactionMetadata:
      type: object
      required:
        - mode
        - enrollmentId
      properties:
        mode:
          $ref: '#/components/schemas/TransactionMode'
        enrollmentId:
          $ref: '#/components/schemas/EnrollmentId'
      x-stoplight:
        id: yazb9i0gnzag8
    AccountType:
      type: string
      description: Account Type
      enum:
        - CURRENT
        - SAVINGS
        - SUB_ACCOUNT
        - DEDICATED
        - MONEYPOT
        - TECHNICAL
      x-stoplight:
        id: wwe2web2javs1
    Periodicity:
      description: Available periodicities
      type: string
      enum:
        - HOUR
        - WEEK
        - DAY
        - MONTH
        - YEAR
      example: DAY
      x-stoplight:
        id: d91c2rylml5cy
    TransactionRequestPreauthMetadata:
      type: object
      required:
        - mode
      properties:
        mode:
          $ref: '#/components/schemas/TransactionMode'
        location:
          $ref: '#/components/schemas/Geolocation'
        externalId:
          $ref: '#/components/schemas/TransactionExternalId'
        externalData:
          $ref: '#/components/schemas/ExternalData'
      x-stoplight:
        id: rraiw2yz5yohy
    TransactionRequestCompleteMetadata:
      allOf:
        - $ref: '#/components/schemas/TransactionRequestPreauthMetadata'
        - type: object
          required:
            - confirmationMode
          properties:
            confirmationMode:
              $ref: '#/components/schemas/TransactionConfirmationMode'
            pincode:
              allOf:
                - description: pincode attribute is required if `confirmationMode` equals to `PINCODE`
                - $ref: '#/components/schemas/PincodeSubmission'
      x-stoplight:
        id: fv377b5j7eaoj
    TransactionResponsePreauthMetadata:
      allOf:
        - $ref: '#/components/schemas/TransactionResponseBaseMetadata'
        - type: object
          required:
            - confirmationMode
            - transaction
          properties:
            confirmationMode:
              $ref: '#/components/schemas/TransactionConfirmationMode'
            transaction:
              $ref: '#/components/schemas/TransactionAccountingPreauth'
      x-stoplight:
        id: chuyz7z3jkmc3
    TransactionResponseCompleteMetadata:
      allOf:
        - $ref: '#/components/schemas/TransactionResponseBaseMetadata'
        - type: object
          required:
            - transaction
          properties:
            transaction:
              $ref: '#/components/schemas/TransactionAccounting'
      x-stoplight:
        id: kdto41sx6whzc
    PayoutResponsePreauthMetadata:
      allOf:
        - $ref: '#/components/schemas/TransactionResponseBaseMetadata'
        - type: object
          required:
            - confirmationMode
            - transaction
          properties:
            confirmationMode:
              $ref: '#/components/schemas/TransactionConfirmationMode'
            paymentService:
              type: string
              enum:
                - SINGLE
                - BULK
            transaction:
              $ref: '#/components/schemas/TransactionAccountingPreauth'
      x-stoplight:
        id: nlqlgzr03vndz
    PayoutResponseCompleteMetadata:
      allOf:
        - $ref: '#/components/schemas/TransactionResponseBaseMetadata'
        - type: object
          required:
            - transaction
          properties:
            transaction:
              $ref: '#/components/schemas/TransactionAccounting'
            paymentService:
              type: string
              enum:
                - SINGLE
                - BULK
      x-stoplight:
        id: jlk2w2mu2b1rc
    Option:
      type: object
      required:
        - id
        - label
      properties:
        id:
          type: string
          example: someValue
        label:
          type: string
          example: Label for someValue
      x-stoplight:
        id: 22swwblbbgzrk
    OptionWithAmount:
      allOf:
        - $ref: '#/components/schemas/Option'
        - type: object
          required:
            - amount
          properties:
            amount:
              $ref: ./Amount.yaml
      x-stoplight:
        id: mg42fiyz2k32d
    PspTransactionRequestCompleteMetadata:
      allOf:
        - $ref: '#/components/schemas/TransactionRequestPreauthMetadata'
        - type: object
          required:
            - confirmationMode
            - webviewReturnUrl
          properties:
            webviewReturnUrl:
              type: string
              description: Psp webview url
            confirmationMode:
              type: string
              description: transaction confirmation mode
              enum:
                - CONFIRM
      x-stoplight:
        id: 01lmy4rma5phx
    PspTransactionResponsePreauthMetadata:
      allOf:
        - $ref: '#/components/schemas/TransactionResponseBaseMetadata'
        - type: object
          required:
            - confirmationMode
            - transaction
          properties:
            confirmationMode:
              type: string
              description: transaction confirmation mode
              enum:
                - CONFIRM
            transaction:
              $ref: '#/components/schemas/TransactionAccountingPreauth'
      x-stoplight:
        id: k5mvddna3uuqn
    CashTransferId:
      type: string
      description: CashTransfer identifier
      x-stoplight:
        id: rpjqg6dana5eu
    RtpTransactionResponseBaseMetadata:
      type: object
      required:
        - mode
      properties:
        mode:
          $ref: '#/components/schemas/TransactionMode'
      x-stoplight:
        id: v7t20cwafs3bb
    RequestToPay:
      type: object
      x-stoplight:
        id: xref7acjrpsey
      required:
        - creditorReference
        - debtorReference
        - amount
        - type
      properties:
        creditorReference:
          type: string
          description: Creditor reference
          example: '42'
        creditorReferenceType:
          $ref: ./InterbankingReferenceType.yaml
        creditorBic:
          type: string
          description: 'Creditor BIC, mandatory when creditorReferenceType is ACCOUNT_REFERENCE'
        debtorReference:
          type: string
          description: Debtor reference
          example: '42'
        debtorReferenceType:
          $ref: ./InterbankingReferenceType.yaml
        debtorBic:
          type: string
          description: 'Debtor BIC, mandatory when debtorReferenceType is ACCOUNT_REFERENCE'
        amount:
          $ref: ./Amount.yaml
        type:
          $ref: '#/components/schemas/DetailedTransactionType'
        velocityPreCheck:
          allOf:
            - $ref: ./VelocityPreCheck.yaml
            - readOnly: true
    AccountRechargeByPSPRequestCompleteMetadata:
      allOf:
        - $ref: '#/components/schemas/TransactionRequestCompleteMetadata'
        - type: object
          required:
            - webviewReturnUrl
          properties:
            webviewReturnUrl:
              type: string
              description: Return URL for the PSP to call at the end of the operation
      x-stoplight:
        id: j4p7uexc7bnjq
    TransactionBase:
      type: object
      x-stoplight:
        id: 7jefxff707bah
      required:
        - type
      properties:
        date:
          type: string
          format: date-time
          deprecated: true
          description: replaced by bookingDate
        bookingDate:
          type: string
          format: date-time
          x-stoplight:
            id: nqlnvpxps7fy4
        valueDate:
          type: string
          format: date
          x-stoplight:
            id: dxzi0wwalci03
        type:
          type: object
          required:
            - value
            - label
          properties:
            value:
              $ref: '#/components/schemas/TransactionType'
            label:
              type: string
              example: Transfer to account
        externalId:
          $ref: '#/components/schemas/TransactionExternalId'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        label:
          description: User defined transaction label
          type: string
        description:
          description: Transaction description
          type: string
        shortDescription:
          description: Transaction short description
          type: string
        geolocation:
          $ref: '#/components/schemas/GeoLocation'
        amount:
          $ref: ./Amount.yaml
        locked:
          type: boolean
          description: 'If true, spendings details of this transaction can no longer be updated'
        qualified:
          description: Whether the transaction's amount is fully qualified or not. Is only returned if the client has the right to manage spendings
          type: boolean
          example: false
        justified:
          description: Whether the transaction has at least one attachment to justify it. Is only returned if the client has the right to manage spendings
          type: boolean
          example: false
        additional:
          description: Additional information on transaction
          type: string
        links:
          type: array
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `addSpending` [POST] Add a new spending detail to this transaction. Is present while the maximum count for spending details is not reached on this transaction.
              * `addAttachment` [POST] Add a new attachment to this transaction. Is present while the maximum count for attachments is not reached on this transaction.
              * `getSpendings` [GET] Get existing spendings of this transaction. (Only present if at least one spending detail has been created)
              * `getAttachments` [GET] Get existing attachements of this transaction. (Only present if at least one attachment has been created)
          example:
            - rel: addSpending
              href: 'https://sandbox.skaleet.com/api/client/v1/transactions/42/spendings'
            - rel: addAttachment
              href: 'https://sandbox.skaleet.com/api/client/v1/transactions/42/attachments'
            - rel: getSpendings
              href: 'https://sandbox.skaleet.com/api/client/v1/transactions/42/spendings'
            - rel: getAttachments
              href: 'https://sandbox.skaleet.com/api/client/v1/transactions/42/attachments'
          items:
            $ref: '#/components/schemas/Link'
          readOnly: true
    Color:
      type: string
      description: an RGB color spec
      pattern: '^#[01234556789ABCDEF]{6}$'
      example: '#12AB45'
      x-stoplight:
        id: 0ybugm1iqn437
    AuthorizationHoldId:
      type: string
      description: Skaleet platform Authorization hold id
      example: AHO4
      x-stoplight:
        id: ou1936qrzf04y
    AuthorizationHoldType:
      type: string
      enum:
        - CASHOUT
        - PAYMENT
        - EXTERNAL_TO_ACCOUNT
        - ACCOUNT_TO_EXTERNAL
        - EXTERNAL_FROM_ACCOUNT
        - ACCOUNT_RECHARGE
      x-stoplight:
        id: cg9gt7bo8jdgu
    ProductCardCreationProcess:
      type: object
      description: Card creation process properties.
      properties:
        termsOfServiceHtml:
          type: string
          description: Terms of service
        creationEndText:
          type: string
          description: Text displayed at the end of the creation process
        isPincodeSelectedByClient:
          type: boolean
          description: True if configuration specifies that PIN selection is made by client
      x-stoplight:
        id: raec0bxa8mvzj
    BicId:
      type: string
      description: BIC referential's ID
      example: '1234'
      x-stoplight:
        id: 7j2ee01jkqtu5
    ReadOnlySpendingCategoryId:
      allOf:
        - $ref: '#/components/schemas/SpendingCategoryId'
        - readOnly: true
      x-stoplight:
        id: 7ivsicpeeo6pf
    SpendingCategoryId:
      type: string
      description: Spending category identifier
      example: FOOD
      x-stoplight:
        id: 5fpo93n38c42y
    AmountValidator:
      type: object
      required:
        - type
        - currencies
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/Currency'
      x-stoplight:
        id: t2oouod602d04
    MinValidator:
      type: object
      required:
        - type
        - min
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        min:
          type: number
      x-stoplight:
        id: qi05c6e5u8rnm
    MaxValidator:
      type: object
      required:
        - type
        - max
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        max:
          type: number
      x-stoplight:
        id: zwwlkbtmezxqd
    BetweenValidator:
      type: object
      required:
        - type
        - min
        - max
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        min:
          type: number
        max:
          type: number
      x-stoplight:
        id: oe6n5933luav2
    BlacklistValidator:
      type: object
      required:
        - type
        - blacklist
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        blacklist:
          type: array
          items:
            type: string
      x-stoplight:
        id: s8op0prgok6fr
    WhitelistValidator:
      type: object
      required:
        - type
        - whitelist
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        whitelist:
          type: array
          items:
            type: string
      x-stoplight:
        id: ih3e8akvecsuq
    LengthValidator:
      type: object
      required:
        - type
        - length
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        length:
          type: integer
      x-stoplight:
        id: bzvppsbgc16i4
    MaxLengthValidator:
      type: object
      required:
        - type
        - maxLength
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        maxLength:
          type: integer
      x-stoplight:
        id: s7epgvvlmi0cm
    MinLengthValidator:
      type: object
      required:
        - type
        - minLength
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        minLength:
          type: integer
      x-stoplight:
        id: dezbuj184nrx7
    PasswordValidator:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        minLength:
          type: integer
        regexp:
          type: string
          description: regexp in PCRE format. Password must match this regexp
        forbidRegex:
          type: string
          description: regexp in PCRE format. Password must not match this regexp
        forbidDates:
          type: boolean
          description: 'if true, you cannot choose a date as a password'
        blacklist:
          type: array
          description: list of forbidden passwords
          example:
            - azerty
            - qwerty
            - '123456'
            - password
          items:
            type: string
      x-stoplight:
        id: 9cn9ze5q4nn0v
    RegexValidator:
      type: object
      required:
        - type
        - regex
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
        regex:
          type: string
          description: regexp in PCRE format. Value must match this regexp
      x-stoplight:
        id: bq9mj5fjcxsvm
    TransactionMode:
      type: string
      enum:
        - PREAUTH
        - TRANSACTION
      x-stoplight:
        id: 88h5czdu0xqtq
    EnrollmentId:
      type: string
      description: ID associated to the ongoing enrollment procedure
      example: T8vuA-jkYa8nJ0.XEsSfBcjC7qN9LXV6~bsjG0BVZ3-RKRM
      x-stoplight:
        id: je3asmmowsyam
    EnrollmentConfirmMode:
      type: object
      description: Only present if external validation is configured
      required:
        - mode
        - type
      properties:
        mode:
          $ref: '#/components/schemas/EnrollmentModeConfirmType'
        type:
          $ref: '#/components/schemas/EnrollmentTypeConfirmType'
        value:
          type: string
          description: Only present if type is URL. Contains the URL to call for validation.
      x-stoplight:
        id: 26e48hcxhfjg5
    TransactionResponseBaseMetadata:
      type: object
      required:
        - mode
      properties:
        mode:
          $ref: '#/components/schemas/TransactionMode'
      x-stoplight:
        id: hc11mrktgkekj
    TransactionAccountingPreauth:
      allOf:
        - $ref: '#/components/schemas/TransactionPreauth'
        - type: object
          properties:
            balance:
              $ref: ./Amount.yaml
            detailedAccounting:
              description: 'in the PREAUTH mode, detailedAccounting should be an empty array'
              type: array
              default: []
              items:
                $ref: '#/components/schemas/AccountingEntryPreauth'
      x-stoplight:
        id: m6gpij8rn5yfo
    DetailedTransactionType:
      type: object
      x-stoplight:
        id: 4mev3h3yrm8sx
      required:
        - label
        - value
      properties:
        label:
          type: string
          description: Transaction type label
        value:
          $ref: ./TransactionType.yaml
    GeoLocation:
      type: object
      properties:
        latitude:
          type: number
          example: 48.831362
        longitude:
          type: number
          example: 2.2441641
        mode:
          $ref: '#/components/schemas/GeoLocationMode'
      x-stoplight:
        id: pb3z56246o8dt
    ValidatorType:
      type: string
      enum:
        - AMOUNT
        - MIN
        - MAX
        - BETWEEN
        - BLACKLIST
        - LENGTH
        - MAX_LENGTH
        - MIN_LENGTH
        - PASSWORD
        - REGEX
        - WHITELIST
      x-stoplight:
        id: hv1whk54qch9b
    EnrollmentModeConfirmType:
      type: string
      enum:
        - VALIDATION_NEEDED
      x-stoplight:
        id: 2uo53lhjakzw7
    EnrollmentTypeConfirmType:
      type: string
      enum:
        - NONE
        - URL
      x-stoplight:
        id: zyad1h0398ra0
    TransactionPreauth:
      allOf:
        - $ref: '#/components/schemas/TransactionBase'
      x-stoplight:
        id: jitiuxunrubsw
    AccountingEntryPreauth:
      type: object
      required:
        - date
        - accountId
        - description
        - amount
        - balance
        - type
      properties:
        date:
          type: string
          format: date-time
        accountId:
          $ref: '#/components/schemas/AccountId'
        description:
          type: string
          example: Transfer of 13.37 € from John Doe to Jane Dae
        amount:
          $ref: ./Amount.yaml
        balance:
          $ref: ./Amount.yaml
        type:
          $ref: ./AccountingEntryType.yaml
      x-stoplight:
        id: ob2hxu2vprmz1
    GeoLocationMode:
      type: object
      properties:
        value:
          type: string
        label:
          type: string
      x-stoplight:
        id: 7ww6y0qte6qna
